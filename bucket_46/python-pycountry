# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pycountry
VERSION=		22.3.5
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		ISO country and language databases (3.10)
SDESC[v11]=		ISO country and language databases (3.11)
HOMEPAGE=		https://github.com/flyingcircusio/pycountry
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/pycountry
DISTFILE[1]=		pycountry-22.3.5.tar.gz:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		pycountry-22.3.5

GENERATED=		yes

[PY310].BUILDRUN_DEPENDS_ON=		python-setuptools:single:py310
[PY310].USES_ON=			python:py310,sutools

[PY311].BUILDRUN_DEPENDS_ON=		python-setuptools:single:v11
[PY311].USES_ON=			python:v11,sutools

[FILE:2871:descriptions/desc.single]
pycountry
=========

.. image:g:
https://travis-ci.org/flyingcircusio/pycountry.svg?branch=master

pycountry provides the ISO databases for the standards:

* `639-3 <https://en.wikipedia.org/wiki/ISO_639-3>`_ Languages
* [3166] Countries
* `3166-3 <https://en.wikipedia.org/wiki/ISO_3166-3>`_ Deleted countries
* `3166-2 <https://en.wikipedia.org/wiki/ISO_3166-2>`_ Subdivisions of
countries
* [4217] Currencies
* [15924] Scripts

The package includes a copy from Debian's `pkg-isocodes
<https://salsa.debian.org/iso-codes-team/iso-codes>`_ and makes the data
accessible through a Python API.

Translation files for the various strings are included as well.

Data update policy
------------------

No changes to the data will be accepted into pycountry. This is a pure
wrapper
around the ISO standard using the `pkg-isocodes` database from Debian *as
is*.
If you need changes to the political situation in the world, please talk to
the ISO or Debian people, not me.

Donations / Monetary Support
----------------------------

This is a small project that I maintain in my personal time. I am not
interested in personal financial gain. However, if you would like to
support
the project then I would love if you would donate to [Feminist Frequency
] instead. Also, let the world know you
did so, so that others can follow your path.

Contributions
-------------

The code lives in a [git repository on GitHub
], and issues must be reported in there as well.

Countries (ISO 3166)
--------------------

Countries are accessible through a database object that is already
configured
upon import of pycountry and works as an iterable:

.. code:: pycon

  >>> import pycountry
  >>> len(pycountry.countries)
  249
  >>> list(pycountry.countries)[0]
  Country(alpha_2='AF', alpha_3='AFG', name='Afghanistan', numeric='004',
official_name='Islamic Republic of Afghanistan')

Specific countries can be looked up by their various codes and provide the
information included in the standard as attributes:

.. code:: pycon

  >>> germany = pycountry.countries.get(alpha_2='DE')
  >>> germany
  Country(alpha_2='DE', alpha_3='DEU', name='Germany', numeric='276',
official_name='Federal Republic of Germany')
  >>> germany.alpha_2
  'DE'
  >>> germany.alpha_3
  'DEU'
  >>> germany.numeric
  '276'
  >>> germany.name
  'Germany'
  >>> germany.official_name
  'Federal Republic of Germany'

The `historic_countries` database contains former countries that have been
removed from the standard and are now included in ISO 3166-3, excluding
existing ones:

.. code:: pycon

 >>> ussr = pycountry.historic_countries.get(alpha_3='SUN')
 >>> ussr
 Country(alpha_3='SUN', alpha_4='SUHH', withdrawal_date='1992-08-30',
name='USSR, Union of Soviet Socialist Republics', numeric='810')
 >>> ussr.alpha_4
 'SUHH'
 >>> ussr.alpha_3
 'SUN'
 >>> ussr.name
 'USSR, Union of Soviet Socialist Republics'


[FILE:102:distinfo]
b2163a246c585894d808f18783e19137cb70a0c18fb36748dc01fc6f109c1646     10141551 pycountry-22.3.5.tar.gz

