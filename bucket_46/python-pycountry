# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pycountry
VERSION=		19.8.18
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		ISO country and language databases (PY37)
SDESC[py38]=		ISO country and language databases (PY38)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/pycountry
DISTFILE[1]=		pycountry-19.8.18.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		pycountry-19.8.18

GENERATED=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[FILE:2354:descriptions/desc.single]
pycountry
=========

pycountry provides the ISO databases for the standards:

639-3
  Languages

3166
  Countries

3166-3
  Deleted countries

3166-2
  Subdivisions of countries

4217
  Currencies

15924
  Scripts

The package includes a copy from Debian's `pkg-isocodes
<https://salsa.debian.org/iso-codes-team/iso-codes>`_ and makes the data
accessible through a Python API.

Translation files for the various strings are included as well.

Data update policy
------------------

No changes to the data will be accepted into pycountry. This is a pure
wrapper
around the ISO standard using the `pkg-isocodes` database from Debian *as
is*.
If you need changes to the politicial situation in the world, please talk
to
the ISO or Debian people, not me.

Donations / Monetary Support
----------------------------

This is a small project that I maintain in my personal time. I am not
interested in personal financial gain. However, if you would like to
support
the project then I would love if you would donate to [Feminist Frequency
] instead. Also, let the world know you
did so, so that others can follow your path.

Contributions
-------------

The code lives in a [bitbucket Mercurial repository
], and issues must be reported in
[project bugtracker
].

Countries (ISO 3166)
--------------------

Countries are accessible through a database object that is already
configured
upon import of pycountry and works as an iterable:

.. code:: pycon

  >>> import pycountry
  >>> len(pycountry.countries)
  249
  >>> list(pycountry.countries)[0]
  Country(alpha_2='AF', alpha_3='AFG', name='Afghanistan', numeric='004',
official_name='Islamic Republic of Afghanistan')

Specific countries can be looked up by their various codes and provide the
information included in the standard as attributes:

.. code:: pycon

  >>> germany = pycountry.countries.get(alpha_2='DE')
  >>> germany
  Country(alpha_2='DE', alpha_3='DEU', name='Germany', numeric='276',
official_name='Federal Republic of Germany')
  >>> germany.alpha_2
  'DE'
  >>> germany.alpha_3
  'DEU'
  >>> germany.numeric
  '276'
  >>> germany.name
  'Germany'
  >>> germany.official_name
  'Federal Republic of Germany'

The `historic_countries` database contains former countries that have been
removed from the standard and are now included in ISO 3166-3, excluding
existing ones:

.. code:: pycon



[FILE:103:distinfo]
3c57aa40adcf293d59bebaffbe60d8c39976fba78d846a018dc0c2ec9c6cb3cb     10003160 pycountry-19.8.18.tar.gz

