# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		doxygen
VERSION=		1.9.1
KEYWORDS=		devel textproc
VARIANTS=		standard
SDESC[standard]=	Source code documentation generator tool
HOMEPAGE=		http://www.doxygen.nl/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://doxygen.nl/files/
DISTFILE[1]=		doxygen-1.9.1.src.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		git:primary:lite
BUILDRUN_DEPENDS=	graphviz:primary:standard
			xapian-core:primary:standard

USES=			bison cmake iconv python shebangfix cpe zlib
			perl:build solaris-funcs

LICENSE=		GPLv2:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"DOXYGEN_H"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/doxygen.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/doxygen
SOL_FUNCTIONS=		strnlen:src/portable.cpp

CMAKE_ARGS=		-DDOC_INSTALL_DIR:PATH=share/doc/doxygen
			-Dbuild_search:BOOLEAN=true
			-Dbuild_wizard:BOOLEAN=false

post-patch:
	@${REINPLACE_CMD} -e '/PERL_PATH/ s|/usr/bin/perl|${perl_CMD}|' \
		${WRKSRC}/src/config.xml

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/doxy*

[FILE:352:descriptions/desc.single]
Doxygen is a documentation system for C++, C, Java, Objective-C, Python,
IDL (Corba and Microsoft flavors) and to some extent PHP, C#, and D. It
can generate an on-line class browser (in HTML) and/or an off-line
reference manual (in LaTeX/PostScript/PDF) from a set of documented source
files. The documentation is extracted directly from the sources.


[FILE:103:distinfo]
67aeae1be4e1565519898f46f1f7092f1973cce8a767e93101ee0111717091d1      5117435 doxygen-1.9.1.src.tar.gz


[FILE:43:manifests/plist.single]
bin/
 doxygen
 doxyindexer
 doxysearch.cgi


[FILE:465:patches/patch-qtools_gqlobal.h]
$NetBSD: patch-ac,v 1.9 2012/07/03 11:31:35 mef Exp $

Add DragonFly

--- qtools/qglobal.h.orig	2020-03-08 15:29:58 UTC
+++ qtools/qglobal.h
@@ -102,7 +102,7 @@
 #define _OS_RELIANTUNIX_
 #elif defined(linux) || defined(__linux) || defined(__linux__) || defined(__GNU__) || defined(__GLIBC__)
 #define _OS_LINUX_
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
 #define _OS_FREEBSD_
 #elif defined(__NetBSD__)
 #define _OS_NETBSD_

