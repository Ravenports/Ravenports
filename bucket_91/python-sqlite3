# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-sqlite3
VERSION=		3.6.4
KEYWORDS=		databases python
VARIANTS=		py27 py35 py36
SDESC[py35]=		Python 3.5 bindings to the SQLite3 library
SDESC[py36]=		Python 3.6 bindings to the SQLite3 library
SDESC[py27]=		Python 2.7 bindings to the SQLite3 library
HOMEPAGE=		https://www.python.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main pv35 pv27
SITES[pv35]=		http://www.python.org/ftp/python/3.5.5
SITES[main]=		http://www.python.org/ftp/python/3.6.4
SITES[pv27]=		http://www.python.org/ftp/python/2.7.14
DISTFILE[1]=		Python-2.7.14.tar.xz:main
DISTFILE[2]=		Python-3.5.5.tar.xz:main
DISTFILE[3]=		Python-3.6.4.tar.xz:main
SPKGS[py35]=		single
SPKGS[py36]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY36 PY35
OPTIONS_STANDARD=	none
VOPTS[py35]=		PY27=OFF PY36=OFF PY35=ON
VOPTS[py36]=		PY27=OFF PY36=ON PY35=OFF
VOPTS[py27]=		PY27=ON PY36=OFF PY35=OFF

BUILDRUN_DEPENDS=	sqlite:single:standard

DISTNAME=		Python/Modules

FPC_EQUIVALENT=		databases/py-sqlite3

[PY35].DF_INDEX_ON=			2
[PY35].USES_ON=				python:py35

[PY36].DF_INDEX_ON=			3
[PY36].USES_ON=				python:py36

[PY27].DF_INDEX_ON=			1
[PY27].USES_ON=				python:py27

post-stage:
	${MKDIR} ${STAGEDIR}${PYTHON_LIBDIR}/lib-dynload
	${MV} ${STAGEDIR}${PYTHON_SITELIBDIR}/_sqlite3*.so \
		${STAGEDIR}${PYTHON_LIBDIR}/lib-dynload
	${STRIP_CMD} ${STAGEDIR}${PYTHON_LIBDIR}/lib-dynload/_sqlite3*.so
	${RM} -r ${STAGEDIR}${PYTHON_SITELIBDIR}

post-extract-PY27-ON:
	${MV} ${WRKDIR}/Python-2.7.14 ${WRKDIR}/Python
	${CP} ${FILESDIR}/setup.py ${WRKSRC}

post-extract-PY35-ON:
	${MV} ${WRKDIR}/Python-3.5.5 ${WRKDIR}/Python
	${CP} ${FILESDIR}/setup3.py ${WRKSRC}/setup.py

post-extract-PY36-ON:
	${MV} ${WRKDIR}/Python-3.6.4  ${WRKDIR}/Python
	${CP} ${FILESDIR}/setup3.py ${WRKSRC}/setup.py

[FILE:472:descriptions/desc.single]
SQLite is a library that provides a SQL-language database that
stores data in disk files without requiring a separate server
process. pysqlite provides a SQL interface compliant with the DB-API
2.0 specification described by PEP 249. This means that it should
be possible to write the first version of your applications using
SQLite for data storage. If switching to a larger database such as
PostgreSQL or Oracle is later necessary, the switch should be
relatively easy.


[FILE:295:distinfo]
71ffb26e09e78650e424929b2b457b9c912ac216576e6bd9e7d204ed03296a66     12576112 Python-2.7.14.tar.xz
94d93bfabb3b109f8a10365a325f920f9ec98c6e2380bf228f9700a14054c84c     15332320 Python-3.5.4.tar.xz
159b932bf56aeaa76fd66e7420522d8c8853d486b8567c459b84fe2ed13bcaba     16992824 Python-3.6.4.tar.xz


[FILE:1462:files/setup.py]
#!/usr/bin/env python
# To use:
#       python setup.py install
#

__version__ = "$FreeBSD: head/databases/py-sqlite3/files/setup.py 417946 2016-07-03 00:17:29Z wen $"

try:
    import distutils
    from distutils import sysconfig
    from distutils.command.install import install
    from distutils.core import setup, Extension
except:
    raise SystemExit, "Distutils problem"

install.sub_commands = filter(lambda (cmd, avl): 'egg' not in cmd,
                              install.sub_commands)

prefix = sysconfig.PREFIX
inc_dirs = [prefix + "/include", "Modules/_sqlite"]
lib_dirs = [prefix + "/lib"]
libs = ["sqlite3"]
macros = [('MODULE_NAME', '"sqlite3"')]
sqlite_srcs = [
'_sqlite/cache.c',
'_sqlite/connection.c',
'_sqlite/cursor.c',
'_sqlite/microprotocols.c',
'_sqlite/module.c',
'_sqlite/prepare_protocol.c',
'_sqlite/row.c',
'_sqlite/statement.c',
'_sqlite/util.c']

try:
    import ctypes
    ctypes.CDLL('libsqlite3.so').sqlite3_load_extension
except AttributeError:
    macros.append(('SQLITE_OMIT_LOAD_EXTENSION', '1'))

setup(name = "sqlite3",
      description = "SQLite 3 extension to Python",

      ext_modules = [Extension('_sqlite3', sqlite_srcs,
                               include_dirs = inc_dirs,
                               libraries = libs,
                               library_dirs = lib_dirs,
                               runtime_library_dirs = lib_dirs,
                               define_macros = macros)]
      )


[FILE:1422:files/setup3.py]
#!/usr/bin/env python
# To use:
#       python setup.py install
#

__version__ = "$FreeBSD: head/databases/py-sqlite3/files/setup3.py 417946 2016-07-03 00:17:29Z wen $"

try:
    import distutils
    from distutils import sysconfig
    from distutils.command.install import install
    from distutils.core import setup, Extension
except:
    raise SystemExit("Distutils problem")

install.sub_commands = [x for x in install.sub_commands if 'egg' not in x[0]]

prefix = sysconfig.PREFIX
inc_dirs = [prefix + "/include", "Modules/_sqlite"]
lib_dirs = [prefix + "/lib"]
libs = ["sqlite3"]
macros = [('MODULE_NAME', '"sqlite3"')]
sqlite_srcs = [
'_sqlite/cache.c',
'_sqlite/connection.c',
'_sqlite/cursor.c',
'_sqlite/microprotocols.c',
'_sqlite/module.c',
'_sqlite/prepare_protocol.c',
'_sqlite/row.c',
'_sqlite/statement.c',
'_sqlite/util.c']

try:
    import ctypes
    ctypes.CDLL('libsqlite3.so').sqlite3_load_extension
except AttributeError:
    macros.append(('SQLITE_OMIT_LOAD_EXTENSION', '1'))

setup(name = "sqlite3",
      description = "SQLite 3 extension to Python",

      ext_modules = [Extension('_sqlite3', sqlite_srcs,
                               include_dirs = inc_dirs,
                               libraries = libs,
                               library_dirs = lib_dirs,
                               runtime_library_dirs = lib_dirs,
                               define_macros = macros)]
      )

