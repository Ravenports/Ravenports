# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-sqlite3
VERSION=		3.7.4
KEYWORDS=		databases python
VARIANTS=		py27 py36 py37
SDESC[py36]=		Python 3.6 bindings to the SQLite3 library
SDESC[py37]=		Python 3.7 bindings to the SQLite3 library
SDESC[py27]=		Python 2.7 bindings to the SQLite3 library
HOMEPAGE=		https://www.python.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	none pv36 pv37 pv27
SITES[pv36]=		http://www.python.org/ftp/python/3.6.9/
SITES[pv37]=		http://www.python.org/ftp/python/3.7.4/
SITES[pv27]=		http://www.python.org/ftp/python/2.7.16/
DISTFILE[1]=		Python-2.7.16.tar.xz:pv27
DISTFILE[2]=		Python-3.6.9.tar.xz:pv36
DISTFILE[3]=		Python-3.7.4.tar.xz:pv37
SPKGS[py36]=		single
SPKGS[py37]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY36 PY37
OPTIONS_STANDARD=	none
VOPTS[py36]=		PY27=OFF PY36=ON PY37=OFF
VOPTS[py37]=		PY27=OFF PY36=OFF PY37=ON
VOPTS[py27]=		PY27=ON PY36=OFF PY37=OFF

BUILDRUN_DEPENDS=	sqlite:single:standard

DISTNAME=		Python/Modules

FPC_EQUIVALENT=		databases/py-sqlite3

[PY36].DF_INDEX_ON=			2
[PY36].USES_ON=				python:py36

[PY37].DF_INDEX_ON=			3
[PY37].USES_ON=				python:py37

[PY27].DF_INDEX_ON=			1
[PY27].USES_ON=				python:py27

post-stage:
	${MKDIR} ${STAGEDIR}${PYTHON_LIBDIR}/lib-dynload
	${MV} ${STAGEDIR}${PYTHON_SITELIBDIR}/_sqlite3*.so \
		${STAGEDIR}${PYTHON_LIBDIR}/lib-dynload
	${STRIP_CMD} ${STAGEDIR}${PYTHON_LIBDIR}/lib-dynload/_sqlite3*.so
	${RM} -r ${STAGEDIR}${PYTHON_SITELIBDIR}

post-extract-PY37-ON:
	${MV} ${WRKDIR}/Python-3.7.4 ${WRKDIR}/Python
	${CP} ${FILESDIR}/setup3.py ${WRKSRC}/setup.py

post-extract-PY27-ON:
	${MV} ${WRKDIR}/Python-2.7.16 ${WRKDIR}/Python
	${CP} ${FILESDIR}/setup.py ${WRKSRC}

post-extract-PY36-ON:
	${MV} ${WRKDIR}/Python-3.6.9  ${WRKDIR}/Python
	${CP} ${FILESDIR}/setup3.py ${WRKSRC}/setup.py

[FILE:472:descriptions/desc.single]
SQLite is a library that provides a SQL-language database that
stores data in disk files without requiring a separate server
process. pysqlite provides a SQL interface compliant with the DB-API
2.0 specification described by PEP 249. This means that it should
be possible to write the first version of your applications using
SQLite for data storage. If switching to a larger database such as
PostgreSQL or Oracle is later necessary, the switch should be
relatively easy.


[FILE:295:distinfo]
f222ef602647eecb6853681156d32de4450a2c39f4de93bd5b20235f2e660ed7     12752104 Python-2.7.16.tar.xz
5e2f5f554e3f8f7f0296f7e73d8600c4e9acbaee6b2555b83206edf5153870da     17212164 Python-3.6.9.tar.xz
fb799134b868199930b75f26678f18932214042639cd52b16da7fd134cd9b13f     17131432 Python-3.7.4.tar.xz


[FILE:1462:files/setup.py]
#!/usr/bin/env python
# To use:
#       python setup.py install
#

__version__ = "$FreeBSD: head/databases/py-sqlite3/files/setup.py 417946 2016-07-03 00:17:29Z wen $"

try:
    import distutils
    from distutils import sysconfig
    from distutils.command.install import install
    from distutils.core import setup, Extension
except:
    raise SystemExit, "Distutils problem"

install.sub_commands = filter(lambda (cmd, avl): 'egg' not in cmd,
                              install.sub_commands)

prefix = sysconfig.PREFIX
inc_dirs = [prefix + "/include", "Modules/_sqlite"]
lib_dirs = [prefix + "/lib"]
libs = ["sqlite3"]
macros = [('MODULE_NAME', '"sqlite3"')]
sqlite_srcs = [
'_sqlite/cache.c',
'_sqlite/connection.c',
'_sqlite/cursor.c',
'_sqlite/microprotocols.c',
'_sqlite/module.c',
'_sqlite/prepare_protocol.c',
'_sqlite/row.c',
'_sqlite/statement.c',
'_sqlite/util.c']

try:
    import ctypes
    ctypes.CDLL('libsqlite3.so').sqlite3_load_extension
except AttributeError:
    macros.append(('SQLITE_OMIT_LOAD_EXTENSION', '1'))

setup(name = "sqlite3",
      description = "SQLite 3 extension to Python",

      ext_modules = [Extension('_sqlite3', sqlite_srcs,
                               include_dirs = inc_dirs,
                               libraries = libs,
                               library_dirs = lib_dirs,
                               runtime_library_dirs = lib_dirs,
                               define_macros = macros)]
      )


[FILE:1422:files/setup3.py]
#!/usr/bin/env python
# To use:
#       python setup.py install
#

__version__ = "$FreeBSD: head/databases/py-sqlite3/files/setup3.py 417946 2016-07-03 00:17:29Z wen $"

try:
    import distutils
    from distutils import sysconfig
    from distutils.command.install import install
    from distutils.core import setup, Extension
except:
    raise SystemExit("Distutils problem")

install.sub_commands = [x for x in install.sub_commands if 'egg' not in x[0]]

prefix = sysconfig.PREFIX
inc_dirs = [prefix + "/include", "Modules/_sqlite"]
lib_dirs = [prefix + "/lib"]
libs = ["sqlite3"]
macros = [('MODULE_NAME', '"sqlite3"')]
sqlite_srcs = [
'_sqlite/cache.c',
'_sqlite/connection.c',
'_sqlite/cursor.c',
'_sqlite/microprotocols.c',
'_sqlite/module.c',
'_sqlite/prepare_protocol.c',
'_sqlite/row.c',
'_sqlite/statement.c',
'_sqlite/util.c']

try:
    import ctypes
    ctypes.CDLL('libsqlite3.so').sqlite3_load_extension
except AttributeError:
    macros.append(('SQLITE_OMIT_LOAD_EXTENSION', '1'))

setup(name = "sqlite3",
      description = "SQLite 3 extension to Python",

      ext_modules = [Extension('_sqlite3', sqlite_srcs,
                               include_dirs = inc_dirs,
                               libraries = libs,
                               library_dirs = lib_dirs,
                               runtime_library_dirs = lib_dirs,
                               define_macros = macros)]
      )

