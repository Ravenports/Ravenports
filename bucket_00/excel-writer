# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		excel-writer
VERSION=		17r2
REVISION=		1
KEYWORDS=		misc ada
VARIANTS=		standard
SDESC[standard]=	Create Excel files with basic formats (Ada lib)
HOMEPAGE=		http://excel-writer.sourceforge.net
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/excel-writer/excel-writer
DISTFILE[1]=		excel_writer_17_r2.zip:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			dos2unix gprbuild

DISTNAME=		Excel_Writer

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKDIR}}/LICENSE
LICENSE_AWK=		MIT:"^--  Follow"
LICENSE_SOURCE=		MIT:{{WRKSRC}}/excel_out.ads
LICENSE_SCHEME=		solo

post-patch:
	${REINPLACE_CMD} -e 's/"\(.*\.xls\)"/"\/tmp\/\1"/g' \
		${WRKSRC}/excel_out_demo.adb

do-build:
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} gprbuild -p -Pconstruct)
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} gprbuild -p -Pbiff_dump)

post-extract:
	${CP} ${FILESDIR}/construct.gpr ${FILESDIR}/biff_dump.gpr ${WRKSRC}
	${MKDIR} ${WRKSRC}/src ${WRKDIR}/data
	(cd ${WRKSRC}; ${MV} excel_out.ad[bs] ieee* extras/csv.* src)
	${SED} -e "s,@PREFIX@,${LOCALBASE},g" ${FILESDIR}/runme.sh.in \
		> ${WRKSRC}/runme.sh

do-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/share/gpr \
		${STAGEDIR}${PREFIX}/lib/excel_writer \
		${STAGEDIR}${PREFIX}/include/excel_writer \
		${STAGEDIR}${STD_DOCDIR} \
		${STAGEDIR}${STD_EXAMPLESDIR}
	${INSTALL_DATA} ${FILESDIR}/excel_writer.gpr \
		${STAGEDIR}${PREFIX}/share/gpr
	${INSTALL_DATA} ${WRKSRC}/src/* \
		${STAGEDIR}${PREFIX}/include/excel_writer
	${INSTALL_DATA} ${WRKSRC}/lib/*  \
		${STAGEDIR}${PREFIX}/lib/excel_writer
	${INSTALL_PROGRAM} ${WRKSRC}/bin/biff_dump \
		${STAGEDIR}${PREFIX}/bin
	${INSTALL_DATA} ${WRKSRC}/excel_writer.txt \
		${STAGEDIR}${STD_DOCDIR}
	${INSTALL_SCRIPT} ${WRKSRC}/runme.sh \
		${STAGEDIR}${STD_EXAMPLESDIR}
	${INSTALL_DATA} ${WRKSRC}/excel_out_demo.adb \
		${FILESDIR}/example.gpr \
		${STAGEDIR}${STD_EXAMPLESDIR}

[FILE:352:descriptions/desc.primary]
Excel_Out is a package that can generate basically formatted Excel files.

* Ideal for the automatic production of reports
* Fast: on a HP Mini netbook (Intel Atom, 1.66 GHz), Excel Writer produced
  50 sheets per second where each sheet had 10,000 data cells
* Totally portable and no external library required
* No interation with MS Office software


[FILE:101:distinfo]
214fb98bfbac2bd463ed897e579f0ae23ff2f87488bf4b833fe6d7263421b56b        60039 excel_writer_17_r2.zip


[FILE:316:manifests/plist.primary]
bin/biff_dump
include/excel_writer/
 csv.adb
 csv.ads
 excel_out.adb
 excel_out.ads
 ieee_754-generic_double_precision.adb
 ieee_754-generic_double_precision.ads
 ieee_754.ads
lib/excel_writer/
 csv.ali
 excel_out.ali
 ieee_754-generic_double_precision.ali
 ieee_754.ali
 libexcelwriter.a
share/gpr/excel_writer.gpr


[FILE:40:manifests/plist.docs]
share/doc/excel-writer/excel_writer.txt


[FILE:72:manifests/plist.examples]
share/examples/excel-writer/
 example.gpr
 excel_out_demo.adb
 runme.sh


[FILE:319:files/biff_dump.gpr]
project Biff_Dump is

   for Languages    use ("ada");
   for Exec_Dir     use "bin";
   for Object_Dir   use "obj";
   for Source_Dirs  use ("extras", "src");
   for Main         use ("biff_dump.adb");

   package Compiler is
      for Default_Switches ("ada") use ("-O2", "-gnat05");
   end Compiler;

end Biff_Dump;


[FILE:347:files/construct.gpr]
project Construct is

   for Languages    use ("ada");
   for Source_Dirs  use ("src");
   for Object_Dir   use "obj";
   for Library_Name use "excelwriter";
   for Library_Dir  use "lib";
   for Library_Kind use "static";

   package Builder is
      for Default_Switches ("ada") use ("-gnatf", "-gnatws", "-O2");
   end Builder;

end Construct;


[FILE:253:files/example.gpr]
with "excel_writer";
project Example is

   for Exec_Dir use "/tmp";
   for Object_Dir use "/tmp";
   for Main use ("excel_out_demo.adb");

   package Compiler is
      for Default_Switches ("ada") use ("-O2", "-gnat05");
   end Compiler;

end Example;


[FILE:272:files/excel_writer.gpr]
project Excel_Writer is
   for Languages        use ("ada");
   for Library_Name     use "excelwriter";
   for Source_Dirs      use ("../../include/excel_writer");
   for Library_Dir      use "../../lib/excel_writer";
   for Externally_Built use "true";
end Excel_Writer;


[FILE:489:files/runme.sh.in]
#!/bin/sh

# This script will:
# 1) Build the example executable in /tmp
# 2) Tell the user how to execute it

GNATMAKE=@PREFIX@/toolchain/ravensys-gcc/bin/gnatmake
ADA_PROJECT_PATH=@PREFIX@/share/gpr
export ADA_PROJECT_PATH

${GNATMAKE} -P example

echo
echo "The source for the example is excel_out_demo.adb"
echo "The executable example is located in /tmp/excel_out_demo"
echo "It requires no options; just run it"
echo 'You may want to execute "rm /tmp/excel_out*" when you are done.'

