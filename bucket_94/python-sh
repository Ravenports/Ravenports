# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-sh
VERSION=		1.14.1
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		Python subprocess replacement (PY37)
SDESC[py38]=		Python subprocess replacement (PY38)
HOMEPAGE=		https://github.com/amoffat/sh
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/50/38/f7dcc62943d0870f02df9e2fa527b7f0cd86b233a80d6e503a08f3ef5ddc
DISTFILE[1]=		sh-1.14.1-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		sh-1.14.1.dist-info

GENERATED=		yes

[PY37].BUILD_DEPENDS_ON=		python-pip:single:py37
[PY37].USES_ON=				python:py37,wheel

[PY38].BUILD_DEPENDS_ON=		python-pip:single:py38
[PY38].USES_ON=				python:py38,wheel

[FILE:1758:descriptions/desc.single]
    :alt: Logo

|

    :alt: Version
    :alt: Downloads Status
    :alt: Python Versions
    :alt: Build Status
    :alt: Coverage Status

|

sh is a full-fledged subprocess replacement for Python 2.6 - 3.8, PyPy and
PyPy3
that allows you to call *any* program as if it were a function:

.. code:: python

    from sh import ifconfig
    print(ifconfig("eth0"))

sh is *not* a collection of system commands implemented in Python.

[Complete documentation here]

Installation
============

::

    $> pip install sh

Support
=======
* [Andrew Moffat] - author/maintainer
* [Erik Cederstrand] - maintainer

Developers
==========

Updating the docs
-----------------

Check out the `gh-pages <https://github.com/amoffat/sh/tree/gh-pages>`_
branch and follow the ``README.rst`` there.

Testing
-------

I've included a Docker test suite in the `docker_test_suit/` folder.  To
build the image, `cd` into that directory and
run::

    $> ./build.sh

This will install ubuntu 18.04 LTS and all python versions from 2.6-3.8. 
Once it's done, stay in that directory and
run::

    $> ./run.sh

This will mount your local code directory into the container and start the
test suite, which will take a long time to
run.  If you wish to run a single test, you may pass that test to
`./run.sh`::

    $> ./run.sh FunctionalTests.test_unicode_arg

To run a single test for a single environment::

    $> ./run.sh -e 3.4 FunctionalTests.test_unicode_arg

Coverage
--------

First run all of the tests::

    $> python sh.py test

This will aggregate a ``.coverage``.  You may then visualize the report
with::

    $> coverage report

Or generate visual html files with::

    $> coverage html

Which will create ``./htmlcov/index.html`` that you may open in a web
browser.


[FILE:109:distinfo]
75e86a836f47de095d4531718fe8489e6f7446c75ddfa5596f632727b919ffae        40337 sh-1.14.1-py2.py3-none-any.whl

