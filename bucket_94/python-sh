# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-sh
VERSION=		2.0.6
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Python subprocess replacement (3.11)
SDESC[v12]=		Python subprocess replacement (3.12)
HOMEPAGE=		https://sh.readthedocs.io/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/53/08/9de3e477ad2fd432e78ce351341686d1bbec346976b22c7cc5f81f1ff15a
DISTFILE[1]=		sh-2.0.6-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		sh-2.0.6.dist-info

GENERATED=		yes

[PY311].USES_ON=			python:v11,wheel

[PY312].USES_ON=			python:v12,wheel

[FILE:1406:descriptions/desc.single]
    :alt: Logo

**If you are migrating from 1.* to 2.*, please see MIGRATION.md**

|

    :alt: Version
    :alt: Downloads Status
    :alt: Python Versions
    :alt: Coverage Status

|

sh is a full-fledged subprocess replacement for Python 3.8 - 3.11, and PyPy
that allows you to call *any* program as if it were a function:

.. code:: python

    from sh import ifconfig
    print(ifconfig("eth0"))

sh is *not* a collection of system commands implemented in Python.

sh relies on various Unix system calls and only works on Unix-like
operating
systems - Linux, macOS, BSDs etc. Specifically, Windows is not supported.

[Complete documentation here]

Installation
============

::

    $> pip install sh

Support
=======
* [Andrew Moffat] - author/maintainer
* [Erik Cederstrand] - maintainer

Developers
==========

Testing
-------

Tests are run in a docker container against all supported Python versions.
To run, make the following target::

    $> make test

To run a single test::

    $> make test='FunctionalTests.test_background' test_one

Coverage
--------

First run all of the tests::

    $> SH_TESTS_RUNNING=1 coverage run --source=sh -m pytest

This will aggregate a ``.coverage``.  You may then visualize the report
with::

    $> coverage report

Or generate visual html files with::

    $> coverage html

Which will create ``./htmlcov/index.html`` that you may open in a web
browser.


[FILE:104:distinfo]
ced8f2e081a858b66a46ace3703dec243779abbd5a1887ba7e3c34f34da70cd2        38120 sh-2.0.6-py3-none-any.whl

