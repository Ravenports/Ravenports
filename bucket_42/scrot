# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		scrot
VERSION=		1.1.1
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Simple screen capture utility (SCReen shOT)
HOMEPAGE=		https://tracker.debian.org/pkg/scrot
CONTACT=		Leonid_Bobrov[mazocomp@disroot.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://salsa.debian.org/debian/scrot/-/archive/debian/1.1-1/
DISTFILE[1]=		scrot-debian-1.1-1.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		autoconf:single:standard
			automake:single:standard
			autoconf-archive:single:standard
BUILDRUN_DEPENDS=	giblib:single:standard

XORG_COMPONENTS=	x11 xfixes xcursor

DISTNAME=		scrot-debian-1.1-1

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/scrot

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--mandir={{MANPREFIX}}/man

pre-configure:
	(cd ${WRKSRC} && ./autogen.sh)

[FILE:434:descriptions/desc.single]
A screen capture CLI utility that utilizes Imlib2.

It has the following set of features:

 - user-definable time delay
 - image quality control
 - interactive rectangular mouse selection of any screen part
 - screen capture for individual windows
 - scriptable screen shot processing

Although scrot is no longer in active development, it is still widely used
today. Similar programs, which are inspired by scrot, are maim and slop.


[FILE:105:distinfo]
80e1eb0f67354877c978305a28420d9043e2ddb3425c95e231122780ad463b5c        35952 scrot-debian-1.1-1.tar.bz2


[FILE:36:manifests/plist.single]
bin/scrot
share/man/man1/scrot.1.gz


[FILE:850:patches/patch-src_getopt.c]
--- src/getopt.c.orig	2019-07-09 23:53:19 UTC
+++ src/getopt.c
@@ -39,6 +39,7 @@
 #endif
 #endif
 
+#include <string.h>
 #include <stdio.h>
 
 /* Comment out all this code if we are using the GNU C Library, and are not
@@ -691,7 +692,7 @@ _getopt_internal(argc, argv, optstring,
                optarg = nameend + 1;
             else
             {
-               if (opterr)
+               if (opterr) {
                   if (argv[optind - 1][1] == '-')
                      /* --option */
                      fprintf(stderr,
@@ -704,6 +705,7 @@ _getopt_internal(argc, argv, optstring,
                              _
                              ("%s: option `%c%s' doesn't allow an argument\n"),
                              argv[0], argv[optind - 1][0], pfound->name);
+               }
 
                nextchar += strlen(nextchar);
 

