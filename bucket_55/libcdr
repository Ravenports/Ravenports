# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libcdr
VERSION=		0.1.6
KEYWORDS=		graphics devel
VARIANTS=		standard
SDESC[standard]=	CorelDraw file format importer library
HOMEPAGE=		https://wiki.documentfoundation.org/DLP/Libraries/libcdr
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://dev-www.libreoffice.org/src/libcdr/
DISTFILE[1]=		libcdr-0.1.6.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		boost-libraries:rest:python_default
BUILDRUN_DEPENDS=	icu:single:standard
			librevenge:single:standard
			lcms2:primary:standard

USES=			libtool pkgconfig zlib

LICENSE=		MPL:single
LICENSE_FILE=		MPL:{{WRKSRC}}/COPYING.MPL
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/libcdr01

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-tests
			--disable-werror
			--without-docs

INSTALL_TARGET=		install-strip
SOVERSION=		1.0.6
PLIST_SUB=		VER=0.1

[FILE:107:descriptions/desc.single]
Library and tools providing ability to interpret and import Corel Draw
drawings into various applications.


[FILE:98:distinfo]
01cd00b04a030977e544433c2d127c997205332cd9b8e35ec0ee17110da7f861       612068 libcdr-0.1.6.tar.xz


[FILE:270:manifests/plist.single]
bin/
 cdr2raw
 cdr2text
 cdr2xhtml
 cmx2raw
 cmx2text
 cmx2xhtml
include/libcdr-%%VER%%/libcdr/
 CDRDocument.h
 CMXDocument.h
 libcdr.h
 libcdr_api.h
lib/
 libcdr-%%VER%%.so
 libcdr-%%VER%%.so.%%SOMAJOR%%
 libcdr-%%VER%%.so.%%SOVERSION%%
lib/pkgconfig/libcdr-%%VER%%.pc


[FILE:688:patches/patch-icu68]
Regressed by https://github.com/unicode-org/icu/commit/c3fe7e09d844

libcdr_utils.cpp:111:35: error: use of undeclared identifier 'TRUE'
    ucsdet_enableInputFilter(csd, TRUE);
                                  ^

--- src/lib/libcdr_utils.cpp.orig	2020-02-02 15:30:44 UTC
+++ src/lib/libcdr_utils.cpp
@@ -108,7 +108,7 @@ static unsigned short getEncoding(const unsigned char 
     csd = ucsdet_open(&status);
     if (U_FAILURE(status) || !csd)
       return 0;
-    ucsdet_enableInputFilter(csd, TRUE);
+    ucsdet_enableInputFilter(csd, true);
     ucsdet_setText(csd, (const char *)buffer, bufferLength, &status);
     if (U_FAILURE(status))
       throw libcdr::EncodingException();

