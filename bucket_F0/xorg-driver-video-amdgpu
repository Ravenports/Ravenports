# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-driver-video-amdgpu
VERSION=		23.0.0
KEYWORDS=		x11_drivers
VARIANTS=		std
SDESC[std]=		X.org amdgpu video driver
HOMEPAGE=		https://www.x.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		XORG/individual/driver
DISTFILE[1]=		xf86-video-amdgpu-23.0.0.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

NOT_FOR_ARCH=		aarch64

BUILD_DEPENDS=		libdrm:dev:std
			xorg-server:dev:std
BUILDRUN_DEPENDS=	libdrm:primary:std
			xorg-server:primary:std

USES=			libtool mesa pkgconfig mbsdfix
XORG_COMPONENTS=	xorgproto

DISTNAME=		xf86-video-amdgpu-23.0.0

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11-drivers/xf86-video-amdgpu

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-udev
			--disable-glamor

INSTALL_TARGET=		install-strip

[FILE:247:descriptions/desc.single]
This package contains the X.Org xf86-video-amdgpu driver.

The amdgpu driver supports AMD Radeon chipsets: OLAND, HAINAN, TAHITI,
PITCAIRN, VERDE, BONAIRE, KABINI, MULLINS, KAVERI, HAWAII, TOPAZ, TONGA,
CARRIZO, FIJI, STONEY, POLARIS11, POLARIS10


[FILE:110:distinfo]
4f04f0ea66f3ced0dcc58f617409860163a19c4e8c285cfb5285f36ba09cc061       381268 xf86-video-amdgpu-23.0.0.tar.xz


[FILE:103:manifests/plist.single]
lib/xorg/modules/drivers/amdgpu_drv.so
share/X11/xorg.conf.d/10-amdgpu.conf
share/man/man4/amdgpu.4.gz


[FILE:388:patches/patch-configure]
--- configure.orig	2023-02-25 16:53:37.547792000 +0100
+++ configure	2023-02-25 16:55:11.231417000 +0100
@@ -20744,15 +20744,6 @@
 
 printf "%s\n" "#define USE_SYS_ENDIAN_H 1" >>confdefs.h
 
-
-printf "%s\n" "#define bswap_16 ${BSWAP}16" >>confdefs.h
-
-
-printf "%s\n" "#define bswap_32 ${BSWAP}32" >>confdefs.h
-
-
-printf "%s\n" "#define bswap_64 ${BSWAP}64" >>confdefs.h
-
 	fi
 fi
 


[FILE:1521:patches/patch-src_amdgpu__drm__queue.c]
--- src/amdgpu_drm_queue.c.orig	2022-02-23 12:27:54 UTC
+++ src/amdgpu_drm_queue.c
@@ -94,7 +94,7 @@ amdgpu_drm_queue_handler(int fd, unsigne
 			 unsigned int usec, void *user_ptr)
 {
 	uintptr_t seq = (uintptr_t)user_ptr;
-	struct amdgpu_drm_queue_entry *e, *tmp;
+	struct amdgpu_drm_queue_entry *e = NULL, *tmp;
 
 	xorg_list_for_each_entry_safe(e, tmp, &amdgpu_drm_queue, list) {
 		if (e->seq == seq) {
@@ -213,7 +213,7 @@ amdgpu_drm_queue_alloc(xf86CrtcPtr crtc,
 void
 amdgpu_drm_abort_client(ClientPtr client)
 {
-	struct amdgpu_drm_queue_entry *e;
+	struct amdgpu_drm_queue_entry *e = NULL;
 
 	xorg_list_for_each_entry(e, &amdgpu_drm_queue, list) {
 		if (e->client == client)
@@ -227,7 +227,7 @@ amdgpu_drm_abort_client(ClientPtr client
 void
 amdgpu_drm_abort_entry(uintptr_t seq)
 {
-	struct amdgpu_drm_queue_entry *e, *tmp;
+	struct amdgpu_drm_queue_entry *e = NULL, *tmp;
 
 	if (seq == AMDGPU_DRM_QUEUE_ERROR)
 		return;
@@ -260,7 +260,7 @@ amdgpu_drm_abort_entry(uintptr_t seq)
 void
 amdgpu_drm_abort_id(uint64_t id)
 {
-	struct amdgpu_drm_queue_entry *e, *tmp;
+	struct amdgpu_drm_queue_entry *e = NULL, *tmp;
 
 	xorg_list_for_each_entry_safe(e, tmp, &amdgpu_drm_queue, list) {
 		if (e->id == id) {
@@ -356,7 +356,7 @@ amdgpu_drm_queue_init(ScrnInfoPtr scrn)
 void
 amdgpu_drm_queue_close(ScrnInfoPtr scrn)
 {
-	struct amdgpu_drm_queue_entry *e, *tmp;
+	struct amdgpu_drm_queue_entry *e = NULL, *tmp;
 
 	xorg_list_for_each_entry_safe(e, tmp, &amdgpu_drm_queue, list) {
 		if (e->crtc->scrn == scrn)


[FILE:333:patches/patch-src_amdgpu__kms.c]
--- src/amdgpu_kms.c.orig	2022-02-23 12:27:54 UTC
+++ src/amdgpu_kms.c
@@ -932,7 +932,7 @@ static void
 amdgpu_dirty_update(ScrnInfoPtr scrn)
 {
 	ScreenPtr screen = scrn->pScreen;
-	PixmapDirtyUpdatePtr ent;
+	PixmapDirtyUpdatePtr ent = NULL;
 	RegionPtr region;
 
 	xorg_list_for_each_entry(ent, &screen->pixmap_dirty_list, ent) {

