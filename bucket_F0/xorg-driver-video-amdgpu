# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-driver-video-amdgpu
VERSION=		1.3.0
KEYWORDS=		x11_drivers
VARIANTS=		standard
SDESC[standard]=	X.org amdgpu video driver
HOMEPAGE=		https://www.x.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		XORG/individual/driver
DISTFILE[1]=		xf86-video-amdgpu-1.3.0.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BROKEN[freebsd]=	REL_11: not supported on 11.x or older, no kernel support
NOT_FOR_ARCH=		aarch64

BUILDRUN_DEPENDS=	xorg-server:single:standard
			libdrm:single:standard

USES=			libtool mesa pkgconfig
XORG_COMPONENTS=	xproto fontsproto renderproto randrproto
			xf86driproto dri2proto dri3proto inputproto
			scrnsaverproto presentproto xineramaproto glproto
			resourceproto

DISTNAME=		xf86-video-amdgpu-1.3.0

LICENSE=		MIT:single
LICENSE_SCHEME=		solo
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING

FPC_EQUIVALENT=		x11-drivers/xf86-video-amdgpu

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-udev

INSTALL_TARGET=		install-strip

[FILE:247:descriptions/desc.single]
This package contains the X.Org xf86-video-amdgpu driver.

The amdgpu driver supports AMD Radeon chipsets: OLAND, HAINAN, TAHITI,
PITCAIRN, VERDE, BONAIRE, KABINI, MULLINS, KAVERI, HAWAII, TOPAZ, TONGA,
CARRIZO, FIJI, STONEY, POLARIS11, POLARIS10


[FILE:110:distinfo]
c1630f228938be949273f72b29ae70822dde064ad79c3ccb14d55f427e3f4e70       386785 xf86-video-amdgpu-1.3.0.tar.bz2


[FILE:103:manifests/plist.single]
lib/xorg/modules/drivers/amdgpu_drv.so
share/man/man4/amdgpu.4.gz
share/X11/xorg.conf.d/10-amdgpu.conf


[FILE:1548:patches/patch-src_amdgpu__drm__queue.c]
--- src/amdgpu_drm_queue.c.orig	2016-09-20 08:19:15 UTC
+++ src/amdgpu_drm_queue.c
@@ -61,7 +61,7 @@ amdgpu_drm_queue_handler(int fd, unsigne
 			 unsigned int usec, void *user_ptr)
 {
 	uintptr_t seq = (uintptr_t)user_ptr;
-	struct amdgpu_drm_queue_entry *e, *tmp;
+	struct amdgpu_drm_queue_entry *e = NULL, *tmp;
 
 	xorg_list_for_each_entry_safe(e, tmp, &amdgpu_drm_queue, list) {
 		if (e->seq == seq) {
@@ -133,7 +133,7 @@ amdgpu_drm_abort_one(struct amdgpu_drm_q
 void
 amdgpu_drm_abort_client(ClientPtr client)
 {
-	struct amdgpu_drm_queue_entry *e;
+	struct amdgpu_drm_queue_entry *e = NULL;
 
 	xorg_list_for_each_entry(e, &amdgpu_drm_queue, list) {
 		if (e->client == client)
@@ -147,7 +147,7 @@ amdgpu_drm_abort_client(ClientPtr client
 void
 amdgpu_drm_abort_entry(uintptr_t seq)
 {
-	struct amdgpu_drm_queue_entry *e, *tmp;
+	struct amdgpu_drm_queue_entry *e = NULL, *tmp;
 
 	xorg_list_for_each_entry_safe(e, tmp, &amdgpu_drm_queue, list) {
 		if (e->seq == seq) {
@@ -163,7 +163,7 @@ amdgpu_drm_abort_entry(uintptr_t seq)
 void
 amdgpu_drm_abort_id(uint64_t id)
 {
-	struct amdgpu_drm_queue_entry *e, *tmp;
+	struct amdgpu_drm_queue_entry *e = NULL, *tmp;
 
 	xorg_list_for_each_entry_safe(e, tmp, &amdgpu_drm_queue, list) {
 		if (e->id == id) {
@@ -191,7 +191,7 @@ amdgpu_drm_queue_init()
 void
 amdgpu_drm_queue_close(ScrnInfoPtr scrn)
 {
-	struct amdgpu_drm_queue_entry *e, *tmp;
+	struct amdgpu_drm_queue_entry *e = NULL, *tmp;
 
 	xorg_list_for_each_entry_safe(e, tmp, &amdgpu_drm_queue, list) {
 		if (e->crtc->scrn == scrn)


[FILE:360:patches/patch-src_amdgpu__kms.c]
--- src/amdgpu_kms.c.orig	2016-11-17 06:07:48 UTC
+++ src/amdgpu_kms.c
@@ -723,7 +723,7 @@ amdgpu_dirty_update(ScrnInfoPtr scrn)
 {
 	AMDGPUInfoPtr info = AMDGPUPTR(scrn);
 	ScreenPtr screen = scrn->pScreen;
-	PixmapDirtyUpdatePtr ent;
+	PixmapDirtyUpdatePtr ent = NULL;
 	RegionPtr region;
 
 	xorg_list_for_each_entry(ent, &screen->pixmap_dirty_list, ent) {

