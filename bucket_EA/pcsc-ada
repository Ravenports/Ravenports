# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		pcsc-ada
VERSION=		0.7.5
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Ada binding to Smart card interface (PC/SC)
HOMEPAGE=		http://www.codelabs.ch/pcscada
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.codelabs.ch/download/
DISTFILE[1]=		libpcscada-0.7.5.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs

OPTIONS_AVAILABLE=	TESTED INTF_TEST
OPTIONS_STANDARD=	TESTED INTF_TEST
OPT_ON[all]=		TESTED

BUILD_DEPENDS=		ruby-asciidoctor:single:ruby_default
BUILDRUN_DEPENDS=	pcsc-lite:primary:standard

USES=			gprbuild gmake

DISTNAME=		libpcscada-0.7.5

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"<PURPOSE>"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/pcsc.ads
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/pcsc-ada

BUILD_TARGET=		all doc
MAKE_ARGS=		NUM_CPUS={{MAKE_JOBS_NUMBER}}
			LIBRARY_KIND=static

[INTF_TEST].DESCRIPTION=		Run interface tests against installed smart card
[INTF_TEST].BUILD_DEPENDS_ON=		ahven:primary:standard
[INTF_TEST].BUILD_TARGET_ON=		itests

[TESTED].DESCRIPTION=			Run unit test suite before installation
[TESTED].BUILD_DEPENDS_ON=		ahven:primary:standard
[TESTED].BUILD_TARGET_ON=		utests

post-patch:
	${REINPLACE_CMD} -e 's|@LINK_OPTIONS@|"-L${LOCALBASE}/lib", "-Wl,-rpath,${LOCALBASE}/lib", |' \
		${WRKSRC}/pcscada_lib.gpr

do-build:
	# We cannot use a redefined ALL_TARGET because MAKE_JOBS_SAFE is set
	# for PROCESSORS, but that also sets -j for gmake can break build
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${MAKE_CMD} ${MAKE_ARGS:NDESTDIR=*} ${BUILD_TARGET})

do-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/lib/gnat \
		${STAGEDIR}${PREFIX}/lib/pcscada \
		${STAGEDIR}${PREFIX}/include/pcscada \
		${STAGEDIR}${STD_DOCDIR}
	${INSTALL_DATA} ${WRKSRC}/src/*.ad[bs] \
		${STAGEDIR}${PREFIX}/include/pcscada
	${INSTALL_DATA} ${WRKSRC}/lib/static/* \
		${STAGEDIR}${PREFIX}/lib/pcscada
	${INSTALL_DATA} ${FILESDIR}/pcscada.gpr ${STAGEDIR}${PREFIX}/lib/gnat
	(cd ${WRKSRC}/doc && ${COPYTREE_SHARE} html ${STAGEDIR}${STD_DOCDIR})

[FILE:155:descriptions/desc.primary]
PCSC/Ada provides a thick Ada binding to PC/SC-middleware. The library
allows programs written in Ada to communicate with smart cards using the
SCard API.


[FILE:103:distinfo]
cd387594adf026a5c701e7b9ecb3e44759341e9e2094eb6cf2bd164fcfd2fa99       263573 libpcscada-0.7.5.tar.bz2


[FILE:493:manifests/plist.primary]
include/pcscada/
 pcsc-scard-conversion.adb
 pcsc-scard-conversion.ads
 pcsc-scard-monitor.adb
 pcsc-scard-monitor.ads
 pcsc-scard-utils.adb
 pcsc-scard-utils.ads
 pcsc-scard.adb
 pcsc-scard.ads
 pcsc-thin-ifdhandler.ads
 pcsc-thin-reader.ads
 pcsc-thin.adb
 pcsc-thin.ads
 pcsc.ads
lib/gnat/pcscada.gpr
lib/pcscada/
 libpcscada.a
 pcsc-scard-conversion.ali
 pcsc-scard-monitor.ali
 pcsc-scard-utils.ali
 pcsc-scard.ali
 pcsc-thin-ifdhandler.ali
 pcsc-thin-reader.ali
 pcsc-thin.ali
 pcsc.ali


[FILE:460:manifests/plist.docs]
share/doc/pcsc-ada/html/index.html
share/doc/pcsc-ada/html/fonts/
 6NUO8FuJNQ2MbkrZ5-J8lKFrp7pRef2u.ttf
 fonts.css
 ga6Iaw1J5X9T9RW6j9bNfFcWbQ.ttf
 ga6Kaw1J5X9T9RW6j9bNfFImajC-.ttf
 ga6Law1J5X9T9RW6j9bNdOwzfReedA.ttf
 ga6Vaw1J5X9T9RW6j9bNfFIu0RWuc-VJ.ttf
 mem5YaGs126MiZpBA-UN_r8OUuhs.ttf
 mem5YaGs126MiZpBA-UNirkOUuhs.ttf
 mem6YaGs126MiZpBA-UFUK0Zdcg.ttf
 mem8YaGs126MiZpBA-UFVZ0e.ttf
 memnYaGs126MiZpBA-UFUKWyV9hrIqY.ttf
 memnYaGs126MiZpBA-UFUKXGUdhrIqY.ttf


[FILE:361:patches/patch-pcscada__lib.gpr]
--- pcscada_lib.gpr.orig	2019-12-10 07:33:55 UTC
+++ pcscada_lib.gpr
@@ -30,7 +30,7 @@ library project PCSCAda_Lib is
    for Library_Dir use "lib/" & PCSCAda_Common.Libtype;
    for Library_Kind use PCSCAda_Common.Libtype;
 
-   Ldlibs := ("-lpcsclite");
+   Ldlibs := (@LINK_OPTIONS@"-lpcsclite");
 
    case PCSCAda_Common.Libtype is
       when "static" =>


[FILE:231:files/pcscada.gpr]
project PCSCada is
   for Source_Dirs use ("../../include/pcscada");
   for Library_Name use "pcscada";
   for Library_Dir use "../../lib/pcscada";
   for Library_Kind use "static";
   for Externally_Built use "true";
end PCSCada;

