# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libobjc2
VERSION=		2.1
KEYWORDS=		lang devel
VARIANTS=		standard
SDESC[standard]=	Replacement Obj-C runtime for modern lang features
HOMEPAGE=		https://github.com/gnustep/libobjc2/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main tessil
SITES[main]=		GITHUB/gnustep:libobjc2:v2.1
SITES[tessil]=		GITHUB/Tessil:robin-map:757de82
DISTFILE[1]=		generated:main
DISTFILE[2]=		generated:tessil
DIST_SUBDIR=		libobjc2
DF_INDEX=		1 2
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gnustep-make:primary:standard

USES=			c++:primary clang cmake ninja

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		lang/libobjc2

SINGLE_JOB=		yes

SOVERSION=		4.6

LDFLAGS=		-lm
CMAKE_ARGS=		-DLIB_INSTALL_PATH=lib
			-DLLVM_OPTS:BOOL=ON
			-DGNUSTEP_INSTALL_TYPE=SYSTEM
			-DTESTS=OFF
			-G
			Ninja
			-DENABLE_OBJCXX=OFF

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libobjc.so

post-extract:
	${MV} ${WRKDIR}/robin-map-757de82/* ${WRKSRC}/third_party/robin-map

[FILE:1192:descriptions/desc.primary]
The GNUstep Objective-C runtime was designed as a drop-in replacement for 
the GCC runtime. It supports three ABIs:

 * The old GCC ABI, which provides support for Objective-C 1.0 features. 
This can be selected via the -fobjc-runtime=gcc flag in Clang or by 
compiling with GCC.
 * The initial GNUstep non-fragile ABI, which was intended to be 
compatible with the GCC ABI, but provide support for modern Objective-C 
features. This can be selected with the -fobjc-runtime=gnustep-1.9 flag in 
Clang.
 * The modern (v2) ABI, which provides richer reflection metadata, smaller 
binaries and reduced memory usage. This is selected with the 
-fobjc-runtime=gnustep-2.0 flag in Clang 7.0 or later.

All ABIs support the following feature above and beyond the GCC runtime:

 * The modern Objective-C runtime APIs, initially introduced with OS X 
10.5.
 * Blocks (closures).
 * Synthesised property accessors.
 * Efficient support for @synchronized()
 * Type-dependent dispatch, eliminating stack corruption from mismatched 
selectors.
 * Support for the associated reference APIs introduced with Mac OS X 10.6.
 * Support for the automatic reference counting APIs introduced with Mac 
OS X 10.7



[FILE:234:distinfo]
78fc3711db14bf863040ae98f7bdca08f41623ebeaf7efaea7dd49a38b5f054c       200290 libobjc2/gnustep-libobjc2-2.1.tar.gz
b365d847a23ce48a4e5c76c4a8194693f18323bf7cacdc0f57ada92ee275bd45        63288 libobjc2/Tessil-robin-map-757de82.tar.gz


[FILE:29:manifests/plist.primary]
lib/libobjc.so.%%SOVERSION%%


[FILE:359:manifests/plist.dev]
include/
 Block.h
 Block_private.h
include/objc/
 Availability.h
 Object.h
 Protocol.h
 blocks_private.h
 blocks_runtime.h
 capabilities.h
 developer.h
 encoding.h
 hooks.h
 message.h
 objc-api.h
 objc-arc.h
 objc-auto.h
 objc-class.h
 objc-runtime.h
 objc-visibility.h
 objc.h
 runtime-deprecated.h
 runtime.h
 slot.h
lib/libobjc.so
lib/pkgconfig/libobjc.pc


[FILE:783:patches/patch-CMakeLists.txt]
diff --git a/CMakeLists.txt b/CMakeLists.txt
index e2746e9..80b7dfe 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -317,7 +317,7 @@ if (ENABLE_OBJCXX)
 			endif()
 		endif ()
 		add_custom_command(OUTPUT eh_trampoline.s
-			COMMAND ${CMAKE_CXX_COMPILER} ${CMAKE_CXX_FLAGS} -fPIC -S "${CMAKE_SOURCE_DIR}/eh_trampoline.cc" -o - -fexceptions -fno-inline | sed "s/__gxx_personality_v0/test_eh_personality/g" > "${CMAKE_BINARY_DIR}/eh_trampoline.s"
+			COMMAND ${CMAKE_CXX_COMPILER} -fPIC -S "${CMAKE_SOURCE_DIR}/eh_trampoline.cc" -o - -fexceptions -fno-inline | sed "s/__gxx_personality_v0/test_eh_personality/g" > "${CMAKE_BINARY_DIR}/eh_trampoline.s"
 			MAIN_DEPENDENCY eh_trampoline.cc)
 		list(APPEND libobjc_ASM_SRCS eh_trampoline.s)
 		list(APPEND libobjc_CXX_SRCS objcxx_eh.cc)

