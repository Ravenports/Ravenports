# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-setuptools-scm
VERSION=		7.1.0
KEYWORDS=		python
VARIANTS=		py310 py311
SDESC[py310]=		Package to manage versions by scm tags (3.10)
SDESC[py311]=		Package to manage versions by scm tags (3.11)
HOMEPAGE=		https://github.com/pypa/setuptools_scm/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/1d/66/8f42c941be949ef2b22fe905d850c794e7c170a526023612aad5f3a121ad
DISTFILE[1]=		setuptools_scm-7.1.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py311]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[py311]=		PY310=OFF PY311=ON

DISTNAME=		setuptools_scm-7.1.0.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-packaging:single:py310
					python-setuptools:single:py310
					python-typing-extensions:single:py310
					python-tomli:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-packaging:single:py311
					python-setuptools:single:py311
					python-typing-extensions:single:py311
[PY311].USES_ON=			python:py311,wheel

[FILE:3000:descriptions/desc.single]
setuptools_scm
==============

setuptools_scm extracts Python package versions from git or
hg metadata instead of declaring them as the version argument
or in a SCM managed file.

Additionally setuptools_scm provides setuptools with a list of
files that are managed by the SCM (i.e. it automatically adds all of
the SCM-managed files to the sdist). Unwanted files must be excluded
by discarding them via ``MANIFEST.in``.

setuptools_scm supports the following scm out of the box:

* git
* mercurial

``pyproject.toml`` usage
------------------------

The preferred way to configure setuptools_scm is to author
settings in a ``tool.setuptools_scm section of pyproject.toml``.

This feature requires Setuptools 42 or later, released in Nov, 2019.
If your project needs to support build from sdist on older versions
of Setuptools, you will need to also implement the ``setup.py usage``
for those legacy environments.

First, ensure that setuptools_scm is present during the project's
built step by specifying it as one of the build requirements.

.. code:: toml

    # pyproject.toml
    [build-system]
    requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]

That will be sufficient to require setuptools_scm for projects
that support PEP 518 ([pip] and
[pep517]). Many tools,
especially those that invoke ``setup.py`` for any reason, may
continue to rely on setup_requires. For maximum compatibility
with those uses, consider also including a setup_requires directive
(described below in ``setup.py usage and setup.cfg``).

To enable version inference, you need to set the version
dynamically in the project section of ``pyproject.toml``:

.. code:: toml

    # pyproject.toml
    [project]
    # version = "0.0.1"  # Remove any existing version parameter.
    dynamic = ["version"]

Then add this section to your ``pyproject.toml``:

.. code:: toml

    # pyproject.toml
    [tool.setuptools_scm]

Including this section is comparable to supplying
``use_scm_version=True in setup.py``. Additionally,
include arbitrary keyword arguments in that section
to be supplied to ``get_version()``. For example:

.. code:: toml

    # pyproject.toml
    [tool.setuptools_scm]
    write_to = "pkg/_version.py"

Where pkg is the name of your package.

If you need to confirm which version string is being generated
or debug the configuration, you can install
`setuptools-scm <https://github.com/pypa/setuptools_scm>`_
directly in your working environment and run:

.. code-block:: shell

    $ python -m setuptools_scm

    # To explore other options, try:
    $ python -m setuptools_scm --help

``setup.py`` usage (deprecated)
-------------------------------

.. warning::

   setup_requires has been deprecated in favor of ``pyproject.toml

The following settings are considered legacy behavior and
superseded by the pyproject.toml`` usage, but for maximal
compatibility, projects may also supply the configuration in
this older form.

To use setuptools_scm just modify your project's ``setup.py`` file


[FILE:116:distinfo]
73988b6d848709e2af142aa48c986ea29592bbcfca5375678064708205253d8e        43829 setuptools_scm-7.1.0-py3-none-any.whl

