# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libass
VERSION=		0.14.0
KEYWORDS=		multimedia devel
VARIANTS=		standard
SDESC[standard]=	Library for SSA/ASS subtitles rendering
HOMEPAGE=		https://github.com/libass/libass
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/libass:libass:0.14.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		yasm:single:standard
BUILDRUN_DEPENDS=	freetype:primary:standard
			fontconfig:primary:standard
			harfbuzz:primary:standard
			fribidi:single:standard

USES=			autoreconf iconv libtool pkgconfig

LICENSE=		ISCL:single
LICENSE_SCHEME=		solo
LICENSE_FILE=		ISCL:{{WRKSRC}}/COPYING

FPC_EQUIVALENT=		multimedia/libass

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-harfbuzz

INSTALL_TARGET=		install-strip
PLIST_SUB=		SOVERSION=9.0.2
			SOMAJOR=9

VAR_ARCH[x86_64]=	CONFIGURE_ARGS=--enable-asm
VAR_ARCH[i386]=		CONFIGURE_ARGS=--enable-asm

[FILE:156:descriptions/desc.single]
libass is a portable subtitle renderer for the ASS/SSA (Advanced
Substation Alpha/Substation Alpha) subtitle format. It is mostly
compatible with VSFilter.


[FILE:106:distinfo]
82e70ee1f9afe2e54ab4bf6510b83bb563fcb2af978f0f9da82e2dbc9ae0fd72       176102 libass-libass-0.14.0.tar.gz


[FILE:131:manifests/plist.single]
include/ass/
 ass.h
 ass_types.h
lib/
 libass.a
 libass.so
 libass.so.%%SOMAJOR%%
 libass.so.%%SOVERSION%%
lib/pkgconfig/libass.pc


[FILE:808:patches/patch-configure.ac]
--- configure.ac.orig	2017-10-31 12:55:50 UTC
+++ configure.ac
@@ -87,7 +87,12 @@ AS_IF([test x$enable_asm != xno], [
                 [*darwin*], [
                     ASFLAGS="$ASFLAGS -f macho$BITTYPE -DPREFIX -DHAVE_ALIGNED_STACK=1" ],
                 [*linux*|*dragonfly*|*bsd*|*solaris*], [
-                    ASFLAGS="$ASFLAGS -f elf$BITTYPE -DHAVE_ALIGNED_STACK=1" ],
+                    AS_IF([test x$BITS = x64], [
+                        ASFLAGS="$ASFLAGS -f elf$BITTYPE -DHAVE_ALIGNED_STACK=1"
+                    ], [
+                        ASFLAGS="$ASFLAGS -f elf$BITTYPE -DHAVE_ALIGNED_STACK=0"
+                    ])
+                ],
                 [*cygwin*|*mingw*], [
                     ASFLAGS="$ASFLAGS -f win$BITTYPE"
                     AS_IF([test x$BITS = x64], [

