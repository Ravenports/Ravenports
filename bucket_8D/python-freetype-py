# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-freetype-py
VERSION=		2.5.1
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Freetype python bindings (3.11)
SDESC[v12]=		Freetype python bindings (3.12)
HOMEPAGE=		https://github.com/rougier/freetype-py
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/f/freetype-py
DISTFILE[1]=		freetype-py-2.5.1.zip:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		freetype-py-2.5.1

GENERATED=		yes

[PY311].BUILDRUN_DEPENDS_ON=		python-setuptools-scm:single:v11
[PY311].USES_ON=			python:v11,sutools

[PY312].BUILDRUN_DEPENDS_ON=		python-setuptools-scm:single:v12
[PY312].USES_ON=			python:v12,sutools

[FILE:3659:descriptions/desc.single]
FreeType (high-level Python API)
================================

Freetype Python provides bindings for the FreeType library. Only the
high-level API is bound.

Documentation available at: http://freetype-py.readthedocs.org/en/latest/

Installation
============

**From PyPI, recommended**: `pip install freetype-py`. This will install
the
library with a bundled FreeType binary, so you're ready to go on Windows,
macOS and Linux (all with 32 and 64 bit x86 architecture support).

Do note: if you specify the `--no-binary` paramater to pip, or use a
different
architecture for which we don't pre-compile binaries, the package will
default
to using an external FreeType library. Specify the environment variable
`FREETYPEPY_BUNDLE_FT=1` before calling pip to compile a binary yourself.

Installation with compiling FreeType from source
------------------------------------------------

If you don't want to or can't use the pre-built binaries, build FreeType
yourself: `export FREETYPEPY_BUNDLE_FT=yesplease && pip install .`.
This will download and compile FreeType with Harfbuzz support as specified
in
`setup-build-freetype.py`. Set the environment variable `PYTHON_ARCH` to 32
or
64 to explicitly set an architecture, default is whatever your host machine
uses. On macOS, we will always build a universal 32 and 64 bit Intel
binary.

- Windows: You need CMake and a C and C++ compiler, e.g. the Visual Code
  Community 2017 distribution with the desktop C++ workload.
- macOS: You need CMake and the XCode tools (full IDE not necessary)
- Linux: You need CMake, gcc and g++. For building a 32 bit library on a
  64 bit machine, you need gcc-multilib and g++-multilib (Debian) or
  glibc-devel.i686 and libstdc++-devel.i686 (Fedora).

Installation with an external FreeType library (the default)
------------------------------------------------------------

Install just the pure Python library and let it find a system-wide
installed
FreeType at runtime.

Mac users
~~~~~~~~~

Freetype should be already installed on your system. If not, either install
it
using [homebrew] or compile it and place the library binary
file in '/usr/local/lib'.

Linux users
~~~~~~~~~~~

Freetype should be already installed on your system. If not, either install
relevant package from your package manager or compile from sources and
place
the library binary file in '/usr/local/lib'.

Window users
~~~~~~~~~~~~

There are no official Freetype binary releases available, but they offer
some
links to precompiled Windows DLLs. Please see the [FreeType Downloads
] page for links.
You can also compile the FreeType library from source yourself.

If you are using freetype-py on Windows with a 32-Bit version of Python,
you
need the 32-Bit version of the Freetype binary. The same applies for a
64-Bit
version of Python.

Because of the way Windows searches for dll files, make sure the resulting
file is named 'freetype.dll' (and not something like Freetype245.dll).
Windows expects the library in one of the directories listed in the $PATH
environment variable. As it is not recommended to place the dll in a
Windows
system folder, you can choose one of the following ways to solve this:

* Place library in a folder of your choice and edit the $PATH user
  environment variable
* Place library in a folder of your choice and edit the $PATH system
  environment variable
* For development purpose, place the library in the working directory of
  the application
* Place the library in one of the existing directories listed in $PATH

To get a complete list of all the directories in the $PATH
environment variable (user and system), open a command promt and type

.. code::


[FILE:100:distinfo]
cfe2686a174d0dd3d71a9d8ee9bf6a2c23f5872385cf8ce9f24af83d076e2fbd       851738 freetype-py-2.5.1.zip

