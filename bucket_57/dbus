# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		dbus
VERSION=		1.16.2
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Message bus system for IPC communication
HOMEPAGE=		http://www.freedesktop.org/Software/dbus
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://dbus.freedesktop.org/releases/dbus/
DISTFILE[1]=		dbus-1.16.2.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		minixmlto:single:std
			docbook-xsl:primary:std
RUN_DEPENDS=		xmlcatmgr:primary:std

USERS=			messagebus
GROUPS=			messagebus
USERGROUP_SPKG=		primary

USES=			cpe meson expat python:build shebangfix
GNOME_COMPONENTS=	glib
XORG_COMPONENTS=	ice sm x11

LICENSE=		CUSTOM1:primary GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/COPYING
LICENSE_NAME=		CUSTOM1:"Academic Free License version 2.1"
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/LICENSES/GPL-2.0-or-later.txt
			CUSTOM1:{{WRKSRC}}/LICENSES/AFL-2.1.txt
LICENSE_SCHEME=		dual

CPE_VENDOR=		freedesktop
FPC_EQUIVALENT=		devel/dbus
MESON_ARGS=		-Dselinux=disabled
			-Dapparmor=disabled
			-Ddoxygen_docs=disabled
			-Dsystemd=disabled
			-Dtest_socket_dir="{{WRKDIR}}"
SHEBANG_FILES=		tools/GetAllMatchRules.py

SOVERSION=		3.38.3
PLIST_SUB=		VERSION="1.0"
			GROUPS={{GROUPS}}
			DTDDIR=share/xml/dbus-1
RC_SUBR=		dbus:primary
SUB_FILES=		catalog
			catalog.xml
SUB_LIST=		DTDDIR={{PREFIX}}/share/xml/dbus-1

post-install:
	# install xmlcat catalogs
	(cd ${WRKDIR} && ${INSTALL_DATA} catalog* \
		${STAGEDIR}${PREFIX}/share/xml/dbus-1/)
	# Workaround for software looking for machine-id in wrong place (lumina)
	${MKDIR} ${STAGEDIR}/var/lib
	${MKDIR} ${STAGEDIR}/var/run
	${LN} -s ../..${PREFIX}/var/lib/dbus ${STAGEDIR}/var/lib/dbus
	${LN} -s ../..${PREFIX}/var/run/dbus ${STAGEDIR}/var/run/dbus

pre-configure:
	${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|g' \
		${WRKSRC}/dbus/dbus-sysdeps-unix.c
	${REINPLACE_CMD} -e 's|/docbook.sourceforge.net/|/cdn.docbook.org/|' \
		${WRKSRC}/doc/meson.build ${WRKSRC}/meson.build

post-extract:
	${AWK} '/^The Academic Free License/,/^but the BSD, MIT/' \
		${WRKSRC}/COPYING > ${WRKDIR}/LICENSE_AFL

[FILE:392:descriptions/desc.primary]
D-BUS supplies both a system daemon (for events such as "new hardware device
added" or "printer queue changed") and a per-user-login-session daemon (for
general IPC needs among user applications). Also, the message bus is built on
top of a general one-to-one message passing framework, which can be used by
any two apps to communicate directly (without going through the message bus
daemon).


[FILE:97:distinfo]
0ba2a1a4b16afe7bceb2c07e9ce99a8c2c3508e5dec290dbb643384bd6beb7e2      1115644 dbus-1.16.2.tar.xz


[FILE:648:manifests/plist.primary]
/var/lib/dbus
/var/run/dbus
bin/
 dbus-cleanup-sockets
 dbus-daemon
 dbus-launch
 dbus-monitor
 dbus-run-session
 dbus-send
 dbus-test-tool
 dbus-update-activation-environment
 dbus-uuidgen
etc/dbus-1/
 session.conf
 system.conf
lib/
 libdbus-1.so.%%SOMAJOR%%
 libdbus-1.so.%%SOVERSION%%
@(,%%GROUPS%%,4750) libexec/dbus-daemon-launch-helper
share/dbus-1/
 session.conf
 system.conf
share/xml/dbus-1/
 busconfig.dtd
 introspect.dtd
@dir share/dbus-1/services
@dir share/dbus-1/session.d
@dir share/dbus-1/system-services
@dir share/dbus-1/system.d
@dir var/lib/dbus
@dir var/run/dbus
@xmlcatmgr %%DTDDIR%%/catalog
@xmlcatmgr %%DTDDIR%%/catalog.xml


[FILE:445:manifests/plist.dev]
include/dbus-%%VERSION%%/dbus/
 dbus-address.h
 dbus-bus.h
 dbus-connection.h
 dbus-errors.h
 dbus-macros.h
 dbus-memory.h
 dbus-message.h
 dbus-misc.h
 dbus-pending-call.h
 dbus-protocol.h
 dbus-server.h
 dbus-shared.h
 dbus-signature.h
 dbus-syntax.h
 dbus-threads.h
 dbus-types.h
 dbus.h
lib/libdbus-1.so
lib/cmake/DBus1/
 DBus1Config.cmake
 DBus1ConfigVersion.cmake
lib/dbus-%%VERSION%%/include/dbus/dbus-arch-deps.h
lib/pkgconfig/dbus-1.pc


[FILE:191:manifests/plist.man]
share/man/man1/
 dbus-cleanup-sockets.1
 dbus-daemon.1
 dbus-launch.1
 dbus-monitor.1
 dbus-run-session.1
 dbus-send.1
 dbus-test-tool.1
 dbus-update-activation-environment.1
 dbus-uuidgen.1


[FILE:556:manifests/plist.docs]
share/doc/dbus/
 dbus-cleanup-sockets.1.html
 dbus-daemon.1.html
 dbus-faq.html
 dbus-launch.1.html
 dbus-monitor.1.html
 dbus-run-session.1.html
 dbus-send.1.html
 dbus-specification.html
 dbus-test-plan.html
 dbus-test-tool.1.html
 dbus-tutorial.html
 dbus-update-activation-environment.1.html
 dbus-uuidgen.1.html
 diagram.png
 diagram.svg
 index.html
 system-activation.txt
share/doc/dbus/examples/
 GetAllMatchRules.py
 example-session-disable-stats.conf
 example-system-enable-stats.conf
 example-system-hardening-without-traditional-activation.conf


[FILE:3151:patches/patch-dbus_dbus-connection.c]
--- dbus/dbus-connection.c.orig	2024-12-16 12:21:54 UTC
+++ dbus/dbus-connection.c
@@ -2401,7 +2401,7 @@ _dbus_connection_block_pending_call (DBu
   DBusConnection *connection;
   dbus_uint32_t client_serial;
   DBusTimeout *timeout;
-  int timeout_milliseconds, elapsed_milliseconds;
+  int timeout_milliseconds, elapsed_milliseconds, remain_milliseconds;
 
   _dbus_assert (pending != NULL);
 
@@ -2482,7 +2482,11 @@ _dbus_connection_block_pending_call (DBu
   _dbus_get_monotonic_time (&tv_sec, &tv_usec);
   elapsed_milliseconds = (tv_sec - start_tv_sec) * 1000 +
 	  (tv_usec - start_tv_usec) / 1000;
-  
+  if (timeout_milliseconds != -1)
+    remain_milliseconds = timeout_milliseconds - elapsed_milliseconds;
+  else
+    remain_milliseconds = -1;
+
   if (!_dbus_connection_get_is_connected_unlocked (connection))
     {
       DBusMessage *error_msg;
@@ -2510,7 +2514,7 @@ _dbus_connection_block_pending_call (DBu
            */
           _dbus_verbose ("dbus_connection_send_with_reply_and_block() waiting for more memory\n");
 
-          _dbus_memory_pause_based_on_timeout (timeout_milliseconds - elapsed_milliseconds);
+          _dbus_memory_pause_based_on_timeout (remain_milliseconds);
         }
       else
         {          
@@ -2519,7 +2523,7 @@ _dbus_connection_block_pending_call (DBu
                                                   pending,
                                                   DBUS_ITERATION_DO_READING |
                                                   DBUS_ITERATION_BLOCK,
-                                                  timeout_milliseconds - elapsed_milliseconds);
+                                                  remain_milliseconds);
         }
 
       goto recheck_status;
@@ -2528,7 +2532,7 @@ _dbus_connection_block_pending_call (DBu
     _dbus_verbose ("dbus_connection_send_with_reply_and_block(): clock set backward\n");
   else if (elapsed_milliseconds < timeout_milliseconds)
     {
-      _dbus_verbose ("dbus_connection_send_with_reply_and_block(): %d milliseconds remain\n", timeout_milliseconds - elapsed_milliseconds);
+      _dbus_verbose ("dbus_connection_send_with_reply_and_block(): %d milliseconds remain\n", remain_milliseconds);
       
       if (status == DBUS_DISPATCH_NEED_MEMORY)
         {
@@ -2538,7 +2542,7 @@ _dbus_connection_block_pending_call (DBu
            */
           _dbus_verbose ("dbus_connection_send_with_reply_and_block() waiting for more memory\n");
 
-          _dbus_memory_pause_based_on_timeout (timeout_milliseconds - elapsed_milliseconds);
+          _dbus_memory_pause_based_on_timeout (remain_milliseconds);
         }
       else
         {          
@@ -2547,7 +2551,7 @@ _dbus_connection_block_pending_call (DBu
                                                   pending,
                                                   DBUS_ITERATION_DO_READING |
                                                   DBUS_ITERATION_BLOCK,
-                                                  timeout_milliseconds - elapsed_milliseconds);
+                                                  remain_milliseconds);
         }
 
       goto recheck_status;


[FILE:542:patches/patch-tools_dbus-launch.c]
--- tools/dbus-launch.c.orig	2024-12-16 12:21:54 UTC
+++ tools/dbus-launch.c
@@ -853,6 +853,12 @@ main (int argc, char **argv)
   exit_with_session = FALSE;
   config_file = NULL;
 
+  if (getenv("RAVENADM") != NULL)
+    {
+      fprintf (stderr, "Package building detected, launch not executed.\n");
+      exit (0);
+    }
+
   /* Ensure that the first three fds are open, to ensure that when we
    * create other file descriptors (for example for epoll, inotify or
    * a socket), they never get assigned as fd 0, 1 or 2. If they were,


[FILE:171:files/catalog.in]
OVERRIDE YES
PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "introspect.dtd"
PUBLIC "-//freedesktop//DTD D-Bus Bus Configuration 1.0//EN" "busconfig.dtd"


[FILE:479:files/catalog.xml.in]
<?xml version="1.0"?>
<!DOCTYPE catalog PUBLIC "-//OASIS//DTD Entity Resolution XML Catalog V1.0//EN"
	"http://www.oasis-open.org/committees/entity/release/1.0/catalog.dtd">
<catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog">
  <public publicId="-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" uri="file://%%DTDDIR%%/introspect.dtd" />
  <public publicId="-//freedesktop//DTD D-Bus Bus Configuration 1.0//EN" uri="file://%%DTDDIR%%/busconfig.dtd" />
</catalog>


[FILE:645:files/dbus.in]
#!/bin/sh
#
# $FreeBSD: head/devel/dbus/files/dbus.in 431498 2017-01-14 22:48:49Z tijl $
#
# PROVIDE: dbus
# REQUIRE: DAEMON ldconfig
#
# Add the following lines to /etc/rc.conf to enable the D-BUS messaging system:
#
# dbus_enable="YES"
#

. /etc/rc.subr

: ${dbus_enable=${gnome_enable-NO}} ${dbus_flags="--system"}

name=dbus
rcvar=dbus_enable

command="%%PREFIX%%/bin/dbus-daemon"
pidfile="/var/run/dbus/pid"

start_precmd="dbus_prestart"
stop_postcmd="dbus_poststop"

dbus_prestart()
{
    %%PREFIX%%/bin/dbus-uuidgen --ensure
    mkdir -p /var/run/dbus
}

dbus_poststop()
{
    rm -f $pidfile
}

load_rc_config ${name}
run_rc_command "$1"

