# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		boost-jam
VERSION=		1.76.0
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Build tool from the boost.org
HOMEPAGE=		https://www.boost.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/
DISTFILE[1]=		boost_1_76_0.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe c++:single

DISTNAME=		boost_1_76_0
EXTRACT_HEAD[1]=	{{TAR}} -xf
EXTRACT_TAIL[1]=	{{DISTNAME}}/tools/build/src/engine {{DISTNAME}}/LICENSE_1_0.txt

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"Boost Software License - Version 1.0"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE_1_0.txt
LICENSE_SCHEME=		solo

CPE_PRODUCT=		boost
CPE_VENDOR=		boost
FPC_EQUIVALENT=		devel/boost-jam

BUILD_WRKSRC=		{{WRKSRC}}/tools/build/src/engine
BUILD_TARGET=		gcc

INSTALL_WRKSRC=		{{BUILD_WRKSRC}}

CXXFLAGS=		{{LDFLAGS}}

post-patch:
	# removing -O3 flag
	${REINPLACE_CMD} -e 's|-O3 ||g' ${BUILD_WRKSRC}/build.sh
	# hardcode executable path on fallback
	${REINPLACE_CMD} -e 's|@LOCALBASE@|${PREFIX}|' ${BUILD_WRKSRC}/jam.cpp

do-build:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
	./build.sh ${MAKE_ARGS:C,^${DESTDIRNAME}=.*,,g} ${BUILD_TARGET})

do-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/bin
	${INSTALL_PROGRAM} ${INSTALL_WRKSRC}/bjam ${STAGEDIR}${PREFIX}/bin/

[FILE:233:descriptions/desc.single]
Boost.Jam (BJam) is a build tool based on FTJam, which in turn is
based on Perforce Jam. It contains significant improvements made to
facilitate its use in the Boost Build System, but should be backward
compatible with Perforce Jam.


[FILE:99:distinfo]
f0397ba6e982c4450f27bf32a2a83292aba035b827a5623a14636ea583318c41    110073117 boost_1_76_0.tar.bz2


[FILE:9:manifests/plist.single]
bin/bjam


[FILE:405:patches/patch-tools_build_src_engine_jam.cpp]
--- tools/build/src/engine/jam.cpp.orig	2021-04-13 16:23:21 UTC
+++ tools/build/src/engine/jam.cpp
@@ -776,7 +776,6 @@ char * executable_path( char const * arg
 #else
 char * executable_path( char const * argv0 )
 {
-    /* If argv0 is an absolute path, assume it is the right absolute path. */
-    return argv0[ 0 ] == '/' ? strdup( argv0 ) : NULL;
+    return strdup("@LOCALBASE@/bin/jam");
 }
 #endif


[FILE:315:patches/patch-tools_build_src_engine_jam.h]
--- tools/build/src/engine/jam.h.orig	2021-04-13 16:23:21 UTC
+++ tools/build/src/engine/jam.h
@@ -304,7 +304,7 @@
     #define OSMINOR "OS=SINIX"
     #define OS_SINIX
 #endif
-#ifdef sun
+#ifdef __sun
     #if defined(__svr4__) || defined(__SVR4)
         #define OSMINOR "OS=SOLARIS"
         #define OS_SOLARIS

