# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		graphviz
VERSION=		2.47.1
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Graph visualization tools
HOMEPAGE=		http://www.graphviz.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://gitlab.com/graphviz/graphviz/-/archive/2.47.1/
DISTFILE[1]=		graphviz-2.47.1.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			examples
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		groff:primary:standard
BUILDRUN_DEPENDS=	freeglut:primary:standard
			libGD:single:standard
			gts:single:standard
			WebP:single:standard

USES=			bison cpe gmake jpeg mesa libtool:keepla pkgconfig
			shebangfix iconv gettext-tools gettext-runtime
			autoreconf python:build
GNOME_COMPONENTS=	pango cairo librsvg gtk2
XORG_COMPONENTS=	xaw xpm xmu xt sm ice xext x11 xau xdmcp xrender
			xinerama xi xrandr xcursor xfixes

LICENSE=		CUSTOM1:primary
LICENSE_NAME=		CUSTOM1:"Eclipse Public License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/graphviz

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-x
			--with-nls
			--with-gtk
			--with-gts
			--with-gdk
			--with-gdk-pixbuf
			--with-gnomeui
			--with-rsvg
			--with-webp
			--with-digcola
			--with-ipsepcola
			--with-pangocairo
			--with-ghostscript=no
			--with-qt=no
			--without-ann
			--without-ming
			--without-devil
			--without-poppler
			--without-smyrna
			--without-glade
			--without-gtkgl
			--without-gtkglext
			--disable-io
			--disable-ocaml
			--disable-java
			--disable-sharp
			--disable-lua
			--disable-tcl
			--disable-php
			--disable-perl
			--disable-ruby
			--disable-guile
			--disable-python
			--program-transform-name="s/x/x/"
			--enable-r=no
			--with-freetype2=yes
			--with-libgd
			--with-fontconfigincludedir={{LOCALBASE}}/include
			--with-fontconfiglibdir={{LOCALBASE}}/lib
			--with-iconvlibdir={{ICONV_PREFIX}}/lib
			--with-iconvincludedir={{ICONV_PREFIX}}/include
CONFIGURE_ENV=		ac_cv_func_pango_fc_font_lock_face=no

MAKE_ARGS=		pkgconfigdir={{PREFIX}}/lib/pkgconfig
MAKE_ENV=		EXPR_COMPAT=yes

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes

VAR_OPSYS[sunos]=	CONFIGURE_ENV=LIBS=-lsocket

post-patch:
	${REINPLACE_CMD} -e 's|#include "gui.h"|#include "gui/gui.h"|' \
		${WRKSRC}/cmd/smyrna/tvnodes.h
	${FIND} ${WRKSRC} -name Makefile.am | \
		${XARGS} ${REINPLACE_CMD} \
		-e 's| $$(pkgdatadir)/doc/pdf| ${STD_DOCDIR}/pdf|' \
		-e 's| $$(pkgdatadir)/doc/html/schema| ${STD_DOCDIR}/html/schema|' \
		-e 's| $$(pkgdatadir)/doc/html/info| ${STD_DOCDIR}/html/info|' \
		-e 's| $$(pkgdatadir)/doc/html| ${STD_DOCDIR}/html|' \
		-e 's| $$(pkgdatadir)/doc| ${STD_DOCDIR}|' \
		-e 's| $$(pkgdatadir)/demo| ${STD_EXAMPLESDIR}|' \
		-e 's| $$(datadir)/@PACKAGE@/demo| ${STD_EXAMPLESDIR}|';
	(cd ${WRKSRC} && ${SH} ${WRKSRC}/autogen.sh)

post-install:
	# various
	(cd ${WRKSRC}/lib/expr && ${MAKE_ENV} ${MAKE} ${MAKE_ARGS} all)
	(cd ${WRKSRC} && ${INSTALL_DATA} \
		lib/cdt/dthdr.h \
		lib/pathplan/tri.h \
		lib/pathplan/pathplan.h \
		lib/pathplan/pathutil.h \
		lib/pathplan/solvers.h \
		lib/pathplan/vis.h \
		lib/pathplan/vispath.h \
		lib/common/arith.h \
		lib/common/logic.h \
		lib/common/globals.h \
		lib/gvc/gvcint.h \
		${STAGEDIR}${PREFIX}/include/graphviz/)
	${RM} ${STAGEDIR}${MANPREFIX}/man/man1/smyrna.1
	${RM} ${STAGEDIR}${MANPREFIX}/man/man1/mingle.1
	# documentation
	${MKDIR} ${STAGEDIR}${STD_DOCDIR}/html ${STAGEDIR}${STD_DOCDIR}/pdf
	cd ${WRKSRC} && \
		${INSTALL_DATA} doc/Dot.ref doc/latex_suggestions.txt \
			${STAGEDIR}${STD_DOCDIR}/ && \
		${INSTALL_DATA} doc/*.pdf */*/*.pdf \
			${STAGEDIR}${STD_DOCDIR}/pdf/ && \
		${INSTALL_DATA} doc/*.html \
			${STAGEDIR}${STD_DOCDIR}/html/
	${RM} ${STAGEDIR}${STD_DOCDIR}/COPYING
	# examples
	${MKDIR} ${STAGEDIR}${STD_EXAMPLESDIR}/pathplan_data
	${INSTALL_SCRIPT} \
		${WRKSRC}/tclpkg/gdtclft/demo/entities.tcl \
		${WRKSRC}/tclpkg/tcldot/demo/doted.tcl \
		${WRKSRC}/tclpkg/tcldot/demo/gcat.tcl \
		${WRKSRC}/tclpkg/tclpathplan/demo/pathplan.tcl \
		${STAGEDIR}${STD_EXAMPLESDIR}/
	${INSTALL_DATA} \
		${WRKSRC}/tclpkg/gdtclft/demo/entities.tcl.README \
		${WRKSRC}/tclpkg/tcldot/demo/doted.tcl.README \
		${WRKSRC}/tclpkg/tcldot/demo/gcat.tcl.README \
		${WRKSRC}/tclpkg/tclpathplan/demo/pathplan.tcl.README \
		${STAGEDIR}${STD_EXAMPLESDIR}/
	${INSTALL_DATA} \
		${WRKSRC}/tclpkg/tclpathplan/demo/pathplan_data/*.dat \
		${STAGEDIR}${STD_EXAMPLESDIR}/pathplan_data/

post-patch-freebsd:
	${REINPLACE_CMD} -e 's|SF_FLAGS|SFIO_FLAGS|g' ${WRKSRC}/lib/sfio/*.[ch]; \

[FILE:540:descriptions/desc.primary]
Graph Visualization Software from AT&T Laboratories and
Bell Laboratories (Lucent Technologies)

These programs licensed under the terms described in the web page at:
http://www.graphviz.org/License.php

The package contains:
   dotty  - customizable X windows graph viewer written in the Lefty editor
   tcldot - customizable TCL/tk graph viewer written by John Ellson
   dot    - batch program for drawing directed graphs as hierarchies
   neato  - batch program for drawing undirected graphs using Kamada-Kawai
            spring models


[FILE:101:distinfo]
b7f4d6819e4dc17c15e7e07bd1ea5e081ef6569b63f8427117dac32f0e3837b4     30810135 graphviz-2.47.1.tar.gz


[FILE:4362:manifests/plist.primary]
bin/
 acyclic
 bcomps
 ccomps
 circo
 cluster
 diffimg
 dijkstra
 dot
 dot2gxl
 dot_builtins
 dotty
 edgepaint
 fdp
 gc
 gml2gv
 graphml2gv
 gv2gml
 gv2gxl
 gvcolor
 gvgen
 gvmap
 gvmap.sh
 gvpack
 gvpr
 gxl2dot
 gxl2gv
 lefty
 lneato
 mm2gv
 neato
 nop
 osage
 patchwork
 prune
 sccmap
 sfdp
 tred
 twopi
 unflatten
 vimdot
include/graphviz/
 arith.h
 cdt.h
 cgraph.h
 color.h
 dthdr.h
 geom.h
 globals.h
 graphviz_version.h
 gv.cpp
 gv.i
 gvc.h
 gvcext.h
 gvcint.h
 gvcjob.h
 gvcommon.h
 gvconfig.h
 gvplugin.h
 gvplugin_device.h
 gvplugin_layout.h
 gvplugin_loadimage.h
 gvplugin_render.h
 gvplugin_textlayout.h
 gvpr.h
 logic.h
 pack.h
 pathgeom.h
 pathplan.h
 pathutil.h
 solvers.h
 textspan.h
 tri.h
 types.h
 usershape.h
 vis.h
 vispath.h
 xdot.h
lib/
 libcdt.la
 libcdt.so
 libcdt.so.5
 libcdt.so.5.0.0
 libcgraph.la
 libcgraph.so
 libcgraph.so.6
 libcgraph.so.6.0.0
 libgvc.la
 libgvc.so
 libgvc.so.6
 libgvc.so.6.0.0
 libgvpr.la
 libgvpr.so
 libgvpr.so.2
 libgvpr.so.2.0.0
 liblab_gamut.la
 liblab_gamut.so
 liblab_gamut.so.1
 liblab_gamut.so.1.0.0
 libpathplan.la
 libpathplan.so
 libpathplan.so.4
 libpathplan.so.4.0.0
 libxdot.la
 libxdot.so
 libxdot.so.4
 libxdot.so.4.0.0
lib/graphviz/
 libgvplugin_core.la
 libgvplugin_core.so
 libgvplugin_core.so.6
 libgvplugin_core.so.6.0.0
 libgvplugin_dot_layout.la
 libgvplugin_dot_layout.so
 libgvplugin_dot_layout.so.6
 libgvplugin_dot_layout.so.6.0.0
 libgvplugin_gd.la
 libgvplugin_gd.so
 libgvplugin_gd.so.6
 libgvplugin_gd.so.6.0.0
 libgvplugin_gdk.la
 libgvplugin_gdk.so
 libgvplugin_gdk.so.6
 libgvplugin_gdk.so.6.0.0
 libgvplugin_gtk.la
 libgvplugin_gtk.so
 libgvplugin_gtk.so.6
 libgvplugin_gtk.so.6.0.0
 libgvplugin_neato_layout.la
 libgvplugin_neato_layout.so
 libgvplugin_neato_layout.so.6
 libgvplugin_neato_layout.so.6.0.0
 libgvplugin_pango.la
 libgvplugin_pango.so
 libgvplugin_pango.so.6
 libgvplugin_pango.so.6.0.0
 libgvplugin_rsvg.la
 libgvplugin_rsvg.so
 libgvplugin_rsvg.so.6
 libgvplugin_rsvg.so.6.0.0
 libgvplugin_visio.la
 libgvplugin_visio.so
 libgvplugin_visio.so.6
 libgvplugin_visio.so.6.0.0
 libgvplugin_webp.la
 libgvplugin_webp.so
 libgvplugin_webp.so.6
 libgvplugin_webp.so.6.0.0
 libgvplugin_xlib.la
 libgvplugin_xlib.so
 libgvplugin_xlib.so.6
 libgvplugin_xlib.so.6.0.0
lib/pkgconfig/
 libcdt.pc
 libcgraph.pc
 libgvc.pc
 libgvpr.pc
 liblab_gamut.pc
 libpathplan.pc
 libxdot.pc
share/graphviz/graphs/directed/
 KW91.gv
 Latin1.gv
 NaN.gv
 abstract.gv
 alf.gv
 arrows.gv
 awilliams.gv
 biological.gv
 clust.gv
 clust1.gv
 clust2.gv
 clust3.gv
 clust4.gv
 clust5.gv
 crazy.gv
 ctext.gv
 dfa.gv
 fig6.gv
 fsm.gv
 grammar.gv
 hashtable.gv
 honda-tokoro.gv
 japanese.gv
 jcctree.gv
 jsort.gv
 ldbxtried.gv
 longflat.gv
 mike.gv
 nhg.gv
 oldarrows.gv
 pgram.gv
 pm2way.gv
 pmpipe.gv
 polypoly.gv
 proc3d.gv
 psfonttest.gv
 record2.gv
 records.gv
 rowe.gv
 russian.gv
 sdh.gv
 shells.gv
 states.gv
 structs.gv
 switch.gv
 table.gv
 train11.gv
 trapeziumlr.gv
 tree.gv
 triedds.gv
 try.gv
 unix.gv
 unix2.gv
 viewfile.gv
 world.gv
share/graphviz/graphs/undirected/
 ER.gv
 Heawood.gv
 Petersen.gv
 ngk10_4.gv
 process.gv
share/graphviz/gvpr/
 addedges
 addranks
 addrings
 anon
 attr
 bb
 bbox
 binduce
 bipart
 chkclusters
 chkedges
 cliptree
 col
 collapse
 color
 cycle
 dechain
 deghist
 deledges
 delmulti
 delnodes
 depath
 dijkstra
 flatten
 get-layers-list
 group
 histogram
 indent
 knbhd
 maxdeg
 path
 rotate
 scale
 scalexy
 span
 topon
 treetoclust
share/graphviz/lefty/
 box.lefty
 def.lefty
 dotty.lefty
 dotty_draw.lefty
 dotty_edit.lefty
 dotty_layout.lefty
 dotty_ui.lefty
 fractal.lefty
 fractal2.lefty
 lefty.psp
 slides.lefty
 tree.lefty
share/man/man1/
 acyclic.1.gz
 bcomps.1.gz
 ccomps.1.gz
 circo.1.gz
 cluster.1.gz
 diffimg.1.gz
 dijkstra.1.gz
 dot.1.gz
 dot2gxl.1.gz
 dotty.1.gz
 edgepaint.1.gz
 fdp.1.gz
 gc.1.gz
 gml2gv.1.gz
 graphml2gv.1.gz
 gv2gml.1.gz
 gv2gxl.1.gz
 gvcolor.1.gz
 gvgen.1.gz
 gvmap.1.gz
 gvmap.sh.1.gz
 gvpack.1.gz
 gvpr.1.gz
 gxl2dot.1.gz
 gxl2gv.1.gz
 lefty.1.gz
 lneato.1.gz
 mm2gv.1.gz
 neato.1.gz
 nop.1.gz
 osage.1.gz
 patchwork.1.gz
 prune.1.gz
 sccmap.1.gz
 sfdp.1.gz
 tred.1.gz
 twopi.1.gz
 unflatten.1.gz
 vimdot.1.gz
share/man/man3/
 cdt.3.gz
 cgraph.3.gz
 expr.3.gz
 gvc.3.gz
 gvpr.3.gz
 pack.3.gz
 pathplan.3.gz
 xdot.3.gz
share/man/man7/graphviz.7.gz
@postexec %D/bin/dot -c
@postunexec rm -f %D/lib/graphviz/config6


[FILE:317:manifests/plist.examples]
share/examples/graphviz/
 doted.tcl
 doted.tcl.README
 entities.tcl
 entities.tcl.README
 gcat.tcl
 gcat.tcl.README
 pathplan.tcl
 pathplan.tcl.README
share/examples/graphviz/pathplan_data/
 boxes.dat
 dpd.dat
 funny.dat
 maze.dat
 nested.dat
 northo.dat
 obs.dat
 other.dat
 paths.dat
 rotor.dat
 u.dat
 unknown.dat


[FILE:655:manifests/plist.docs]
share/doc/graphviz/
 AUTHORS
 CHANGELOG.md
 Dot.ref
 NEWS
 addingLayout.txt
 cpl1.0.txt
 fontfaq.txt
 latex_suggestions.txt
share/doc/graphviz/html/
 FAQ.html
 build.html
 char.html
 gdtclft.entities.example.png
 index.html
 internal_todo.html
 pspdf.png
 todo.html
 winbuild.html
share/doc/graphviz/html/info/
 arrows.html
 attrs.html
 colors.html
 command.html
 index.html
 lang.html
 output.html
 shapes.html
share/doc/graphviz/html/schema/
 arguments.xml
 attributes.xml
 attributes.xslt
share/doc/graphviz/pdf/
 Agraph.pdf
 dotguide.pdf
 dottyguide.pdf
 graphviz_plugins.pdf
 leftyguide.pdf
 libguide.pdf
 neatoguide.pdf
 oldlibguide.pdf
 smyrna.pdf


[FILE:254:patches/patch-cmd-gvpr-gvpr.1]
--- cmd/gvpr/gvpr.1.orig	2021-04-17 19:19:13 UTC
+++ cmd/gvpr/gvpr.1
@@ -3,6 +3,15 @@
 .  ns
 .  TP \\$1
 ..
+.de EX
+.fam C
+.nf
+..
+.de EE
+.fam
+.fi
+..
+
 .TH GVPR 1 "29 August 2013"
 .SH NAME
 gvpr \- graph pattern scanning and processing language


[FILE:222:patches/patch-cmd-tools-gvpack.1]
--- cmd/tools/gvpack.1.orig	2021-04-17 19:19:13 UTC
+++ cmd/tools/gvpack.1
@@ -1,3 +1,12 @@
+.de EX
+.fam C
+.nf
+..
+.de EE
+.fam
+.fi
+..
+
 .TH GVPACK 1 "27 May 2010"
 .SH NAME
 gvpack \- merge and pack disjoint graphs


[FILE:643:patches/patch-config-config_ruby.rb]
--- config/config_ruby.rb.orig	2021-04-17 19:19:13 UTC
+++ config/config_ruby.rb
@@ -5,11 +5,14 @@ CONFIG = RbConfig::MAKEFILE_CONFIG
 
 case ARGV[0]
 when "archdir"
-    puts RbConfig::expand(CONFIG["archdir"])
+    puts RbConfig::expand(CONFIG["rubyhdrdir"])
+when "inc"
+    print RbConfig::expand(CONFIG["rubyhdrdir"]) + '/'
+    puts RbConfig::expand(CONFIG["sitearch"])
 when "lib"
     puts RbConfig::expand(CONFIG["libdir"])
 when "vendorarchdir"
-    puts RbConfig::expand(CONFIG["vendorarchdir"])
+    puts RbConfig::expand(CONFIG["sitearchdir"])
 when "sitearchdir"
     puts RbConfig::expand(CONFIG["sitearchdir"])
 when "sitelib"


[FILE:2248:patches/patch-configure.ac]
--- configure.ac.orig	2021-04-17 19:19:13 UTC
+++ configure.ac
@@ -710,7 +710,7 @@ else
       if test "x$GUILE_CONFIG" = "x"; then
         use_guile="No (guile not available)"
       else
-        [GUILE_VERSION=`$GUILE_CONFIG --version 2>&1 | sed -n '1 s/^.* \+\([0-9\.]\+\)$/\1/ p'`]
+        [GUILE_VERSION=`$GUILE_CONFIG --version 2>&1 | sed -n '1 s/^.* \([0-9\.]\+\)$/\1/ p'`]
         GUILE_VERSION_MAJOR=`echo $GUILE_VERSION | cut -d '.' -f 1`
         GUILE_VERSION_MINOR=`echo $GUILE_VERSION | cut -d '.' -f 2`
         AC_CHECK_PROGS(GUILE,guile$GUILE_VERSION_MAJOR.$GUILE_VERSION_MINOR guile$GUILE_VERSION_MAJOR guile)
@@ -941,17 +941,17 @@ else
             if test "x$PKG_CONFIG" != "x"; then
 	        AC_MSG_CHECKING(for Lua headers and libraries with pkg-config)
 	        echo
-	        for l in "$lua_suffix" "" "53" "5.3" "52" "5.2" "51" "5.1" "50" "5.0" ; do
+	        for l in "$lua_suffix" "" "53" "-5.3" "52" "-5.2" "51" "-5.1" "50" "5.0" ; do
 	            pkgconfig_lua_found=`$PKG_CONFIG --exists lua$l 2>/dev/null`
 	            if test "x$?" = "x0" ; then
 		        LUA_VERSION=`$PKG_CONFIG --modversion lua$l`
-                        LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags lua$l`
+                        LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags-only-I lua$l`
                         LUA_LIBS="$LUA_LFLAGS "`$PKG_CONFIG --libs lua$l`
 		        LUA_INSTALL_DIR="/usr/lib$LIBPOSTFIX/lua/`$PKG_CONFIG --variable=V lua`"
 
 		        pkgconfig_lualib_found=`$PKG_CONFIG --exists lualib$l 2>/dev/null`
 		        if test  "x$?" = "x0"; then
-		           LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags lualib$l`
+		           LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags-only-I lualib$l`
 		           LUA_LIBS="$LUA_LFLAGS "`$PKG_CONFIG --libs lualib$l`
 		        fi
                         break
@@ -1471,6 +1471,7 @@ else
 	    use_ruby="No (ruby not available)"
           else
             RUBY_CFLAGS="-I`$RUBY $srcdir/config/config_ruby.rb archdir`"
+            RUBY_CFLAGS="${RUBY_CFLAGS} -I`$RUBY $srcdir/config/config_ruby.rb inc`"
 	    # hack for powerpc-darwin8 (10.4)
 	    if test "x$DARWIN" = "xyes"; then
 	      RUBY_CFLAGS=`echo $RUBY_CFLAGS | sed 's/powerpc/universal/'`


[FILE:297:patches/patch-lib-expr-exgram.h]
--- lib/expr/exgram.h.orig	2021-04-17 19:19:13 UTC
+++ lib/expr/exgram.h
@@ -20,7 +20,7 @@ extern "C" {
  * sometimes free stuff can cost a lot
  */
 
-#if !defined(_EXGRAM_H) && ( defined(MINTOKEN) || defined(YYTOKENTYPE) )
+#if !defined(_EXGRAM_H)
 #define _EXGRAM_H
 
 #if !defined(_EXPARSE_H)


[FILE:219:patches/patch-lib-expr-expr.h]
--- lib/expr/expr.h.orig	2021-04-17 19:19:13 UTC
+++ lib/expr/expr.h
@@ -24,6 +24,7 @@ extern "C" {
 
 #include <ast/ast.h>
 #include <inttypes.h>
+#include <limits.h>
 
 #undef	RS	/* hp.pa <signal.h> grabs this!! */
 


[FILE:420:patches/patch-lib-ortho-trapezoid.c]
--- lib/ortho/trapezoid.c.orig	2021-04-17 19:19:13 UTC
+++ lib/ortho/trapezoid.c
@@ -24,6 +24,11 @@
 #include <common/types.h>
 #include <ortho/trap.h>
 
+#include <sys/param.h>
+#if __FreeBSD_version <= 704101 || (__FreeBSD_version >= 800000 && __FreeBSD_version < 802502) || (__FreeBSD_version >= 900000 && __FreeBSD_version < 900027)
+#define log2(x)  (log(x)/log(2))
+#endif
+
 /* Node types */
 
 #define T_X     1


[FILE:622:patches/patch-plugin-xlib-vimdot.sh]
--- plugin/xlib/vimdot.sh.orig	2021-04-17 19:19:13 UTC
+++ plugin/xlib/vimdot.sh
@@ -10,7 +10,7 @@ error() { echo "$0: $*" >&2; exit 1; }
 
 # Try $EDITOR first, else try vim or vi
 editor="$EDITOR"
-[ -x "$editor" ] || editor="/usr/bin/vim"
+[ -x "$editor" ] || editor="/usr/local/bin/vim"
 [ -x "$editor" ] || editor="/usr/bin/vi"
 [ -x "$editor" ] || error "EDITOR not found or not executable";
 
@@ -30,7 +30,7 @@ digraph G {
 
 	vim [href="http://www.vim.org/"]
 	dot [href="http://www.graphviz.org/"]
-	vimdot [href="file:///usr/bin/vimdot"]
+	vimdot [href="file:///usr/local/bin/vimdot"]
 
 	{vim dot} -> vimdot
 }

