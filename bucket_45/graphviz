# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		graphviz
VERSION=		7.0.6
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Graph visualization tools
HOMEPAGE=		http://www.graphviz.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://gitlab.com/graphviz/graphviz/-/archive/7.0.6/
DISTFILE[1]=		graphviz-7.0.6.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			examples
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		groff:primary:standard
			expat:static:standard
			git:primary:lite
BUILDRUN_DEPENDS=	freeglut:primary:standard
			libGD:single:standard
			gts:single:standard
			WebP:single:standard
			libltdl:single:standard
			expat:shared:standard
			ghostscript:primary:standard
			poppler:glib:standard

USES=			bison cpe cmake jpeg mesa pkgconfig zlib shebangfix
			iconv gettext-tools gettext-runtime python:build
GNOME_COMPONENTS=	pango cairo librsvg gtk2
XORG_COMPONENTS=	xaw xpm xmu xt sm ice xext x11 xau xdmcp xrender
			xinerama xi xrandr xcursor xfixes

LICENSE=		CUSTOM1:primary
LICENSE_NAME=		CUSTOM1:"Eclipse Public License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/graphviz

SET_DEBUGGING_ON=	yes
LDFLAGS=		-Wl,-rpath,{{PREFIX}}/lib/graphviz
OPTIMIZER_LEVEL=	0
CMAKE_ARGS=		-Denable_ltdl:BOOL=ON
			-Dwith_expat:BOOL=ON
			-Dwith_digcola:BOOL=ON
			-Dwith_ipsepcola:BOOL=OFF
			-Dwith_ortho:BOOL=ON
			-Dwith_sfdp:BOOL=ON
			-Dwith_smyrna:BOOL=OFF
			-Dwith_gvedit:BOOL=OFF
			-Dwith_zlib:BOOL=ON
			-Duse_sanitizers:BOOL=OFF
			-Duse_coverage:BOOL=OFF
			-Dwith_cxx_api:BOOL=OFF
			-Dwith_cxx_tests:BOOL=OFF

post-install:
	# documentation
	${MKDIR} ${STAGEDIR}${STD_DOCDIR}/html ${STAGEDIR}${STD_DOCDIR}/pdf
	cd ${WRKSRC} && \
		${INSTALL_DATA} doc/Dot.ref doc/latex_suggestions.txt \
			${STAGEDIR}${STD_DOCDIR}/ && \
		${INSTALL_DATA} doc/*.pdf */*/*.pdf \
			${STAGEDIR}${STD_DOCDIR}/pdf/ && \
		${INSTALL_DATA} doc/*.html \
			${STAGEDIR}${STD_DOCDIR}/html/
	${RM} ${STAGEDIR}${STD_DOCDIR}/COPYING
	# examples
	${MKDIR} ${STAGEDIR}${STD_EXAMPLESDIR}/pathplan_data
	${INSTALL_SCRIPT} \
		${WRKSRC}/tclpkg/gdtclft/demo/entities.tcl \
		${WRKSRC}/tclpkg/tcldot/demo/doted.tcl \
		${WRKSRC}/tclpkg/tcldot/demo/gcat.tcl \
		${WRKSRC}/tclpkg/tclpathplan/demo/pathplan.tcl \
		${STAGEDIR}${STD_EXAMPLESDIR}/
	${INSTALL_DATA} \
		${WRKSRC}/tclpkg/gdtclft/demo/entities.tcl.README \
		${WRKSRC}/tclpkg/tcldot/demo/doted.tcl.README \
		${WRKSRC}/tclpkg/tcldot/demo/gcat.tcl.README \
		${WRKSRC}/tclpkg/tclpathplan/demo/pathplan.tcl.README \
		${STAGEDIR}${STD_EXAMPLESDIR}/
	${INSTALL_DATA} \
		${WRKSRC}/tclpkg/tclpathplan/demo/pathplan_data/*.dat \
		${STAGEDIR}${STD_EXAMPLESDIR}/pathplan_data/

pre-configure:
	${REINPLACE_CMD} -e 's|%%LOCALBASE%%|${LOCALBASE}|' \
		${WRKSRC}/plugin/xlib/vimdot.sh

pre-configure-freebsd:
	${REINPLACE_CMD} -e 's|SF_FLAGS|SFIO_FLAGS|g' ${WRKSRC}/lib/sfio/*.[ch]; \

[FILE:540:descriptions/desc.primary]
Graph Visualization Software from AT&T Laboratories and
Bell Laboratories (Lucent Technologies)

These programs licensed under the terms described in the web page at:
http://www.graphviz.org/License.php

The package contains:
   dotty  - customizable X windows graph viewer written in the Lefty editor
   tcldot - customizable TCL/tk graph viewer written by John Ellson
   dot    - batch program for drawing directed graphs as hierarchies
   neato  - batch program for drawing undirected graphs using Kamada-Kawai
            spring models


[FILE:100:distinfo]
18f01417760b2ce39c8fc4301077fee904151361ce932d76a36899894b9c3c48     30299605 graphviz-7.0.6.tar.gz


[FILE:3194:manifests/plist.primary]
bin/
 acyclic
 bcomps
 ccomps
 circo
 cluster
 diffimg
 dijkstra
 dot
 dot2gxl
 dot_builtins
 edgepaint
 fdp
 gc
 gml2gv
 graphml2gv
 gv2gml
 gv2gxl
 gvcolor
 gvgen
 gvmap
 gvmap.sh
 gvpack
 gvpr
 gxl2dot
 gxl2gv
 mm2gv
 neato
 nop
 osage
 patchwork
 prune
 sccmap
 sfdp
 tred
 twopi
 unflatten
 vimdot
include/graphviz/
 arith.h
 cdt.h
 cgraph.h
 color.h
 geom.h
 graphviz_version.h
 gvc.h
 gvcext.h
 gvcjob.h
 gvcommon.h
 gvconfig.h
 gvplugin.h
 gvplugin_device.h
 gvplugin_layout.h
 gvplugin_loadimage.h
 gvplugin_render.h
 gvplugin_textlayout.h
 pack.h
 pathgeom.h
 pathplan.h
 textspan.h
 types.h
 usershape.h
 xdot.h
lib/
 libcdt.so
 libcdt.so.5
 libcdt.so.5.0.0
 libcgraph.so
 libcgraph.so.6
 libcgraph.so.6.0.0
 libgvc.so
 libgvc.so.6
 libgvc.so.6.0.0
 libgvplugin_webp.so
 libgvplugin_webp.so.6
 libgvplugin_webp.so.6.0.0
 libpathplan.so
 libpathplan.so.4
 libpathplan.so.4.0.0
 libxdot.so
 libxdot.so.4
 libxdot.so.4.0.0
lib/graphviz/
 config6
 libgvplugin_core.so
 libgvplugin_core.so.6
 libgvplugin_core.so.6.0.0
 libgvplugin_dot_layout.so
 libgvplugin_dot_layout.so.6
 libgvplugin_dot_layout.so.6.0.0
 libgvplugin_gd.so
 libgvplugin_gd.so.6
 libgvplugin_gd.so.6.0.0
 libgvplugin_gdk.so
 libgvplugin_gdk.so.6
 libgvplugin_gdk.so.6.0.0
 libgvplugin_gs.so
 libgvplugin_gs.so.6
 libgvplugin_gs.so.6.0.0
 libgvplugin_gtk.so
 libgvplugin_gtk.so.6
 libgvplugin_gtk.so.6.0.0
 libgvplugin_neato_layout.so
 libgvplugin_neato_layout.so.6
 libgvplugin_neato_layout.so.6.0.0
 libgvplugin_pango.so
 libgvplugin_pango.so.6
 libgvplugin_pango.so.6.0.0
 libgvplugin_poppler.so
 libgvplugin_poppler.so.6
 libgvplugin_poppler.so.6.0.0
 libgvplugin_rsvg.so
 libgvplugin_rsvg.so.6
 libgvplugin_rsvg.so.6.0.0
 libgvplugin_visio.so
 libgvplugin_visio.so.6
 libgvplugin_visio.so.6.0.0
 libgvplugin_xlib.so
 libgvplugin_xlib.so.6
 libgvplugin_xlib.so.6.0.0
lib/pkgconfig/
 libcdt.pc
 libcgraph.pc
 libgvc.pc
 libgvpr.pc
 liblab_gamut.pc
 libpathplan.pc
 libxdot.pc
share/graphviz/graphs/directed/
 KW91.gv
 Latin1.gv
 NaN.gv
 abstract.gv
 alf.gv
 arrows.gv
 awilliams.gv
 biological.gv
 clust.gv
 clust1.gv
 clust2.gv
 clust3.gv
 clust4.gv
 clust5.gv
 crazy.gv
 ctext.gv
 dfa.gv
 fig6.gv
 fsm.gv
 grammar.gv
 hashtable.gv
 honda-tokoro.gv
 japanese.gv
 jcctree.gv
 jsort.gv
 ldbxtried.gv
 longflat.gv
 mike.gv
 nhg.gv
 oldarrows.gv
 pgram.gv
 pm2way.gv
 pmpipe.gv
 polypoly.gv
 proc3d.gv
 psfonttest.gv
 record2.gv
 records.gv
 rowe.gv
 russian.gv
 sdh.gv
 shells.gv
 states.gv
 structs.gv
 switch.gv
 table.gv
 train11.gv
 trapeziumlr.gv
 tree.gv
 triedds.gv
 try.gv
 unix.gv
 unix2.gv
 viewfile.gv
 world.gv
share/graphviz/graphs/undirected/
 ER.gv
 Heawood.gv
 Petersen.gv
 ngk10_4.gv
 process.gv
share/man/man1/
 acyclic.1.gz
 bcomps.1.gz
 ccomps.1.gz
 cluster.1.gz
 diffimg.1.gz
 dijkstra.1.gz
 dot.1.gz
 edgepaint.1.gz
 gc.1.gz
 gml2gv.1.gz
 graphml2gv.1.gz
 gvcolor.1.gz
 gvgen.1.gz
 gvmap.1.gz
 gvpack.1.gz
 gvpr.1.gz
 gxl2gv.1.gz
 mm2gv.1.gz
 nop.1.gz
 osage.1.gz
 patchwork.1.gz
 prune.1.gz
 sccmap.1.gz
 tred.1.gz
 unflatten.1.gz
 vimdot.1.gz
share/man/man3/
 cdt.3.gz
 cgraph.3.gz
 gvc.3.gz
 pack.3.gz
 pathplan.3.gz
 xdot.3.gz
@postexec %D/bin/dot -c
@postunexec rm -f %D/lib/graphviz/config6


[FILE:317:manifests/plist.examples]
share/examples/graphviz/
 doted.tcl
 doted.tcl.README
 entities.tcl
 entities.tcl.README
 gcat.tcl
 gcat.tcl.README
 pathplan.tcl
 pathplan.tcl.README
share/examples/graphviz/pathplan_data/
 boxes.dat
 dpd.dat
 funny.dat
 maze.dat
 nested.dat
 northo.dat
 obs.dat
 other.dat
 paths.dat
 rotor.dat
 u.dat
 unknown.dat


[FILE:331:manifests/plist.docs]
share/doc/graphviz/
 Dot.ref
 latex_suggestions.txt
share/doc/graphviz/html/
 FAQ.html
 build.html
 char.html
 index.html
 internal_todo.html
 todo.html
 winbuild.html
share/doc/graphviz/pdf/
 Agraph.pdf
 dotguide.pdf
 dottyguide.pdf
 graphviz_plugins.pdf
 leftyguide.pdf
 libguide.pdf
 neatoguide.pdf
 oldlibguide.pdf
 smyrna.pdf


[FILE:254:patches/patch-cmd-gvpr-gvpr.1]
--- cmd/gvpr/gvpr.1.orig	2023-01-06 05:13:49 UTC
+++ cmd/gvpr/gvpr.1
@@ -3,6 +3,15 @@
 .  ns
 .  TP \\$1
 ..
+.de EX
+.fam C
+.nf
+..
+.de EE
+.fam
+.fi
+..
+
 .TH GVPR 1 "29 August 2013"
 .SH NAME
 gvpr \- graph pattern scanning and processing language


[FILE:222:patches/patch-cmd-tools-gvpack.1]
--- cmd/tools/gvpack.1.orig	2023-01-06 05:13:49 UTC
+++ cmd/tools/gvpack.1
@@ -1,3 +1,12 @@
+.de EX
+.fam C
+.nf
+..
+.de EE
+.fam
+.fi
+..
+
 .TH GVPACK 1 "27 May 2010"
 .SH NAME
 gvpack \- merge and pack disjoint graphs


[FILE:643:patches/patch-config-config_ruby.rb]
--- config/config_ruby.rb.orig	2023-01-06 05:13:49 UTC
+++ config/config_ruby.rb
@@ -5,11 +5,14 @@ CONFIG = RbConfig::MAKEFILE_CONFIG
 
 case ARGV[0]
 when "archdir"
-    puts RbConfig::expand(CONFIG["archdir"])
+    puts RbConfig::expand(CONFIG["rubyhdrdir"])
+when "inc"
+    print RbConfig::expand(CONFIG["rubyhdrdir"]) + '/'
+    puts RbConfig::expand(CONFIG["sitearch"])
 when "lib"
     puts RbConfig::expand(CONFIG["libdir"])
 when "vendorarchdir"
-    puts RbConfig::expand(CONFIG["vendorarchdir"])
+    puts RbConfig::expand(CONFIG["sitearchdir"])
 when "sitearchdir"
     puts RbConfig::expand(CONFIG["sitearchdir"])
 when "sitelib"


[FILE:3747:patches/patch-configure.ac]
--- configure.ac.orig	2023-01-06 05:13:49 UTC
+++ configure.ac
@@ -642,7 +642,7 @@ else
       if test "x$GUILE_CONFIG" = "x"; then
         use_guile="No (guile not available)"
       else
-        [GUILE_VERSION=`$GUILE_CONFIG --version 2>&1 | sed -n '1 s/^.* \+\([0-9\.]\+\)$/\1/ p'`]
+        [GUILE_VERSION=`$GUILE_CONFIG --version 2>&1 | sed -n '1 s/^.* \([0-9\.]\+\)$/\1/ p'`]
         GUILE_VERSION_MAJOR=`echo $GUILE_VERSION | cut -d '.' -f 1`
         GUILE_VERSION_MINOR=`echo $GUILE_VERSION | cut -d '.' -f 2`
         AC_CHECK_PROGS(GUILE,guile$GUILE_VERSION_MAJOR.$GUILE_VERSION_MINOR guile$GUILE_VERSION_MAJOR guile)
@@ -853,16 +853,16 @@ else
             if test "x$PKG_CONFIG" != "x"; then
 	        AC_MSG_CHECKING(for Lua headers and libraries with pkg-config)
 	        echo
-	        for l in "$lua_suffix" "" "53" "5.3" "52" "5.2" "51" "5.1" "50" "5.0" ; do
+	        for l in "$lua_suffix" "" "53" "-5.3" "52" "-5.2" "51" "-5.1" "50" "5.0" ; do
 	            pkgconfig_lua_found=`$PKG_CONFIG --exists lua$l 2>/dev/null`
 	            if test "x$?" = "x0" ; then
-                        LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags lua$l`
+                        LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags-only-I lua$l`
                         LUA_LIBS="$LUA_LFLAGS "`$PKG_CONFIG --libs lua$l`
 		        LUA_INSTALL_DIR="/usr/lib$LIBPOSTFIX/lua/`$PKG_CONFIG --variable=V lua`"
 
 		        pkgconfig_lualib_found=`$PKG_CONFIG --exists lualib$l 2>/dev/null`
 		        if test  "x$?" = "x0"; then
-		           LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags lualib$l`
+		           LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags-only-I lualib$l`
 		           LUA_LIBS="$LUA_LFLAGS "`$PKG_CONFIG --libs lualib$l`
 		        fi
                         break
@@ -1226,6 +1226,7 @@ else
 	    use_ruby="No (ruby not available)"
           else
             RUBY_CFLAGS="-I`$RUBY $srcdir/config/config_ruby.rb archdir`"
+            RUBY_CFLAGS="${RUBY_CFLAGS} -I`$RUBY $srcdir/config/config_ruby.rb inc`"
 	    # hack for powerpc-darwin8 (10.4)
 	    if test "x$DARWIN" = "xyes"; then
 	      RUBY_CFLAGS=`echo $RUBY_CFLAGS | sed 's/powerpc/universal/'`
@@ -2052,44 +2053,6 @@ else
 fi
 AM_CONDITIONAL(WITH_QUARTZ, [test "x$use_quartz" = "xYes"])
 
-dnl -----------------------------------
-dnl INCLUDES and LIBS for PLATFORMSDK
-
-AC_ARG_WITH(platformsdkincludedir,
-  [AS_HELP_STRING([--with-platformsdkincludedir=DIR],[use Platform SDK (Windows) includes from DIR])],
-  [PLATFORMSDKINCLUDE=$withval])
-
-AC_ARG_WITH(platformsdklibdir,
-  [AS_HELP_STRING([--with-platformsdklibdir=DIR],[use Platform SDK (Windows) libraries from DIR])],
-  [PLATFORMSDKLIB=$withval])
-
-AC_SUBST([PLATFORMSDKINCLUDE])
-AC_SUBST([PLATFORMSDKLIB])
-
-dnl -----------------------------------
-dnl INCLUDES and LIBS for GDI+
-
-AC_ARG_WITH(gdiplus,
-  [AS_HELP_STRING([--with-gdiplus=no],[GDI+ framework (Windows)])],
-  [], [with_gdiplus=no])
-
-if test "x$with_gdiplus" != "xyes"; then
-  use_gdiplus="No (disabled by default - Windows only)"
-else
-  if test -f "$PLATFORMSDKINCLUDE\GdiPlus.h" -a -f "$PLATFORMSDKLIB\GdiPlus.lib"; then
-    use_gdiplus="Yes"
-    AC_DEFINE_UNQUOTED(HAVE_GDIPLUS,1,[Define if you have the GDI+ framework for Windows])
-    GDIPLUS_HEADS=`cd "$PLATFORMSDKINCLUDE" && echo GdiPlus*.h`
-    GDIPLUS_CFLAGS=''
-    GDIPLUS_LIBS=''
-    AC_SUBST([GDIPLUS_HEADS])
-    AC_SUBST([GDIPLUS_CFLAGS])
-    AC_SUBST([GDIPLUS_LIBS])
-  else
-    use_gdiplus="No (missing headers)"
-    AC_MSG_WARN(--with-gdiplus requires valid --with-platformsdkincludedir and --with-platformsdklibdir.)
-  fi
-fi
 AM_CONDITIONAL(WITH_GDIPLUS, [test "x$use_gdiplus" = "xYes"])
 
 dnl -----------------------------------


[FILE:297:patches/patch-lib-expr-exgram.h]
--- lib/expr/exgram.h.orig	2023-01-06 05:13:49 UTC
+++ lib/expr/exgram.h
@@ -20,7 +20,7 @@ extern "C" {
  * sometimes free stuff can cost a lot
  */
 
-#if !defined(_EXGRAM_H) && ( defined(MINTOKEN) || defined(YYTOKENTYPE) )
+#if !defined(_EXGRAM_H)
 #define _EXGRAM_H
 
 #if !defined(_EXPARSE_H)


[FILE:199:patches/patch-lib-expr-expr.h]
--- lib/expr/expr.h.orig	2023-01-06 05:13:49 UTC
+++ lib/expr/expr.h
@@ -24,6 +24,7 @@ extern "C" {
 
 #include <ast/ast.h>
 #include <inttypes.h>
+#include <limits.h>
 
 #include <expr/exparse.h>
 


[FILE:420:patches/patch-lib-ortho-trapezoid.c]
--- lib/ortho/trapezoid.c.orig	2023-01-06 05:13:49 UTC
+++ lib/ortho/trapezoid.c
@@ -28,6 +28,11 @@
 #include <common/types.h>
 #include <ortho/trap.h>
 
+#include <sys/param.h>
+#if __FreeBSD_version <= 704101 || (__FreeBSD_version >= 800000 && __FreeBSD_version < 802502) || (__FreeBSD_version >= 900000 && __FreeBSD_version < 900027)
+#define log2(x)  (log(x)/log(2))
+#endif
+
 /* Node types */
 
 #define T_X     1


[FILE:703:patches/patch-plugin_xlib_vimdot.sh]
--- plugin/xlib/vimdot.sh.orig	2023-01-06 05:13:49 UTC
+++ plugin/xlib/vimdot.sh
@@ -9,8 +9,8 @@ fi
 error() { echo "$0: $*" >&2; exit 1; }
 
 # Try $EDITOR first, else try vim or vi
-editor="$(which $EDITOR)" || editor="/usr/bin/vim"
-[ -x "$editor" ] || editor="/usr/bin/vi"
+editor="$(which $EDITOR)" || editor="%%LOCALBASE%%/bin/vim"
+[ -x "$editor" ] || editor="%%LOCALBASE%%/bin/vi"
 [ -x "$editor" ] || error "EDITOR not found or not executable";
 
 default="noname.gv"
@@ -29,7 +29,7 @@ digraph G {
 
 	vim [href="http://www.vim.org/"]
 	dot [href="http://www.graphviz.org/"]
-	vimdot [href="file:///usr/bin/vimdot"]
+	vimdot [href="file:///%%LOCALBASE%%/bin/vimdot"]
 
 	{vim dot} -> vimdot
 }

