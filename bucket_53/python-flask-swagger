# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-flask-swagger
VERSION=		0.2.14
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Extract swagger specs from flask project (3.12)
SDESC[v13]=		Extract swagger specs from flask project (3.13)
HOMEPAGE=		https://github.com/gangverk/flask-swagger
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/f/flask-swagger
DISTFILE[1]=		flask-swagger-0.2.14.tar.gz:main
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		flask-swagger-0.2.14

GENERATED=		yes

[PY312].BUILDRUN_DEPENDS_ON=		python-Flask:single:v12
					python-PyYAML:single:v12
[PY312].USES_ON=			python:v12,sutools

[PY313].BUILDRUN_DEPENDS_ON=		python-Flask:single:v13
					python-PyYAML:single:v13
[PY313].USES_ON=			python:v13,sutools

[FILE:2765:descriptions/desc.single]
flask-swagger
=============

A Swagger 2.0 spec extractor for Flask

Install:

::

    pip install flask-swagger

Flask-swagger provides a method (swagger) that inspects the Flask app
for endpoints that contain YAML docstrings with Swagger 2.0
[Operation]
objects.

::

    class UserAPI(MethodView):

        def post(self):
            """
            Create a new user
            ---
            tags:
              - users
            definitions:
              - schema:
                  id: Group
                  properties:
                    name:
                     type: string
                     description: the group's name
            parameters:
              - in: body
                name: body
                schema:
                  id: User
                  required:
                    - email
                    - name
                  properties:
                    email:
                      type: string
                      description: email for user
                    name:
                      type: string
                      description: name for user
                    address:
                      description: address for user
                      schema:
                        id: Address
                        properties:
                          street:
                            type: string
                          state:
                            type: string
                          country:
                            type: string
                          postalcode:
                            type: string
                    groups:
                      type: array
                      description: list of groups
                      items:
                        $ref: "#/definitions/Group"
            responses:
              201:
                description: User created
            """
            return {}

Flask-swagger supports docstrings in methods of MethodView classes and
regular Flask view functions.

Following YAML conventions, flask-swagger searches for ``---``,
everything preceding is provided as summary (first line) and
description (following lines) for the endpoint while everything
after is parsed as a swagger
[Operation]
object.

In order to support inline definition of
[Schema]
objects in
[Parameter]
and
[Response]
objects, flask-swagger veers a little off from the standard. We require
an id field for the inline Schema which is then used to correctly
place the
[Schema]
object in the
[Definitions]
object.

[Schema]
objects can be defined in a definitions section within the docstrings (see
group object above) or within responses or parameters (see user object
above). We alo support schema objects nested within the properties of other


[FILE:106:distinfo]
b4085f5bc36df4c20b6548cd1413adc9cf35719b0f0695367cd542065145294d         8645 flask-swagger-0.2.14.tar.gz

