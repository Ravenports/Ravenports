# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-black
VERSION=		21.5b0
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Uncompromising code formatter (PY38)
SDESC[py39]=		Uncompromising code formatter (PY39)
HOMEPAGE=		https://github.com/psf/black
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/84/ec/9a34c4d4011bbad56b58c3ae574ef670b7d46d7c323d9aa407849fce53a7
DISTFILE[1]=		black-21.5b0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		black-21.5b0.dist-info

GENERATED=		yes

[PY38].RUN_DEPENDS_ON=			python-click:single:py38
					python-appdirs:single:py38
					python-toml:single:py38
					python-regex:single:py38
					python-pathspec:single:py38
					python-mypy-extensions:single:py38
[PY38].USES_ON=				python:py38,wheel

[PY39].RUN_DEPENDS_ON=			python-click:single:py39
					python-appdirs:single:py39
					python-toml:single:py39
					python-regex:single:py39
					python-pathspec:single:py39
					python-mypy-extensions:single:py39
[PY39].USES_ON=				python:py39,wheel

[FILE:2179:descriptions/desc.single]
![Black Logo]

<h2 align="center">The Uncompromising Code Formatter</h2>

<p align="center">
[image]
[image]
[image]
[image]
[image]
[image]
[image]
[image]
[image]
</p>

> “Any color you like.”

_Black_ is the uncompromising Python code formatter. By using it, you agree
to cede
control over minutiae of hand-formatting. In return, _Black_ gives you
speed,
determinism, and freedom from `pycodestyle` nagging about formatting. You
will save time
and mental energy for more important matters.

Blackened code looks the same regardless of the project you're reading.
Formatting
becomes transparent after a while and you can focus on the content instead.

_Black_ makes code review faster by producing the smallest diffs possible.

Try it out now using the [Black Playground]. Watch the
[PyCon 2019 talk] to learn more.

---

_Contents:_ **[Installation and usage]** |
**[Code style]** | **[Pragmatism]** |
**[pyproject.toml]** | **[Editor integration]** |
**[blackd]** | **[black-primer]** |
**[Version control integration]** |
**[GitHub Actions]** |
**[Ignoring unmodified files]** | **[Used by]** |
**[Testimonials]** | **[Show your style]** |
**[Contributing]** | **[Change log]** |
**[Authors]**

---

## Installation and usage

### Installation

_Black_ can be installed by running `pip install black`. It requires Python
3.6.2+ to
run. If you want to format Python 2 code as well, install with
`pip install black[python2]`.

#### Install from GitHub

If you can't wait for the latest _hotness_ and want to install from GitHub,
use:

`pip install git+git://github.com/psf/black`

### Usage

To get started right away with sensible defaults:

```sh
black {source_file_or_directory}
```

You can run _Black_ as a package if running it as a script doesn't work:

```sh
python -m black {source_file_or_directory}
```

### Command line options

_Black_ doesn't provide many options. You can list them by running `black
--help`:

```text
Usage: black [OPTIONS] [SRC]```

Looks like this:
[![Code style: black]](https://github.com/psf/black)

## License

MIT

## Contributing to _Black_

In terms of inspiration, _Black_ is about as configurable as _gofmt_. This
is
deliberate.


[FILE:108:distinfo]
0e80435b8a88f383c9149ae89d671eb2095b72344b0fe8a1d61d2ff5110ed173       131234 black-21.5b0-py3-none-any.whl

