# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-black
VERSION=		23.9.0
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Uncompromising code formatter (3.10)
SDESC[v11]=		Uncompromising code formatter (3.11)
HOMEPAGE=		https://github.com/psf/black
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/2a/c2/e2cd7f95aa0f1a4d77ed0153efb213b99bfa5f086226a8f1fcc67483f62a
DISTFILE[1]=		black-23.9.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		black-23.9.0.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-click:single:py310
					python-mypy-extensions:single:py310
					python-packaging:single:py310
					python-pathspec:single:py310
					python-platformdirs:single:py310
					python-tomli:single:py310
					python-typing-extensions:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-click:single:v11
					python-mypy-extensions:single:v11
					python-packaging:single:v11
					python-pathspec:single:v11
					python-platformdirs:single:v11
[PY311].USES_ON=			python:v11,wheel

[FILE:2519:descriptions/desc.single]
[Black Logo]

<h2 align="center">The Uncompromising Code Formatter</h2>

<p align="center">
[image]
[image]
[image]
[image]
[image]
[image]
[image]
[image]
</p>

> “Any color you like.”

_Black_ is the uncompromising Python code formatter. By using it, you agree
to cede
control over minutiae of hand-formatting. In return, _Black_ gives you
speed,
determinism, and freedom from `pycodestyle` nagging about formatting. You
will save time
and mental energy for more important matters.

Blackened code looks the same regardless of the project you're reading.
Formatting
becomes transparent after a while and you can focus on the content instead.

_Black_ makes code review faster by producing the smallest diffs possible.

Try it out now using the [Black Playground]. Watch the
[PyCon 2019 talk] to learn more.

---

**[Read the documentation on ReadTheDocs!]**

---

## Installation and usage

### Installation

_Black_ can be installed by running `pip install black`. It requires Python
3.7+ to run.
If you want to format Jupyter Notebooks, install with `pip install
"black[jupyter]"`.

If you can't wait for the latest _hotness_ and want to install from GitHub,
use:

`pip install git+https://github.com/psf/black`

### Usage

To get started right away with sensible defaults:

```sh
black {source_file_or_directory}
```

You can run _Black_ as a package if running it as a script doesn't work:

```sh
python -m black {source_file_or_directory}
```

Further information can be found in our docs:

- [Usage and Configuration]

_Black_ is already [successfully used] by many
projects, small and big. _Black_ has a comprehensive test suite, with
efficient parallel
tests, and our own auto formatting and parallel Continuous Integration
runner. Now that
we have become stable, you should not expect large formatting changes in
the future.
Stylistic changes will mostly be responses to bug reports and support for
new Python
syntax. For more information please refer to the
[The Black Code Style].

Also, as a safety measure which slows down processing, _Black_ will check
that the
reformatted code still produces a valid AST that is effectively equivalent
to the
original (see the
[Pragmatism]
section for details). If you're feeling confident, use `--fast`.

## The _Black_ code style

_Black_ is a PEP 8 compliant opinionated formatter. _Black_ reformats
entire files in
place. Style configuration options are deliberately limited and rarely
added. It doesn't
take previous formatting into account (see
[Pragmatism]


[FILE:108:distinfo]
9366c1f898981f09eb8da076716c02fd021f5a0e63581c66501d68a2e4eab844       182236 black-23.9.0-py3-none-any.whl

