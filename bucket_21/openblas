# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		openblas
VERSION=		0.3.25
KEYWORDS=		math
VARIANTS=		standard
SDESC[standard]=	Optimized BLAS library based on GotoBLAS2
HOMEPAGE=		http://www.openblas.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main netlib
SITES[main]=		GITHUB/OpenMathLib:OpenBLAS:v0.3.25
SITES[netlib]=		https://www.netlib.org/lapack/timing/
DISTFILE[1]=		generated:main
DISTFILE[2]=		timing.tgz:netlib
DISTFILE[3]=		large.tgz:netlib
DIST_SUBDIR=		openblas
DF_INDEX=		1 2 3
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	OPENMP DYNAMIC_ARCH BIT64
OPTIONS_STANDARD=	OPENMP DYNAMIC_ARCH BIT64
OPT_ON[x86_64]=		OPENMP DYNAMIC_ARCH BIT64

USES=			cpe gmake pkgconfig perl:build fortran:primary

EXTRACT_ONLY=		1

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

CPE_VENDOR=		openblas_project
FPC_EQUIVALENT=		math/openblas

INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		0.3.25

[BIT64].DESCRIPTION=			Build for 64-bit architecture rather than 32-bit

[OPENMP].DESCRIPTION=			Use OpenMP for threading

[DYNAMIC_ARCH].DESCRIPTION=		Support multiple CPU types rather than host CPU

pre-configure-OPENMP-ON:
	${ECHO_CMD} USE_OPENMP=1 >> ${WRKSRC}/Makefile.rule

pre-configure-BIT64-ON:
	${ECHO_CMD} BINARY=64 >> ${WRKSRC}/Makefile.rule

pre-configure-DYNAMIC_ARCH-ON:
	${ECHO_CMD} DYNAMIC_ARCH=1 >> ${WRKSRC}/Makefile.rule
	${ECHO_CMD} DYNAMIC_OLDER=1 >> ${WRKSRC}/Makefile.rule

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libopenblasp*.so

pre-configure:
	${ECHO_CMD} MAKE_NB_JOBS=-1 >> ${WRKSRC}/Makefile.rule
	${ECHO_CMD} NUM_THREADS=64 >> ${WRKSRC}/Makefile.rule
	${ECHO_CMD} USE_THREAD=1 >> ${WRKSRC}/Makefile.rule

post-extract:
	${CP} ${DISTDIR}/${DIST_SUBDIR}/timing.tgz ${WRKSRC}/
	${CP} ${DISTDIR}/${DIST_SUBDIR}/large.tgz ${WRKSRC}/

pre-configure-BIT64-OFF:
	${ECHO_CMD} BINARY=32 >> ${WRKSRC}/Makefile.rule

[FILE:357:descriptions/desc.primary]
OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.
OpenBLAS is an open source project supported by
Lab of Parallel Software and Computational Science, ISCAS.

NOTE: If you want to specify your CPU microarchitecture manually,
please use TARGET_CPU_ARCH knob, e.g., "make TARGET_CPU_ARCH=NEHALEM".
This value is set TARGET build flag.


[FILE:317:distinfo]
4c25cb30c4bb23eddca05d7d0a85997b8db6144f5464ba7f8c09ce91e2f35543     24073168 openblas/OpenMathLib-OpenBLAS-0.3.25.tar.gz
999c65f8ea8bd4eac7f1c7f3463d4946917afd20a997807300fe35d70122f3af      1059485 openblas/timing.tgz
f328d88b7fa97722f271d7d0cfea1c220e0f8e5ed5ff01d8ef1eb51d6f4243a1         2595 openblas/large.tgz


[FILE:55:manifests/plist.primary]
lib/
 libopenblas.so.0
 libopenblasp-r%%SOVERSION%%.so


[FILE:288:manifests/plist.dev]
include/
 cblas.h
 f77blas.h
 lapack.h
 lapacke.h
 lapacke_config.h
 lapacke_mangling.h
 lapacke_utils.h
 openblas_config.h
lib/
 libopenblas.a
 libopenblas.so
 libopenblasp-r%%SOVERSION%%.a
lib/cmake/openblas/
 OpenBLASConfig.cmake
 OpenBLASConfigVersion.cmake
lib/pkgconfig/openblas.pc


[FILE:612:patches/patch-Makefile]
--- Makefile.orig	2023-09-03 20:58:32 UTC
+++ Makefile
@@ -128,12 +128,12 @@ endif
 
 shared : libs netlib $(RELA)
 ifneq ($(NO_SHARED), 1)
-ifeq ($(OSNAME), $(filter $(OSNAME),Linux SunOS Android Haiku FreeBSD DragonFly))
+ifeq ($(OSNAME), $(filter $(OSNAME),Linux SunOS Android Haiku FreeBSD NetBSD DragonFly))
 	@$(MAKE) -C exports so
 	@ln -fs $(LIBSONAME) $(LIBPREFIX).so
 	@ln -fs $(LIBSONAME) $(LIBPREFIX).so.$(MAJOR_VERSION)
 endif
-ifeq ($(OSNAME), $(filter $(OSNAME),OpenBSD NetBSD))
+ifeq ($(OSNAME), $(filter $(OSNAME),OpenBSD))
 	@$(MAKE) -C exports so
 	@ln -fs $(LIBSONAME) $(LIBPREFIX).so
 endif


[FILE:853:patches/patch-Makefile.install]
--- Makefile.install.orig	2023-09-03 20:58:32 UTC
+++ Makefile.install
@@ -96,14 +96,14 @@ endif
 #for install shared library
 ifneq ($(NO_SHARED),1)
 	@echo Copying the shared library to $(DESTDIR)$(OPENBLAS_LIBRARY_DIR)
-ifeq ($(OSNAME), $(filter $(OSNAME),Linux SunOS Android Haiku FreeBSD DragonFly))
+ifeq ($(OSNAME), $(filter $(OSNAME),Linux SunOS Android Haiku FreeBSD NetBSD DragonFly))
 	@install -m755 $(LIBSONAME) "$(DESTDIR)$(OPENBLAS_LIBRARY_DIR)"
 	@cd "$(DESTDIR)$(OPENBLAS_LIBRARY_DIR)" ; \
 	ln -fs $(LIBSONAME) $(LIBPREFIX).so ; \
 	ln -fs $(LIBSONAME) $(LIBPREFIX).so.$(MAJOR_VERSION)
 endif
 
-ifeq ($(OSNAME), $(filter $(OSNAME),OpenBSD NetBSD))
+ifeq ($(OSNAME), $(filter $(OSNAME),OpenBSD))
 	@cp $(LIBSONAME) "$(DESTDIR)$(OPENBLAS_LIBRARY_DIR)"
 	@cd "$(DESTDIR)$(OPENBLAS_LIBRARY_DIR)" ; \
 	ln -fs $(LIBSONAME) $(LIBPREFIX).so


[FILE:597:patches/patch-exports_Makefile]
--- exports/Makefile.orig	2023-09-03 20:58:32 UTC
+++ exports/Makefile
@@ -160,7 +160,7 @@ endif
 dllinit.$(SUFFIX) : dllinit.c
 	$(CC) $(CFLAGS) -c -o $(@F) -s $<
 
-ifeq ($(OSNAME), $(filter $(OSNAME),Linux SunOS Android Haiku FreeBSD DragonFly))
+ifeq ($(OSNAME), $(filter $(OSNAME),Linux SunOS Android Haiku NetBSD FreeBSD DragonFly))
 
 so : ../$(LIBSONAME)
 
@@ -209,7 +209,7 @@ endif
 endif
 
 #http://stackoverflow.com/questions/7656425/makefile-ifeq-logical-or
-ifeq ($(OSNAME), $(filter $(OSNAME),OpenBSD NetBSD))
+ifeq ($(OSNAME), $(filter $(OSNAME),OpenBSD))
 
 so : ../$(LIBSONAME)
 

