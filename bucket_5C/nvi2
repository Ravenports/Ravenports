# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		nvi2
VERSION=		2.2.0
KEYWORDS=		editors
VARIANTS=		standard
SDESC[standard]=	Updated implementation of the ex/vi text editor
HOMEPAGE=		https://github.com/lichray/nvi2/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/lichray:nvi2:v2.2.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BROKEN[all]=		db4 1.85 compat mode doesn't support bfname

BUILD_DEPENDS=		db4:dev:standard

USES=			cmake ncurses iconv

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		editors/nvi2

CFLAGS=			-I{{LOCALBASE}}/db4/include
			-I{{NCURSESINC}}
CMAKE_ARGS=		-DENABLE_WIDECHAR:BOOL=ON
			-DENABLE_ICONV:BOOL=ON

pre-configure-dragonfly:
	${REINPLACE_CMD} -e 's|TAILQ_FOREACH_SAFE|TAILQ_FOREACH_MUTABLE|'\
		${WRKSRC}/common/exf.c \
		${WRKSRC}/ex/ex_global.c
	${REINPLACE_CMD} -e 's|SLIST_FOREACH_SAFE|SLIST_FOREACH_MUTABLE|'\
		${WRKSRC}/cl/cl_term.c \
		${WRKSRC}/ex/ex_cscope.c

do-install:
	${INSTALL_PROGRAM} ${BUILD_WRKSRC}/nvi ${STAGEDIR}${PREFIX}/bin
	${LN} ${STAGEDIR}${PREFIX}/bin/nvi ${STAGEDIR}${PREFIX}/bin/nex
	${LN} ${STAGEDIR}${PREFIX}/bin/nvi ${STAGEDIR}${PREFIX}/bin/nview
	${INSTALL_MAN} ${WRKSRC}/man/vi.1 ${STAGEDIR}${MAN1PREFIX}/man/man1/nvi.1
	${LN} -sf nvi.1 ${STAGEDIR}${MAN1PREFIX}/man/man1/nex.1
	${LN} -sf nvi.1 ${STAGEDIR}${MAN1PREFIX}/man/man1/nview.1

[FILE:482:descriptions/desc.primary]
nvi is an implementation of the ex/vi text editor.

The original vi was written by William Joy. Later Mark Horton added
a number of enhancements.

nvi was written by Keith Bostic and was distributed as part of the
Fourth Berkeley Software Distribution (4BSD) by the University of
California, Berkeley.

This version is based on a fork of nvi by Sven Verdoolaege. It is
very similar to the base vi but includes the expandtab option from
NetBSD which is handy for Python development.


[FILE:104:distinfo]
cd668287f55af1e2ccd64e6c0edb504aec41d25a9efe2e505abaa90c3c551455       439545 lichray-nvi2-2.2.0.tar.gz


[FILE:22:manifests/plist.primary]
bin/
 nex
 nvi
 nview


[FILE:48:manifests/plist.man]
share/man/man1/
 nex.1.gz
 nvi.1.gz
 nview.1.gz


[FILE:1122:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2020-08-01 22:27:51 UTC
+++ CMakeLists.txt
@@ -20,7 +20,6 @@ mark_as_advanced(CMAKE_INSTALL_PREFIX)
 option(USE_WIDECHAR "Enable wide character support" ON)
 option(USE_ICONV "Enable iconv support" ON)
 
-add_compile_options(-fcolor-diagnostics)
 add_compile_options($<$<CONFIG:Debug>:-Wall>)
 add_compile_options($<$<CONFIG:Debug>:-Wno-parentheses>)
 add_compile_options($<$<CONFIG:Debug>:-Wno-uninitialized>)
@@ -126,7 +125,8 @@ if(NOT RESOLV_IN_LIBC)
 endif()
 
 if(USE_WIDECHAR)
-    find_library(CURSES_LIBRARY NAMES ncursesw cursesw curses HINTS /usr/lib)
+    find_library(CURSES_LIBRARY NAMES ncurses)
+    find_library(TINFO_LIBRARY NAMES tinfo)
 
     # link to the wchar_t awared BSD libregex.a
     add_library(regex STATIC)
@@ -139,7 +139,8 @@ else()
     target_compile_options(nvi PRIVATE -Wno-pointer-sign)
 endif()
 
-target_link_libraries(nvi PRIVATE ${CURSES_LIBRARY})
+find_library(DB4_LIBRARY NAMES db HINTS /raven/db4/lib)
+target_link_libraries(nvi PRIVATE ${CURSES_LIBRARY} ${TINFO_LIBRARY} ${DB4_LIBRARY})
 
 if(USE_ICONV)
     check_function_exists(__iconv ICONV_IN_LIBC)


[FILE:315:patches/patch-common_common.h]
--- common/common.h.orig	2020-08-01 22:27:51 UTC
+++ common/common.h
@@ -7,7 +7,7 @@
  * See the LICENSE file for redistribution information.
  */
 
-#include "/usr/include/db.h"	/* Only include db1. */
+#include <db_185.h> 		/* Only include db1. */
 #include <regex.h>		/* May refer to the bundled regex. */
 
 /*


[FILE:333:patches/patch-ex_ex__subst.c]
--- ex/ex_subst.c.orig	2020-08-01 22:27:51 UTC
+++ ex/ex_subst.c
@@ -1194,7 +1194,8 @@ re_tag_conv(SCR *sp, CHAR_T **ptrnp, siz
 	for (; len > 0; --len) {
 		if (p[0] == '\\' && (p[1] == '/' || p[1] == '?')) {
 			++p;
-			--len;
+			if (len > 1)
+				--len;
 		} else if (STRCHR(L("^.[]$*"), p[0]))
 			*t++ = '\\';
 		*t++ = *p++;

