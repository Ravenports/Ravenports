# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-driver-input-joystick
VERSION=		1.6.4
KEYWORDS=		x11_drivers
VARIANTS=		standard
SDESC[standard]=	X.org input driver for joysticks
HOMEPAGE=		https://www.x.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		XORG/individual/driver
DISTFILE[1]=		xf86-input-joystick-1.6.4.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		xorg-server:dev:standard
BUILDRUN_DEPENDS=	xorg-server:primary:standard

USES=			libtool
XORG_COMPONENTS=	xorgproto

DISTNAME=		xf86-input-joystick-1.6.4

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11-drivers/xf86-input-joystick

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip

[FILE:60:descriptions/desc.single]
This package contains the X.Org xf86-input-joystick driver.


[FILE:111:distinfo]
905ec485fabc699b1cb21518cbd152246776fa83570e09c5822ca0973733ccd2       296132 xf86-input-joystick-1.6.4.tar.xz


[FILE:134:manifests/plist.single]
include/xorg/joystick-properties.h
lib/pkgconfig/xorg-joystick.pc
lib/xorg/modules/input/joystick_drv.so
share/man/man4/joystick.4.gz


[FILE:506:patches/patch-src_backend__bsd.c]
--- src/backend_bsd.c.orig	2022-12-09 00:09:50 UTC
+++ src/backend_bsd.c
@@ -42,6 +42,11 @@
 #include <xf86_OSproc.h>
 
 #include <usbhid.h>
+#ifdef __DragonFly__
+#include <bus/u4b/usb.h>
+#include <bus/u4b/usbhid.h>
+#include <bus/u4b/usb_ioctl.h>
+#else
 #include <dev/usb/usb.h>
 #include <dev/usb/usbhid.h>
 #ifdef HAVE_DEV_HID_HID_H
@@ -50,6 +55,7 @@
 #ifdef HAVE_DEV_USB_USB_IOCTL_H
     #include <dev/usb/usb_ioctl.h>
 #endif
+#endif /* !dragonfly */
 
 #include "jstk.h"
 #include "backend_bsd.h"


[FILE:1271:dragonfly/patch-configure]
--- configure.orig	2022-12-09 00:09:56 UTC
+++ configure
@@ -19467,18 +19467,18 @@ printf "%s\n" "#define LINUX_BACKEND 1"
 fi
 
 bsd_backend=yes
-ac_fn_c_check_header_compile "$LINENO" "dev/usb/usb.h" "ac_cv_header_dev_usb_usb_h" "$ac_includes_default"
+ac_fn_c_check_header_compile "$LINENO" "bus/u4b/usb.h" "ac_cv_header_dev_usb_usb_h" "$ac_includes_default"
 if test "x$ac_cv_header_dev_usb_usb_h" = xyes
 then :
   printf "%s\n" "#define HAVE_DEV_USB_USB_H 1" >>confdefs.h
 
 fi
 
-       for ac_header in usbhid.h dev/usb/usbhid.h
+       for ac_header in usbhid.h bus/u4b/usbhid.h
 do :
   as_ac_Header=`printf "%s\n" "ac_cv_header_$ac_header" | $as_tr_sh`
 ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "#if HAVE_DEV_USB_USB_H
-#include <dev/usb/usb.h>
+#include <bus/u4b/usb.h>
 #endif
 
 "
@@ -19554,7 +19554,7 @@ else
 fi
 
 if test "x$bsd_backend" = xyes; then
-    ac_fn_c_check_header_compile "$LINENO" "dev/usb/usb_ioctl.h" "ac_cv_header_dev_usb_usb_ioctl_h" "$ac_includes_default"
+    ac_fn_c_check_header_compile "$LINENO" "bus/u4b/usb_ioctl.h" "ac_cv_header_dev_usb_usb_ioctl_h" "$ac_includes_default"
 if test "x$ac_cv_header_dev_usb_usb_ioctl_h" = xyes
 then :
   printf "%s\n" "#define HAVE_DEV_USB_USB_IOCTL_H 1" >>confdefs.h

