# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-driver-input-joystick
VERSION=		1.6.3
KEYWORDS=		x11_drivers
VARIANTS=		standard
SDESC[standard]=	X.org input driver for joysticks
HOMEPAGE=		https://www.x.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		XORG/individual/driver
DISTFILE[1]=		xf86-input-joystick-1.6.3.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	xorg-server:single:standard

USES=			libtool
XORG_COMPONENTS=	inputproto randrproto renderproto scrnsaverproto
			resourceproto xf86driproto glproto dri2proto
			dri3proto presentproto xineramaproto

DISTNAME=		xf86-input-joystick-1.6.3

LICENSE=		MIT:single
LICENSE_SCHEME=		solo
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING

FPC_EQUIVALENT=		x11-drivers/xf86-input-joystick

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip

[FILE:60:descriptions/desc.single]
This package contains the X.Org xf86-input-joystick driver.


[FILE:112:distinfo]
9e7669ecf0f23b8e5dc39d5397cf28296f692aa4c0e4255f5e02816612c18eab       351846 xf86-input-joystick-1.6.3.tar.bz2


[FILE:134:manifests/plist.single]
include/xorg/joystick-properties.h
lib/pkgconfig/xorg-joystick.pc
lib/xorg/modules/input/joystick_drv.so
share/man/man4/joystick.4.gz


[FILE:454:patches/patch-src_backend__bsd.c]
--- src/backend_bsd.c.orig	2014-03-20 02:14:06 UTC
+++ src/backend_bsd.c
@@ -42,10 +42,16 @@
 #include <xf86_OSproc.h>
 
 #include <usbhid.h>
+#ifdef __DragonFly__
+#include <bus/u4b/usb.h>
+#include <bus/u4b/usbhid.h>
+#include <bus/u4b/usb_ioctl.h>
+#else
 #include <dev/usb/usb.h>
 #include <dev/usb/usbhid.h>
-#ifdef HAVE_DEV_USB_USB_IOCTL_H
+# ifdef HAVE_DEV_USB_USB_IOCTL_H
     #include <dev/usb/usb_ioctl.h>
+# endif
 #endif
 
 #include "jstk.h"


[FILE:1438:dragonfly/patch-configure]
--- configure.orig	2016-11-17 22:58:48 UTC
+++ configure
@@ -18649,9 +18649,9 @@ $as_echo "#define LINUX_BACKEND 1" >>con
 fi
 
 bsd_backend=yes
-for ac_header in dev/usb/usb.h
+for ac_header in bus/u4b/usb.h
 do :
-  ac_fn_c_check_header_mongrel "$LINENO" "dev/usb/usb.h" "ac_cv_header_dev_usb_usb_h" "$ac_includes_default"
+  ac_fn_c_check_header_mongrel "$LINENO" "bus/u4b/usb.h" "ac_cv_header_dev_usb_usb_h" "$ac_includes_default"
 if test "x$ac_cv_header_dev_usb_usb_h" = xyes; then :
   cat >>confdefs.h <<_ACEOF
 #define HAVE_DEV_USB_USB_H 1
@@ -18661,11 +18661,11 @@ fi
 
 done
 
-for ac_header in usbhid.h dev/usb/usbhid.h
+for ac_header in usbhid.h bus/u4b/usbhid.h
 do :
   as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
 ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "#if HAVE_DEV_USB_USB_H
-#include <dev/usb/usb.h>
+#include <bus/u4b/usb.h>
 #endif
 
 "
@@ -18736,9 +18736,9 @@ else
 fi
 
 if test "x$bsd_backend" = xyes; then
-    for ac_header in dev/usb/usb_ioctl.h
+    for ac_header in bus/u4b/usb_ioctl.h
 do :
-  ac_fn_c_check_header_mongrel "$LINENO" "dev/usb/usb_ioctl.h" "ac_cv_header_dev_usb_usb_ioctl_h" "$ac_includes_default"
+  ac_fn_c_check_header_mongrel "$LINENO" "bus/u4b/usb_ioctl.h" "ac_cv_header_dev_usb_usb_ioctl_h" "$ac_includes_default"
 if test "x$ac_cv_header_dev_usb_usb_ioctl_h" = xyes; then :
   cat >>confdefs.h <<_ACEOF
 #define HAVE_DEV_USB_USB_IOCTL_H 1

