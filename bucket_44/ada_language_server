# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		ada_language_server
VERSION=		22.0.8
KEYWORDS=		ada textproc
VARIANTS=		standard
SDESC[standard]=	Microsoft Language Server Protocol for Ada
HOMEPAGE=		https://github.com/AdaCore/ada_language_server
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/AdaCore:ada_language_server:22.0.8
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		ada_libfswatch:single:standard
			libvss:single:standard
BUILDRUN_DEPENDS=	libadalang:single:standard
			libadalang-tools:single:standard
			ada_spawn:single:standard

USES=			gmake gprbuild

LICENSE=		GPLv3+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/source/server/lsp-servers.ads
LICENSE_SCHEME=		solo

MAKE_ARGS=		BUILD_MODE=prod

INSTALL_REQ_TOOLCHAIN=	yes

post-install:
	${RM} -r ${STAGEDIR}${PREFIX}/share/gpr/manifests
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*

[FILE:451:descriptions/desc.single]
Ada_Language_Server an implementation of the Microsoft Language Server
Protocol for Ada/SPARK.

Current features:
 * GNAT project files support.
 * Code completion for names, keywords, aggregates, etc.
 * Code navigation, such as Go to Definition/Declaration, Find All
   References, Call Hierarchies, etc.
 * Code refactoring like insert named associations, auto-add with-clauses.
 * Document/Workspace symbol search.
 * Code folding and formatting.


[FILE:120:distinfo]
1b1e9cbb7e7cf716d5a2001c92f5ab2e4c3faf49f4044d186e0bc9d9c3647502       747895 AdaCore-ada_language_server-22.0.8.tar.gz


[FILE:4207:manifests/plist.single]
bin/ada_language_server
include/lsp/
 lsp-client_message_receivers.ads
 lsp-client_notification_receivers.ads
 lsp-client_request_receivers.ads
 lsp-client_response_senders.ads
 lsp-commands.adb
 lsp-commands.ads
 lsp-errors.adb
 lsp-errors.ads
 lsp-generic_notifications.adb
 lsp-generic_notifications.ads
 lsp-generic_optional.adb
 lsp-generic_optional.ads
 lsp-generic_requests.adb
 lsp-generic_requests.ads
 lsp-generic_responses.adb
 lsp-generic_responses.ads
 lsp-generic_sets.adb
 lsp-generic_sets.ads
 lsp-generic_vectors.adb
 lsp-generic_vectors.ads
 lsp-json_streams.adb
 lsp-json_streams.ads
 lsp-message_io.adb
 lsp-message_io.ads
 lsp-messages-client_notifications.adb
 lsp-messages-client_notifications.ads
 lsp-messages-client_requests.adb
 lsp-messages-client_requests.ads
 lsp-messages-client_responses.adb
 lsp-messages-client_responses.ads
 lsp-messages-common_writers.adb
 lsp-messages-common_writers.ads
 lsp-messages-server_notifications.adb
 lsp-messages-server_notifications.ads
 lsp-messages-server_requests.adb
 lsp-messages-server_requests.ads
 lsp-messages-server_responses.adb
 lsp-messages-server_responses.ads
 lsp-messages-visitors.adb
 lsp-messages-visitors.ads
 lsp-messages.adb
 lsp-messages.ads
 lsp-server_notification_receivers.ads
 lsp-server_request_receivers.ads
 lsp-server_response_senders.ads
 lsp-stdio_streams-init_others.adb
 lsp-stdio_streams-init_windows.adb
 lsp-stdio_streams.adb
 lsp-stdio_streams.ads
 lsp-types-utils.adb
 lsp-types-utils.ads
 lsp-types.adb
 lsp-types.ads
 lsp.ads
 uris.adb
 uris.ads
 vss-json-streams-readers-look_ahead.adb
 vss-json-streams-readers-look_ahead.ads
include/lsp_client/
 lsp-clients-request_handlers.ads
 lsp-clients-response_handlers.ads
 lsp-clients.adb
 lsp-clients.ads
 lsp-raw_clients.adb
 lsp-raw_clients.ads
include/lsp_client_glib/
 lsp-clients-request_handlers.ads
 lsp-clients-response_handlers.ads
 lsp-clients.adb
 lsp-clients.ads
 lsp-raw_clients.adb
 lsp-raw_clients.ads
lib/lsp/
 lsp-client_message_receivers.ali
 lsp-client_message_receivers.o
 lsp-client_notification_receivers.ali
 lsp-client_notification_receivers.o
 lsp-client_request_receivers.ali
 lsp-client_request_receivers.o
 lsp-client_response_senders.ali
 lsp-client_response_senders.o
 lsp-commands.ali
 lsp-commands.o
 lsp-errors.ali
 lsp-errors.o
 lsp-generic_notifications.ali
 lsp-generic_notifications.o
 lsp-generic_optional.ali
 lsp-generic_optional.o
 lsp-generic_requests.ali
 lsp-generic_requests.o
 lsp-generic_responses.ali
 lsp-generic_responses.o
 lsp-generic_sets.ali
 lsp-generic_sets.o
 lsp-generic_vectors.ali
 lsp-generic_vectors.o
 lsp-json_streams.ali
 lsp-json_streams.o
 lsp-message_io.ali
 lsp-message_io.o
 lsp-messages-client_notifications.ali
 lsp-messages-client_notifications.o
 lsp-messages-client_requests.ali
 lsp-messages-client_requests.o
 lsp-messages-client_responses.ali
 lsp-messages-client_responses.o
 lsp-messages-common_writers.ali
 lsp-messages-common_writers.o
 lsp-messages-server_notifications.ali
 lsp-messages-server_notifications.o
 lsp-messages-server_requests.ali
 lsp-messages-server_requests.o
 lsp-messages-server_responses.ali
 lsp-messages-server_responses.o
 lsp-messages-visitors.ali
 lsp-messages-visitors.o
 lsp-messages.ali
 lsp-messages.o
 lsp-server_notification_receivers.ali
 lsp-server_notification_receivers.o
 lsp-server_request_receivers.ali
 lsp-server_request_receivers.o
 lsp-server_response_senders.ali
 lsp-server_response_senders.o
 lsp-stdio_streams.ali
 lsp-stdio_streams.o
 lsp-types-utils.ali
 lsp-types-utils.o
 lsp-types.ali
 lsp-types.o
 lsp.ali
 lsp.o
 uris.ali
 uris.o
 vss-json-streams-readers-look_ahead.ali
 vss-json-streams-readers-look_ahead.o
lib/lsp_client/
 lsp-clients-request_handlers.ali
 lsp-clients-request_handlers.o
 lsp-clients-response_handlers.ali
 lsp-clients-response_handlers.o
 lsp-clients.ali
 lsp-clients.o
 lsp-raw_clients.ali
 lsp-raw_clients.o
lib/lsp_client_glib/
 lsp-clients-request_handlers.ali
 lsp-clients-request_handlers.o
 lsp-clients-response_handlers.ali
 lsp-clients-response_handlers.o
 lsp-clients.ali
 lsp-clients.o
 lsp-raw_clients.ali
 lsp-raw_clients.o
share/gpr/
 lsp.gpr
 lsp_client.gpr
 lsp_client_glib.gpr


[FILE:1981:patches/patch-Makefile]
--- Makefile.orig	2021-06-09 23:01:34 UTC
+++ Makefile
@@ -40,13 +40,12 @@ ifeq ($(OS),Windows_NT)
    PYTHON=python.exe
 else
    UNAME_S := $(shell uname -s)
-   ifeq ($(UNAME_S),Linux)
-      PLATFORM=linux
-      OS=unix
-   endif
    ifeq ($(UNAME_S),Darwin)
       PLATFORM=darwin
       OS=osx
+   else
+      PLATFORM=linux
+      OS=unix
    endif
    PYTHON=python3
 endif
@@ -71,13 +70,13 @@ else
 endif
 
 all: coverage-instrument
-	$(GPRBUILD) -P gnat/tester.gpr -p $(BUILD_FLAGS)
 	$(GPRBUILD) -d -ws -c -u -P gnat/lsp_server.gpr -p $(BUILD_FLAGS) s-memory.adb
 	$(GPRBUILD) -P gnat/lsp_server.gpr -p $(COVERAGE_BUILD_FLAGS) \
 		-XVERSION=$(TRAVIS_TAG)
-	$(GPRBUILD) -P gnat/codec_test.gpr -p $(COVERAGE_BUILD_FLAGS)
 	$(GPRBUILD) -P gnat/lsp_client.gpr -p $(COVERAGE_BUILD_FLAGS) \
 		-XVERSION=$(TRAVIS_TAG)
+	$(GPRBUILD) -P gnat/lsp_client_glib.gpr -p $(COVERAGE_BUILD_FLAGS) \
+		-XVERSION=$(TRAVIS_TAG)
 	mkdir -p integration/vscode/ada/$(PLATFORM)
 	cp -f .obj/server/ada_language_server integration/vscode/ada/$(PLATFORM) ||\
 	  cp -f .obj/server/ada_language_server.exe integration/vscode/ada/$(PLATFORM)
@@ -98,16 +97,18 @@ endif
 
 install:
 	gprinstall -f -P gnat/lsp_server.gpr -p -r --mode=usage \
-		--prefix=$(DESTDIR) $(LIBRARY_FLAGS)
-	gprinstall -f -P gnat/tester.gpr -p --prefix=$(DESTDIR) $(LIBRARY_FLAGS)
-	gprinstall -f -P gnat/codec_test.gpr -p --prefix=$(DESTDIR) $(LIBRARY_FLAGS)
+		--prefix=$(DESTDIR)$(PREFIX) $(LIBRARY_FLAGS)
 	gprinstall -f -P gnat/lsp_client.gpr -p -r	\
 		--mode=dev				\
-		--prefix=$(DESTDIR)			\
+		--prefix=$(DESTDIR)$(PREFIX)		\
+		$(LIBRARY_FLAGS)
+	gprinstall -f -P gnat/lsp_client_glib.gpr -p -r	\
+		--mode=dev				\
+		--prefix=$(DESTDIR)$(PREFIX)		\
 		$(LIBRARY_FLAGS)
 ifneq ($(COVERAGE),)
-	mkdir -p $(DESTDIR)/share/als/sids || true
-	cp .obj/*/*.sid $(DESTDIR)/share/als/sids/
+	mkdir -p $(DESTDIR)$(PREFIX)/share/als/sids || true
+	cp .obj/*/*.sid $(DESTDIR)$(PREFIX)/share/als/sids/
 endif
 
 clean:


[FILE:2743:patches/patch-source_ada_lsp-ada__documents.adb]
--- source/ada/lsp-ada_documents.adb.orig	2021-06-09 23:01:34 UTC
+++ source/ada/lsp-ada_documents.adb
@@ -1496,6 +1496,7 @@ package body LSP.Ada_Documents is
          Result  : VSS.Strings.Virtual_String;
          Params  : constant Param_Spec_Array := Node.P_Params;
          Returns : constant Type_Expr := Node.F_Subp_Returns;
+         retstr  : constant VSS.Strings.Virtual_String := VSS.Strings.Conversions.To_Virtual_String (" return ");
 
       begin
          if Params'Length > 0 then
@@ -1510,16 +1511,21 @@ package body LSP.Ada_Documents is
                Init  : constant Expr := Param.F_Default_Expr;
                Item  : VSS.Strings.Virtual_String;
 
+               s1 : constant VSS.Strings.Virtual_String := VSS.Strings.Conversions.To_Virtual_String (" in ");
+               s2 : constant VSS.Strings.Virtual_String := VSS.Strings.Conversions.To_Virtual_String (" in out ");
+               s3 : constant VSS.Strings.Virtual_String := VSS.Strings.Conversions.To_Virtual_String (" out "); 
+               s4 : constant VSS.Strings.Virtual_String := VSS.Strings.Conversions.To_Virtual_String (" := ");
             begin
-               Item.Append (" :");
+               Item.Append (' ');
+               Item.Append (':');
 
                case Param.F_Mode is
                   when Ada_Mode_Default | Ada_Mode_In =>
-                     Item.Append (" in ");
+                     Item.Append (s1);
                   when Ada_Mode_In_Out =>
-                     Item.Append (" in out ");
+                     Item.Append (s2);
                   when Ada_Mode_Out =>
-                     Item.Append (" out ");
+                     Item.Append (s3);
                end case;
 
                Item.Append
@@ -1527,14 +1533,15 @@ package body LSP.Ada_Documents is
                     (To_Text (Param.F_Type_Expr)));
 
                if not Init.Is_Null then
-                  Item.Append (" := ");
+                  Item.Append (s4);
                   Item.Append
                     (VSS.Strings.To_Virtual_String (To_Text (Init)));
                end if;
 
                for J in Names.First_Child_Index .. Names.Last_Child_Index loop
                   if Result.Character_Length /= 1 then
-                     Result.Append ("; ");
+                     Result.Append (';');
+                     Result.Append (' ');
                   end if;
 
                   Result.Append
@@ -1551,7 +1558,7 @@ package body LSP.Ada_Documents is
 
          if not Returns.Is_Null then
             Is_Function := True;
-            Result.Append (" return ");
+            Result.Append (retstr);
             Result.Append (VSS.Strings.To_Virtual_String (To_Text (Returns)));
          end if;
 


[FILE:395:patches/patch-source_ada_lsp-ada__handlers-refactor__change__parameter__mode.ads]
--- source/ada/lsp-ada_handlers-refactor_change_parameter_mode.ads.orig	2021-06-09 23:01:34 UTC
+++ source/ada/lsp-ada_handlers-refactor_change_parameter_mode.ads
@@ -27,6 +27,7 @@ with LSP.JSON_Streams;
 with Libadalang.Analysis;
 with Libadalang.Common;
 
+with Laltools.Common; use Laltools.Common;
 with Laltools.Refactor.Subprogram_Signature;
 use Laltools.Refactor.Subprogram_Signature;
 


[FILE:362:patches/patch-source_ada_lsp-ada__handlers-refactor__remove__parameter.ads]
--- source/ada/lsp-ada_handlers-refactor_remove_parameter.ads.orig	2021-06-09 23:01:34 UTC
+++ source/ada/lsp-ada_handlers-refactor_remove_parameter.ads
@@ -26,6 +26,7 @@ with LSP.JSON_Streams;
 
 with Libadalang.Analysis;
 
+with Laltools.Common; use Laltools.Common;
 with Laltools.Refactor.Subprogram_Signature;
 use Laltools.Refactor.Subprogram_Signature;
 


[FILE:399:patches/patch-source_ada_lsp-ada__handlers.adb]
--- source/ada/lsp-ada_handlers.adb.orig	2021-06-09 23:01:34 UTC
+++ source/ada/lsp-ada_handlers.adb
@@ -52,7 +52,7 @@ with LSP.Types;        use LSP.Types;
 with Langkit_Support.Slocs;
 with Langkit_Support.Text;
 
-with Laltools.Common;
+with Laltools.Common; use Laltools.Common;
 with Laltools.Refactor_Imports;
 with Laltools.Refactor.Subprogram_Signature;
 with Laltools.Refactor.Safe_Rename;

