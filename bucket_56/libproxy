# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libproxy
VERSION=		0.4.18
REVISION=		1
KEYWORDS=		net devel
VARIANTS=		standard minimal
SDESC[minimal]=		Libproxy without any additional bindings
SDESC[standard]=	Library for automatic proxy configuration mgmt
HOMEPAGE=		https://libproxy.github.io/libproxy
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/libproxy:libproxy:0.4.18
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[minimal]=		single
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	PERL PYTHON VALA NETWORKMGR
OPTIONS_STANDARD=	PERL PYTHON VALA
VOPTS[minimal]=		PERL=OFF PYTHON=OFF VALA=OFF NETWORKMGR=OFF
OPT_ON[all]=		PERL PYTHON VALA

USES=			cpe cclibs:single c++:single cmake pkgconfig
			zlib:build

LICENSE=		LGPL21+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/libproxy/proxy.h
LICENSE_SCHEME=		solo

CPE_VENDOR=		libproxy_project
FPC_EQUIVALENT=		net/libproxy

SOVERSION=		1.0.0
PLIST_SUB=		VERSION=0.4.18

CMAKE_ARGS=		-DBIPR:BOOL=OFF
			-DWITH_DOTNET:BOOL=OFF
			-DWITH_NATUS:BOOL=OFF
			-DWITH_NM:BOOL=OFF
			-DWITH_GNOME2:BOOL=OFF
			-DWITH_GNOME3:BOOL=OFF
			-DWITH_KDE:BOOL=OFF
			-DWITH_MOZJS:BOOL=OFF
			-DWITH_PYTHON2:BOOL=OFF
			-DWITH_PYTHON3:BOOL=OFF
			-DWITH_WEBKIT:BOOL=OFF
			-DWITH_WEBKIT3:BOOL=OFF
VAR_OPSYS[sunos]=	LDFLAGS=-lsocket
			LDFLAGS=-lnsl

[PERL].DESCRIPTION=			Build with Perl binding
[PERL].CMAKE_ARGS_OFF=			-DWITH_PERL:BOOL=OFF
					-DPERL_LINK_LIBPERL:BOOL=OFF
[PERL].CMAKE_ARGS_ON=			-DWITH_PERL:BOOL=ON
[PERL].USES_ON=				perl

[VALA].DESCRIPTION=			Build with Vala binding
[VALA].BUILDRUN_DEPENDS_ON=		dbus:primary:standard
[VALA].BUILD_DEPENDS_ON=		vala:single:standard
					dbus:dev:standard
[VALA].CMAKE_ARGS_OFF=			-DWITH_VALA:BOOL=OFF
[VALA].CMAKE_ARGS_ON=			-DWITH_VALA:BOOL=ON

[NETWORKMGR].DESCRIPTION=		Build with Network Manager support
[NETWORKMGR].BUILDRUN_DEPENDS_ON=	dbus:primary:standard
[NETWORKMGR].BUILD_DEPENDS_ON=		dbus:dev:standard
[NETWORKMGR].CMAKE_ARGS_ON=		-WITH_DBUS:BOOL=ON

[PYTHON].DESCRIPTION=			Build with Python binding
[PYTHON].CMAKE_ARGS_ON=			-DWITH_PYTHON{{PYTHON_MAJOR_VER}}:BOOL=ON
					-DPYTHON_SITEPKG_DIR={{PYTHON_SITELIBDIR}}
[PYTHON].USES_ON=			python

post-patch:
	# support python 3.8 and 3.9
	${REINPLACE_CMD} -e 's/ 3\.6/ 3.9 3.8 3.7 3.6/' \
		${WRKSRC}/cmake/FindPython3Interp.cmake

post-install-PERL-ON:
	${STRIP_CMD} ${STAGEDIR}${SITE_ARCH}/auto/Net/Libproxy/Libproxy.so

post-install-VALA-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libproxy/0.4.18/modules/config_pacrunner.so

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/proxy
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libproxy.so

[FILE:218:descriptions/desc.single]
Libproxy is a library that provides automatic proxy configuration 
management. It supports various programming language bindings and is able 
to work with GConf/Gsettings for GNOME or kreadconfig/kreadconfig5 for KDE.


[FILE:110:distinfo]
0b4a9218d88f6cf9fa25996a3f38329a11f688a9d026141d9d0e966d8fa63837        98037 libproxy-libproxy-0.4.18.tar.gz


[FILE:500:manifests/plist.single]
%%ONLY-DARWIN%%lib/libproxy/%%VERSION%%/modules/pacrunner_webkit.%%SHARED_OBJECT%%
%%PERL-ON%%%%SITE_ARCH%%/Net/Libproxy.pm
%%PERL-ON%%%%SITE_ARCH%%/auto/Net/Libproxy/Libproxy.so
%%PYTHON-ON%%%%PYTHON_SITELIBDIR%%/libproxy.py
%%VALA-ON%%lib/libproxy/%%VERSION%%/modules/config_pacrunner.so
%%VALA-ON%%share/vala/vapi/libproxy-1.0.vapi
bin/proxy
include/proxy.h
lib/
 libproxy.so
 libproxy.so.%%SOMAJOR%%
 libproxy.so.%%SOVERSION%%
lib/pkgconfig/libproxy-1.0.pc
share/cmake/Modules/Findlibproxy.cmake


[FILE:614:patches/patch-libproxy_CMakeLists.txt]
$NetBSD: patch-libproxy_CMakeLists.txt,v 1.2 2013/05/24 18:31:49 wiz Exp $

If this is defined, it doesn't compile on NetBSD due to
http://gcc.gnu.org/bugzilla/show_bug.cgi?id=24012
and missing ntohs() etc.

Reported upstream at
http://code.google.com/p/libproxy/issues/detail?id=193

--- libproxy/CMakeLists.txt.orig	2022-06-20 14:23:35 UTC
+++ libproxy/CMakeLists.txt
@@ -6,7 +6,6 @@ set_project_version(0 4 18)
 if (WIN32)
   add_definitions(-D_CRT_SECURE_NO_WARNINGS=1)
 else(WIN32)
-  add_definitions(-D_POSIX_C_SOURCE=200112L)
   set(CMAKE_CXX_FLAGS "-fvisibility=hidden ${CMAKE_CXX_FLAGS}")
 endif(WIN32)
 


[FILE:633:patches/patch-libproxy_cmake_libproxy.cmk]
--- libproxy/cmake/libproxy.cmk.orig	2022-06-20 14:23:35 UTC
+++ libproxy/cmake/libproxy.cmk
@@ -21,7 +21,7 @@ set_property(SOURCE ${CMAKE_CURRENT_SOUR
 set_target_properties(libproxy PROPERTIES PREFIX "" VERSION 1.0.0 SOVERSION 1)
 set_target_properties(libproxy PROPERTIES INTERFACE_LINK_LIBRARIES "")
 set_target_properties(libproxy PROPERTIES LINK_INTERFACE_LIBRARIES "")
-if(NOT APPLE)
+if(NOT (APPLE OR CMAKE_SYSTEM_NAME MATCHES "SunOS"))
   set_target_properties(libproxy PROPERTIES LINK_FLAGS "-Wl,--version-script,${CMAKE_CURRENT_SOURCE_DIR}/libproxy.map")
 endif()
 install(TARGETS libproxy DESTINATION ${LIB_INSTALL_DIR})


[FILE:479:sunos/patch-libmodman_test_CMakeLists.txt]
--- libmodman/test/CMakeLists.txt.orig	2020-12-04 11:07:46 UTC
+++ libmodman/test/CMakeLists.txt
@@ -28,10 +28,6 @@ function(mm_create_program name EXTTYPE)
     set_property(TARGET ${name} PROPERTY 
                  COMPILE_DEFINITIONS
                  EXTTYPE=${EXTTYPE}_extension;SYMB=1)
-    if(NOT WIN32 AND NOT APPLE)
-      set_property(TARGET ${name} PROPERTY
-                   LINK_FLAGS -Wl,--no-as-needed)
-    endif()
   endif()
 endfunction(mm_create_program)
 

