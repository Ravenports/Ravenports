# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-sphinxcontrib-adadomain
VERSION=		0.2
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Sphinx "adadomain" extension (3.12)
SDESC[v13]=		Sphinx "adadomain" extension (3.13)
HOMEPAGE=		https://bitbucket.org/tkoskine/sphinxcontrib-adadomain
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/s/sphinxcontrib-adadomain
DISTFILE[1]=		sphinxcontrib-adadomain-0.2.tar.gz:main
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		sphinxcontrib-adadomain-0.2

GENERATED=		yes

[PY312].BUILDRUN_DEPENDS_ON=		python-Sphinx:single:v12
[PY312].USES_ON=			python:v12,sutools

[PY313].BUILDRUN_DEPENDS_ON=		python-Sphinx:single:v13
[PY313].USES_ON=			python:v13,sutools

[FILE:144:descriptions/desc.single]
==========
Ada Domain
==========

:author: Tero Koskinen <tero.koskinen@iki.fi>

About
=====

This extension adds Ada domain support to Sphinx.


[FILE:113:distinfo]
42bb33aa4adcd43ff6b43a3fe7b305428abd8dfb7a76b1dc44a5392c5359ed76         7355 sphinxcontrib-adadomain-0.2.tar.gz


[FILE:1658:patches/patch-sphinxcontrib_adadomain.py]
--- sphinxcontrib/adadomain.py.orig	2018-01-19 17:53:22 UTC
+++ sphinxcontrib/adadomain.py
@@ -18,13 +18,13 @@ import string
 
 from docutils import nodes
 from docutils.parsers.rst import directives
+from docutils.parsers.rst import Directive
 
-from sphinx import addnodes
+from sphinx import addnodes, version_info
 from sphinx.roles import XRefRole
 from sphinx.locale import l_, _
 from sphinx.directives import ObjectDescription
 from sphinx.domains import Domain, ObjType, Index
-from sphinx.util.compat import Directive
 from sphinx.util.nodes import make_refnode
 from sphinx.util.docfields import Field, TypedField
 
@@ -269,12 +269,12 @@ class AdaObject(ObjectDescription):
 
         indextext = self._get_index_text(name)
         if indextext:
-            self.indexnode['entries'].append(('single', indextext, name, name))
+            self.indexnode['entries'].append(('single', indextext, name, name, None))
 
         plain_name = pieces[-1]
         indextext = self._get_index_text(plain_name)
         if indextext:
-            self.indexnode['entries'].append(('single', indextext, name, plain_name))
+            self.indexnode['entries'].append(('single', indextext, name, plain_name, None))
 
 
 class AdaModule(Directive):
@@ -316,7 +316,7 @@ class AdaModule(Directive):
         if not noindex:
             indextext = _('%s (module)') % modname
             inode = addnodes.index(entries=[('single', indextext,
-                                             'module-' + modname, modname)])
+                                             'module-' + modname, modname, None)])
             ret.append(inode)
         return ret
 

