# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-relativetimebuilder
VERSION=		0.2.0
KEYWORDS=		python devel
VARIANTS=		py27 py36 py37
SDESC[py36]=		Dateutil relativedelta duration objects (PY 36)
SDESC[py37]=		Dateutil relativedelta duration objects (PY 37)
SDESC[py27]=		Dateutil relativedelta duration objects (PY 27)
HOMEPAGE=		https://bitbucket.org/nielsenb/relativetimebuilder
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/r/relativetimebuilder
DISTFILE[1]=		relativetimebuilder-0.2.0.tar.gz:main
DF_INDEX=		1
SPKGS[py36]=		single
SPKGS[py37]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY36 PY37
OPTIONS_STANDARD=	none
VOPTS[py36]=		PY27=OFF PY36=ON PY37=OFF
VOPTS[py37]=		PY27=OFF PY36=OFF PY37=ON
VOPTS[py27]=		PY27=ON PY36=OFF PY37=OFF

DISTNAME=		relativetimebuilder-0.2.0

GENERATED=		yes

[PY36].BUILDRUN_DEPENDS_ON=		python-aniso8601:single:py36
[PY36].USES_ON=				python:py36

[PY37].BUILDRUN_DEPENDS_ON=		python-aniso8601:single:py37
[PY37].USES_ON=				python:py37

[PY27].BUILDRUN_DEPENDS_ON=		python-aniso8601:single:py27
[PY27].USES_ON=				python:py27

[FILE:3647:descriptions/desc.single]
RelativeTimeBuilder
===================

aniso8601 builder for dateutil relativedeltas
---------------------------------------------

Features
========
* Provides :code:`RelativeTimeBuilder` compatible with `aniso8601
<https://bitbucket.org/nielsenb/aniso8601>`_
* Returns `dateutil
<https://dateutil.readthedocs.io/en/stable/relativedelta.html>`_
:code:`relativedelta` objects for durations

Installation
============

The recommended installation method is to use pip::

  $ pip install relativetimebuilder

Alternatively, you can download the source (git repository hosted at
`Bitbucket <https://bitbucket.org/nielsenb/relativetimebuilder>`_) and
install directly::

  $ python setup.py install

Use
===

Parsing datetimes
-----------------

To parse a typical ISO 8601 datetime string::

  >>> import aniso8601
  >>> from relativetimebuilder import RelativeTimeBuilder
  >>> aniso8601.parse_datetime('1977-06-10T12:00:00',
builder=RelativeTimeBuilder)
  datetime.datetime(1977, 6, 10, 12, 0)

Alternative delimiters can be specified, for example, a space::

  >>> aniso8601.parse_datetime('1977-06-10 12:00:00', delimiter=' ',
builder=RelativeTimeBuilder)
  datetime.datetime(1977, 6, 10, 12, 0)

Both UTC (Z) and UTC offsets for timezones are supported::

  >>> aniso8601.parse_datetime('1977-06-10T12:00:00Z',
builder=RelativeTimeBuilder)
  datetime.datetime(1977, 6, 10, 12, 0, tzinfo=+0:00:00 UTC)
  >>> aniso8601.parse_datetime('1979-06-05T08:00:00-08:00',
builder=RelativeTimeBuilder)
  datetime.datetime(1979, 6, 5, 8, 0, tzinfo=-8:00:00 UTC)

Leap seconds are explicitly not supported::

  >>> aniso8601.parse_datetime('2018-03-06T23:59:60',
builder=RelativeTimeBuilder)
  Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    File
"/home/nielsenb/Jetfuse/relativetimebuilder/python2/lib/python2.7/site-pack
ages/aniso8601/time.py", line 131, in parse_datetime
      return builder.build_datetime(datepart, timepart)
    File
"/home/nielsenb/Jetfuse/relativetimebuilder/python2/lib/python2.7/site-pack
ages/aniso8601/builder.py", line 300, in build_datetime
      cls._build_object(time))
    File
"/home/nielsenb/Jetfuse/relativetimebuilder/python2/lib/python2.7/site-pack
ages/aniso8601/builder.py", line 71, in _build_object
      ss=parsetuple[2], tz=parsetuple[3])
    File
"/home/nielsenb/Jetfuse/relativetimebuilder/python2/lib/python2.7/site-pack
ages/aniso8601/builder.py", line 253, in build_time
      raise LeapSecondError('Leap seconds are not supported.')
  aniso8601.exceptions.LeapSecondError: Leap seconds are not supported.

Parsing dates
-------------

To parse a date represented in an ISO 8601 string::

  >>> import aniso8601
  >>> from relativetimebuilder import RelativeTimeBuilder
  >>> aniso8601.parse_date('1984-04-23', builder=RelativeTimeBuilder)
  datetime.date(1984, 4, 23)

Basic format is supported as well::

  >>> aniso8601.parse_date('19840423', builder=RelativeTimeBuilder)
  datetime.date(1984, 4, 23)

To parse a date using the ISO 8601 week date format::

  >>> aniso8601.parse_date('1986-W38-1', builder=RelativeTimeBuilder)
  datetime.date(1986, 9, 15)

To parse an ISO 8601 ordinal date::

  >>> aniso8601.parse_date('1988-132', builder=RelativeTimeBuilder)
  datetime.date(1988, 5, 11)

Parsing times
-------------

To parse a time formatted as an ISO 8601 string::

  >>> import aniso8601
  >>> from relativetimebuilder import RelativeTimeBuilder
  >>> aniso8601.parse_time('11:31:14', builder=RelativeTimeBuilder)
  datetime.time(11, 31, 14)

As with all of the above, basic format is supported::

  >>> aniso8601.parse_time('113114', builder=RelativeTimeBuilder)


[FILE:111:distinfo]
5cc415b539d18a20e09a600cf7ba7199eda7b365d13aaaf9ffbbaa26cfb8062a        12441 relativetimebuilder-0.2.0.tar.gz

