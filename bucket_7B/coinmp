# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		coinmp
VERSION=		1.8.3
KEYWORDS=		math
VARIANTS=		standard
SDESC[standard]=	Linear Programming solver library
HOMEPAGE=		https://projects.coin-or.org/CoinMP
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://www.coin-or.org/download/source/CoinMP/
DISTFILE[1]=		CoinMP-1.8.3.tgz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			libtool pkgconfig c++:single

DISTNAME=		CoinMP-1.8.3

FPC_EQUIVALENT=		math/coinmp

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-glpk-libcheck

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes

post-patch:
	${FIND} ${WRKSRC} -name Makefile.in | ${XARGS} ${REINPLACE_CMD} \
		-e 's|$$(DESTDIR)$$(addlibsdir)|$$(addlibsdir)|g' \
		-e 's|addlibs_DATA = examples/Makefile examples/example.c||g' \
		-e 's|DocInstallDir = $$(datadir)/coin/doc/$$(PACKAGE_NAME)|DocInstallDir = $$(datadir)/doc/CoinMP/$$(PACKAGE_NAME)|' \
		-e 's|	$$(MAKE) $$(AM_MAKEFLAGS) install-data-hook||'
	${REINPLACE_CMD} -e 's|datacoin_DATA = $$(EXAMPLE_FILES)|datacoin_DATA = |' \
		-e 's|datacoindir = $$(datadir)/coin/Data/Sample|datacoindir = |' \
		${WRKSRC}/Data/Sample/Makefile.in
	${REINPLACE_CMD} -e 's|addlibsdir = $$(DESTDIR)$$(datadir)/coin/doc/CoinMP|addlibsdir = |' \
		${WRKSRC}/CoinMP/Makefile.in

post-install:
	# Don't install useless documentation
	${RM} -r ${STAGEDIR}${PREFIX}/share/doc/CoinMP

[FILE:281:descriptions/desc.single]
CoinMP is a C-API interface library that supports most of the functionality
of the CLP (Coin LP), CBC (Coin Branch-and-Cut), and CGL (Cut Generation
Library) projects. When compiled for Unix it generates a CoinMP.so library
that can be similarly used in other Unix C/C++ projects.


[FILE:95:distinfo]
a1a665db36c7fd69c1e53fffbd108cae1bf22f08acf81c394cd454b8168f22f7     10535972 CoinMP-1.8.3.tgz


[FILE:5507:manifests/plist.single]
bin/
 cbc
 clp
include/coin/
 CbcBranchActual.hpp
 CbcBranchAllDifferent.hpp
 CbcBranchBase.hpp
 CbcBranchCut.hpp
 CbcBranchDecision.hpp
 CbcBranchDefaultDecision.hpp
 CbcBranchDynamic.hpp
 CbcBranchLotsize.hpp
 CbcBranchToFixLots.hpp
 CbcBranchingObject.hpp
 CbcClique.hpp
 CbcCompare.hpp
 CbcCompareActual.hpp
 CbcCompareBase.hpp
 CbcCompareDefault.hpp
 CbcCompareDepth.hpp
 CbcCompareEstimate.hpp
 CbcCompareObjective.hpp
 CbcConfig.h
 CbcConsequence.hpp
 CbcCountRowCut.hpp
 CbcCutGenerator.hpp
 CbcCutModifier.hpp
 CbcCutSubsetModifier.hpp
 CbcDummyBranchingObject.hpp
 CbcEventHandler.hpp
 CbcFathom.hpp
 CbcFathomDynamicProgramming.hpp
 CbcFeasibilityBase.hpp
 CbcFixVariable.hpp
 CbcFollowOn.hpp
 CbcFullNodeInfo.hpp
 CbcGeneral.hpp
 CbcGeneralDepth.hpp
 CbcHeuristic.hpp
 CbcHeuristicDINS.hpp
 CbcHeuristicDW.hpp
 CbcHeuristicDive.hpp
 CbcHeuristicDiveCoefficient.hpp
 CbcHeuristicDiveFractional.hpp
 CbcHeuristicDiveGuided.hpp
 CbcHeuristicDiveLineSearch.hpp
 CbcHeuristicDivePseudoCost.hpp
 CbcHeuristicDiveVectorLength.hpp
 CbcHeuristicFPump.hpp
 CbcHeuristicGreedy.hpp
 CbcHeuristicLocal.hpp
 CbcHeuristicPivotAndFix.hpp
 CbcHeuristicRENS.hpp
 CbcHeuristicRINS.hpp
 CbcHeuristicRandRound.hpp
 CbcHeuristicVND.hpp
 CbcLinked.hpp
 CbcMessage.hpp
 CbcMipStartIO.hpp
 CbcModel.hpp
 CbcNWay.hpp
 CbcNode.hpp
 CbcNodeInfo.hpp
 CbcObject.hpp
 CbcObjectUpdateData.hpp
 CbcOrClpParam.cpp
 CbcOrClpParam.hpp
 CbcParam.hpp
 CbcPartialNodeInfo.hpp
 CbcSOS.hpp
 CbcSimpleInteger.hpp
 CbcSimpleIntegerDynamicPseudoCost.hpp
 CbcSimpleIntegerPseudoCost.hpp
 CbcSolver.hpp
 CbcStrategy.hpp
 CbcSubProblem.hpp
 CbcTree.hpp
 CbcTreeLocal.hpp
 Cbc_C_Interface.h
 Cgl012cut.hpp
 CglAllDifferent.hpp
 CglClique.hpp
 CglConfig.h
 CglCutGenerator.hpp
 CglDuplicateRow.hpp
 CglFlowCover.hpp
 CglGMI.hpp
 CglGMIParam.hpp
 CglGomory.hpp
 CglKnapsackCover.hpp
 CglLandP.hpp
 CglLandPValidator.hpp
 CglLiftAndProject.hpp
 CglMessage.hpp
 CglMixedIntegerRounding.hpp
 CglMixedIntegerRounding2.hpp
 CglOddHole.hpp
 CglParam.hpp
 CglPreProcess.hpp
 CglProbing.hpp
 CglRedSplit.hpp
 CglRedSplit2.hpp
 CglRedSplit2Param.hpp
 CglRedSplitParam.hpp
 CglResidualCapacity.hpp
 CglSimpleRounding.hpp
 CglStored.hpp
 CglTreeInfo.hpp
 CglTwomir.hpp
 CglZeroHalf.hpp
 ClpAmplObjective.hpp
 ClpCholeskyBase.hpp
 ClpCholeskyDense.hpp
 ClpConfig.h
 ClpConstraint.hpp
 ClpConstraintAmpl.hpp
 ClpConstraintLinear.hpp
 ClpConstraintQuadratic.hpp
 ClpDualRowDantzig.hpp
 ClpDualRowPivot.hpp
 ClpDualRowSteepest.hpp
 ClpDummyMatrix.hpp
 ClpDynamicExampleMatrix.hpp
 ClpDynamicMatrix.hpp
 ClpEventHandler.hpp
 ClpFactorization.hpp
 ClpGubDynamicMatrix.hpp
 ClpGubMatrix.hpp
 ClpInterior.hpp
 ClpLinearObjective.hpp
 ClpMatrixBase.hpp
 ClpMessage.hpp
 ClpModel.hpp
 ClpNetworkMatrix.hpp
 ClpNode.hpp
 ClpNonLinearCost.hpp
 ClpObjective.hpp
 ClpPackedMatrix.hpp
 ClpParameters.hpp
 ClpPdcoBase.hpp
 ClpPlusMinusOneMatrix.hpp
 ClpPresolve.hpp
 ClpPrimalColumnDantzig.hpp
 ClpPrimalColumnPivot.hpp
 ClpPrimalColumnSteepest.hpp
 ClpQuadraticObjective.hpp
 ClpSimplex.hpp
 ClpSimplexDual.hpp
 ClpSimplexNonlinear.hpp
 ClpSimplexOther.hpp
 ClpSimplexPrimal.hpp
 ClpSolve.hpp
 Clp_C_Interface.h
 CoinAlloc.hpp
 CoinBuild.hpp
 CoinDenseFactorization.hpp
 CoinDenseVector.hpp
 CoinDistance.hpp
 CoinError.hpp
 CoinFactorization.hpp
 CoinFileIO.hpp
 CoinFinite.hpp
 CoinFloatEqual.hpp
 CoinHelperFunctions.hpp
 CoinIndexedVector.hpp
 CoinLpIO.hpp
 CoinMP.h
 CoinMPConfig.h
 CoinMessage.hpp
 CoinMessageHandler.hpp
 CoinModel.hpp
 CoinModelUseful.hpp
 CoinMpsIO.hpp
 CoinOslFactorization.hpp
 CoinPackedMatrix.hpp
 CoinPackedVector.hpp
 CoinPackedVectorBase.hpp
 CoinParam.hpp
 CoinPragma.hpp
 CoinPresolveDoubleton.hpp
 CoinPresolveDual.hpp
 CoinPresolveDupcol.hpp
 CoinPresolveEmpty.hpp
 CoinPresolveFixed.hpp
 CoinPresolveForcing.hpp
 CoinPresolveImpliedFree.hpp
 CoinPresolveIsolated.hpp
 CoinPresolveMatrix.hpp
 CoinPresolveMonitor.hpp
 CoinPresolvePsdebug.hpp
 CoinPresolveSingleton.hpp
 CoinPresolveSubst.hpp
 CoinPresolveTighten.hpp
 CoinPresolveTripleton.hpp
 CoinPresolveUseless.hpp
 CoinPresolveZeros.hpp
 CoinRational.hpp
 CoinSearchTree.hpp
 CoinShallowPackedVector.hpp
 CoinSignal.hpp
 CoinSimpFactorization.hpp
 CoinSmartPtr.hpp
 CoinSnapshot.hpp
 CoinSort.hpp
 CoinStructuredModel.hpp
 CoinTime.hpp
 CoinTypes.hpp
 CoinUtility.hpp
 CoinUtilsConfig.h
 CoinWarmStart.hpp
 CoinWarmStartBasis.hpp
 CoinWarmStartDual.hpp
 CoinWarmStartPrimalDual.hpp
 CoinWarmStartVector.hpp
 Coin_C_defines.h
 Idiot.hpp
 OsiAuxInfo.hpp
 OsiBranchingObject.hpp
 OsiCbcSolverInterface.hpp
 OsiChooseVariable.hpp
 OsiClpSolverInterface.hpp
 OsiColCut.hpp
 OsiCollections.hpp
 OsiConfig.h
 OsiCut.hpp
 OsiCuts.hpp
 OsiPresolve.hpp
 OsiRowCut.hpp
 OsiRowCutDebugger.hpp
 OsiSolverBranch.hpp
 OsiSolverInterface.hpp
 OsiSolverParameters.hpp
 OsiUnitTests.hpp
lib/
 libCbc.so
 libCbc.so.3
 libCbc.so.3.9.6
 libCbcSolver.so
 libCbcSolver.so.3
 libCbcSolver.so.3.9.6
 libCgl.so
 libCgl.so.1
 libCgl.so.1.9.7
 libClp.so
 libClp.so.1
 libClp.so.1.13.8
 libClpSolver.so
 libClpSolver.so.1
 libClpSolver.so.1.13.8
 libCoinMP.so
 libCoinMP.so.1
 libCoinMP.so.1.8.3
 libCoinUtils.so
 libCoinUtils.so.3
 libCoinUtils.so.3.10.10
 libOsi.so
 libOsi.so.1
 libOsi.so.1.12.6
 libOsiCbc.so
 libOsiCbc.so.3
 libOsiCbc.so.3.9.6
 libOsiClp.so
 libOsiClp.so.1
 libOsiClp.so.1.13.8
 libOsiCommonTests.so
 libOsiCommonTests.so.1
 libOsiCommonTests.so.1.12.6
lib/pkgconfig/
 cbc.pc
 cgl.pc
 clp.pc
 coindatasample.pc
 coinmp.pc
 coinutils.pc
 osi-cbc.pc
 osi-clp.pc
 osi-unittests.pc
 osi.pc


[FILE:504:patches/patch-Cbc_src_CbcSolver.cpp]
--- Cbc/src/CbcSolver.cpp.orig	2011-12-23 05:36:33 UTC
+++ Cbc/src/CbcSolver.cpp
@@ -1876,10 +1876,6 @@ int CbcMain1 (int argc, const char *argv
 	    }
 	    sprintf(generalPrint + strlen(generalPrint),
 		    "Build Date: %s \n", __DATE__);
-#ifdef CBC_SVN_REV
-	    sprintf(generalPrint + strlen(generalPrint),
-		    "Revision Number: %d \n", CBC_SVN_REV);
-#endif
             generalMessageHandler->message(CLP_GENERAL, generalMessages)
             << generalPrint
             << CoinMessageEol;


[FILE:612:patches/patch-CoinUtils_src_CoinSignal.hpp]
--- CoinUtils/src/CoinSignal.hpp.orig	2015-03-13 20:16:34 UTC
+++ CoinUtils/src/CoinSignal.hpp
@@ -43,8 +43,15 @@
 
 //-----------------------------------------------------------------------------
 
+#if defined(__DragonFly__) && defined(__GNUC__)
+   typedef typeof(SIG_DFL) CoinSighandler_t;
+#  define CoinSighandler_t_defined
+#endif
+
+//-----------------------------------------------------------------------------
+
 #if defined(__FreeBSD__) && defined(__GNUC__)
-   typedef __decltype(SIG_DFL) CoinSighandler_t;
+   typedef typeof(SIG_DFL) CoinSighandler_t;
 #  define CoinSighandler_t_defined
 #endif
 

