# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		wget
VERSION=		1.19.2
KEYWORDS=		ftp www
VARIANTS=		standard raven
SDESC[standard]=	Program to retrieve files via http/s and ftp
SDESC[raven]=		Minimal alias for fetch for Solaris Ravensys root
HOMEPAGE=		https://www.gnu.org/software/wget/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNU/wget
DISTFILE[1]=		wget-1.19.2.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs
SPKGS[raven]=		primary

OPTIONS_AVAILABLE=	RAVENSYS
OPTIONS_STANDARD=	none
VOPTS[raven]=		RAVENSYS=ON

USES=			charsetfix cpe pkgconfig

LICENSE=		GPLv3+:primary
LICENSE_SCHEME=		solo
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING

CPE_VENDOR=		gnu
FPC_EQUIVALENT=		ftp/wget
INFO_SUBDIR=		.

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-ssl=openssl
			--with-ssl-prefix={{OPENSSLBASE}}
			--without-libpsl
			--enable-iri
CONFIGURE_ENV=		MAKEINFO="{{MAKEINFO}}"

CPPFLAGS=		-I{{OPENSSLINC}}
LDFLAGS=		-L{{OPENSSLLIB}}

[RAVENSYS].DESCRIPTION=			Minimal static version used as alias for fetch
[RAVENSYS].BUILDRUN_DEPENDS_OFF=	pcre:shared:standard
					libmetalink:primary:standard
					libidn2:primary:standard
					libunistring:primary:standard
[RAVENSYS].BUILD_DEPENDS_OFF=		pcre:static:standard
[RAVENSYS].BUILD_DEPENDS_ON=		zlib:static:standard
					libressl:single:static
[RAVENSYS].CONFIGURE_ARGS_OFF=		--enable-pcre
					--enable-nls
					--with-metalink
					--with-libidn={{LOCALBASE}}
					--with-libunistring-prefix={{LOCALBASE}}
[RAVENSYS].INFO_OFF=			primary:wget
[RAVENSYS].RUN_DEPENDS_ON=		nss:caroot:standard
[RAVENSYS].SUB_FILES_ON=		fetch
[RAVENSYS].USES_OFF=			gettext-runtime
					perl:build
					makeinfo
					zlib
					ssl
					iconv
[RAVENSYS].USES_ON=			iconv:build

post-patch:
	${REINPLACE_CMD} -e 's,WGETRC = $$(sysconfdir)/wgetrc,&.sample,' \
		${WRKSRC}/doc/Makefile.in
	${REINPLACE_CMD} -e 's,/usr/local/etc/wgetrc,${PREFIX}/etc/wgetrc,' \
		${WRKSRC}/doc/sample.wgetrc* \
		${WRKSRC}/doc/wget.texi

post-install-RAVENSYS-ON:
	${RM} ${STAGEDIR}${PREFIX}/etc/wgetrc.sample
	${INSTALL_SCRIPT} ${WRKDIR}/fetch ${STAGEDIR}${PREFIX}/bin

post-patch-RAVENSYS-ON:
	${REINPLACE_CMD} \
		-e '/^all: wget.info/ s,wget.info,,' \
		-e '/^all-am:/ s, $$(INFO_DEPS),,' \
		-e '/^install-data-am:/ s, install-info-am,,' \
		${WRKSRC}/doc/Makefile.in

[FILE:996:descriptions/desc.primary]
GNU wget is a free software package for retrieving files using HTTP,
HTTPS and FTP, the most widely-used Internet protocols. It is a
non-interactive command-line tool, so it may easily be called from
scripts, cron jobs, terminals without X-Windows support, etc.

GNU wget has many features to make retrieving large files or mirroring
entire web or FTP sites easy, including:

 o Can resume aborted downloads, using REST and RANGE
 o Can use filename wild cards and recursively mirror directories
 o NLS-based message files for many different languages
 o Optionally converts absolute links in downloaded documents to
   relative, so that downloaded documents may link to each other locally
 o Supports HTTP and SOCKS proxies
 o Supports HTTP cookies
 o Supports persistent HTTP connections
 o Unattended / background operation
 o Uses local file timestamps to determine whether documents need to
   be re-downloaded when mirroring
 o GNU wget is distributed under the GNU General Public License.


[FILE:97:distinfo]
4f4a673b6d466efa50fbfba796bd84a46ae24e370fa562ede5b21ab53c11a920      4349267 wget-1.19.2.tar.gz


[FILE:1476:manifests/plist.primary.standard]
@sample etc/wgetrc.sample
bin/wget
share/locale/be/LC_MESSAGES/wget.mo
share/locale/bg/LC_MESSAGES/wget.mo
share/locale/ca/LC_MESSAGES/wget.mo
share/locale/cs/LC_MESSAGES/wget.mo
share/locale/da/LC_MESSAGES/wget.mo
share/locale/de/LC_MESSAGES/wget.mo
share/locale/el/LC_MESSAGES/wget.mo
share/locale/en_GB/LC_MESSAGES/wget.mo
share/locale/eo/LC_MESSAGES/wget.mo
share/locale/es/LC_MESSAGES/wget.mo
share/locale/et/LC_MESSAGES/wget.mo
share/locale/eu/LC_MESSAGES/wget.mo
share/locale/fi/LC_MESSAGES/wget.mo
share/locale/fr/LC_MESSAGES/wget.mo
share/locale/ga/LC_MESSAGES/wget.mo
share/locale/gl/LC_MESSAGES/wget.mo
share/locale/he/LC_MESSAGES/wget.mo
share/locale/hr/LC_MESSAGES/wget.mo
share/locale/hu/LC_MESSAGES/wget.mo
share/locale/id/LC_MESSAGES/wget.mo
share/locale/it/LC_MESSAGES/wget.mo
share/locale/ja/LC_MESSAGES/wget.mo
share/locale/lt/LC_MESSAGES/wget.mo
share/locale/nb/LC_MESSAGES/wget.mo
share/locale/nl/LC_MESSAGES/wget.mo
share/locale/pl/LC_MESSAGES/wget.mo
share/locale/pt/LC_MESSAGES/wget.mo
share/locale/pt_BR/LC_MESSAGES/wget.mo
share/locale/ro/LC_MESSAGES/wget.mo
share/locale/ru/LC_MESSAGES/wget.mo
share/locale/sk/LC_MESSAGES/wget.mo
share/locale/sl/LC_MESSAGES/wget.mo
share/locale/sr/LC_MESSAGES/wget.mo
share/locale/sv/LC_MESSAGES/wget.mo
share/locale/tr/LC_MESSAGES/wget.mo
share/locale/uk/LC_MESSAGES/wget.mo
share/locale/vi/LC_MESSAGES/wget.mo
share/locale/zh_CN/LC_MESSAGES/wget.mo
share/locale/zh_TW/LC_MESSAGES/wget.mo
share/man/man1/wget.1.gz


[FILE:18:manifests/plist.primary.raven]
bin/
 wget
 fetch


[FILE:2014:files/fetch.in]
#!/bin/sh
#
# Make wget masquerade as fetch
# look for:
#   -q : (quiet),       wget=--quiet
#   -o : (output=file), wget=--output-document
#   --no-verify-peer,   wget=--no-check-certificate
#   -Fpr : (force-restart, passive (default), restart, keep output),
#          wget=
#   --require-size,     wget= NOT SUPPORTED (mimickable?)
#  assume env: SSL_NO_VERIFY_PEER=1 SSL_NO_VERIFY_HOSTNAME=1

VERBOSITY="--no-verbose"
CERTS="--no-check-certificate --ca-certificate %%PREFIX%%/share/certs/ca-root-nss.crt"
REQUIRE_SIZE=0
OUTPUT_FILE=
SENDTO=
URL=not-defined

while test ${#} -gt 0
do
   case "${1}" in
      -q|--quiet)
      		VERBOSITY="--quiet"
      		;;
      --no-verify-peer)
      		;;
      -F|-p|-r|-Fpr|-Fp|-pF|-Fr|-rF|-pr|-rp|-rpF|-rFp|-pFr|-prF)
      		;;
      -S|--require-size)
		shift
      		REQUIRE_SIZE=${1}
      		;;
      -o)
      		shift
      		OUTPUT_FILE="${1}"
      		;;
      *)
      		URL="${1}"
      		;;
   esac
   shift
done

GETLENGTH='\
BEGIN { remotelen = 0 }\
/^Length:/ { remotelen = $2}\
{ next }\
END {\
  if (!remotelen) { print "continue" }\
  else {\
    if (remotelen != knownlen)\
      { printf ("size mismatch: expected %d, actual %d\n", knownlen, remotelen) }\
    else\
      { print "continue" }\
  }\
}'

LASTSEG='{ print $NF }'
checkfile=$(echo ${URL} | awk -F'/' "${LASTSEG}")
BPATH1=$(/usr/bin/dirname ${0})
BASEPATH=$(cd ${BPATH1} && /bin/pwd)
WGET="${BASEPATH}/wget"

if [ -n "${OUTPUT_FILE}" ]; then
	# If this is a directory, set directory prefix
	if [ -d "${OUTPUT_FILE}" ]; then
	   SENDTO="--directory-prefix ${OUTPUT_FILE} --output-document ${checkfile}"
	else
	   SENDTO="--output-document ${OUTPUT_FILE}"
	fi
else
	SENDTO="--output-document ${checkfile}"
fi
if [ ${REQUIRE_SIZE} -gt 0 ]; then
   message=$(${WGET} --spider ${URL} 2>&1 | awk -v knownlen=${REQUIRE_SIZE} "${GETLENGTH}")
   if [ "${message}" != "continue" ]; then
      echo ${message}
      exit 1
   fi
fi
COMMAND="${WGET} ${VERBOSITY} ${CERTS} ${URL} ${SENDTO}"

${COMMAND}

