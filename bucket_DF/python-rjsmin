# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-rjsmin
VERSION=		1.0.12
KEYWORDS=		python devel textproc
VARIANTS=		py27 py36 py37
SDESC[py36]=		Javascript Minifier (PY 36)
SDESC[py37]=		Javascript Minifier (PY 37)
SDESC[py27]=		Javascript Minifier (PY 27)
HOMEPAGE=		http://opensource.perlig.de/rjsmin/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/r/rjsmin
DISTFILE[1]=		rjsmin-1.0.12.tar.gz:main
DF_INDEX=		1
SPKGS[py36]=		single
SPKGS[py37]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY36 PY37
OPTIONS_STANDARD=	none
VOPTS[py36]=		PY27=OFF PY36=ON PY37=OFF
VOPTS[py37]=		PY27=OFF PY36=OFF PY37=ON
VOPTS[py27]=		PY27=ON PY36=OFF PY37=OFF

DISTNAME=		rjsmin-1.0.12

GENERATED=		yes

[PY36].USES_ON=				python:py36

[PY37].USES_ON=				python:py37

[PY27].USES_ON=				python:py27

[FILE:2705:descriptions/desc.single]
=====================
 Javascript Minifier
=====================

rJSmin is a javascript minifier written in python.

The minifier is based on the semantics of `jsmin.c by Douglas Crockford`_\.

The module is a re-implementation aiming for speed, so it can be used at
runtime (rather than during a preprocessing step). Usually it produces the
same results as the original ``jsmin.c``. It differs in the following ways:

- there is no error detection: unterminated string, regex and comment
  literals are treated as regular javascript code and minified as such.
- Control characters inside string and regex literals are left untouched;
they
  are not converted to spaces (nor to \n)
- Newline characters are not allowed inside string and regex literals,
except
  for line continuations in string literals (ECMA-5).
- "return /regex/" is recognized correctly.
- Line terminators after regex literals are handled more sensibly
- "+ +" and "- -" sequences are not collapsed to '++' or '--'
- Newlines before ! operators are removed more sensibly
- Comments starting with an exclamation mark (``!``) can be kept optionally
- rJSmin does not handle streams, but only complete strings. (However, the
  module provides a "streamy" interface).

Since most parts of the logic are handled by the regex engine it's way
faster
than the original python port of ``jsmin.c`` by Baruch Even. The speed
factor
varies between about 6 and 55 depending on input and python version (it
gets
faster the more compressed the input already is).  Compared to the
speed-refactored python port by Dave St.Germain the performance gain is
less
dramatic but still between 3 and 50 (for huge inputs)). See the
docs/BENCHMARKS file for details.

rjsmin.c is a reimplementation of rjsmin.py in C and speeds it up even
more.

Both python 2 (>=2.4) and python 3 are supported.

.. _jsmin.c by Douglas Crockford:
http://www.crockford.com/javascript/jsmin.c


Copyright and License
~~~~~~~~~~~~~~~~~~~~~

Copyright 2011 - 2015
André Malo or his licensors, as applicable.

The whole package (except for the files in the bench/ directory) is
distributed under the Apache License Version 2.0. You'll find a copy in the
root directory of the distribution or online at:
<http://www.apache.org/licenses/LICENSE-2.0>.


Bugs
~~~~

No bugs, of course. ;-)
But if you've found one or have an idea how to improve rjsmin, feel free
to send a pull request on `github <https://github.com/ndparker/rjsmin>`_
or send a mail to <rjsmin-bugs@perlig.de>.


Author Information
~~~~~~~~~~~~~~~~~~

André "nd" Malo <nd perlig.de>
GPG: 0x8103A37E


    If God intended people to be naked, they would be born that way.
    -- Oscar Wilde

.. vim:tw=72 syntax=rest


[FILE:99:distinfo]
dd9591aa73500b08b7db24367f8d32c6470021f39d5ab4e50c7c02e4401386f1       446822 rjsmin-1.0.12.tar.gz

