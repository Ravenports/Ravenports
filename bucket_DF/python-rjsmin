# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-rjsmin
VERSION=		1.2.3
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Javascript Minifier (3.12)
SDESC[v13]=		Javascript Minifier (3.13)
HOMEPAGE=		http://opensource.perlig.de/rjsmin/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/r/rjsmin
DISTFILE[1]=		rjsmin-1.2.3.tar.gz:main
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		rjsmin-1.2.3

GENERATED=		yes

[PY312].USES_ON=			python:v12,sutools

[PY313].USES_ON=			python:v13,sutools

[FILE:2765:descriptions/desc.single]
=====================
 Javascript Minifier
=====================

rJSmin is a javascript minifier written in python.

The minifier is based on the semantics of `jsmin.c by Douglas Crockford`_\.

The module is a re-implementation aiming for speed, so it can be used at
runtime (rather than during a preprocessing step). Usually it produces the
same results as the original ``jsmin.c``. It differs in the following ways:

- there is no error detection: unterminated string, regex and comment
  literals are treated as regular javascript code and minified as such.
- Control characters inside string and regex literals are left untouched;
they
  are not converted to spaces (nor to \n)
- Newline characters are not allowed inside string and regex literals,
except
  for line continuations in string literals (ECMA-5).
- "return /regex/" is recognized correctly.
- More characters are allowed before regexes.
- Line terminators after regex literals are handled more sensibly
- "+ +" and "- -" sequences are not collapsed to '++' or '--'
- Newlines before ! operators are removed more sensibly
- (Unnested) template literals are supported (ECMA-6)
- Comments starting with an exclamation mark (``!``) can be kept optionally
- rJSmin does not handle streams, but only complete strings. (However, the
  module provides a "streamy" interface).

Since most parts of the logic are handled by the regex engine it's way
faster
than the original python port of ``jsmin.c`` by Baruch Even. The speed
factor
varies between about 6 and 55 depending on input and python version (it
gets
faster the more compressed the input already is).  Compared to the
speed-refactored python port by Dave St.Germain the performance gain is
less
dramatic but still between 3 and 50 (for huge inputs)). See the
docs/BENCHMARKS file for details.

rjsmin.c is a reimplementation of rjsmin.py in C and speeds it up even
more.

Supported python versions are 2.7 and 3.6+.

.. _jsmin.c by Douglas Crockford:
http://www.crockford.com/javascript/jsmin.c

Copyright and License
~~~~~~~~~~~~~~~~~~~~~

Copyright 2011 - 2024
André Malo or his licensors, as applicable.

The whole package (except for the files in the bench/ directory) is
distributed under the Apache License Version 2.0. You'll find a copy in the
root directory of the distribution or online at:
<http://www.apache.org/licenses/LICENSE-2.0>.

Bugs
~~~~

No bugs, of course. ;-)
But if you've found one or have an idea how to improve rjsmin, feel free
to send a pull request on [github]
or send a mail to <rjsmin-bugs@perlig.de>.

Author Information
~~~~~~~~~~~~~~~~~~

André "nd" Malo <nd perlig.de>
GPG: 0x029C942244325167

    If God intended people to be naked, they would be born that way.
    -- Oscar Wilde

.. vim:tw=72 syntax=rest


[FILE:98:distinfo]
1388b52493a4c04fbc970a2d757c301fa05a3c37640314c2ce9dfc8d8a730cc6       417812 rjsmin-1.2.3.tar.gz

