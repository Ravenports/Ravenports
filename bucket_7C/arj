# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		arj
VERSION=		3.10.22
REVISION=		2
KEYWORDS=		archivers
VARIANTS=		standard
SDESC[standard]=	Free and portable clone of the ARJ archiver
HOMEPAGE=		https://sourceforge.net/projects/arj/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main debian
SITES[main]=		SF/arj/arj/2.78_3.10%20build%2022
SITES[debian]=		DEBIAN/pool/main/a/arj
DISTFILE[1]=		arj-3.10.22.tar.gz:main
DISTFILE[2]=		arj_3.10.22-24.debian.tar.xz:debian
DF_INDEX=		1 2
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			autoreconf gmake

LICENSE=		GPLv2+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/doc/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		archivers/arj

PATCHFILES_STRIP=	-p1

MUST_CONFIGURE=		gnu
CONFIGURE_WRKSRC=	{{WRKSRC}}/gnu

BUILD_TARGET=		prepare all
MAKEFILE=		GNUmakefile
MAKE_ARGS=		LOCALE=en

pre-patch:
	# apply remaining debian patchs
	${FIND} ${WRKDIR}/debian/patches -type f -name "*.patch" |\
	${SORT} | ${XARGS} -i{} \
	${PATCH} -i {} -d "${PATCH_WRKSRC}" ${PATCH_DIST_ARGS}

pre-configure:
	${REINPLACE_CMD} -e 's!/etc!${LOCALBASE}/etc!' \
		 ${WRKSRC}/arj.c ${WRKSRC}/file_reg.c ${WRKSRC}/rearj.c
	${REINPLACE_CMD} -e 's!-O2!!' -e 's!ALIGN_POINTERS!&,1,desc!' \
		-e 's!USE_COLORS!&,1,desc!' ${WRKSRC}/gnu/configure.in
	${REINPLACE_CMD} -e 's!^static !!' ${WRKSRC}/integr.c
	${REINPLACE_CMD} -e 's|@PREFIX@|${PREFIX}|' ${WRKSRC}/environ.c

post-extract:
	${RM} ${WRKDIR}/debian/patches/002_no_remove_static_const.patch
	${RM} ${WRKDIR}/debian/patches/doc_refer_robert_k_jung.patch
	${RM} ${WRKDIR}/debian/patches/gnu_build_*
	${RM} ${WRKDIR}/debian/patches/hurd_no_fcntl_getlk.patch
	${RM} ${WRKDIR}/debian/patches/reproducible_help_archive.patch
	# extract license
	${AWK} '/LICENSE POLICY/,EOF { print $0 }' \
	${WRKSRC}/resource/en/arjl.txt > ${WRKDIR}/TERMS

[FILE:545:descriptions/desc.single]
This is open source implementation of the world-famous ARJ archiver.  This
version has been created with an intent to preserve maximum compatibility
and retain the feature set of the original ARJ archiver as provided by ARJ
Software, Inc.

New ARJ features on Unix-like platforms:

  - Support for symbolic and hard links
  - Archiving of special entities: pipes and devices
  - Support for UID/GID storage in a variety of methods
  - World's smallest native self-extracting modules
  - Interoperability with ARJ for DOS, Windows, and OS/2 Warp


[FILE:204:distinfo]
589e4c9bccc8669e7b6d8d6fcd64e01f6a2c21fe10aad56a83304ecc3b96a7db       431467 arj-3.10.22.tar.gz
f1b1bb1ad0deaa0ffb1e3cd600cac6c7e9e705cbd2d3bd577d3df160bbf8fde9        23016 arj_3.10.22-24.debian.tar.xz


[FILE:131:manifests/plist.single]
bin/
 arj
 arj-register
 arjdisp
 rearj
lib/arj/arjcrypt.so
share/man/man1/
 arj-register.1.gz
 arj.1.gz
 arjdisp.1.gz
 rearj.1.gz


[FILE:391:patches/patch-arjtypes.c]
--- arjtypes.c.intermediate	2021-01-10 04:24:29 UTC
+++ arjtypes.c
@@ -138,8 +138,11 @@ static int isleapyear(int year)
 static unsigned long ts_unix2dos(time_t ts)
 {
  struct tm *stm;
+ time_t _ts;
 
- stm=arj_localtime(&ts);
+ _ts = ts;
+
+ stm=arj_localtime(&_ts);
  return(get_tstamp(stm->tm_year+1900, stm->tm_mon+1, stm->tm_mday,
         stm->tm_hour, stm->tm_min, stm->tm_sec));
 }


[FILE:1706:patches/patch-environ.c]
--- environ.c.orig	2021-10-27 00:22:50 UTC
+++ environ.c
@@ -58,7 +58,7 @@
   #include <sys/ioctl.h>
   #include <sys/statfs.h>
   #include <sys/statvfs.h>
- #elif defined(__FreeBSD__)||defined(__NetBSD__)
+ #elif defined(__FreeBSD__)||defined(__NetBSD__) || defined(__DragonFly__)
   #include <sys/param.h>
   #include <sys/mount.h>
  #elif defined(__QNXNTO__)
@@ -2061,7 +2061,7 @@ FILE *file_open(char *name, char *mode)
       /* ASR fix 01/10/2003 -- re-fix to handle umask 022 correctly */
       if((handle=open(name, oflag, 0644))==-1)
        return(NULL);
-      if(fcntl(handle, F_SETLK, &flk)==-1&&errno!=EINVAL)
+      if(fcntl(handle, F_SETLK, &flk)==-1&&errno!=EINVAL&&errno!=ENOTSUP)
       {
        close(handle);
        return(NULL);
@@ -2289,7 +2289,7 @@ unsigned long file_getfree(char *name)
   else
    return((LONG_MAX/(spclu*bps)<fclu)?LONG_MAX:spclu*bps*fclu);
  #elif TARGET==UNIX
-  #if defined(__QNXNTO__)||defined(__sco__)||defined(SUNOS)
+  #if defined(__QNXNTO__)||defined(__sco__)||defined(SUNOS) || defined(__NetBSD__)
    struct statvfs vfs;
 
    if(statvfs(name, &vfs)==-1)
@@ -3008,7 +3008,7 @@ void get_exe_name(char *dest, char *arg)
     they are missing altogether, the corresponding code will gracefully
     terminate. */
  #if SFX_LEVEL==ARJ
-  strcpy(dest, "/usr/local/bin/arj");
+  strcpy(dest, "@PREFIX@/bin/arj");
  #elif SFX_LEVEL==ARJSFXV
   strcpy(dest, "./arjsfxv");
  #elif SFX_LEVEL==ARJSFX
@@ -3016,7 +3016,7 @@ void get_exe_name(char *dest, char *arg)
  #elif SFX_LEVEL==ARJSFXJR
   strcpy(dest, "./arjsfxjr");
  #elif defined(REARJ)
-  strcpy(dest, "/usr/local/bin/rearj");
+  strcpy(dest, "@PREFIX@/bin/rearj");
  #else
   dest[0]='\0';
  #endif


[FILE:522:patches/patch-gnu_configure.in]
--- gnu/configure.in.intermediate	2021-01-14 03:19:30 UTC
+++ gnu/configure.in
@@ -52,17 +52,15 @@ case $host_os in
 linux*)
 	AC_DEFINE(ELF_EXECUTABLES, 1, [Define if executables use ELF format])
         DYN_LIBS="-ldl"
-        LD_STRIP="gnu/stripgcc.lnk"
 	;;
 k*bsd*)
 	AC_DEFINE(ELF_EXECUTABLES)
 	DYN_LIBS="-ldl"
 	LD_STRIP="gnu/stripgcc.lnk"
 	;;
-*bsd*)
+*bsd*|dragonfly*)
 	AC_DEFINE(ELF_EXECUTABLES)
         DLL_FLAGS="-shared -export-dynamic"
-        LD_STRIP="gnu/stripgcc.lnk"
 	;;
 interix3*)
 	# not ELF


[FILE:34:files/special.mk]
AUTORECONF_WRKSRC=	${WRKSRC}/gnu


