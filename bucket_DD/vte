# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		vte
VERSION=		0.62.3
KEYWORDS=		x11_toolkits
VARIANTS=		standard
SDESC[standard]=	Virtual Terminal Emulator widget
HOMEPAGE=		https://wiki.gnome.org/Apps/Terminal/VTE
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNOME/vte/0.62
DISTFILE[1]=		vte-0.62.3.tar.xz:main
DIST_SUBDIR=		gnome3
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs
			nls

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		bash:primary:standard
			cmake:single:standard
			vala:single:standard
BUILDRUN_DEPENDS=	gnutls:primary:standard
			icu:single:standard
			pcre2:primary:standard

USES=			gettext-runtime gettext-tools:build meson pkgconfig
GNOME_COMPONENTS=	cairo gdkpixbuf gtk3 intltool introspection

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/vte.cc
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11-toolkits/vte3
MESON_ARGS=		-D_systemd=false

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		0.6200.3
PLIST_SUB=		VERSION=2.91

VAR_OPSYS[sunos]=	LDFLAGS=-lintl

post-patch:
	${REINPLACE_CMD} -e '/fstack-prot/d' ${WRKSRC}/meson.build
	${REINPLACE_CMD} -e 's|linux|skipx|' ${WRKSRC}/src/pty.cc

post-patch-sunos:
	${REINPLACE_CMD} \
		-e 's|sys/ioctl\.h|sys/termios.h|' \
		-e '/Bsymbolic-functions/d' \
		${WRKSRC}/meson.build

[FILE:108:descriptions/desc.primary]
Terminal widget with improved font, internationalisation and accessibility
support for the GNOME 3 desktop.


[FILE:103:distinfo]
f5770285a52cc23a3c0428a43d492b7c0ba458ce7b8a73768a7d4f1e8a7db3b4       447152 gnome3/vte-0.62.3.tar.xz


[FILE:513:manifests/plist.primary]
bin/vte-%%VERSION%%
etc/profile.d/
 vte.csh
 vte.sh
include/vte-%%VERSION%%/vte/
 vte.h
 vtedeprecated.h
 vteenums.h
 vteglobals.h
 vtemacros.h
 vtepty.h
 vteregex.h
 vteterminal.h
 vtetypebuiltins.h
 vteversion.h
lib/
 libvte-%%VERSION%%.so
 libvte-%%VERSION%%.so.%%SOMAJOR%%
 libvte-%%VERSION%%.so.%%SOVERSION%%
lib/girepository-1.0/Vte-%%VERSION%%.typelib
lib/pkgconfig/vte-%%VERSION%%.pc
libexec/vte-urlencode-cwd
share/gir-1.0/Vte-%%VERSION%%.gir
share/vala/vapi/
 vte-%%VERSION%%.deps
 vte-%%VERSION%%.vapi


[FILE:4622:manifests/plist.nls]
share/locale/am/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/an/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ang/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ar/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/as/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ast/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/az/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/be/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/be@latin/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/bg/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/bn/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/bn_IN/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/bs/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ca/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ca@valencia/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ckb/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/cs/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/cy/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/da/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/de/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/dz/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/el/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/en@shaw/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/en_CA/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/en_GB/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/eo/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/es/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/et/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/eu/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/fa/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/fi/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/fr/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/fur/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ga/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/gd/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/gl/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/gu/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/he/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/hi/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/hr/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/hu/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/id/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/is/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/it/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ja/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ka/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/kk/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/kn/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ko/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ku/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ky/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/li/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/lt/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/lv/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/mai/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/mi/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/mjw/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/mk/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ml/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/mn/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/mr/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ms/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/nb/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/nds/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ne/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/nl/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/nn/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/oc/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/or/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/pa/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/pl/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/pt/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/pt_BR/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ro/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ru/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/rw/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/si/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/sk/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/sl/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/sq/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/sr/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/sr@latin/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/sv/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ta/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/te/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/tg/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/th/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/tr/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/ug/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/uk/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/uz@cyrillic/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/vi/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/wa/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/xh/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/zh_CN/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/zh_HK/LC_MESSAGES/vte-%%VERSION%%.mo
share/locale/zh_TW/LC_MESSAGES/vte-%%VERSION%%.mo


[FILE:703:patches/patch-src_app_app.cc]
--- src/app/app.cc.orig	2021-02-16 15:35:49 UTC
+++ src/app/app.cc
@@ -2487,7 +2487,15 @@ main(int argc,
                struct termios tcattr;
                if (tcgetattr(STDIN_FILENO, &tcattr) == 0) {
                        saved_tcattr = tcattr;
+#ifdef __sun__
+	tcattr.c_iflag &= ~(IMAXBEL|IGNBRK|BRKINT|PARMRK|ISTRIP|INLCR|IGNCR|ICRNL|IXON);
+	tcattr.c_oflag &= ~OPOST;
+	tcattr.c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);
+	tcattr.c_cflag &= ~(CSIZE|PARENB);
+	tcattr.c_cflag |= CS8;
+#else
                        cfmakeraw(&tcattr);
+#endif
                        if (tcsetattr(STDIN_FILENO, TCSANOW, &tcattr) == 0)
                                reset_termios = true;
                }


[FILE:549:patches/patch-src_dumpkeys.c]
--- src/dumpkeys.c.orig	2021-02-16 15:35:49 UTC
+++ src/dumpkeys.c
@@ -167,7 +167,15 @@ main(int argc, char **argv)
 	}
 	original = tcattr;
 	signal(SIGINT, sigint_handler);
+#ifdef __sun__
+	tcattr.c_iflag &= ~(IMAXBEL|IGNBRK|BRKINT|PARMRK|ISTRIP|INLCR|IGNCR|ICRNL|IXON);
+	tcattr.c_oflag &= ~OPOST;
+	tcattr.c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);
+	tcattr.c_cflag &= ~(CSIZE|PARENB);
+	tcattr.c_cflag |= CS8;
+#else
 	cfmakeraw(&tcattr);
+#endif
 	if (tcsetattr(STDIN_FILENO, TCSANOW, &tcattr) != 0) {
 		perror("tcsetattr");
 		return 1;


[FILE:453:patches/patch-src_libc-glue.hh]
--- src/libc-glue.hh.orig	2021-02-16 15:35:49 UTC
+++ src/libc-glue.hh
@@ -220,7 +220,13 @@ fd_dup_cloexec(int oldfd,
 {
         auto r = int{};
         do {
+#ifdef F_DUPFD_CLOEXEC
                 r = fcntl(oldfd, F_DUPFD_CLOEXEC, newfd);
+#else
+                r = fcntl(oldfd, F_DUPFD, 0);
+                newfd = r;
+                fcntl(newfd, F_SETFD, FD_CLOEXEC);
+#endif
         } while (r == -1 && errno == EINTR);
         return r;
 }


[FILE:537:patches/patch-src_mev.c]
--- src/mev.c.orig	2021-02-16 15:35:49 UTC
+++ src/mev.c
@@ -364,7 +364,15 @@ main(int argc, char **argv)
 
 	original = tcattr;
 	signal(SIGINT, sigint_handler);
+#ifdef __sun__
+	tcattr.c_iflag &= ~(IMAXBEL|IGNBRK|BRKINT|PARMRK|ISTRIP|INLCR|IGNCR|ICRNL|IXON);
+	tcattr.c_oflag &= ~OPOST;
+	tcattr.c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);
+	tcattr.c_cflag &= ~(CSIZE|PARENB);
+	tcattr.c_cflag |= CS8;
+#else
 	cfmakeraw(&tcattr);
+#endif
 	if (tcsetattr(STDIN_FILENO, TCSANOW, &tcattr) != 0) {
 		perror("tcsetattr");
 		return 1;


[FILE:1433:patches/patch-src_pty.cc]
--- src/pty.cc.orig	2021-02-16 15:35:49 UTC
+++ src/pty.cc
@@ -78,6 +78,10 @@
 
 #include "missing.hh"
 
+#ifndef O_CLOEXEC
+#define O_CLOEXEC 0
+#endif
+
 namespace vte::base {
 
 Pty*
@@ -350,6 +354,7 @@ Pty::get_size(int* rows,
         return false;
 }
 
+#ifndef __sun__
 static int
 fd_set_cpkt(vte::libc::FD& fd)
 {
@@ -358,6 +363,7 @@ fd_set_cpkt(vte::libc::FD& fd)
         int one = 1;
         return ioctl(fd.get(), TIOCPKT, &one);
 }
+#endif
 
 static int
 fd_setup(vte::libc::FD& fd)
@@ -392,6 +398,7 @@ fd_setup(vte::libc::FD& fd)
                 return -1;
         }
 
+#ifndef __sun__
         if (fd_set_cpkt(fd) < 0) {
                 auto errsv = vte::libc::ErrnoSaver{};
                 _vte_debug_print(VTE_DEBUG_PTY,
@@ -399,6 +406,7 @@ fd_setup(vte::libc::FD& fd)
                                  "ioctl(TIOCPKT)", g_strerror(errsv));
                 return -1;
         }
+#endif
 
         return 0;
 }
@@ -458,6 +466,7 @@ _vte_pty_open_posix(void)
         }
 #endif /* !linux */
 
+#ifndef __sun__
         if (fd_set_cpkt(fd) < 0) {
                 auto errsv = vte::libc::ErrnoSaver{};
                 _vte_debug_print(VTE_DEBUG_PTY,
@@ -465,6 +474,7 @@ _vte_pty_open_posix(void)
                                  "ioctl(TIOCPKT)", g_strerror(errsv));
                 return {};
         }
+#endif
 
         if (grantpt(fd.get()) != 0) {
                 auto errsv = vte::libc::ErrnoSaver{};


[FILE:2127:patches/patch-src_vte.cc]
--- src/vte.cc.orig	2021-02-16 15:35:49 UTC
+++ src/vte.cc
@@ -29,6 +29,13 @@
 #ifdef HAVE_SYS_TERMIOS_H
 #include <sys/termios.h>
 #endif
+#ifdef HAVE_TERMIOS_H
+#include <termios.h>
+#endif
+#if defined(__sun__)
+#include <sys/ioccom.h>
+#include <sys/ptyvar.h>
+#endif
 
 #include <glib.h>
 #include <glib-unix.h>
@@ -3969,6 +3976,9 @@ Terminal::pty_io_read(int const fd,
 			bp = chunk->data + chunk->len;
 			len = 0;
 			do {
+#ifdef __sun__
+				int ret = read (fd, bp, rem);
+#else
                                 /* We'd like to read (fd, bp, rem); but due to TIOCPKT mode
                                  * there's an extra input byte returned at the beginning.
                                  * We need to see what that byte is, but otherwise drop it
@@ -3980,6 +3990,7 @@ Terminal::pty_io_read(int const fd,
                                 int ret = read (fd, bp - 1, rem + 1);
                                 pkt_header = bp[-1];
                                 bp[-1] = save;
+#endif
 				switch (ret){
 					case -1:
 						err = errno;
@@ -3989,11 +4000,13 @@ Terminal::pty_io_read(int const fd,
 						goto out;
 					default:
                                                 ret--;
-
+#ifndef __sun__
                                                 if (pkt_header == TIOCPKT_DATA) {
+#endif
                                                         bp += ret;
                                                         rem -= ret;
                                                         len += ret;
+#ifndef __sun__
                                                 } else {
                                                         if (pkt_header & TIOCPKT_IOCTL) {
                                                                 /* We'd like to always be informed when the termios change,
@@ -4015,6 +4028,7 @@ Terminal::pty_io_read(int const fd,
                                                                 pty_scroll_lock_changed(false);
                                                         }
                                                 }
+#endif
 						break;
 				}
 			} while (rem);


[FILE:267:patches/patch-src_widget.cc]
--- src/widget.cc.orig	2021-02-16 15:35:49 UTC
+++ src/widget.cc
@@ -22,6 +22,10 @@
 
 #include <sys/wait.h> // for W_EXITCODE
 
+#ifndef W_EXITCODE
+#define W_EXITCODE(ret, sig)	((ret) << 8 | (sig))
+#endif
+
 #include <exception>
 #include <new>
 #include <string>

