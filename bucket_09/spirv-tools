# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		spirv-tools
VERSION=		2024.3
KEYWORDS=		graphics
VARIANTS=		std
SDESC[std]=		API and commands for processing SPIR-V modules
HOMEPAGE=		https://github.com/KhronosGroup/SPIRV-Tools
CONTACT=		nobody

DOWNLOAD_GROUPS=	main headers
SITES[main]=		GITHUB/KhronosGroup:SPIRV-Tools:v2024.3
SITES[headers]=		GITHUB/KhronosGroup:SPIRV-Headers:2acb319:external/spirv-headers
DISTFILE[1]=		generated:main
DISTFILE[2]=		generated:headers
DF_INDEX=		1 2
SPKGS[std]=		set
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cmake shebangfix python:build c++:primary

LICENSE=		APACHE20:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		APACHE20:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"SOURCE_SPIRV_CONSTANT_H_"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/source/spirv_constant.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/spirv-tools
SHEBANG_FILES=		tools/lesspipe/spirv-lesspipe.sh

CMAKE_ARGS=		-DSPIRV_SKIP_TESTS:BOOL=ON

post-install:
.for tool in as cfg dis link lint objdump opt reduce val
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/spirv-${tool}
.endfor
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libSPIRV-Tools-shared.so

[FILE:511:descriptions/desc.primary]
The SPIR-V Tools project provides an API and commands for processing
SPIR-V modules.

The project includes an assembler, binary module parser, disassembler,
validator, and optimizer for SPIR-V. Except for the optimizer, all are
based on a common static library. The library contains all of the
implementation details, and is used in the standalone tools whilst also
enabling integration into other code bases directly. The optimizer
implementation resides in its own library, which depends on the core
library.


[FILE:237:distinfo]
3961edff3410599112a50bfcda2d4a828f7cb12e8294ee0f6169976ef0532b83      3169316 KhronosGroup-SPIRV-Tools-2024.3.tar.gz
de3b90921ea2061e58468389f1b3434d4934d744c933f55a561189c12b3879e5       521369 KhronosGroup-SPIRV-Headers-2acb319.tar.gz


[FILE:160:manifests/plist.primary]
bin/
 spirv-as
 spirv-cfg
 spirv-dis
 spirv-lesspipe.sh
 spirv-link
 spirv-lint
 spirv-objdump
 spirv-opt
 spirv-reduce
 spirv-val
lib/libSPIRV-Tools-shared.so


[FILE:1254:manifests/plist.dev]
include/spirv-tools/
 instrument.hpp
 libspirv.h
 libspirv.hpp
 linker.hpp
 optimizer.hpp
lib/
 libSPIRV-Tools-diff.a
 libSPIRV-Tools-link.a
 libSPIRV-Tools-lint.a
 libSPIRV-Tools-opt.a
 libSPIRV-Tools-reduce.a
 libSPIRV-Tools.a
lib/cmake/SPIRV-Tools/
 SPIRV-ToolsConfig.cmake
 SPIRV-ToolsTarget-%%CMAKE_BUILD_TYPE%%.cmake
 SPIRV-ToolsTarget.cmake
lib/cmake/SPIRV-Tools-diff/
 SPIRV-Tools-diffConfig.cmake
 SPIRV-Tools-diffTargets-%%CMAKE_BUILD_TYPE%%.cmake
 SPIRV-Tools-diffTargets.cmake
lib/cmake/SPIRV-Tools-link/
 SPIRV-Tools-linkConfig.cmake
 SPIRV-Tools-linkTargets-%%CMAKE_BUILD_TYPE%%.cmake
 SPIRV-Tools-linkTargets.cmake
lib/cmake/SPIRV-Tools-lint/
 SPIRV-Tools-lintConfig.cmake
 SPIRV-Tools-lintTargets-%%CMAKE_BUILD_TYPE%%.cmake
 SPIRV-Tools-lintTargets.cmake
lib/cmake/SPIRV-Tools-opt/
 SPIRV-Tools-optConfig.cmake
 SPIRV-Tools-optTargets-%%CMAKE_BUILD_TYPE%%.cmake
 SPIRV-Tools-optTargets.cmake
lib/cmake/SPIRV-Tools-reduce/
 SPIRV-Tools-reduceConfig.cmake
 SPIRV-Tools-reduceTarget-%%CMAKE_BUILD_TYPE%%.cmake
 SPIRV-Tools-reduceTarget.cmake
lib/cmake/SPIRV-Tools-tools/
 SPIRV-Tools-toolsConfig.cmake
 SPIRV-Tools-toolsTargets-%%CMAKE_BUILD_TYPE%%.cmake
 SPIRV-Tools-toolsTargets.cmake
lib/pkgconfig/
 SPIRV-Tools-shared.pc
 SPIRV-Tools.pc


[FILE:516:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2024-06-20 14:29:42 UTC
+++ CMakeLists.txt
@@ -68,7 +68,7 @@ elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "
 elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Android")
   add_definitions(-DSPIRV_ANDROID)
   set(SPIRV_TIMER_ENABLED ${SPIRV_ALLOW_TIMERS})
-elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "FreeBSD")
+elseif("${CMAKE_SYSTEM_NAME}" MATCHES "FreeBSD|DragonFly|MidnightBSD|NetBSD")
   add_definitions(-DSPIRV_FREEBSD)
 elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "OpenBSD")
   add_definitions(-DSPIRV_OPENBSD)

