# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libdom
VERSION=		0.4.2
REVISION=		1
KEYWORDS=		www
VARIANTS=		std
SDESC[std]=		Implementation of the W3C DOM
HOMEPAGE=		https://www.netsurf-browser.org/projects/libdom/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://download.netsurf-browser.org/libs/releases/
DISTFILE[1]=		libdom-0.4.2-src.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		netsurf-buildsystem:single:std
			libhubbub:dev:std
BUILDRUN_DEPENDS=	libhubbub:primary:std
			libwapcaplet:single:std

USES=			gmake pkgconfig expat

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		www/libdom

MAKE_ENV=		COMPONENT_TYPE="lib-shared"

INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		0.4.2

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libdom.so.0.4.2

[FILE:211:descriptions/desc.single]
LibDOM is an implementation of the W3C DOM, written in C. It is currently 
in development for use with NetSurf and is intended to be suitable for use 
in other projects too. For further details, see the readme.


[FILE:102:distinfo]
d05e45af16547014c2b0a3aecf3670fa13d419f505b3f5fc7ac8a1491fc30f3c       878706 libdom-0.4.2-src.tar.gz


[FILE:2069:manifests/plist.single]
include/dom/
 dom.h
 functypes.h
 inttypes.h
 walk.h
include/dom/bindings/hubbub/
 errors.h
 parser.h
include/dom/bindings/xml/
 xmlerror.h
 xmlparser.h
include/dom/core/
 attr.h
 cdatasection.h
 characterdata.h
 comment.h
 doc_fragment.h
 document.h
 document_type.h
 element.h
 entity_ref.h
 exceptions.h
 implementation.h
 namednodemap.h
 node.h
 nodelist.h
 pi.h
 string.h
 text.h
 tokenlist.h
 typeinfo.h
include/dom/events/
 custom_event.h
 document_event.h
 event.h
 event_listener.h
 event_target.h
 events.h
 keyboard_event.h
 mouse_event.h
 mouse_multi_wheel_event.h
 mouse_wheel_event.h
 mutation_event.h
 mutation_name_event.h
 text_event.h
 ui_event.h
include/dom/html/
 html_anchor_element.h
 html_applet_element.h
 html_area_element.h
 html_base_element.h
 html_basefont_element.h
 html_body_element.h
 html_br_element.h
 html_button_element.h
 html_canvas_element.h
 html_collection.h
 html_directory_element.h
 html_div_element.h
 html_dlist_element.h
 html_document.h
 html_element.h
 html_elements.h
 html_fieldset_element.h
 html_font_element.h
 html_form_element.h
 html_frame_element.h
 html_frameset_element.h
 html_head_element.h
 html_heading_element.h
 html_hr_element.h
 html_html_element.h
 html_iframe_element.h
 html_image_element.h
 html_input_element.h
 html_isindex_element.h
 html_label_element.h
 html_legend_element.h
 html_li_element.h
 html_link_element.h
 html_map_element.h
 html_menu_element.h
 html_meta_element.h
 html_mod_element.h
 html_object_element.h
 html_olist_element.h
 html_opt_group_element.h
 html_option_element.h
 html_options_collection.h
 html_paragraph_element.h
 html_param_element.h
 html_pre_element.h
 html_quote_element.h
 html_script_element.h
 html_select_element.h
 html_style_element.h
 html_table_element.h
 html_tablecaption_element.h
 html_tablecell_element.h
 html_tablecol_element.h
 html_tablerow_element.h
 html_tablesection_element.h
 html_text_area_element.h
 html_title_element.h
 html_ulist_element.h
lib/
 libdom.so
 libdom.so.%%SOMAJOR%%
 libdom.so.%%SOVERSION%%
lib/pkgconfig/libdom.pc


[FILE:357:patches/patch-bindings_xml_expat__xmlparser.c]
--- bindings/xml/expat_xmlparser.c.orig	2023-12-27 15:52:07 UTC
+++ bindings/xml/expat_xmlparser.c
@@ -484,7 +484,7 @@ dom_xml_parser_create(const char *enc, c
 
 	UNUSED(int_enc);
 
-	parser = calloc(sizeof(*parser), 1);
+	parser = calloc(1, sizeof(*parser));
 	if (parser == NULL) {
 		msg(DOM_MSG_CRITICAL, mctx, "No memory for parser");
 		return NULL;


[FILE:321:patches/patch-src_core_node.c]
--- src/core/node.c.orig	2023-12-27 15:52:07 UTC
+++ src/core/node.c
@@ -2379,7 +2379,7 @@ static inline dom_exception _dom_event_t
 	if (t == NULL) {
 		/* Create the event target list */
 		size = 64;
-		t = calloc(sizeof(*t), size);
+		t = calloc(size, sizeof(*t));
 		if (t == NULL) {
 			return DOM_NO_MEM_ERR;
 		}


[FILE:622:patches/patch-src_html_html__document.c]
--- src/html/html_document.c.orig	2023-12-27 15:52:07 UTC
+++ src/html/html_document.c
@@ -134,13 +134,13 @@ dom_exception _dom_html_document_initial
 	doc->cookie = NULL;
 	doc->body = NULL;
 
-	doc->memoised = calloc(sizeof(dom_string *), hds_COUNT);
+	doc->memoised = calloc(hds_COUNT, sizeof(dom_string *));
 	if (doc->memoised == NULL) {
 		error = DOM_NO_MEM_ERR;
 		goto out;
 	}
-	doc->elements = calloc(sizeof(dom_string *),
-			DOM_HTML_ELEMENT_TYPE__COUNT);
+	doc->elements = calloc(DOM_HTML_ELEMENT_TYPE__COUNT,
+			sizeof(dom_string *));
 	if (doc->elements == NULL) {
 		error = DOM_NO_MEM_ERR;
 		goto out;

