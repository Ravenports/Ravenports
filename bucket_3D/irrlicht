# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		irrlicht
VERSION=		1.8.5
REVISION=		1
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	High performance realtime 3D engine
HOMEPAGE=		https://irrlicht.sourceforge.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/irrlicht/Irrlicht%20SDK/1.8/1.8.5
DISTFILE[1]=		irrlicht-1.8.5.zip:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	DEBUG
OPTIONS_STANDARD=	DEBUG

BUILD_DEPENDS=		libglvnd:dev:standard
BUILDRUN_DEPENDS=	libglvnd:primary:standard

USES=			c++:single cclibs:single dos2unix gmake jpeg png bz2
			zlib:build
XORG_COMPONENTS=	x11 xxf86vm

LICENSE=		ZLIB:single
LICENSE_FILE=		ZLIB:{{WRKSRC}}/doc/irrlicht-license.txt
LICENSE_SCHEME=		solo

DOS2UNIX_GLOB=		Makefile
			*.cpp
			*.h
			*.txt
FPC_EQUIVALENT=		x11-toolkits/irrlicht

BUILD_WRKSRC=		{{WRKSRC}}/source/Irrlicht
BUILD_TARGET=		sharedlib staticlib
MAKE_ENV=		DESTPREFIX={{STAGEDIR}}{{PREFIX}}

INSTALL_WRKSRC=		{{BUILD_WRKSRC}}
SOVERSION=		1.8.5
PLIST_SUB=		SOMINOR=8

CPPFLAGS=		-DNO_IRR_USE_NON_SYSTEM_JPEG_LIB_
			-DNO_IRR_USE_NON_SYSTEM_LIB_PNG_
			-DNO_IRR_USE_NON_SYSTEM_ZLIB_
			-DNO_IRR_USE_NON_SYSTEM_BZLIB_
			-DNO_IRR_COMPILE_WITH_JOYSTICK_EVENTS_

[DEBUG].MAKEFILE_ON=			WITH_DEBUG=yes
[DEBUG].MAKE_ENV_OFF=			NDEBUG=1

post-patch-netbsd:
	${REINPLACE_CMD} "s/FreeBSD/NetBSD/" ${BUILD_WRKSRC}/*.*

post-patch-dragonfly:
	${REINPLACE_CMD} "s/FreeBSD/DragonFly/" ${BUILD_WRKSRC}/*.*

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libIrrlicht.so.1.8.5
	${INSTALL_DATA} ${BUILD_WRKSRC}/libIrrlicht.a \
		${STAGEDIR}${PREFIX}/lib

[FILE:631:descriptions/desc.single]
The Irrlicht Engine is an open source high performance realtime 3D engine
written in C++. It is completely cross-platform, using D3D, OpenGL and its
own software renderers, and has all of the state-of-the-art features which
can be found in commercial 3d engines. We've got a huge active community,
and there are lots of projects in development that use the engine. You can
find enhancements for Irrlicht all over the web, like alternative terrain
renderers, portal renderers, exporters, world layers, tutorials, editors,
language bindings for java, perl, ruby, basic, python, lua, and so on. And
best of all: It's completely free.


[FILE:97:distinfo]
effb7beed3985099ce2315a959c639b4973aac8210f61e354475a84105944f3d     21827696 irrlicht-1.8.5.zip


[FILE:3402:manifests/plist.single]
include/irrlicht/
 CDynamicMeshBuffer.h
 CIndexBuffer.h
 CMeshBuffer.h
 CVertexBuffer.h
 EAttributes.h
 ECullingTypes.h
 EDebugSceneTypes.h
 EDeviceTypes.h
 EDriverFeatures.h
 EDriverTypes.h
 EGUIAlignment.h
 EGUIElementTypes.h
 EHardwareBufferFlags.h
 EMaterialFlags.h
 EMaterialTypes.h
 EMeshWriterEnums.h
 EMessageBoxFlags.h
 EPrimitiveTypes.h
 ESceneNodeAnimatorTypes.h
 ESceneNodeTypes.h
 EShaderTypes.h
 ETerrainElements.h
 IAnimatedMesh.h
 IAnimatedMeshMD2.h
 IAnimatedMeshMD3.h
 IAnimatedMeshSceneNode.h
 IAttributeExchangingObject.h
 IAttributes.h
 IBillboardSceneNode.h
 IBillboardTextSceneNode.h
 IBoneSceneNode.h
 ICameraSceneNode.h
 IColladaMeshWriter.h
 ICursorControl.h
 IDummyTransformationSceneNode.h
 IDynamicMeshBuffer.h
 IEventReceiver.h
 IFileArchive.h
 IFileList.h
 IFileSystem.h
 IGPUProgrammingServices.h
 IGUIButton.h
 IGUICheckBox.h
 IGUIColorSelectDialog.h
 IGUIComboBox.h
 IGUIContextMenu.h
 IGUIEditBox.h
 IGUIElement.h
 IGUIElementFactory.h
 IGUIEnvironment.h
 IGUIFileOpenDialog.h
 IGUIFont.h
 IGUIFontBitmap.h
 IGUIImage.h
 IGUIImageList.h
 IGUIInOutFader.h
 IGUIListBox.h
 IGUIMeshViewer.h
 IGUIScrollBar.h
 IGUISkin.h
 IGUISpinBox.h
 IGUISpriteBank.h
 IGUIStaticText.h
 IGUITabControl.h
 IGUITable.h
 IGUIToolbar.h
 IGUITreeView.h
 IGUIWindow.h
 IGeometryCreator.h
 IImage.h
 IImageLoader.h
 IImageWriter.h
 IIndexBuffer.h
 ILightManager.h
 ILightSceneNode.h
 ILogger.h
 IMaterialRenderer.h
 IMaterialRendererServices.h
 IMesh.h
 IMeshBuffer.h
 IMeshCache.h
 IMeshLoader.h
 IMeshManipulator.h
 IMeshSceneNode.h
 IMeshWriter.h
 IMetaTriangleSelector.h
 IOSOperator.h
 IParticleAffector.h
 IParticleAnimatedMeshSceneNodeEmitter.h
 IParticleAttractionAffector.h
 IParticleBoxEmitter.h
 IParticleCylinderEmitter.h
 IParticleEmitter.h
 IParticleFadeOutAffector.h
 IParticleGravityAffector.h
 IParticleMeshEmitter.h
 IParticleRingEmitter.h
 IParticleRotationAffector.h
 IParticleSphereEmitter.h
 IParticleSystemSceneNode.h
 IQ3LevelMesh.h
 IQ3Shader.h
 IRandomizer.h
 IReadFile.h
 IReferenceCounted.h
 ISceneCollisionManager.h
 ISceneLoader.h
 ISceneManager.h
 ISceneNode.h
 ISceneNodeAnimator.h
 ISceneNodeAnimatorCameraFPS.h
 ISceneNodeAnimatorCameraMaya.h
 ISceneNodeAnimatorCollisionResponse.h
 ISceneNodeAnimatorFactory.h
 ISceneNodeFactory.h
 ISceneUserDataSerializer.h
 IShaderConstantSetCallBack.h
 IShadowVolumeSceneNode.h
 ISkinnedMesh.h
 ITerrainSceneNode.h
 ITextSceneNode.h
 ITexture.h
 ITimer.h
 ITriangleSelector.h
 IVertexBuffer.h
 IVideoDriver.h
 IVideoModeList.h
 IVolumeLightSceneNode.h
 IWriteFile.h
 IXMLReader.h
 IXMLWriter.h
 IrrCompileConfig.h
 IrrlichtDevice.h
 Keycodes.h
 S3DVertex.h
 SAnimatedMesh.h
 SColor.h
 SExposedVideoData.h
 SIrrCreationParameters.h
 SKeyMap.h
 SLight.h
 SMaterial.h
 SMaterialLayer.h
 SMesh.h
 SMeshBuffer.h
 SMeshBufferLightMap.h
 SMeshBufferTangents.h
 SParticle.h
 SSharedMeshBuffer.h
 SSkinMeshBuffer.h
 SVertexIndex.h
 SVertexManipulator.h
 SViewFrustum.h
 SceneParameters.h
 aabbox3d.h
 coreutil.h
 dimension2d.h
 driverChoice.h
 fast_atof.h
 heapsort.h
 irrAllocator.h
 irrArray.h
 irrList.h
 irrMap.h
 irrMath.h
 irrString.h
 irrTypes.h
 irrXML.h
 irrlicht.h
 irrpack.h
 irrunpack.h
 line2d.h
 line3d.h
 matrix4.h
 path.h
 plane3d.h
 position2d.h
 quaternion.h
 rect.h
 triangle3d.h
 vector2d.h
 vector3d.h
lib/
 libIrrlicht.a
 libIrrlicht.so
 libIrrlicht.so.%%SOMAJOR%%.%%SOMINOR%%
 libIrrlicht.so.%%SOVERSION%%


[FILE:4951:patches/patch-source_Irrlicht_Makefile]
--- source/Irrlicht/Makefile.orig	2021-11-06 04:23:05 UTC
+++ source/Irrlicht/Makefile
@@ -48,33 +48,28 @@ IRRSWRENDEROBJ = CSoftwareDriver.o CSoft
 IRRIOOBJ = CFileList.o CFileSystem.o CLimitReadFile.o CMemoryFile.o CReadFile.o CWriteFile.o CXMLReader.o CXMLWriter.o CWADReader.o CZipReader.o CPakReader.o CNPKReader.o CTarReader.o CMountPointReader.o irrXML.o CAttributes.o lzma/LzmaDec.o
 IRROTHEROBJ = CIrrDeviceSDL.o CIrrDeviceLinux.o CIrrDeviceConsole.o CIrrDeviceStub.o CIrrDeviceWin32.o CIrrDeviceFB.o CLogger.o COSOperator.o Irrlicht.o os.o
 IRRGUIOBJ = CGUIButton.o CGUICheckBox.o CGUIComboBox.o CGUIContextMenu.o CGUIEditBox.o CGUIEnvironment.o CGUIFileOpenDialog.o CGUIFont.o CGUIImage.o CGUIInOutFader.o CGUIListBox.o CGUIMenu.o CGUIMeshViewer.o CGUIMessageBox.o CGUIModalScreen.o CGUIScrollBar.o CGUISpinBox.o CGUISkin.o CGUIStaticText.o CGUITabControl.o CGUITable.o CGUIToolBar.o CGUIWindow.o CGUIColorSelectDialog.o CDefaultGUIElementFactory.o CGUISpriteBank.o CGUIImageList.o CGUITreeView.o
-ZLIBOBJ = zlib/adler32.o zlib/compress.o zlib/crc32.o zlib/deflate.o zlib/inffast.o zlib/inflate.o zlib/inftrees.o zlib/trees.o zlib/uncompr.o zlib/zutil.o
-JPEGLIBOBJ = jpeglib/jcapimin.o jpeglib/jcapistd.o jpeglib/jccoefct.o jpeglib/jccolor.o jpeglib/jcdctmgr.o jpeglib/jchuff.o jpeglib/jcinit.o jpeglib/jcmainct.o jpeglib/jcmarker.o jpeglib/jcmaster.o jpeglib/jcomapi.o jpeglib/jcparam.o jpeglib/jcprepct.o jpeglib/jcsample.o jpeglib/jctrans.o jpeglib/jdapimin.o jpeglib/jdapistd.o jpeglib/jdatadst.o jpeglib/jdatasrc.o jpeglib/jdcoefct.o jpeglib/jdcolor.o jpeglib/jddctmgr.o jpeglib/jdhuff.o jpeglib/jdinput.o jpeglib/jdmainct.o jpeglib/jdmarker.o jpeglib/jdmaster.o jpeglib/jdmerge.o jpeglib/jdpostct.o jpeglib/jdsample.o jpeglib/jdtrans.o jpeglib/jerror.o jpeglib/jfdctflt.o jpeglib/jfdctfst.o jpeglib/jfdctint.o jpeglib/jidctflt.o jpeglib/jidctfst.o jpeglib/jidctint.o jpeglib/jmemmgr.o jpeglib/jmemnobs.o jpeglib/jquant1.o jpeglib/jquant2.o jpeglib/jutils.o jpeglib/jcarith.o jpeglib/jdarith.o jpeglib/jaricom.o
-LIBPNGOBJ = libpng/png.o libpng/pngerror.o libpng/pngget.o libpng/pngmem.o libpng/pngpread.o libpng/pngread.o libpng/pngrio.o libpng/pngrtran.o libpng/pngrutil.o libpng/pngset.o libpng/pngtrans.o libpng/pngwio.o libpng/pngwrite.o libpng/pngwtran.o libpng/pngwutil.o
 LIBAESGM = aesGladman/aescrypt.o aesGladman/aeskey.o aesGladman/aestab.o aesGladman/fileenc.o aesGladman/hmac.o aesGladman/prng.o aesGladman/pwd2key.o aesGladman/sha1.o aesGladman/sha2.o
-BZIP2OBJ = bzip2/blocksort.o bzip2/huffman.o bzip2/crctable.o bzip2/randtable.o bzip2/bzcompress.o bzip2/decompress.o bzip2/bzlib.o
 
 # Next variable is for additional scene nodes etc. of customized Irrlicht versions
 EXTRAOBJ =
 LINKOBJ = $(IRRMESHOBJ) $(IRROBJ) $(IRRPARTICLEOBJ) $(IRRANIMOBJ) \
 	$(IRRVIDEOOBJ) $(IRRSWRENDEROBJ) $(IRRIOOBJ) $(IRROTHEROBJ) \
-	$(IRRGUIOBJ) $(ZLIBOBJ) $(JPEGLIBOBJ) $(LIBPNGOBJ) $(LIBAESGM) \
-	$(BZIP2OBJ) $(EXTRAOBJ)
+	$(IRRGUIOBJ) $(LIBAESGM) $(EXTRAOBJ)
 
 ###############
 #Compiler flags
-CXXINCS = -I../../include -Izlib -Ijpeglib -Ilibpng
+LOCALBASE ?=
+CXXINCS = -I../../include -I${LOCALBASE}/include
+CPPFLAGS ?=
 CPPFLAGS += $(CXXINCS) -DIRRLICHT_EXPORTS=1
 CXXFLAGS += -Wall -pipe -fno-exceptions -fno-rtti -fstrict-aliasing
 ifndef NDEBUG
 CXXFLAGS += -g -D_DEBUG
-else
-CXXFLAGS += -fexpensive-optimizations -O3
 endif
 ifdef PROFILE
 CXXFLAGS += -pg
 endif
-CFLAGS := -O3 -fexpensive-optimizations -DPNG_THREAD_UNSAFE_OK -DPNG_NO_MMX_CODE -DPNG_NO_MNG_FEATURES
+CFLAGS ?=
 
 sharedlib sharedlib_osx: CXXFLAGS += -fPIC
 sharedlib sharedlib_osx: CFLAGS += -fPIC
@@ -84,14 +79,16 @@ ifeq ($(HOSTTYPE), x86_64)
 LIBSELECT=64
 endif
 
-#Linux specific options
-staticlib sharedlib install: SYSTEM = Linux
+OPSYS ?=
+LDFLAGS ?=
+staticlib sharedlib install: SYSTEM = ${OPSYS}
 STATIC_LIB = libIrrlicht.a
 LIB_PATH = ../../lib/$(SYSTEM)
-INSTALL_DIR = /usr/local/lib
+DESTPREFIX ?=
+INSTALL_DIR = ${DESTPREFIX}/lib
 sharedlib install: SHARED_LIB = libIrrlicht.so
-sharedlib: LDFLAGS += -L/usr/X11R6/lib$(LIBSELECT) -lGL -lXxf86vm
-staticlib sharedlib: CXXINCS += -I/usr/X11R6/include
+sharedlib: LDFLAGS += -L${LOCALBASE}/lib -lGL -lXxf86vm -lX11 -lpng -ljpeg -lbz2 -lz
+staticlib sharedlib: CXXINCS += -I${LOCALBASE}/include
 
 #OSX specific options
 staticlib_osx sharedlib_osx install_osx: SYSTEM = MacOSX
@@ -181,9 +178,9 @@ endif
 
 help:
 	@echo "Available targets for Irrlicht"
-	@echo " sharedlib: Build shared library Irrlicht.so for Linux"
-	@echo " staticlib: Build static library Irrlicht.a for Linux"
-	@echo " install: Copy shared library to /usr/local/lib"
+	@echo " sharedlib: Build shared library Irrlicht.so for ${OPSYS}"
+	@echo " staticlib: Build static library Irrlicht.a for ${OPSYS}"
+	@echo " install: Copy shared library to ${LOCALBASE}"
 	@echo ""
 	@echo " sharedlib_win32: Build shared library Irrlicht.dll for Windows"
 	@echo " staticlib_win32: Build static library Irrlicht.a for Windows"

