# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libofx
VERSION=		0.9.14
KEYWORDS=		finance
VARIANTS=		standard
SDESC[standard]=	Open Financial eXchange (OFX) Library
HOMEPAGE=		http://libofx.sourceforge.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/libofx/libofx
DISTFILE[1]=		libofx-0.9.14.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	OpenSP:single:standard
			curl:primary:standard

USES=			gmake iconv libtool pkgconfig gettext-runtime ssl
GNOME_COMPONENTS=	libxml++26

LICENSE=		GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"LIBOFX_H"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/inc/libofx.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		finance/libofx

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-doxygen
			--disable-dot
			--disable-gengetopt
			--with-opensp-includes={{LOCALBASE}}/include/OpenSP
			--with-opensp-libs={{LOCALBASE}}/lib

INSTALL_TARGET=		install-strip
SOVERSION=		7.0.2

post-install:
	${RM} ${STAGEDIR}${STD_DOCDIR}/COPYING

[FILE:542:descriptions/desc.primary]
LibOFX is a parser and an API designed to allow applications to
very easily support OFX command responses, usually provided by
financial institutions for statement downloads.

LibOFX was implemented directly from the full OFX 1.6 spec, and
currently supports:

 - Banking transactions and statements
 - Credit card and statements
 - Investment transactions
 - OFX 2.0

Future projects for LibOFX include:

 - Header parsing
 - DTD autodetection
 - Currency conversion
 - QIF import
 - QIF export (integrated inside the library)
 - OFX export


[FILE:99:distinfo]
b82757bfa15b27c02fb39dfd017cdfe5af51a063ba15afe495dd1b7367ff290a      1639297 libofx-0.9.14.tar.gz


[FILE:267:manifests/plist.primary]
bin/
 ofx2qif
 ofxconnect
 ofxdump
include/libofx/libofx.h
lib/
 libofx.a
 libofx.so
 libofx.so.%%SOMAJOR%%
 libofx.so.%%SOVERSION%%
lib/pkgconfig/libofx.pc
share/libofx/dtd/
 ofc.dtd
 ofx160.dtd
 ofx201.dtd
 opensp.dcl
share/man/man1/
 ofxconnect.1.gz
 ofxdump.1.gz


[FILE:420:patches/patch-configure]
--- configure.orig	2019-02-11 22:36:50 UTC
+++ configure
@@ -3811,7 +3811,7 @@ $as_echo "#define HAVE_GCC_VISIBILITY_EX
 
 	VISIBILITY_FLAGS="-fvisibility=hidden"
 	CFLAGS="$VISIBILITY_FLAGS $CFLAGS"
-	CXXFLAGS="$VISIBILITY_FLAGS -fvisibility-inlines-hidden $CFLAGS"
+	CXXFLAGS="$VISIBILITY_FLAGS -fvisibility-inlines-hidden $CXXFLAGS"
 fi
 
 ## Pass -DIN_LIBOFX to the compiler so we can detect it and include config.h


[FILE:551:patches/patch-lib_ofx__preproc.cpp]
Solaris 10u8 has an older prototype

--- lib/ofx_preproc.cpp.orig	2019-02-11 22:26:59 UTC
+++ lib/ofx_preproc.cpp
@@ -306,7 +306,7 @@ int ofx_proc_file(LibofxContextPtr ctx,
             size_t outbytesleft = inbytesleft * 2 - 1;
             char * iconv_buffer = (char*) malloc (inbytesleft * 2);
             memset(iconv_buffer, 0, inbytesleft * 2);
-#if defined(__sun) || defined(__NetBSD__)
+#if defined(__NetBSD__)
             const char * inchar = (const char *)s_buffer.c_str();
 #else
             char * inchar = (char *)s_buffer.c_str();


[FILE:418:patches/patch-lib_ofx__utilities.cpp]
--- lib/ofx_utilities.cpp.orig	2018-04-30 15:26:35 UTC
+++ lib/ofx_utilities.cpp
@@ -138,6 +138,11 @@ time_t ofxdate_to_time_t(const string of
   char time_zone_specified = false;
   string ofxdate_whole;
   time_t temptime;
+  int daylight = 0;
+
+  tzset();
+  if(tzname[1][0] != ' ')
+    daylight = 1;
 
   std::time(&temptime);
   local_offset = difftime(mktime(localtime(&temptime)), mktime(gmtime(&temptime)));


[FILE:232:patches/patch-ofxconnect_ofxpartner.cpp]
--- ofxconnect/ofxpartner.cpp.orig	2013-04-24 16:05:44 UTC
+++ ofxconnect/ofxpartner.cpp
@@ -37,6 +37,7 @@
 #include <vector>
 #include <algorithm>
 #include <string.h>
+#include <unistd.h>
 
 using std::string;
 using std::vector;

