# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		cbindgen
VERSION=		0.9.1
KEYWORDS=		rust devel
VARIANTS=		standard
SDESC[standard]=	Tool for generating C bindings to Rust code
HOMEPAGE=		https://github.com/eqrion/cbindgen
CONTACT=		nobody

DOWNLOAD_GROUPS=	main cr16 cr17 cr18 cr19 cr01 cr02 cr03 cr04 cr05 cr06 cr07 cr30 cr08 cr31 cr09 cr32 cr33 cr34 cr35 cr36 cr37 cr38 cr20 cr21 cr22 cr23 cr24 cr25 cr26 cr27 cr28 cr29 cr10 cr11 cr12 cr13 cr14 cr15
SITES[cr16]=		CRATES/rand_chacha:0.2.1
SITES[cr17]=		CRATES/rand_core:0.5.0
SITES[cr18]=		CRATES/rand_hc:0.2.0
SITES[cr19]=		CRATES/redox_syscall:0.1.56
SITES[cr01]=		CRATES/ansi_term:0.11.0
SITES[cr02]=		CRATES/atty:0.2.13
SITES[cr03]=		CRATES/bitflags:1.1.0
SITES[cr04]=		CRATES/c2-chacha:0.2.2
SITES[cr05]=		CRATES/cfg-if:0.1.9
SITES[cr06]=		CRATES/clap:2.33.0
SITES[cr07]=		CRATES/getrandom:0.1.11
SITES[main]=		https://crates.io/api/v1/crates/cbindgen/0.9.1/download?dummy=/
SITES[cr30]=		CRATES/unicode-width:0.1.6
SITES[cr08]=		CRATES/itoa:0.4.4
SITES[cr31]=		CRATES/unicode-xid:0.2.0
SITES[cr09]=		CRATES/lazy_static:1.4.0
SITES[cr32]=		CRATES/vec_map:0.8.1
SITES[cr33]=		CRATES/wasi:0.5.0
SITES[cr34]=		CRATES/winapi:0.3.7
SITES[cr35]=		CRATES/winapi-i686-pc-windows-gnu:0.4.0
SITES[cr36]=		CRATES/winapi-x86_64-pc-windows-gnu:0.4.0
SITES[cr37]=		CRATES/gcc:0.3.55
SITES[cr38]=		CRATES/errno-dragonfly:0.1.1
SITES[cr20]=		CRATES/remove_dir_all:0.5.2
SITES[cr21]=		CRATES/ryu:1.0.0
SITES[cr22]=		CRATES/serde:1.0.99
SITES[cr23]=		CRATES/serde_derive:1.0.99
SITES[cr24]=		CRATES/serde_json:1.0.40
SITES[cr25]=		CRATES/strsim:0.8.0
SITES[cr26]=		CRATES/syn:1.0.5
SITES[cr27]=		CRATES/tempfile:3.1.0
SITES[cr28]=		CRATES/textwrap:0.11.0
SITES[cr29]=		CRATES/toml:0.5.3
SITES[cr10]=		CRATES/libc:0.2.62
SITES[cr11]=		CRATES/log:0.4.8
SITES[cr12]=		CRATES/ppv-lite86:0.2.5
SITES[cr13]=		CRATES/proc-macro2:1.0.1
SITES[cr14]=		CRATES/quote:1.0.2
SITES[cr15]=		CRATES/rand:0.7.0
DISTFILE[1]=		cbindgen-0.9.1.tar.gz:main
DISTFILE[2]=		generated:cr01
DISTFILE[3]=		generated:cr02
DISTFILE[4]=		generated:cr03
DISTFILE[5]=		generated:cr04
DISTFILE[6]=		generated:cr05
DISTFILE[7]=		generated:cr06
DISTFILE[8]=		generated:cr07
DISTFILE[9]=		generated:cr08
DISTFILE[10]=		generated:cr09
DISTFILE[11]=		generated:cr10
DISTFILE[12]=		generated:cr11
DISTFILE[13]=		generated:cr12
DISTFILE[14]=		generated:cr13
DISTFILE[15]=		generated:cr14
DISTFILE[16]=		generated:cr15
DISTFILE[17]=		generated:cr16
DISTFILE[18]=		generated:cr17
DISTFILE[19]=		generated:cr18
DISTFILE[20]=		generated:cr19
DISTFILE[21]=		generated:cr20
DISTFILE[22]=		generated:cr21
DISTFILE[23]=		generated:cr22
DISTFILE[24]=		generated:cr23
DISTFILE[25]=		generated:cr24
DISTFILE[26]=		generated:cr25
DISTFILE[27]=		generated:cr26
DISTFILE[28]=		generated:cr27
DISTFILE[29]=		generated:cr28
DISTFILE[30]=		generated:cr29
DISTFILE[31]=		generated:cr30
DISTFILE[32]=		generated:cr31
DISTFILE[33]=		generated:cr32
DISTFILE[34]=		generated:cr33
DISTFILE[35]=		generated:cr34
DISTFILE[36]=		generated:cr35
DISTFILE[37]=		generated:cr36
DISTFILE[38]=		generated:cr37
DISTFILE[39]=		generated:cr38
DIST_SUBDIR=		rust/crates
DF_INDEX=		1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
			21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
			38 39
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

B_DEPS[linux]=		libiconv:shared:standard

USES=			cargo cclibs:single

LICENSE=		MPL:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		MPL:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/main.rs
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/rust-cbindgen

[FILE:726:descriptions/desc.single]
cbindgen generates C bindings from Rust code. Unlike rusty-cheddar it
supports generics, C++ enum class and template specialization as well
as multiple modules and crates. It's primarily developed for WebRender
but has been designed to support any project.

Features:
 * Builds bindings for a crate, mods, dependent crates, and their mods
 * Only the necessary types for exposed functions are given bindings
 * Can specify annotations for controlling some aspects of binding
 * Support for generic structs and unions
 * Support for exporting constants and statics
 * Customizable formatting, can be used in C or C++ projects
 * Support for generating #ifdef's for #[cfg] attributes
 * Support for #[repr(sized)] tagged enum's


[FILE:4402:distinfo]
9daec6140ab4dcd38c3dd57e580b59a621172a526ac79f1527af760a55afeafd       129676 rust/crates/cbindgen-0.9.1.tar.gz
ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b        17087 rust/crates/ansi_term-0.11.0.tar.gz
1803c647a3ec87095e7ae7acfca019e98de5ec9a7d01343f611cf3152ed71a90         4764 rust/crates/atty-0.2.13.tar.gz
3d155346769a6855b86399e9bc3814ab343cd3d62c7e985113d46a0ec3c281fd        16322 rust/crates/bitflags-1.1.0.tar.gz
7d64d04786e0f528460fc884753cf8dddcc466be308f6026f8e355c41a0e4101        13766 rust/crates/c2-chacha-0.2.2.tar.gz
b486ce3ccf7ffd79fdeb678eac06a9e6c09fc88d33836340becb8fffe87c5e33         7353 rust/crates/cfg-if-0.1.9.tar.gz
5067f5bb2d80ef5d68b4c87db81601f0b75bca627bc2ef76b141d7b846a3c6d9       196458 rust/crates/clap-2.33.0.tar.gz
fc344b02d3868feb131e8b5fe2b9b0a1cc42942679af493061fc13b853243872        23699 rust/crates/getrandom-0.1.11.tar.gz
501266b7edd0174f8530248f87f99c88fbe60ca4ef3dd486835b8d8d53136f7f        11147 rust/crates/itoa-0.4.4.tar.gz
e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646        10443 rust/crates/lazy_static-1.4.0.tar.gz
34fcd2c08d2f832f376f4173a231990fa5aef4e99fb569867318a227ef4c06ba       433193 rust/crates/libc-0.2.62.tar.gz
14b6052be84e6b71ab17edffc2eeabf5c2c3ae1fdb464aae35ac50c67a44e1f7        31297 rust/crates/log-0.4.8.tar.gz
e3cbf9f658cdb5000fcf6f362b8ea2ba154b9f146a61c7a20d647034c6b6561b        20606 rust/crates/ppv-lite86-0.2.5.tar.gz
4c5c2380ae88876faae57698be9e9775e3544decad214599c3a6266cca6ac802        34874 rust/crates/proc-macro2-1.0.1.tar.gz
053a8c8bcc71fcce321828dc897a98ab9760bef03a4fc36693c231e5b3216cfe        23023 rust/crates/quote-1.0.2.tar.gz
d47eab0e83d9693d40f825f86948aa16eff6750ead4bdffc4ab95b8b3a7f052c       104208 rust/crates/rand-0.7.0.tar.gz
03a2a90da8c7523f554344f921aa97283eadf6ac484a6d2a7d0212fa7f8d6853        11475 rust/crates/rand_chacha-0.2.1.tar.gz
615e683324e75af5d43d8f7a39ffe3ee4a9dc42c5c701167a71dc59c3a493aca        19736 rust/crates/rand_core-0.5.0.tar.gz
ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c        11670 rust/crates/rand_hc-0.2.0.tar.gz
2439c63f3f6139d1b57529d16bc3b8bb855230c8efcc5d3a896c8bea7c3b1e84        17117 rust/crates/redox_syscall-0.1.56.tar.gz
4a83fa3702a688b9359eccba92d153ac33fd2e8462f9e0e3fdf155239ea7792e         8907 rust/crates/remove_dir_all-0.5.2.tar.gz
c92464b447c0ee8c4fb3824ecc8383b81717b9f1e74ba2e72540aef7b9f82997        40170 rust/crates/ryu-1.0.0.tar.gz
fec2851eb56d010dc9a21b89ca53ee75e6528bab60c11e89d38390904982da9f        72436 rust/crates/serde-1.0.99.tar.gz
cb4dc18c61206b08dc98216c98faa0232f4337e1e1b8574551d5bad29ea1b425        49786 rust/crates/serde_derive-1.0.99.tar.gz
051c49229f282f7c6f3813f8286cc1e3323e8051823fce42c7ea80fe13521704        69695 rust/crates/serde_json-1.0.40.tar.gz
8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a         9309 rust/crates/strsim-0.8.0.tar.gz
66850e97125af79138385e9b88339cbcd037e3f28ceab8c5ad98e64f0f1f80bf       190286 rust/crates/syn-1.0.5.tar.gz
7a6e24d9338a0a5be79593e2fa15a648add6138caa803e2d5bc782c371732ca9        25823 rust/crates/tempfile-3.1.0.tar.gz
d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060        17322 rust/crates/textwrap-0.11.0.tar.gz
c7aabe75941d914b72bf3e5d3932ed92ce0664d49d8432305a8b547c37227724        51654 rust/crates/toml-0.5.3.tar.gz
7007dbd421b92cc6e28410fe7362e2e0a2503394908f417b68ec8d1c364c4e20        16394 rust/crates/unicode-width-0.1.6.tar.gz
826e7639553986605ec5979c7dd957c7895e93eabed50ab2ffa7f6128a75097c        14994 rust/crates/unicode-xid-0.2.0.tar.gz
05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a        14959 rust/crates/vec_map-0.8.1.tar.gz
fd5442abcac6525a045cc8c795aedb60da7a2e5e89c7bf18a0d5357849bb23c7        31104 rust/crates/wasi-0.5.0.tar.gz
f10e386af2b13e47c89e7236a7a14a086791a2b88ebad6df9bf42040195cf770      1075776 rust/crates/winapi-0.3.7.tar.gz
ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6      2918815 rust/crates/winapi-i686-pc-windows-gnu-0.4.0.tar.gz
712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f      2947998 rust/crates/winapi-x86_64-pc-windows-gnu-0.4.0.tar.gz
8f5f3913fa0bfe7ee1fd8248b6b9f42a5af4b9d65ec2dd2c3c26132b950ecfc2        37262 rust/crates/gcc-0.3.55.tar.gz
14ca354e36190500e1e1fb267c647932382b54053c50b14970856c0b00a35067         1370 rust/crates/errno-dragonfly-0.1.1.tar.gz


[FILE:13:manifests/plist.single]
bin/cbindgen


[FILE:1413:dragonfly/patch-temp_errno_fixup]
--- cargo-crates/getrandom-0.1.11/Cargo.toml.intermediate	2019-09-06 14:30:19.000000000 +0000
+++ cargo-crates/getrandom-0.1.11/Cargo.toml
@@ -33,6 +33,9 @@ version = "1.0"
 optional = true
 package = "rustc-std-workspace-core"
 
+[dependencies.errno-dragonfly]
+version = "0.1.1"
+
 [dependencies.log]
 version = "0.4"
 optional = true
--- cargo-crates/getrandom-0.1.11/src/util_libc.rs.orig	2019-08-24 23:12:51 UTC
+++ cargo-crates/getrandom-0.1.11/src/util_libc.rs
@@ -10,6 +10,7 @@ use crate::util::LazyUsize;
 use crate::Error;
 use core::num::NonZeroU32;
 use core::ptr::NonNull;
+extern crate errno_dragonfly;
 
 cfg_if! {
     if #[cfg(any(target_os = "netbsd", target_os = "openbsd", target_os = "android"))] {
@@ -18,10 +19,13 @@ cfg_if! {
         use libc::__errno_location as errno_location;
     } else if #[cfg(any(target_os = "solaris", target_os = "illumos"))] {
         use libc::___errno as errno_location;
-    } else if #[cfg(any(target_os = "macos", target_os = "freebsd", target_os = "dragonfly"))] {
+    } else if #[cfg(any(target_os = "macos", target_os = "freebsd"))] {
         use libc::__error as errno_location;
     } else if #[cfg(target_os = "haiku")] {
         use libc::_errnop as errno_location;
+    } else if #[cfg(target_os = "dragonfly")] {
+        // soon will be use libc::__errno_location as errno_location;
+        use errno_dragonfly::errno_location;
     }
 }
 

