# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		php74-sockets
VERSION=		7.4.32
KEYWORDS=		lang www php net
VARIANTS=		standard
SDESC[standard]=	PHP 7.4 extension: sockets interface
HOMEPAGE=		https://php.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		PHP/distributions
DISTFILE[1]=		php-7.4.32.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			php:ext,74 cpe

DISTNAME=		php-7.4.32/ext/{{PHP_MODNAME}}
EXTRACT_HEAD[1]=	{{TAR}} -xf
EXTRACT_TAIL[1]=	php-7.4.32/ext/{{PHP_MODNAME}}

CPE_PRODUCT=		php
CPE_VENDOR=		php
FPC_EQUIVALENT=		net/php74-sockets

CONFIGURE_ARGS=		--enable-sockets

VAR_OPSYS[sunos]=	CONFIGURE_ENV=ac_cv_func_if_indextoname=yes
			CFLAGS=-D_XOPEN_SOURCE=600

[FILE:57:descriptions/desc.single]
This package contains the sockets extension for PHP 7.4.


[FILE:96:distinfo]
323332c991e8ef30b1d219cb10f5e30f11b5f319ce4c6642a5470d75ade7864a     10419092 php-7.4.32.tar.xz


[FILE:1283:patches/patch-conversions.c]
--- conversions.c.orig	2021-07-27 18:08:32 UTC
+++ conversions.c
@@ -1310,6 +1310,7 @@ void to_zval_read_in6_pktinfo(const char
 
 /* CONVERSIONS for struct ucred */
 #ifdef SO_PASSCRED
+#if !defined(__DragonFly__)
 static const field_descriptor descriptors_ucred[] = {
 		{"pid", sizeof("pid"), 1, offsetof(struct ucred, pid), from_zval_write_pid_t, to_zval_read_pid_t},
 		{"uid", sizeof("uid"), 1, offsetof(struct ucred, uid), from_zval_write_uid_t, to_zval_read_uid_t},
@@ -1317,6 +1318,15 @@ static const field_descriptor descriptor
 		{"gid", sizeof("gid"), 1, offsetof(struct ucred, gid), from_zval_write_uid_t, to_zval_read_uid_t},
 		{0}
 };
+#else
+static const field_descriptor descriptors_ucred[] = {
+		{"pid", sizeof("pid"), 1, offsetof(struct cmsgcred, cmcred_pid), from_zval_write_pid_t, to_zval_read_pid_t},
+		{"uid", sizeof("uid"), 1, offsetof(struct cmsgcred, cmcred_uid), from_zval_write_uid_t, to_zval_read_uid_t},
+		/* assume the type gid_t is the same as uid_t: */
+		{"gid", sizeof("gid"), 1, offsetof(struct cmsgcred, cmcred_gid), from_zval_write_uid_t, to_zval_read_uid_t},
+		{0}
+};
+#endif
 void from_zval_write_ucred(const zval *container, char *ucred_c, ser_context *ctx)
 {
 	from_zval_write_aggregation(container, ucred_c, descriptors_ucred, ctx);


[FILE:1155:patches/patch-sendrecvmsg.c]
--- sendrecvmsg.c.orig	2021-07-27 18:08:32 UTC
+++ sendrecvmsg.c
@@ -25,6 +25,9 @@
 #ifdef ZTS
 #include <TSRM/TSRM.h>
 #endif
+#ifdef __DragonFly__
+#include <sys/ucred.h>
+#endif
 
 #define MAX_USER_BUFF_SIZE ((size_t)(100*1024*1024))
 #define DEFAULT_BUFF_SIZE 8192
@@ -124,8 +127,13 @@ static void init_ancillary_registry(void
 #endif
 
 #ifdef SO_PASSCRED
+#if !defined(__DragonFly__)
 	PUT_ENTRY(sizeof(struct ucred), 0, 0, from_zval_write_ucred,
 			to_zval_read_ucred, SOL_SOCKET, SCM_CREDENTIALS);
+#else
+	PUT_ENTRY(sizeof(struct cmsgcred), 0, 0, from_zval_write_ucred,
+			to_zval_read_ucred, SOL_SOCKET, SCM_CREDS);
+#endif	
 #endif
 
 #ifdef SCM_RIGHTS
@@ -439,7 +447,11 @@ void php_socket_sendrecvmsg_init(INIT_FU
 	REGISTER_LONG_CONSTANT("SCM_RIGHTS",			SCM_RIGHTS,			CONST_CS | CONST_PERSISTENT);
 #endif
 #ifdef SO_PASSCRED
+#if !defined(__DragonFly__)
 	REGISTER_LONG_CONSTANT("SCM_CREDENTIALS",		SCM_CREDENTIALS,	CONST_CS | CONST_PERSISTENT);
+#else
+	REGISTER_LONG_CONSTANT("SCM_CREDS",			SCM_CREDS,		CONST_CS | CONST_PERSISTENT);
+#endif
 	REGISTER_LONG_CONSTANT("SO_PASSCRED",			SO_PASSCRED,		CONST_CS | CONST_PERSISTENT);
 #endif
 

