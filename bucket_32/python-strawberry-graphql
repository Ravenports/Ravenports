# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-strawberry-graphql
VERSION=		0.273.0
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Library for creating GraphQL APIs (3.12)
SDESC[v13]=		Library for creating GraphQL APIs (3.13)
HOMEPAGE=		https://strawberry.rocks/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/08/08/3efd0e1b9721f5c96178ccf4756538f98b0d9113bdedbbe9abaae82102d3
DISTFILE[1]=		strawberry_graphql-0.273.0-py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		strawberry_graphql-0.273.0.dist-info

GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-graphql-core:single:v12
					python-packaging:single:v12
					python-python-dateutil:single:v12
					python-typing-extensions:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-graphql-core:single:v13
					python-packaging:single:v13
					python-python-dateutil:single:v13
					python-typing-extensions:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:1841:descriptions/desc.single]
[image]

# Strawberry GraphQL

> Python GraphQL library based on dataclasses

[CircleCI]
[Discord]
[PyPI]

## Installation ( Quick Start )

The quick start method provides a server and CLI to get going quickly.
Install
with:

```shell
pip install "strawberry-graphql[debug-server]"
```

## Getting Started

Create a file called `app.py` with the following code:

```python
import strawberry

@strawberry.type
class User:
    name: str
    age: int

@strawberry.type
class Query:
    @strawberry.field
    def user(self) -> User:
        return User(name="Patrick", age=100)

schema = strawberry.Schema(query=Query)
```

This will create a GraphQL schema defining a `User` type and a single query
field `user` that will return a hardcoded user.

To run the debug server run the following command:

`shell
strawberry server app
`

Open the debug server by clicking on the following link:
[http://0.0.0.0:8000/graphql]

This will open GraphiQL where you can test the API.

### Type-checking

Strawberry comes with a [mypy] plugin that enables statically type-checking
your
GraphQL schema. To enable it, add the following lines to your `mypy.ini`
configuration:

```ini
[mypy]
plugins = strawberry.ext.mypy_plugin
```

[mypy]: http://www.mypy-lang.org/

### Django Integration

A Django view is provided for adding a GraphQL endpoint to your
application.

1. Add the app to your `INSTALLED_APPS`.

```python
INSTALLED_APPS = [
    ...,  # your other apps
    "strawberry.django",
]
```

2. Add the view to your `urls.py` file.

```python
from strawberry.django.views import GraphQLView
from .schema import schema

urlpatterns = [
    ...,
    path("graphql", GraphQLView.as_view(schema=schema)),
]
```

## Examples

* [Various examples on how to use Strawberry]
* [Full stack example using Starlette, SQLAlchemy, Typescript codegen and
Next.js]


[FILE:133:distinfo]
eadb4677e42a1595e6ddb9e15d892b18ee1e92f0e9a53a9b62cdc7a9a8c26930       303843 python-src/strawberry_graphql-0.273.0-py3-none-any.whl

