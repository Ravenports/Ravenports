# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-netaddr
VERSION=		0.7.19
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		Network address manipulation library (PY37)
SDESC[py38]=		Network address manipulation library (PY38)
HOMEPAGE=		https://github.com/drkjam/netaddr/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/n/netaddr
DISTFILE[1]=		netaddr-0.7.19.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		netaddr-0.7.19

GENERATED=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[FILE:736:descriptions/desc.single]
Provides support for:

Layer 3 addresses
-----------------

- IPv4 and IPv6 addresses, subnets, masks, prefixes
- iterating, slicing, sorting, summarizing and classifying IP networks
- dealing with various ranges formats (CIDR, arbitrary ranges and globs,
nmap)
- set based operations (unions, intersections etc) over IP addresses and
subnets
- parsing a large variety of different formats and notations
- looking up IANA IP block information
- generating DNS reverse lookups
- supernetting and subnetting

Layer 2 addresses
-----------------

- representation and manipulation MAC addresses and EUI-64 identifiers
- looking up IEEE organisational information (OUI, IAB)
- generating derived IPv6 addresses

Documentation
-------------


[FILE:100:distinfo]
38aeec7cdd035081d3a4c306394b19d677623bf76fa0913f6695127c7753aefd      1622835 netaddr-0.7.19.tar.gz


[FILE:391:patches/patch-setup.py]
--- setup.py.orig	2017-01-11 23:42:52 UTC
+++ setup.py
@@ -174,11 +174,6 @@ def main():
         scripts=['netaddr/tools/netaddr'],
         url='https://github.com/drkjam/netaddr/',
         version=netaddr.__version__,
-        options={
-            'build_scripts': {
-                'executable': '/usr/bin/env python',
-            },
-        },
     )
 
     setup(**setup_options)

