# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-drf-yasg
VERSION=		1.21.6
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Django Swagger/OpenAPI spec generator (3.10)
SDESC[v11]=		Django Swagger/OpenAPI spec generator (3.11)
HOMEPAGE=		https://github.com/axnsan12/drf-yasg
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/6e/33/2af986c4636ddb4c59ee05ac1aeea222f747e2875398a131006fc887f1bb
DISTFILE[1]=		drf_yasg-1.21.6-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		drf_yasg-1.21.6.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-djangorestframework:single:py310
					python-Django:single:py310
					python-PyYAML:single:py310
					python-inflection:single:py310
					python-packaging:single:py310
					python-pytz:single:py310
					python-uritemplate:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-djangorestframework:single:v11
					python-Django:single:v11
					python-PyYAML:single:v11
					python-inflection:single:v11
					python-packaging:single:v11
					python-pytz:single:v11
					python-uritemplate:single:v11
[PY311].USES_ON=			python:v11,wheel

[FILE:1061:descriptions/desc.single]
   :alt: GitHub Workflow Status

   :alt: Codecov

   :alt: PyPI

   :alt: ReadTheDocs

   :alt: Heroku deploy button

.. |nbsp| unicode:: 0xA0
   :trim:

drf-extra-fields
=================

Integration with `drf-extra-fields
<https://github.com/Hipo/drf-extra-fields>`_ has a problem with Base64
fields.
The drf-yasg will generate Base64 file or image fields as Readonly and not
required. Here is a workaround code
for display the Base64 fields correctly.

.. code:: python

  class PDFBase64FileField(Base64FileField):
      ALLOWED_TYPES = ['pdf']

      class Meta:
          swagger_schema_fields = {
              'type': 'string',
              'title': 'File Content',
              'description': 'Content of the file base64 encoded',
              'read_only': False  # <-- FIX
          }

      def get_file_extension(self, filename, decoded_file):
          try:
              PyPDF2.PdfFileReader(io.BytesIO(decoded_file))
          except PyPDF2.utils.PdfReadError as e:
              logger.warning(e)
          else:
              return 'pdf'


[FILE:111:distinfo]
4628c061c1605cdccdb6345df0dc8b5d3c5981c327e81a289642bf99aa92a9b2      4288670 drf_yasg-1.21.6-py3-none-any.whl

