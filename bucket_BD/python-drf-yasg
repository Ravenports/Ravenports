# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-drf-yasg
VERSION=		1.21.10
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Django Swagger/OpenAPI spec generator (3.12)
SDESC[v13]=		Django Swagger/OpenAPI spec generator (3.13)
HOMEPAGE=		https://github.com/axnsan12/drf-yasg
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/ac/39/c833f775973944b378d76aeea2269e5d3d3d6528b08f1a4d774cb4cbdb3f
DISTFILE[1]=		drf_yasg-1.21.10-py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		drf_yasg-1.21.10.dist-info

GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-djangorestframework:single:v12
					python-Django:single:v12
					python-PyYAML:single:v12
					python-inflection:single:v12
					python-packaging:single:v12
					python-pytz:single:v12
					python-uritemplate:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-djangorestframework:single:v13
					python-Django:single:v13
					python-PyYAML:single:v13
					python-inflection:single:v13
					python-packaging:single:v13
					python-pytz:single:v13
					python-uritemplate:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:1851:descriptions/desc.single]
   :alt: GitHub Workflow Status

   :alt: Codecov

   :alt: PyPI

    :alt: Gitter

   :alt: ReadTheDocs

   :alt: Heroku deploy button

.. |nbsp| unicode:: 0xA0
   :trim:

drf-extra-fields
=================

Integration with `drf-extra-fields
<https://github.com/Hipo/drf-extra-fields>`_ has a problem with Base64
fields.
The drf-yasg will generate Base64 file or image fields as Readonly and not
required. Here is a workaround code
for display the Base64 fields correctly.

.. code:: python

  class PDFBase64FileField(Base64FileField):
      ALLOWED_TYPES = ['pdf']

      class Meta:
          swagger_schema_fields = {
              'type': 'string',
              'title': 'File Content',
              'description': 'Content of the file base64 encoded',
              'read_only': False  # <-- FIX
          }

      def get_file_extension(self, filename, decoded_file):
          try:
              PyPDF2.PdfFileReader(io.BytesIO(decoded_file))
          except PyPDF2.utils.PdfReadError as e:
              logger.warning(e)
          else:
              return 'pdf'

************
Contributing
************

This repository adheres to semantic versioning standards. For more
information on semantic versioning visit [SemVer].

To keep our process simple we merge pull requests into the master branch we
use
git tags for releases. We use labels to mark which issues are intended for
each
version. For example:

.. figure:: ./docs/images/flow.png
   :width: 70%
   :figwidth: image
   :alt: Git flow
   :align: center

Labels
======

- New issues without a version are given a triage label.

- Issues are labeled bug, enhancement or question to describe their
  content

- Once given a version, an issue will either have an assignee or be given a
  help wanted label

- A question that hasn't been answered will be given an unanswered label


[FILE:123:distinfo]
4d832e108dfe38e365101c36123576b498487d33bf27d57d6a37efb4cc773438      4290377 python-src/drf_yasg-1.21.10-py3-none-any.whl

