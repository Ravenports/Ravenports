# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-ruamel.yaml
VERSION=		0.15.60
KEYWORDS=		python devel textproc
VARIANTS=		py27 py36 py37
SDESC[py36]=		YAML 1.2 parser/emitter (PY 36)
SDESC[py37]=		YAML 1.2 parser/emitter (PY 37)
SDESC[py27]=		YAML 1.2 parser/emitter (PY 27)
HOMEPAGE=		https://bitbucket.org/ruamel/yaml
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/r/ruamel.yaml
DISTFILE[1]=		ruamel.yaml-0.15.60.tar.gz:main
DF_INDEX=		1
SPKGS[py36]=		single
SPKGS[py37]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY36 PY37
OPTIONS_STANDARD=	none
VOPTS[py36]=		PY27=OFF PY36=ON PY37=OFF
VOPTS[py37]=		PY27=OFF PY36=OFF PY37=ON
VOPTS[py27]=		PY27=ON PY36=OFF PY37=OFF

DISTNAME=		ruamel.yaml-0.15.60

GENERATED=		yes

[PY36].USES_ON=				python:py36

[PY37].USES_ON=				python:py37

[PY27].USES_ON=				python:py27

[FILE:4076:descriptions/desc.single]

ruamel.yaml
===========

``ruamel.yaml`` is a YAML 1.2 loader/dumper package for Python.

:version:       0.15.60
:updated:       2018-08-18
:documentation: http://yaml.readthedocs.io
:repository:    https://bitbucket.org/ruamel/
:pypi:          https://pypi.org/project/ruamel.yaml/


Starting with version 0.15.0 the way YAML files are loaded and dumped
is changing. See the API doc for details.  Currently existing
functionality will throw a warning before being changed/removed.
**For production systems you should pin the version being used with
``ruamel.yaml<=0.15``**. There might be bug fixes in the 0.14 series,
but new functionality is likely only to be available via the new API.

If your package uses ``ruamel.yaml`` and is not listed on PyPI, drop
me an email, preferably with some infomormation on how you use the
package (or a link to bitbucket/github) and I'll keep you informed
when the status of the API is stable enough to make the transition.

* `Overview <http://yaml.readthedocs.org/en/latest/overview.html>`_
* `Installing <http://yaml.readthedocs.org/en/latest/install.html>`_
* `Basic Usage <http://yaml.readthedocs.org/en/latest/basicuse.html>`_
* `Details <http://yaml.readthedocs.org/en/latest/detail.html>`_
* `Examples <http://yaml.readthedocs.org/en/latest/example.html>`_
* `API <http://yaml.readthedocs.org/en/latest/api.html>`_
* `Differences with PyYAML
<http://yaml.readthedocs.org/en/latest/pyyaml.html>`_

.. image:: https://readthedocs.org/projects/yaml/badge/?version=stable
   :target: https://yaml.readthedocs.org/en/stable

.. image:: https://bestpractices.coreinfrastructure.org/projects/1128/badge
   :target: https://bestpractices.coreinfrastructure.org/projects/1128

.. image::
https://bitbucket.org/ruamel/yaml/raw/default/_doc/_static/license.svg
   :target: https://opensource.org/licenses/MIT

.. image::
https://bitbucket.org/ruamel/yaml/raw/default/_doc/_static/pypi.svg
   :target: https://pypi.org/project/ruamel.yaml/

.. image::
https://bitbucket.org/ruamel/oitnb/raw/default/_doc/_static/oitnb.svg
   :target: https://pypi.org/project/oitnb/

.. image:: http://www.mypy-lang.org/static/mypy_badge.svg
   :target: http://mypy-lang.org/

ChangeLog
=========

.. should insert NEXT: at the beginning of line for next key (with empty
line)

0.15.60 (2018-08-18):
  - again allow single entry map in flow sequence context (reported by
    `Lee Goolsbee <https://bitbucket.org/lgoolsbee/>`__)
  - cleanup for mypy
  - spurious print in library (reported by
    `Lele Gaifax <https://bitbucket.org/lele/>`__), now automatically
checked

0.15.59 (2018-08-17):
  - issue with C based loader and leading zeros (reported by
    `Tom Hamilton Stubber <https://bitbucket.org/TomHamiltonStubber/>`__)

0.15.58 (2018-08-17):
  - simple mappings can now be used as keys when round-tripping::

      {a: 1, b: 2}: hello world

    although using the obvious operations (del, popitem) on the key will
    fail, you can mutilate it by going through its attributes. If you load
the
    above YAML in `d`, then changing the value is cumbersome:

        d = {CommentedKeyMap([('a', 1), ('b', 2)]): "goodbye"}

    and changing the key even more so:

        d[CommentedKeyMap([('b', 1), ('a', 2)])] = d.pop(
                     CommentedKeyMap([('a', 1), ('b', 2)]))

    (you can use a `dict` instead of a list of tuples (or ordereddict),
but that might result
    in a different order, of the keys of the key, in the output)
  - check integers to dump with 1.2 patterns instead of 1.1 (reported by
    `Lele Gaifax <https://bitbucket.org/lele/>`__)


0.15.57 (2018-08-15):
  - Fix that CommentedSeq could no longer be used in adding or do a sort
    (reported by `Christopher Wright
<https://bitbucket.org/CJ-Wright4242/>`__)

0.15.56 (2018-08-15):
  - fix issue with ``python -O`` optimizing away code (reported, and
detailed cause
    pinpointed, by `Alex Gr√∂nholm <https://bitbucket.org/agronholm/>`__)

0.15.55 (2018-08-14):
  - unmade ``CommentedSeq`` a subclass of ``list``. It is now
    indirectly a subclass of the standard


[FILE:105:distinfo]
ccfd94560be57bf066af0597aa60ebf33342c8fdd2ea8354d56915ce2a68497d       292062 ruamel.yaml-0.15.60.tar.gz

