# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-ruamel.yaml
VERSION=		0.18.2
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		YAML 1.2 parser/emitter (3.11)
SDESC[v12]=		YAML 1.2 parser/emitter (3.12)
HOMEPAGE=		https://sourceforge.net/p/ruamel-yaml/code/ci/default/tree
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/5f/97/561b9c14816a9b07d08c7c6de7ab72283929870f5e3454f2d8e811054ef2
DISTFILE[1]=		ruamel.yaml-0.18.2-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		ruamel.yaml-0.18.2.dist-info

GENERATED=		yes

[PY311].RUN_DEPENDS_ON=			python-ruamel.yaml.clib:single:v11
[PY311].USES_ON=			python:v11,wheel

[PY312].RUN_DEPENDS_ON=			python-ruamel.yaml.clib:single:v12
[PY312].USES_ON=			python:v12,wheel

[FILE:3440:descriptions/desc.single]
# ruamel.yaml

`ruamel.yaml` is a YAML 1.2 loader/dumper package for Python.
<table class="docutils">
  <tr>    <td>version</td>
    <td>0.18.2</td>
  </tr>
  <tr>    <td>updated</td>
    <td>2023-10-24</td>
  </tr>
  <tr>    <td>documentation</td>
    <td>http://yaml.readthedocs.io</td>
  </tr>
  <tr>    <td>repository</td>
    <td>https://sourceforge.net/projects/ruamel-yaml</td>
  </tr>
  <tr>    <td>pypi</td>
    <td>https://pypi.org/project/ruamel.yaml</td>
  </tr>
</table>

As announced, in 0.18.0, the old PyYAML functions have been deprecated.
(`scan`, `parse`, `compose`, `load`, `emit`, `serialize`, `dump` and their
variants
(`_all`, `safe_`, `round_trip_`, etc)). If you only read this after your
program has 
stopped working: I am sorry to hear that, but that also means you, or the
person 
developing your program, has not tested with warnings on (which is the
recommendation 
in PEP 565, and e.g. defaultin when using `pytest`). If you have troubles,
explicitly use
```
pip install "ruamel.yaml<0.18.0"
```
or put something to that effects in your requirments, to give yourself
some time to solve the issue.

There will be at least one more potentially breaking change in the 0.18
series: `YAML(typ='unsafe')`
now has a pending deprecation warning and is going to be deprecated,
probably before the end of 2023.
If you only use it to dump, please use the new `YAML(typ='full')`, the
result of that can be *safely*
loaded with a default  instance `YAML()`, as that will get you inspectable,
tagged, scalars, instead of
executed Python functions/classes. (You should probably add constructors
for what you actually need, 
but I do consider adding a `ruamel.yaml.unsafe` package that will re-add
the `typ='unsafe'` option.
*Please adjust/pin your dependencies accordingly if necessary.*

There seems to be a CVE on `ruamel.yaml`, stating that the `load()`
function could be abused 
because of unchecked input. `load()` was never the default function (that
was `round_trip_load()`
before the new API came into existence`. So the creator of that CVE was ill
informed and
probably lazily assumed that since `ruamel.yaml` is a derivative of PyYAML
(for which
a similar CVE exists), the same problem would still exist, without
checking. 
So the CVE was always inappriate,  now just more so, as the call
to the function `load()` with any input will terminate your program with an
error message. If you 
(have to) care about such things as this CVE, my recommendation is to stop
using Python
completely, as `pickle.load()` can be abused in the same way as `load()`
(and like unlike `load()` 
is only documented to be unsafe, without development-time warning. 

Version 0.17.21 was the last one tested to be working on Python 3.5 and
3.6<BR>
The 0.16.13 release was the last that was tested to be working on Python
2.7.

There are two extra plug-in packages
(`ruamel.yaml.bytes` and `ruamel.yaml.string`)
for those not wanting to do the streaming to a
`io.BytesIO/StringIO` buffer themselves.

If your package uses `ruamel.yaml` and is not listed on PyPI, drop me an
email, preferably with some information on how you use the package (or a
link to the repository) and I'll keep you informed when the status of
the API is stable enough to make the transition.

-   [Overview]
-   [Installing]
-   [Basic Usage]
-   [Details]
-   [Examples]
-   [API]
-   [Differences with
    PyYAML]

[image][image]
[image]
[image]
[image]
[image]


[FILE:114:distinfo]
92076ac8a83dbf44ca661dbed3c935229c8cbc2f10b05959dd3bd5292d8353d3       113698 ruamel.yaml-0.18.2-py3-none-any.whl

