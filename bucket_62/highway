# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		highway
VERSION=		1.2.0
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Efficient and performance-portable SIMD
HOMEPAGE=		https://github.com/google/highway
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/google:highway:1.2.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cmake gold c++:primary

LICENSE=		BSD3CLAUSE:primary APACHE20:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENSE-BSD3
			APACHE20:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"^\#\# Why"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/README.md
LICENSE_SCHEME=		dual

FPC_EQUIVALENT=		devel/highway

SOVERSION=		1.2.0

CMAKE_ARGS=		-DBUILD_SHARED_LIBS:BOOL=ON
			-DHWY_SYSTEM_GTEST:BOOL=ON
			-DBUILD_TESTING:BOOL=OFF

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.so

[FILE:530:descriptions/desc.primary]
Highway is a C++ library that provides portable SIMD/vector intrinsics.

CPUs provide SIMD/vector instructions that apply the same operation to
multiple data items. This can reduce energy usage e.g. fivefold because
fewer instructions are executed. We also often see 5-10x speedups.

Highway makes SIMD/vector programming practical and workable according to
these guiding principles:

- Does what you expect:
- Works on widely-used platforms
- Flexible to deploy
- Suitable for a variety of domains
- Rewards data-parallel design


[FILE:106:distinfo]
7e0be78b8318e8bdbf6fa545d2ecb4c90f947df03f7aadc42c1967f019e63343      2234665 google-highway-1.2.0.tar.gz


[FILE:175:manifests/plist.primary]
lib/
 libhwy.so.%%SOMAJOR%%
 libhwy.so.%%SOVERSION%%
 libhwy_contrib.so.%%SOMAJOR%%
 libhwy_contrib.so.%%SOVERSION%%
 libhwy_test.so.%%SOMAJOR%%
 libhwy_test.so.%%SOVERSION%%


[FILE:1312:manifests/plist.dev]
include/hwy/
 abort.h
 aligned_allocator.h
 base.h
 cache_control.h
 detect_compiler_arch.h
 detect_targets.h
 foreach_target.h
 highway.h
 highway_export.h
 nanobenchmark.h
 per_target.h
 print-inl.h
 print.h
 profiler.h
 robust_statistics.h
 targets.h
 timer-inl.h
 timer.h
include/hwy/contrib/algo/
 copy-inl.h
 find-inl.h
 transform-inl.h
include/hwy/contrib/bit_pack/bit_pack-inl.h
include/hwy/contrib/dot/dot-inl.h
include/hwy/contrib/image/image.h
include/hwy/contrib/math/math-inl.h
include/hwy/contrib/matvec/matvec-inl.h
include/hwy/contrib/random/random-inl.h
include/hwy/contrib/sort/
 order.h
 shared-inl.h
 sorting_networks-inl.h
 traits-inl.h
 traits128-inl.h
 vqsort-inl.h
 vqsort.h
include/hwy/contrib/thread_pool/
 futex.h
 thread_pool.h
 topology.h
include/hwy/contrib/unroller/unroller-inl.h
include/hwy/ops/
 arm_neon-inl.h
 arm_sve-inl.h
 emu128-inl.h
 generic_ops-inl.h
 inside-inl.h
 ppc_vsx-inl.h
 rvv-inl.h
 scalar-inl.h
 set_macros-inl.h
 shared-inl.h
 wasm_128-inl.h
 x86_128-inl.h
 x86_256-inl.h
 x86_512-inl.h
include/hwy/tests/
 hwy_gtest.h
 test_util-inl.h
 test_util.h
lib/
 libhwy.so
 libhwy_contrib.so
 libhwy_test.so
lib/cmake/hwy/
 hwy-config-%%CMAKE_BUILD_TYPE%%.cmake
 hwy-config-version.cmake
 hwy-config.cmake
lib/pkgconfig/
 libhwy-contrib.pc
 libhwy-test.pc
 libhwy.pc

