# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-anyjson
VERSION=		0.3.3
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Multiple JSON library wrapper (PY38)
SDESC[py39]=		Multiple JSON library wrapper (PY39)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/a/anyjson
DISTFILE[1]=		anyjson-0.3.3.tar.gz:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		anyjson-0.3.3

GENERATED=		yes

[PY38].USES_ON=				python:py38,sutools

[PY39].USES_ON=				python:py39,sutools

[FILE:1541:descriptions/desc.single]
##############################
anyjson - JSON library wrapper
##############################

Overview
--------

Anyjson loads whichever is the fastest JSON module installed and provides
a uniform API regardless of which JSON implementation is used.

Originally part of carrot (http://github.com/ask/carrot/)

Examples
--------

To serialize a python object to a JSON string, call the `serialize`
function:

>>> import anyjson
>>> anyjson.serialize(["test", 1, {"foo": 3.141592}, "bar"])
'["test", 1, {"foo": 3.141592}, "bar"]'

Conversion the other way is done with the `deserialize` call.

>>> anyjson.deserialize("""["test", 1, {"foo": 3.141592}, "bar"]""")
['test', 1, {'foo': 3.1415920000000002}, 'bar']

Regardless of the JSON implementation used, the exceptions will be the
same.
This means that trying to serialize something not compatible with JSON
raises a TypeError:

>>> anyjson.serialize([object()])
Traceback (most recent call last):
  <snipped traceback>
TypeError: object is not JSON encodable

And deserializing a JSON string with invalid JSON raises a ValueError:

>>> anyjson.deserialize("""['missing square brace!""")
Traceback (most recent call last):
  <snipped traceback>
ValueError: cannot parse JSON description

Contact
-------

The module is maintaned by Rune F. Halvorsen <runefh@gmail.com>.
The project resides at http://bitbucket.org/runeh/anyjson . Bugs and
feature
requests can be submitted there. Patches are also very welcome.

Changelog
---------

See CHANGELOG file

License
-------

see the LICENSE file


[FILE:99:distinfo]
37812d863c9ad3e35c0734c42e0bf0320ce8c3bed82cd20ad54cb34d158157ba         8332 anyjson-0.3.3.tar.gz

