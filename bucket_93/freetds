# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		freetds
VERSION=		1.5.6
KEYWORDS=		databases
VARIANTS=		std
SDESC[std]=		Sybase/Microsoft TDS protocol library
HOMEPAGE=		https://www.freetds.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.freetds.org/files/stable/
DISTFILE[1]=		freetds-1.5.6.tar.bz2:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			tools
			dev
			man
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		libgcrypt:dev:std
			unixODBC:dev:std
			krb5:dev:std
BUILDRUN_DEPENDS=	libgcrypt:primary:std
			unixODBC:primary:std
			krb5:primary:std
EXRUN[tools]=		primary

USES=			cpe cmake gettext:build gmake iconv pkgconfig
			readline ssl:openssl30

LICENSE=		LGPL20+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL20+:{{WRKSRC}}/COPYING_LIB.txt
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/include/freetds/tds.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		databases/freetds

CMAKE_ARGS=		-DENABLE_MSDBLIB:BOOL=ON
			-DENABLE_ODBC_WIDE:BOOL=ON
			-DENABLE_ODBC_MARS:BOOL=ON
			-DENABLE_KRB5:BOOL=ON
			-DWITH_OPENSSL:BOOL=ON
			-DBUILD_SHARED_LIBS:BOOL=ON
			-DCMAKE_INSTALL_SYSCONFDIR={{PREFIX}}/etc/freetds

post-install:
	# manually install man pages
	${INSTALL_MAN} ${WRKSRC}/doc/*.1 ${STAGEDIR}${PREFIX}/share/man/man1/
	${INSTALL_MAN} ${WRKSRC}/doc/*.5 ${STAGEDIR}${PREFIX}/share/man/man5/
	# manually add interfaces.sample
	${INSTALL_DATA} ${WRKSRC}/interfaces \
		${STAGEDIR}${PREFIX}/etc/freetds/interfaces.sample
	# manually instal osql (missing from cmake install)
	${INSTALL_SCRIPT} ${WRKSRC}/src/apps/osql ${STAGEDIR}${PREFIX}/bin/
	# manually stript
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/[bdft]*

pre-configure:
	${REINPLACE_CMD} -e '/^set(libs / s|)| ${ICONV_LIB_NAME})|' \
		-e '/readline/ s|)| ${ICONV_LIB_NAME})|' \
		${WRKSRC}/src/apps/CMakeLists.txt
	${REINPLACE_CMD} -e '/target_link_libraries/ s| tds | tds ${ICONV_LIB_NAME} |' \
		${WRKSRC}/src/pool/CMakeLists.txt

post-extract:
	(cd ${WRKSRC} && ${CP} freetds.conf freetds.conf.sample)
	(cd ${WRKSRC} && ${CP} locales.conf locales.conf.sample)
	(cd ${WRKSRC}/src/pool && ${CP} pool.conf pool.conf.sample)

[FILE:487:descriptions/desc.primary]
FreeTDS is a set of libraries for Unix and Linux that allows your
programs to natively talk to Microsoft SQL Server and Sybase databases.

Technically speaking, FreeTDS is an open source implementation of the
TDS (Tabular Data Stream) protocol used by these databases for their
own clients. It supports many different flavors of the protocol and
three APIs to access it. Additionally FreeTDS works with other software
such as Perl and PHP, providing access from those languages as well.


[FILE:37:descriptions/desc.tools]
This package contains FreeTDS tools.


[FILE:100:distinfo]
dadc08e69aef14523fdaee09170d59daf1b6413e8d5858d09c9496674ba08c57      2441914 freetds-1.5.6.tar.bz2


[FILE:55:manifests/plist.primary]
lib/
 libct.so.4.0.0
 libsybdb.so.5.1.0
 libtdsodbc.so


[FILE:235:manifests/plist.tools]
@sample etc/freetds/freetds.conf.sample
@sample etc/freetds/interfaces.sample
@sample etc/freetds/locales.conf.sample
@sample etc/freetds/pool.conf.sample
bin/
 bsqldb
 bsqlodbc
 datacopy
 defncopy
 fisql
 freebcp
 osql
 tdspool
 tsql


[FILE:239:manifests/plist.dev]
include/
 bkpublic.h
 cspublic.h
 cstypes.h
 ctpublic.h
 sqldb.h
 sqlfront.h
 sybdb.h
 syberror.h
 sybfront.h
 tds_sysdep_public.h
include/freetds/version.h
lib/
 libct.a
 libct.so
 libdb-lib.a
 libreplacements.a
 libsybdb.so
 libtdssrv.a


[FILE:128:manifests/plist.man]
share/man/man1/
 bsqldb.1
 bsqlodbc.1
 datacopy.1
 defncopy.1
 fisql.1
 freebcp.1
 osql.1
 tsql.1
share/man/man5/freetds.conf.5


[FILE:612:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2025-03-06 20:38:39 UTC
+++ CMakeLists.txt
@@ -505,9 +505,9 @@ set(FREETDS_PUBLIC_INCLUDE_2
 	${CMAKE_BINARY_DIR}/include/freetds/version.h)
 
 set(FREETDS_CONF_FILES
-	${CMAKE_SOURCE_DIR}/freetds.conf
-	${CMAKE_SOURCE_DIR}/locales.conf
-	${CMAKE_SOURCE_DIR}/src/pool/pool.conf)
+	${CMAKE_SOURCE_DIR}/freetds.conf.sample
+	${CMAKE_SOURCE_DIR}/locales.conf.sample
+	${CMAKE_SOURCE_DIR}/src/pool/pool.conf.sample)
 
 install(FILES ${FREETDS_PUBLIC_INCLUDE} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
 install(FILES ${FREETDS_PUBLIC_INCLUDE_2} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/freetds)


[FILE:662:patches/patch-src_apps_CMakeLists.txt]
--- src/apps/CMakeLists.txt.orig	2025-03-06 20:38:15 UTC
+++ src/apps/CMakeLists.txt
@@ -18,7 +18,11 @@ endif(WIN32)
 add_executable(bsqlodbc bsqlodbc.c)
 target_link_libraries(bsqlodbc tdsodbc replacements tdsutils ${libs})
 
-INSTALL(TARGETS tsql bsqlodbc defncopy freebcp datacopy bsqldb
+add_executable(fisql fisql/fisql.c fisql/edit.c fisql/handlers.c fisql/interrupt.c fisql/terminal.c)
+target_include_directories(fisql PRIVATE fisql)
+target_link_libraries(fisql sybdb replacements readline)
+
+INSTALL(TARGETS tsql bsqlodbc defncopy freebcp datacopy bsqldb fisql
 	PUBLIC_HEADER DESTINATION include
 		RUNTIME DESTINATION bin
 		LIBRARY DESTINATION lib


[FILE:284:patches/patch-src_tds_gssapi.c]
--- src/tds/gssapi.c.orig	2025-03-06 20:38:39 UTC
+++ src/tds/gssapi.c
@@ -71,6 +71,10 @@
 #include <freetds/utils/string.h>
 #include <freetds/replacements.h>
 
+#if !defined(AI_V4MAPPED)
+#define AI_V4MAPPED    0
+#endif
+
 /**
  * \ingroup libtds
  * \defgroup auth Authentication


[FILE:420:patches/patch-src_tds_sec__negotiate__openssl.h]
--- src/tds/sec_negotiate_openssl.h.orig	2025-03-06 20:38:15 UTC
+++ src/tds/sec_negotiate_openssl.h
@@ -37,6 +37,11 @@
 #error HAVE_OPENSSL not defines, this file should not be included
 #endif
 
+#if defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER < 0x2070000fL
+#undef OPENSSL_VERSION_NUMBER
+#define OPENSSL_VERSION_NUMBER 0x1000107fL
+#endif
+
 static inline const BIGNUM*
 rsa_get_n(const RSA *rsa)
 {


[FILE:656:patches/patch-src_tds_tls.c]
--- src/tds/tls.c.orig	2025-03-11 18:57:29 UTC
+++ src/tds/tls.c
@@ -53,6 +53,10 @@
 #include <sys/socket.h>
 #endif
 
+#if defined(__FreeBSD__) || defined(__DragonFly__)
+#include <sys/socket.h>
+#endif
+
 #include <freetds/tds.h>
 #include <freetds/utils/string.h>
 #include <freetds/utils.h>
@@ -76,6 +80,15 @@
 #define SSL_PTR ptr
 #else
 
+#ifdef LIBRESSL_VERSION_NUMBER
+#if LIBRESSL_VERSION_NUMBER < 0x2070000FL
+static pthread_mutex_t *openssllocks;
+#undef OPENSSL_VERSION_NUMBER
+#define OPENSSL_VERSION_NUMBER 0x1000107fL
+#endif
+#define TLS_ST_OK SSL_ST_OK
+#endif
+
 /* some compatibility layer */
 #if !HAVE_BIO_GET_DATA
 static inline void

