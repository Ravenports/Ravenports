# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		pcsc-lite
VERSION=		2.3.1
KEYWORDS=		devel security
VARIANTS=		std
SDESC[std]=		Smartcard development library
HOMEPAGE=		https://pcsclite.apdu.fr/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://pcsclite.apdu.fr/files/
DISTFILE[1]=		pcsc-lite-2.3.1.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			tools
			dev
			man
			docs

OPTIONS_AVAILABLE=	FILTER POLKIT
OPTIONS_STANDARD=	FILTER POLKIT
OPT_ON[freebsd]=	POLKIT
OPT_ON[linux]=		POLKIT
OPT_ON[all]=		FILTER

B_DEPS[sunos]=		libusb:dev:std
B_DEPS[linux]=		libusb:dev:std
BR_DEPS[sunos]=		libusb:primary:std
BR_DEPS[linux]=		libusb:primary:std
EXRUN[tools]=		primary

USES=			cpe meson perl:build pkgconfig python shebangfix
GNOME_COMPONENTS=	glib

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

CPE_VENDOR=		muscle
FPC_EQUIVALENT=		devel/pcsc-lite
MESON_ARGS=		-Dlibsystemd=false
			-Dlibudev=false
			-Dusbdropdir={{PREFIX}}/lib/pcsc/drivers/
SHEBANG_FILES=		src/spy/pcsc-spy

RC_SUBR=		pcscd:primary
SUB_FILES=		messages-primary.ucl

VAR_OPSYS[netbsd]=	CONFIGURE_ARGS=-Dusb=false

[POLKIT].DESCRIPTION=			Include Polkit support
[POLKIT].BUILDRUN_DEPENDS_ON=		polkit:primary:std
[POLKIT].BUILD_DEPENDS_ON=		polkit:dev:std
[POLKIT].CONFIGURE_ARGS_OFF=		-Dpolkit=false
[POLKIT].CONFIGURE_ARGS_ON=		-Dpolkit=true

[FILTER].DESCRIPTION=			Control reader names reported by PCSC
[FILTER].CONFIGURE_ARGS_OFF=		-Dfilter_names=false
[FILTER].CONFIGURE_ARGS_ON=		-Dfilter_names=true

post-patch:
	${REINPLACE_CMD} -e "s,libusb-1.0/libusb.h,libusb.h,; \
		s,libusb_strerror(ret),ret," ${WRKSRC}/src/hotplug_libusb.c

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/pcsc/drivers
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/pcsc/services

[FILE:224:descriptions/desc.primary]
This is a port of the MUSCLE PC/SC-Lite architecture.
Allows easy porting of Windows smartcard software to other
operating systems.  Supports many types of serial, PCMCIA,
and USB smartcard readers and cryptographic tokens.


[FILE:499:descriptions/desc.tools]
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   ../../../bucket_ED/veracrypt/distinfo
	modified:   ../../../bucket_ED/veracrypt/specification

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	desc.tools

no changes added to commit (use "git add" and/or "git commit -a")


[FILE:101:distinfo]
a641d44d57affe1edd8365dd75307afc307e7eefb4e7ad839f6f146baa41ed56       209724 pcsc-lite-2.3.1.tar.xz


[FILE:127:manifests/plist.primary]
%%POLKIT-ON%%share/polkit-1/actions/org.debian.pcsc-lite.policy
lib/
 libpcsclite.so.1
 libpcsclite_real.so.1
 libpcscspy.so.0


[FILE:132:manifests/plist.tools]
bin/pcsc-spy
etc/default/pcscd
sbin/pcscd
share/metainfo/fr.apdu.pcsclite.metainfo.xml
@dir lib/pcsc/drivers
@dir lib/pcsc/services


[FILE:187:manifests/plist.dev]
include/PCSC/
 debuglog.h
 ifdhandler.h
 pcsclite.h
 reader.h
 winscard.h
 wintypes.h
lib/
 libpcsclite.a
 libpcsclite.so
 libpcsclite_real.so
 libpcscspy.so
lib/pkgconfig/libpcsclite.pc


[FILE:78:manifests/plist.man]
share/man/man1/pcsc-spy.1
share/man/man5/reader.conf.5
share/man/man8/pcscd.8


[FILE:33:manifests/plist.docs]
share/doc/pcsc-lite/setup_spy.sh


[FILE:599:files/messages-primary.ucl.in]
primary: {
  type: "install"
  message: <<EOM
PC/SC-Lite has been installed.
You need to install a driver for your smartcard reader e.g.
devel/libccid
security/ifd-slb_rf60

For cardreaders connected to the serial port: After installing the driver,
please update the pcscd configuration file
%%PREFIX%%/etc/reader.conf

For USB cardreaders add the following lines to /etc/devd.conf to enable
hotplugging.

attach 100 {
        device-name "ugen[0-9]+";
        action "%%PREFIX%%/sbin/pcscd -H";
};

detach 100 {
        device-name "ugen[0-9]+";
        action "%%PREFIX%%/sbin/pcscd -H";
};
EOM
}


[FILE:310:files/pcscd.in]
#!/bin/sh
#
# PROVIDE:	pcscd
# REQUIRE:	LOGIN
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# pcscd_enable="YES"

. /etc/rc.subr

name="pcscd"
rcvar=pcscd_enable

command="%%PREFIX%%/sbin/pcscd"

load_rc_config "$name"

: ${pcscd_enable="NO"}

run_rc_command "$1"

