# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libepoxy
VERSION=		1.5.10
REVISION=		3
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	OpenGL function pointer management library
HOMEPAGE=		https://github.com/anholt/libepoxy
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/anholt:libepoxy:1.5.10
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		libglvnd:dev:standard
BUILDRUN_DEPENDS=	libglvnd:primary:standard
B_DEPS[sunos]=		libbsd4sol:single:standard
EXRUN[dev]=		xorg-x11:dev:standard
			libglvnd:dev:standard

USES=			meson pkgconfig python:build
XORG_COMPONENTS=	x11

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/libepoxy

VAR_OPSYS[sunos]=	CFLAGS=-I{{LOCALBASE}}/include/bsd
			LDFLAGS=-lbsd

[FILE:333:descriptions/desc.primary]
Epoxy is a library for handling OpenGL function pointer management.

It hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),
eglGetProcAddress(), etc. from the app developer, with very little
knowledge needed on their part. They get to read GL specs and write code
using undecorated function names like glCompileShader().


[FILE:108:distinfo]
a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15       332078 anholt-libepoxy-1.5.10.tar.gz


[FILE:39:manifests/plist.primary]
lib/
 libepoxy.so.0
 libepoxy.so.0.0.0


[FILE:134:manifests/plist.dev]
include/epoxy/
 common.h
 egl.h
 egl_generated.h
 gl.h
 gl_generated.h
 glx.h
 glx_generated.h
lib/libepoxy.so
lib/pkgconfig/epoxy.pc


[FILE:714:patches/patch-test_dlwrap.c]
--- test/dlwrap.c.orig	2021-08-14 13:55:37 UTC
+++ test/dlwrap.c
@@ -34,6 +34,8 @@
 
 /* dladdr is a glibc extension */
 #define _GNU_SOURCE
+/* FreeBSD needs this to make asprintf() and dlvsym() visible */
+#define __BSD_VISIBLE 1
 #include <dlfcn.h>
 
 #include <stdbool.h>
@@ -213,6 +215,10 @@ dlsym(void *handle, const char *name)
 void *
 dlwrap_real_dlsym(void *handle, const char *name)
 {
+#ifdef __sun__
+    fprintf(stderr, "dlwrap_real_dlsym unsupported on SunOS (missing dlvsym)");
+    exit(1);
+#else
     static fips_dlsym_t real_dlsym = NULL;
 
     if (!real_dlsym) {
@@ -275,6 +281,7 @@ dlwrap_real_dlsym(void *handle, const ch
     }
 
     return real_dlsym(handle, name);
+#endif
 }
 
 void *


[FILE:286:sunos/patch-test_meson.build]
--- test/meson.build.orig	2021-08-14 13:55:37 UTC
+++ test/meson.build
@@ -8,8 +8,7 @@ build_x11_tests = enable_x11 and x11_dep
 test_cflags = common_cflags
 if not has_dlvsym
 test_cflags += [
-  '-D_XOPEN_SOURCE',
-  '-D_POSIX_C_SOURCE=200809L',
+  '-D_XOPEN_SOURCE=600',
 ]
 endif
 

