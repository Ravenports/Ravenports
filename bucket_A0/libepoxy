# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libepoxy
VERSION=		1.5.1
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	OpenGL function pointer management library
HOMEPAGE=		https://github.com/anholt/libepoxy
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/anholt/libepoxy/releases/download/1.5.1/
DISTFILE[1]=		libepoxy-1.5.1.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

B_DEPS[sunos]=		libbsd4sol:single:standard

USES=			mesa meson pkgconfig
XORG_COMPONENTS=	x11

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/libepoxy
MESON_ARGS=		-Denable-egl=yes
MESON_INSERT_RPATH=	src/meson.build

VAR_OPSYS[sunos]=	CFLAGS=-I{{LOCALBASE}}/include/bsd
			LDFLAGS=-lbsd

[FILE:333:descriptions/desc.single]
Epoxy is a library for handling OpenGL function pointer management.

It hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),
eglGetProcAddress(), etc. from the app developer, with very little
knowledge needed on their part. They get to read GL specs and write code
using undecorated function names like glCompileShader().


[FILE:100:distinfo]
ba25f9251bdd12fa11f06b4dbd29073dab6f120be9b941e91754c338b926c720       807760 libepoxy-1.5.1.tar.xz


[FILE:170:manifests/plist.single]
include/epoxy/
 common.h
 egl.h
 egl_generated.h
 gl.h
 gl_generated.h
 glx.h
 glx_generated.h
lib/
 libepoxy.so
 libepoxy.so.0
 libepoxy.so.0.0.0
lib/pkgconfig/epoxy.pc


[FILE:714:patches/patch-test_dlwrap.c]
--- test/dlwrap.c.orig	2018-02-23 10:56:23 UTC
+++ test/dlwrap.c
@@ -34,6 +34,8 @@
 
 /* dladdr is a glibc extension */
 #define _GNU_SOURCE
+/* FreeBSD needs this to make asprintf() and dlvsym() visible */
+#define __BSD_VISIBLE 1
 #include <dlfcn.h>
 
 #include <stdbool.h>
@@ -213,6 +215,10 @@ dlsym(void *handle, const char *name)
 void *
 dlwrap_real_dlsym(void *handle, const char *name)
 {
+#ifdef __sun__
+    fprintf(stderr, "dlwrap_real_dlsym unsupported on SunOS (missing dlvsym)");
+    exit(1);
+#else
     static fips_dlsym_t real_dlsym = NULL;
 
     if (!real_dlsym) {
@@ -274,6 +280,7 @@ dlwrap_real_dlsym(void *handle, const ch
     }
 
     return real_dlsym(handle, name);
+#endif
 }
 
 void *


[FILE:317:sunos/patch-test_meson.build]
--- test/meson.build.orig	2017-06-06 09:24:13 UTC
+++ test/meson.build
@@ -3,8 +3,7 @@ has_gles2 = gles2_dep.found()
 build_x11_tests = build_glx and x11_dep.found()
 
 test_cflags = common_cflags + [
-  '-D_XOPEN_SOURCE',
-  '-D_POSIX_C_SOURCE=200809L',
+  '-D_XOPEN_SOURCE=600',
 ]
 
 # Unconditionally built tests

