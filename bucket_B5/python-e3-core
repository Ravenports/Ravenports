# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-e3-core
VERSION=		22.1.0
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		E3 core. Tools and library for building and (PY38)
SDESC[py39]=		E3 core. Tools and library for building and (PY39)
HOMEPAGE=		https://github.com/AdaCore/e3-core
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/AdaCore:e3-core:v22.1.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

GENERATED=		yes

SUB_FILES=		build_rlimit.sh
SUB_LIST=		PYCMD="{{PYTHON_CMD}}"

[PY38].BUILDRUN_DEPENDS_ON=		python-colorama:single:py38
					python-PyYAML:single:py38
					python-python-dateutil:single:py38
					python-requests:single:py38
					python-requests-toolbelt:single:py38
					python-tqdm:single:py38
					python-stevedore:single:py38
[PY38].USES_ON=				python:py38

[PY39].BUILDRUN_DEPENDS_ON=		python-colorama:single:py39
					python-PyYAML:single:py39
					python-python-dateutil:single:py39
					python-requests:single:py39
					python-requests-toolbelt:single:py39
					python-tqdm:single:py39
					python-stevedore:single:py39
[PY39].USES_ON=				python:py39

pre-build:
	${MV} ${WRKDIR}/build_rlimit.sh ${WRKSRC}/tools/rlimit
	(cd ${WRKSRC}/tools/rlimit && ${SETENV} ${MAKE_ENV} ${SH} \
		./build_rlimit.sh)

post-extract:
	# unbelievable.  prebuilt rlimit binaries for like 20 systems.
	# get rid of it all so we can rebuild
	${RM} ${WRKSRC}/src/e3/os/data/rlimit-*

[FILE:2736:descriptions/desc.single]
The `e3` Project 
================

[CII Best Practices]
[Documentation Status]
[codecov]

This present project (`e3`) is a Python framework to ease the development
of portable automated build systems (compilation, dependencies management,
binary code packaging, and automated testing).

The `e3` framework is split across multiple Python packages named
`e3-<name>`
and sharing the same namespace: `e3`.

Code status
===========

Platform | Status
---------|-------
Linux    | [Build Status]
Windows  | [Build status]

`e3-core` content
=================

`e3-core` package is organized in several packages and modules:

- *anod*: build system handling dependencies management and binary code
  packaging. This includes a driver that can parse `.anod` specification
  files.
- *archive*: support for reading and writing tar and zip archives
- *collection*: generic collections, e.g. an implementation of Direct
Acyclic
  Graphs
- *decorator*: Python decorators, e.g. a memoize decorator
- *diff*: functions to compute a diff or apply it
- *electrolyt*: support for parsing build plans
- *env*: global environment handling
- *error*: `e3` exceptions
- *event*: interface for notifying external services
- *fingerprint*: support for creating a synthetic view of set of
  conditions and determining whether those conditions have changed
  or not.
- *fs*: high-level file system operations, using globbing, walk,...
- *hash*: computation of sha1, md5
- *log*: logging helpers
- *main*: main program initialization, command line parsing,...
- *mainloop*: generic loop for running jobs
- *net*: network utilities
  - *net.http*: helper for sending http requests and downloading files
  - *net.smtp*: helper for sending emails through smtp
- *os*: platform independent interface to Operating System functions
  - *os.fs*: low-level file system operations, no logging involved
  - *os.platform*: tools to detect the platform
  - *os.process*: interface to run process, to control the execution
time,...
  - *os.timezone*: platform independent interface to get the machine
timezone
- *platform*: generic interface for providing platform information
- *platform_db*: knowledge base for computing platform information
- *store*: interface to download and store resources in a store
- *sys*: `e3` information, sanity check, ...
- *text*: text formatting and transformation
- *vcs*: high level interface to VCS repositories
- *yaml*: helpers for parsing yaml data

See [e3-core documentation] for
more details.

Install
=======

requires: Python 2.7.x (experimental support of Python >=3.4)

To install `e3`, run:

```bash
python setup.py install
```

All `e3` dependencies will also be installed.

Contributing
============

See [CONTRIBUTING.md].


[FILE:108:distinfo]
667afbfc6c3291369f98ef6117eb98628cbd630af7e3f34507f8da75d77b8510       442938 AdaCore-e3-core-22.1.0.tar.gz


[FILE:199:files/build_rlimit.sh.in]
#!/bin/sh
# This script is expected to be at tools/rlimit

platform=$(%%PYCMD%% -c "import platform; print (platform.system().lower())")

cc $CFLAGS -o ../../src/e3/os/data/rlimit-$platform rlimit.c

