# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		slang
VERSION=		2.3.2
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	S-Lang is a powerful interpreted language
HOMEPAGE=		https://www.jedsoft.org/slang/
CONTACT=		Leonid_Bobrov[goleo@disroot.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://www.jedsoft.org/releases/slang/
DISTFILE[1]=		slang-2.3.2.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		pcre:static:standard
BUILDRUN_DEPENDS=	oniguruma:primary:standard
			pcre:shared:standard

USES=			iconv ncurses readline zlib png

LICENSE=		GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^\#include"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/slang.c
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/libslang2

MUST_CONFIGURE=		gnu
CONFIGURE_ENV=		nc5config={{LOCALBASE}}/bin/ncurses6-config

BUILD_TARGET=		all static
SINGLE_JOB=		yes

INSTALL_TARGET=		install install-static
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		2.3.2

post-install:
	${RM} ${STAGEDIR}${STD_DOCDIR}/v2/COPYING
	# there's no install-strip target
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/slsh
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libslang.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/slang/v2/modules/*.so

pre-configure:
	# fake out bad configure test for terminfo capability
	${MKDIR} ${LOCALBASE}/share/misc/terminfo

post-configure:
	# clean up hack
	${RMDIR} ${LOCALBASE}/share/misc/terminfo

[FILE:819:descriptions/desc.primary]
S-Lang is a C programmer's library that includes routines for the rapid
development of sophisticated, user friendly, multi-platform applications.
The S-Lang library includes the following:

- Low level tty input routines for reading single characters at a time.
- Keymap routines for defining keys and manipulating multiple keymaps.
- High level screen management routines for manipulating both
  monochrome and color terminals.  These routines are very efficient.
- Low level terminal-independent routines for manipulating the display
  of a terminal.
- Routines for reading single line input with line editing and recall
  capabilities.
- Searching functions: both ordinary searches and regular expression
  searches.
- An embedded stack-based language interpreter with a C-like syntax.
- A malloc debugging package.


[FILE:98:distinfo]
fc9e3b0fc4f67c3c1f6d43c90c16a5c42d117b8e28457c5b46831b8b5d3ae31a      1586720 slang-2.3.2.tar.bz2


[FILE:1936:manifests/plist.primary]
bin/slsh
etc/slsh.rc
include/
 slang.h
 slcurses.h
lib/
 libslang.a
 libslang.so
 libslang.so.%%SOMAJOR%%
 libslang.so.%%SOVERSION%%
lib/pkgconfig/slang.pc
lib/slang/v2/modules/
 base64-module.so
 chksum-module.so
 csv-module.so
 fcntl-module.so
 fork-module.so
 histogram-module.so
 iconv-module.so
 json-module.so
 onig-module.so
 pcre-module.so
 png-module.so
 rand-module.so
 select-module.so
 slsmg-module.so
 socket-module.so
 stats-module.so
 sysconf-module.so
 termios-module.so
 varray-module.so
 zlib-module.so
share/man/man1/slsh.1.gz
share/slsh/
 arrayfuns.sl
 autoload.sl
 base64.sl
 chksum.sl
 cmdopt.sl
 csv.sl
 fcntl.sl
 fork.sl
 fswalk.sl
 glob.sl
 histogram.sl
 iconv.sl
 json.sl
 listfuns.sl
 onig.sl
 pcre.sl
 png.sl
 print.sl
 process.sl
 profile.sl
 rand.sl
 readascii.sl
 require.sl
 select.sl
 setfuns.sl
 sldb.sl
 sldbcore.sl
 sldbsock.sl
 slshhelp.sl
 slshrl.sl
 slsmg.sl
 socket.sl
 stats.sl
 stkcheck.sl
 structfuns.sl
 sysconf.sl
 termios.sl
 varray.sl
 zlib.sl
share/slsh/cmaps/
 cool.map
 coolwarm.map
 copper.map
 cubicl.map
 cubicyf.map
 drywet.map
 ds9b.map
 ds9sls.map
 edge.map
 gebco.map
 globe.map
 gray.map
 haxby.map
 hot.map
 jet.map
 no_green.map
 ocean.map
 polar.map
 rainbow.map
 red2green.map
 relief.map
 sealand.map
 seis.map
 split.map
 topo.map
 wysiwyg.map
share/slsh/help/
 arrayfuns.hlp
 base64funs.hlp
 chksumfuns.hlp
 cmdopt.hlp
 csvfuns.hlp
 forkfuns.hlp
 fswalk.hlp
 glob.hlp
 histfuns.hlp
 jsonfuns.hlp
 listfuns.hlp
 onigfuns.hlp
 pcrefuns.hlp
 pngfuns.hlp
 print.hlp
 process.hlp
 profile.hlp
 randfuns.hlp
 readascii.hlp
 require.hlp
 setfuns.hlp
 slsmg.hlp
 sockfuns.hlp
 statsfuns.hlp
 structfuns.hlp
share/slsh/rline/
 complete.sl
 editfuns.sl
 editor.sl
 emacskeys.sl
 history.sl
 histsrch.sl
 slrline.rc
 vikeys.sl
share/slsh/scripts/
 jpegsize
 lsrpm
 sldb
 slprof
 slstkchk
 svnsh
share/slsh/statslib/
 ad_test.sl
 ks_test.sl
 kuiper.sl
@dir share/slsh/local-packages


[FILE:342:manifests/plist.docs]
share/doc/slang/v2/
 changes.txt
 cref.txt
 cslang.txt
 slang.txt
 slangdoc.html
 slangfun.txt
share/doc/slsh/html/
 slshfun-1.html
 slshfun-10.html
 slshfun-11.html
 slshfun-12.html
 slshfun-13.html
 slshfun-2.html
 slshfun-3.html
 slshfun-4.html
 slshfun-5.html
 slshfun-6.html
 slshfun-7.html
 slshfun-8.html
 slshfun-9.html
 slshfun.html


[FILE:469:patches/patch-configure]
--- configure.orig	2018-03-04 23:16:36 UTC
+++ configure
@@ -6189,7 +6189,7 @@ case "$host_os" in
      ELFLIB_MAJOR_MINOR="lib\$(THIS_LIB).\$(ELF_MAJOR_VERSION).\$(ELF_MINOR_VERSION).dylib"
      ELFLIB_MAJOR_MINOR_MICRO="lib\$(THIS_LIB).\$(ELF_MAJOR_VERSION).\$(ELF_MINOR_VERSION).\$(ELF_MICRO_VERSION).dylib"
      ;;
-  *freebsd* )
+  *freebsd* | *dragonfly* )
     ELF_CC="\$(CC)"
     ELF_CFLAGS="\$(CFLAGS) -fPIC"
     #if test "X$PORTOBJFORMAT" = "Xelf" ; then

