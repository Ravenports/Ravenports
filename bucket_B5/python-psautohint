# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-psautohint
VERSION=		2.3.0
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Wrapper for Adobe's PostScript autohinter (PY38)
SDESC[py39]=		Wrapper for Adobe's PostScript autohinter (PY39)
HOMEPAGE=		https://github.com/adobe-type-tools/psautohint
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/psautohint
DISTFILE[1]=		psautohint-2.3.0.zip:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		psautohint-2.3.0

GENERATED=		yes

INSTALL_REQ_TOOLCHAIN=	yes

[PY38].BUILDRUN_DEPENDS_ON=		python-fonttools:single:py38
					python-setuptools-scm:single:py38
[PY38].USES_ON=				python:py38,sutools

[PY39].BUILDRUN_DEPENDS_ON=		python-fonttools:single:py39
					python-setuptools-scm:single:py39
[PY39].USES_ON=				python:py39,sutools

[FILE:1792:descriptions/desc.single]
![Test and Build]
[Codecov]
[PyPI]
[![Language grade:
C/C++]](https://lgtm.com/projects/g/adobe-type-tools/psautohint/context:cpp)
[![Language grade:
Python]](https://lgtm.com/projects/g/adobe-type-tools/psautohint/context:python)
[Total alerts]

PSAutoHint
==========

A standalone version of [AFDKO]â€™s
autohinter.

**NOTE**: as of August 2019, only Python 3.6 or later is supported.

Building and running
--------------------

This repository currently consists of a core autohinter written in C, a
Python C extension providing an interface to it, and helper Python code.

To build the C extension:

    python setup.py build

To install the C extension and the helper scripts globally:

    pip install -r requirements.txt .

Alternatively to install them for the current user:

    pip install -r requirements.txt --user .

The autohinter can be used by running:

    psautohint

To build just the `autohintexe` binary:

    python setup.py build_exe

Testing
-------

We have a test suite that can be run with:

    tox

Debugging
---------

For standard debugging, build with:

    python setup.py build --debug

It is also possible to build a debug version with [AddressSanitizer]
("ASan") support (currently _for Mac OS X only_)  with:

    python setup.py build --asan
    pip install .

Once it is installed, you can use the `util/launch-asan.sh` shell script to
launch a Python process that invokes the ASan libraries needed for
debugging. Attach Xcode the launched process, then execute code in the
process that triggers memory usage problems and wait for ASan to do its
magic.

NOTE: be sure to build and install `psautohint` as described above; using
other techniques such as `python setup.py install` will cause a re-build
_without_ ASan and debug support, which won't work.


[FILE:99:distinfo]
78a45b13a475fd83e99fd637bd908d91679c5fd765993cdb6cff1f48d93c3029       233363 psautohint-2.3.0.zip

