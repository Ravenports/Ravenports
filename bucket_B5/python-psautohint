# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-psautohint
VERSION=		2.4.0
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Wrapper for Adobe's PostScript autohinter (3.10)
SDESC[py39]=		Wrapper for Adobe's PostScript autohinter (3.9)
HOMEPAGE=		https://github.com/adobe-type-tools/psautohint
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/psautohint
DISTFILE[1]=		psautohint-2.4.0.tar.gz:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

DISTNAME=		psautohint-2.4.0

GENERATED=		yes

INSTALL_REQ_TOOLCHAIN=	yes

[PY39].BUILDRUN_DEPENDS_ON=		python-fonttools:single:py39
					python-setuptools-scm:single:py39
[PY39].USES_ON=				python:py39,sutools

[PY310].BUILDRUN_DEPENDS_ON=		python-fonttools:single:py310
					python-setuptools-scm:single:py310
[PY310].USES_ON=			python:py310,sutools

[FILE:1726:descriptions/desc.single]
![Test and Build]
[Codecov]
[PyPI]
[![Language grade:
C/C++]](https://lgtm.com/projects/g/adobe-type-tools/psautohint/context:cpp)
[![Language grade:
Python]](https://lgtm.com/projects/g/adobe-type-tools/psautohint/context:python)
[Total alerts]

PSAutoHint
==========

A standalone version of [AFDKO]â€™s
autohinter.

Building and running
--------------------

This repository currently consists of a core autohinter written in C, a
Python C extension providing an interface to it, and helper Python code.

To build the C extension:

    python setup.py build

To install the C extension and the helper scripts globally:

    pip install -r requirements.txt .

Alternatively to install them for the current user:

    pip install -r requirements.txt --user .

The autohinter can be used by running:

    psautohint

To build just the `autohintexe` binary:

    python setup.py build_exe

Testing
-------

We have a test suite that can be run with:

    pytest

Debugging
---------

For standard debugging, build with:

    python setup.py build --debug

It is also possible to build a debug version with [AddressSanitizer]
("ASan") support (currently _for Mac OS X only_)  with:

    python setup.py build --asan
    pip install .

Once it is installed, you can use the `util/launch-asan.sh` shell script to
launch a Python process that invokes the ASan libraries needed for
debugging. Attach Xcode the launched process, then execute code in the
process that triggers memory usage problems and wait for ASan to do its
magic.

NOTE: be sure to build and install `psautohint` as described above; using
other techniques such as `python setup.py install` will cause a re-build
_without_ ASan and debug support, which won't work.


[FILE:102:distinfo]
d50edea8f6121c3383f0d82f881bf7a18bdd476cc2d354737672ce193c3cff7f       185568 psautohint-2.4.0.tar.gz

