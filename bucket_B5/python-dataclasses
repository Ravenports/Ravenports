# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-dataclasses
VERSION=		0.7
KEYWORDS=		python devel
VARIANTS=		py38 py37
SDESC[py37]=		Backport of the dataclasses module for Pyt (PY 37)
SDESC[py38]=		Backport of the dataclasses module for Pyt (PY 38)
HOMEPAGE=		https://github.com/ericvsmith/dataclasses
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/d/dataclasses
DISTFILE[1]=		dataclasses-0.7.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		dataclasses-0.7

GENERATED=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[FILE:2643:descriptions/desc.single]
.. image:: https://img.shields.io/pypi/v/dataclasses.svg
   :target: https://pypi.org/project/dataclasses/


This is an implementation of PEP 557, Data Classes.  It is a backport
for Python 3.6.  Because dataclasses will be included in Python 3.7,
any discussion of dataclass features should occur on the python-dev
mailing list at https://mail.python.org/mailman/listinfo/python-dev.
At this point this repo should only be used for historical purposes
(it's where the original dataclasses discussions took place) and for
discussion of the actual backport to Python 3.6.

See https://www.python.org/dev/peps/pep-0557/ for the details of how
Data Classes work.

A test file can be found at
https://github.com/ericvsmith/dataclasses/blob/master/test/test_dataclasses
.py,
or in the sdist file.

Installation
-------------

.. code-block::

  pip install dataclasses


Example Usage
-------------

.. code-block:: python

  from dataclasses import dataclass

  @dataclass
  class InventoryItem:
      name: str
      unit_price: float
      quantity_on_hand: int = 0

      def total_cost(self) -> float:
          return self.unit_price * self.quantity_on_hand

  item = InventoryItem('hammers', 10.49, 12)
  print(item.total_cost())

Some additional tools can be found in dataclass_tools.py, included in
the sdist.

Compatibility
-------------

This backport assumes that dict objects retain their sort order.  This
is true in the language spec for Python 3.7 and greater.  Since this
is a backport to Python 3.6, it raises an interesting question: does
that guarantee apply to 3.6?  For CPython 3.6 it does.  As of the time
of this writing, it's also true for all other Python implementations
that claim to be 3.6 compatible, of which there are none.  Any new
3.6 implementations are expected to have ordered dicts.  See the
analysis at the end of this email:

https://mail.python.org/pipermail/python-dev/2017-December/151325.html

As of version 0.4, this code no longer works with Python 3.7. For 3.7,
use the built-in dataclasses module.

Release History
---------------

+---------+------------+-------------------------------------+
| Version | Date       | Description                         |
+=========+============+=====================================+
| 0.7     | 2019-10-20 | Require python 3.6 only             |
+---------+------------+-------------------------------------+
| 0.6     | 2018-05-17 | Equivalent to Python 3.7.0rc1       |
+---------+------------+-------------------------------------+
| 0.5     | 2018-03-28 | Equivalent to Python 3.7.0b3        |
+---------+------------+-------------------------------------+



[FILE:101:distinfo]
494a6dcae3b8bcf80848eea2ef64c0cc5cd307ffc263e17cdf42f3e5420808e6        35690 dataclasses-0.7.tar.gz

