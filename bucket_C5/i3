# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		i3
VERSION=		4.14.1
KEYWORDS=		x11_wm
VARIANTS=		standard
SDESC[standard]=	Improved dynamic tiling window manager
HOMEPAGE=		https://i3wm.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://i3wm.org/downloads/
DISTFILE[1]=		i3-4.14.1.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	startup-notification:single:standard
			yajl:single:standard
			cairo:single:standard
			pango:primary:standard
			libxkbcommon:single:standard
			libev:single:standard
RUN_DEPENDS=		perl-IPC-Run:single:perl_default
			perl-Try-Tiny:single:perl_default
			perl-AnyEvent-I3:single:perl_default

USES=			pkgconfig gmake iconv perl
XORG_COMPONENTS=	xcb xcb-util xcb-util-cursor xcb-util-keysyms
			xcb-util-wm xcb-util-xrm

FPC_EQUIVALENT=		x11-wm/i3

MUST_CONFIGURE=		gnu
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ENV=		ac_cv_path_PATH_ASCIIDOC=""
			ac_cv_search_iconv_open=-liconv

INSTALL_TARGET=		install-strip

post-install:
	${INSTALL_DATA} ${WRKSRC}/man/*.1 ${STAGEDIR}${MANPREFIX}/man/man1/

[FILE:257:descriptions/desc.single]
i3 is a tiling window manager, completely written from scratch. The target
platforms are GNU/Linux and BSD operating systems, the code is Free and
Open Source Software (FOSS) under the BSD license. i3 is primarily targeted
at advanced users and developers.


[FILE:96:distinfo]
d0063ac561f3aa8d7e31e137356815bad781bd6ad774030362c89abe96ab5fb1      1173560 i3-4.14.1.tar.bz2


[FILE:613:manifests/plist.single]
bin/
 i3
 i3-config-wizard
 i3-dmenu-desktop
 i3-dump-log
 i3-input
 i3-migrate-config-to-v4
 i3-msg
 i3-nagbar
 i3-save-tree
 i3-sensible-editor
 i3-sensible-pager
 i3-sensible-terminal
 i3-with-shmlog
 i3bar
etc/i3/
 config
 config.keycodes
include/i3/ipc.h
share/applications/i3.desktop
share/man/man1/
 i3-config-wizard.1.gz
 i3-dmenu-desktop.1.gz
 i3-dump-log.1.gz
 i3-input.1.gz
 i3-migrate-config-to-v4.1.gz
 i3-msg.1.gz
 i3-nagbar.1.gz
 i3-save-tree.1.gz
 i3-sensible-editor.1.gz
 i3-sensible-pager.1.gz
 i3-sensible-terminal.1.gz
 i3.1.gz
 i3bar.1.gz
share/xsessions/
 i3-with-shmlog.desktop
 i3.desktop


[FILE:729:patches/patch-libi3_get__exe__path.c]
--- libi3/get_exe_path.c.orig	2017-09-24 17:21:26 UTC
+++ libi3/get_exe_path.c
@@ -27,11 +27,12 @@ char *get_exe_path(const char *argv0) {
     char *destpath = smalloc(destpath_size);
     char *tmp = smalloc(tmp_size);
 
-#if defined(__linux__) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+#if defined(__linux__) || defined(__DragonFly__) \
+ || defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 /* Linux and Debian/kFreeBSD provide /proc/self/exe */
 #if defined(__linux__) || defined(__FreeBSD_kernel__)
     const char *exepath = "/proc/self/exe";
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
     const char *exepath = "/proc/curproc/file";
 #endif
     ssize_t linksize;


[FILE:1073:patches/patch-pull2849]
From bfc6e1217265c8c77a8382f5c7970d049e958250 Mon Sep 17 00:00:00 2001
From: Dan Elkouby <streetwalkermc@gmail.com>
Date: Sun, 30 Jul 2017 18:49:42 +0300
Subject: [PATCH] Create a new split container when switching a workspace
 container to split layout

The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.

Fixes #2846
---
 src/con.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/con.c b/src/con.c
index d346b9f45..94bfa6e9e 100644
--- src/con.c.orig	2017-09-24 17:21:26 UTC
+++ src/con.c
@@ -1735,7 +1735,7 @@ void con_set_layout(Con *con, layout_t l
             con->workspace_layout = ws_layout;
             DLOG("Setting layout to %d\n", layout);
             con->layout = layout;
-        } else if (layout == L_STACKED || layout == L_TABBED) {
+        } else if (layout == L_STACKED || layout == L_TABBED || layout == L_SPLITV || layout == L_SPLITH) {
             DLOG("Creating new split container\n");
             /* 1: create a new split container */
             Con *new = con_new(NULL, NULL);


[FILE:838:patches/patch-src_log.c]
--- src/log.c.orig	2017-09-24 17:21:26 UTC
+++ src/log.c
@@ -128,7 +128,7 @@ void open_logbuffer(void) {
          * At the moment (2011-12-10), no testcase leads to an i3 log
          * of more than ~ 600 KiB. */
     logbuffer_size = min(physical_mem_bytes * 0.01, shmlog_size);
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__DragonFly__)
     sasprintf(&shmlogname, "/tmp/i3-log-%d", getpid());
 #else
     sasprintf(&shmlogname, "/i3-log-%d", getpid());
@@ -139,7 +139,7 @@ void open_logbuffer(void) {
         return;
     }
 
-#if defined(__OpenBSD__) || defined(__APPLE__)
+#if defined(__OpenBSD__) || defined(__APPLE__) || defined(__DragonFly__)
     if (ftruncate(logbuffer_shm, logbuffer_size) == -1) {
         fprintf(stderr, "Could not ftruncate SHM segment for the i3 log: %s\n", strerror(errno));
 #else

