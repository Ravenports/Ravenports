# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gpgme
VERSION=		1.12.0
KEYWORDS=		security
VARIANTS=		standard
SDESC[standard]=	GnuPG Made Easy - high level crypto API
HOMEPAGE=		https://www.gnupg.org/related_software/gpgme/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNUPG/gpgme
DISTFILE[1]=		gpgme-1.12.0.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			cpp

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	libgpg-error:single:standard
			libassuan:single:standard
			gnupg:primary:standard
EXRUN[cpp]=		gpgme:primary:standard

USES=			cpe gmake libtool shebangfix

LICENSE=		LGPL21+:primary
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING.LESSOR
LICENSE_SCHEME=		solo

INFO=			primary:gpgme
CPE_VENDOR=		gnu
FPC_EQUIVALENT=		security/gpgme
INFO_SUBDIR=		.
SHEBANG_FILES=		tests/gpg/pinentry

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-languages="cl cpp"
			--enable-fd-passing
			--disable-g13-test
			--disable-gpg-test
			--disable-gpgconf-test
			--disable-gpgsm-test

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		11.21.0
PLIST_SUB=		CPP_SOMAJOR=6
			CPP_SOVERSION=6.8.0

post-patch:
	${REINPLACE_CMD} -e 's|^clfilesdir.*|clfilesdir=$$\(libdir\)/common-lisp/gpgme|g' \
		${WRKSRC}/lang/cl/Makefile.in

[FILE:254:descriptions/desc.primary]
GnuPG Made Easy (GPGME) is a C library designed to make access to GnuPG
easier for applications.  It provides a High-Level Crypto API for
encryption, decryption, signing, signature verification and key management.
Currently it uses GnuPG as its backend.


[FILE:50:descriptions/desc.cpp]
C++ bindings for GnuPG Made Easy (GPGME) library.


[FILE:99:distinfo]
b4dc951c3743a60e2e120a77892e9e864fb936b2e58e7c77e8581f4d050e8cd8      1658803 gpgme-1.12.0.tar.bz2


[FILE:218:manifests/plist.primary]
bin/
 gpgme-config
 gpgme-json
 gpgme-tool
include/gpgme.h
lib/
 libgpgme.so
 libgpgme.so.%%SOMAJOR%%
 libgpgme.so.%%SOVERSION%%
lib/common-lisp/gpgme/
 gpgme-package.lisp
 gpgme.asd
 gpgme.lisp
share/aclocal/gpgme.m4


[FILE:916:manifests/plist.cpp]
include/gpgme++/
 configuration.h
 context.h
 data.h
 decryptionresult.h
 defaultassuantransaction.h
 editinteractor.h
 encryptionresult.h
 engineinfo.h
 error.h
 eventloopinteractor.h
 exception.h
 global.h
 gpgadduserideditinteractor.h
 gpgagentgetinfoassuantransaction.h
 gpggencardkeyinteractor.h
 gpgmefw.h
 gpgmepp_export.h
 gpgmepp_version.h
 gpgsetexpirytimeeditinteractor.h
 gpgsetownertrusteditinteractor.h
 gpgsignkeyeditinteractor.h
 importresult.h
 key.h
 keygenerationresult.h
 keylistresult.h
 notation.h
 result.h
 scdgetinfoassuantransaction.h
 signingresult.h
 swdbresult.h
 tofuinfo.h
 trustitem.h
 verificationresult.h
 vfsmountresult.h
include/gpgme++/interfaces/
 assuantransaction.h
 dataprovider.h
 passphraseprovider.h
 progressprovider.h
lib/
 libgpgmepp.so
 libgpgmepp.so.%%CPP_SOMAJOR%%
 libgpgmepp.so.%%CPP_SOVERSION%%
lib/cmake/Gpgmepp/
 GpgmeppConfig.cmake
 GpgmeppConfigVersion.cmake


[FILE:555:patches/patch-lang_cpp_src_engineinfo.h]
In file included from qgpgmebackend.cpp:42:0:
../../../lang/cpp/src/engineinfo.h: In constructor 'GpgME::EngineInfo::Version::Version(const string&)':
../../../lang/cpp/src/engineinfo.h:47:17: error: 'sscanf' is not a member of 'std'
                 std::sscanf(version.c_str(), "%d.%d.%d", &major, &minor, &patch) != 3) {
                 ^


--- lang/cpp/src/engineinfo.h.orig	2017-10-04 15:17:16 UTC
+++ lang/cpp/src/engineinfo.h
@@ -32,6 +32,7 @@
 #include <algorithm>
 #include <string>
 #include <iostream>
+#include <cstdio>
 
 namespace GpgME
 {

