# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		lutok
VERSION=		0.4
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Lightweight C++ API for Lua
HOMEPAGE=		https://github.com/jmmv/lutok
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/jmmv/lutok/releases/download/lutok-0.4/
DISTFILE[1]=		lutok-0.4.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			examples
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	atf:single:standard

USES=			libtool lua pkgconfig mbsdfix

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/lutok

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-atf
			--docdir={{STD_DOCDIR}}
			--htmldir={{STD_DOCDIR}}/html
			--without-doxygen
			LUA_CFLAGS="-I{{LUA_INCDIR}}"
			LUA_LIBS="-L{{LUA_LIBDIR}} -llua-{{LUA_VER}} -lm"

MAKE_ARGS=		examplesdir={{STD_EXAMPLESDIR}}

INSTALL_TARGET=		install-strip
SOVERSION=		3.0.0

VAR_OPSYS[linux]=	LDFLAGS=-ldl

post-install:
	${RM} ${STAGEDIR}${STD_DOCDIR}/COPYING

[FILE:837:descriptions/desc.primary]
Lutok is a lightweight C++ API library for Lua.

Lutok provides thin C++ wrappers around the Lua C API to ease the
interaction between C++ and Lua.  These wrappers make intensive use of
RAII to prevent resource leakage, expose C++-friendly data types, report
errors by means of exceptions and ensure that the Lua stack is always
left untouched in the face of errors.  The library also provides a small
subset of miscellaneous utility functions built on top of the wrappers.

Lutok focuses on providing a clean and safe C++ interface; the drawback
is that it is not suitable for performance-critical environments.  In
order to implement error-safe C++ wrappers on top of a Lua C binary
library, Lutok adds several layers or abstraction and error checking
that go against the original spirit of the Lua C API and thus degrade
performance.


[FILE:95:distinfo]
2cec51efa0c8d65ace8b21eaa08384b77abc5087b46e785f78de1c21fb754cd5       489570 lutok-0.4.tar.gz


[FILE:361:manifests/plist.primary]
include/lutok/
 c_gate.hpp
 debug.hpp
 exceptions.hpp
 operations.hpp
 stack_cleaner.hpp
 state.hpp
 state.ipp
 test_utils.hpp
lib/
 liblutok.a
 liblutok.so
 liblutok.so.%%SOMAJOR%%
 liblutok.so.%%SOVERSION%%
lib/pkgconfig/lutok.pc
tests/lutok/
 Kyuafile
 c_gate_test
 debug_test
 examples_test
 exceptions_test
 operations_test
 stack_cleaner_test
 state_test


[FILE:84:manifests/plist.examples]
share/examples/lutok/
 Makefile
 bindings.cpp
 hello.cpp
 interpreter.cpp
 raii.cpp


[FILE:3146:manifests/plist.docs]
share/doc/lutok/
 AUTHORS
 NEWS
 README
share/doc/lutok/html/
 a00001.html
 a00002.html
 a00002.png
 a00003.html
 a00004.html
 a00005.html
 a00005.png
 a00006.html
 a00006.png
 a00007.html
 a00008.html
 a00009.html
 a00010.html
 a00011.html
 a00013.html
 a00013_source.html
 a00016.html
 a00016_source.html
 a00019.html
 a00019_source.html
 a00022.html
 a00022_source.html
 a00025.html
 a00025_source.html
 a00028.html
 a00028_source.html
 a00031.html
 a00031_source.html
 a00032.html
 a00033.html
 a00034.html
 a00035.html
 a00039.html
 a00040.html
 a00041.html
 a00042.html
 a00043.html
 a00044.html
 a00045.html
 a00046.html
 a00047.html
 a00048.html
 a00049.html
 annotated.html
 bc_s.png
 bdwn.png
 classes.html
 closed.png
 doxygen.css
 doxygen.png
 dynsections.js
 files.html
 ftv2blank.png
 ftv2cl.png
 ftv2doc.png
 ftv2folderclosed.png
 ftv2folderopen.png
 ftv2lastnode.png
 ftv2link.png
 ftv2mlastnode.png
 ftv2mnode.png
 ftv2mo.png
 ftv2node.png
 ftv2ns.png
 ftv2plastnode.png
 ftv2pnode.png
 ftv2splitbar.png
 ftv2vertline.png
 functions.html
 functions_func.html
 functions_vars.html
 globals.html
 globals_defs.html
 hierarchy.html
 index.html
 jquery.js
 namespacemembers.html
 namespacemembers_func.html
 namespaces.html
 nav_f.png
 nav_g.png
 nav_h.png
 open.png
 tab_a.png
 tab_b.png
 tab_h.png
 tab_s.png
 tabs.css
share/doc/lutok/html/search/
 all_5f.html
 all_5f.js
 all_61.html
 all_61.js
 all_63.html
 all_63.js
 all_64.html
 all_64.js
 all_65.html
 all_65.js
 all_66.html
 all_66.js
 all_67.html
 all_67.js
 all_68.html
 all_68.js
 all_69.html
 all_69.js
 all_6c.html
 all_6c.js
 all_6e.html
 all_6e.js
 all_6f.html
 all_6f.js
 all_70.html
 all_70.js
 all_72.html
 all_72.js
 all_73.html
 all_73.js
 all_74.html
 all_74.js
 all_75.html
 all_75.js
 all_77.html
 all_77.js
 all_7e.html
 all_7e.js
 classes_61.html
 classes_61.js
 classes_64.html
 classes_64.js
 classes_65.html
 classes_65.js
 classes_66.html
 classes_66.js
 classes_69.html
 classes_69.js
 classes_73.html
 classes_73.js
 close.png
 defines_72.html
 defines_72.js
 files_63.html
 files_63.js
 files_64.html
 files_64.js
 files_65.html
 files_65.js
 files_6f.html
 files_6f.js
 files_73.html
 files_73.js
 files_74.html
 files_74.js
 functions_61.html
 functions_61.js
 functions_63.html
 functions_63.js
 functions_64.html
 functions_64.js
 functions_65.html
 functions_65.js
 functions_66.html
 functions_66.js
 functions_67.html
 functions_67.js
 functions_68.html
 functions_68.js
 functions_69.html
 functions_69.js
 functions_6c.html
 functions_6c.js
 functions_6e.html
 functions_6e.js
 functions_6f.html
 functions_6f.js
 functions_70.html
 functions_70.js
 functions_72.html
 functions_72.js
 functions_73.html
 functions_73.js
 functions_74.html
 functions_74.js
 functions_75.html
 functions_75.js
 functions_77.html
 functions_77.js
 functions_7e.html
 functions_7e.js
 mag_sel.png
 namespaces_61.html
 namespaces_61.js
 nomatches.html
 search.css
 search.js
 search_l.png
 search_m.png
 search_r.png
 variables_5f.html
 variables_5f.js
 variables_6c.html
 variables_6c.js
 variables_6f.html
 variables_6f.js
 variables_73.html
 variables_73.js


[FILE:448:patches/patch-state.cpp]
--- state.cpp.orig	2013-11-29 21:29:15 UTC
+++ state.cpp
@@ -492,7 +492,7 @@ lutok::state::is_userdata(const int inde
 void
 lutok::state::load_file(const std::string& file)
 {
-    if (!::access(file.c_str(), R_OK) == 0)
+    if (::access(file.c_str(), R_OK) == -1)
         throw lutok::file_not_found_error(file);
     if (luaL_loadfile(_pimpl->lua_state, file.c_str()) != 0)
         throw lutok::api_error::from_stack(*this, "luaL_loadfile");

