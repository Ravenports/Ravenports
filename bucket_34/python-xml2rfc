# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-xml2rfc
VERSION=		2.10.0
KEYWORDS=		python textproc
VARIANTS=		py27 py36 py37
SDESC[py36]=		Request For Comment authoring with XML (PY 36)
SDESC[py37]=		Request For Comment authoring with XML (PY 37)
SDESC[py27]=		Request For Comment authoring with XML (PY 27)
HOMEPAGE=		https://tools.ietf.org/tools/xml2rfc/trac/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/x/xml2rfc
DISTFILE[1]=		xml2rfc-2.10.0.tar.gz:main
DF_INDEX=		1
SPKGS[py36]=		single
SPKGS[py37]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY36 PY37
OPTIONS_STANDARD=	none
VOPTS[py36]=		PY27=OFF PY36=ON PY37=OFF
VOPTS[py37]=		PY27=OFF PY36=OFF PY37=ON
VOPTS[py27]=		PY27=ON PY36=OFF PY37=OFF

DISTNAME=		xml2rfc-2.10.0

GENERATED=		yes

[PY36].BUILDRUN_DEPENDS_ON=		python-intervaltree:single:py36
					python-lxml:single:py36
					python-pyflakes:single:py36
					python-requests:single:py36
					python-six:single:py36
[PY36].USES_ON=				python:py36

[PY37].BUILDRUN_DEPENDS_ON=		python-intervaltree:single:py37
					python-lxml:single:py37
					python-pyflakes:single:py37
					python-requests:single:py37
					python-six:single:py37
[PY37].USES_ON=				python:py37

[PY27].BUILDRUN_DEPENDS_ON=		python-intervaltree:single:py27
					python-lxml:single:py27
					python-pyflakes:single:py27
					python-requests:single:py27
					python-six:single:py27
[PY27].USES_ON=				python:py27

[FILE:3954:descriptions/desc.single]
Introduction
============

The IETF_ uses a specific format for the standards and other documents it
publishes as RFCs_, and for the draft documents which are produced when
developing documents for publications.  There exists a number of different
tools to facilitate the formatting of drafts and RFCs according to the
existing rules, and this tool, **xml2rfc**, is one of them.  It takes as
input
an xml file which contains the text and meta-information about author names
etc., and transforms it into suitably formatted output.  The input xml file
should follow the DTD given in RFC2629_ (or it's `inofficial successor`_).

The current incarnation of **xml2rfc** provides output in the following
formats: Paginated and unpaginated ascii text, html, nroff, and expanded
xml.
Only the paginated text format is currently (January 2013) accepable as
draft
submissions to the IETF.

.. _IETF: https://www.ietf.org/
.. _RFCs: https://www.rfc-editor.org/
.. _RFC2629: https://tools.ietf.org/html/rfc2629
.. _inofficial successor:
https://tools.ietf.org/html/draft-mrose-writing-rfcs

Installation
============

System Install
--------------

To install a system-wide version of xml2rfc, download and unpack the
`xml2rfc
distribution package`_, then cd into the resulting package directory and
run::

    $ python setup.py install

Alternatively, if you have the 'pip_' command ('Pip Installs Packages')
installed,
you can run pip to download and install the package::

    $ pip install xml2rfc

.. _lxml:				http://lxml.de/
.. _pip:				https://pypi.python.org/pypi/pip
.. _xml2rfc distribution package:	https://pypi.python.org/pypi/pip
.. _requests:				http://docs.python-requests.org/


User Install
------------

If you want to perform a local installation for a specific user,
you have a couple of options.  You may use python's default location
of user site-packages by specifying the flag ``--user``.  These locations
are:

    * UNIX: $HOME/.local/lib/python<ver>/site-packages
    * OSX: $HOME/Library/Python/<ver>/lib/python/site-packages
    * Windows: %APPDATA%/Python/Python<ver>/site-packages

You can additionally combine the flag ``--install-scripts`` with
``--user`` to
specify a directory on your PATH to install the xml2rfc executable to.  For
example, the following command::

    $ python setup.py install --user --install-scripts=$HOME/bin

will install the xml2rfc library and data to your local site-packages
directory, and an executable python script ``xml2rfc`` to $HOME/bin.

Custom Install
--------------

The option ``--prefix`` allows you to specify the base path for all
installation files.  The setup.py script will exit with an error if your
PYTHONPATH is not correctly configured to contain the library path
the script tries to install to.

The command is used as follows::

    $ python setup.py install --prefix=<path>

For further fine-tuning of the installation behavior, you can get a list
of all available options by running::

    $ python setup.py install --help

Usage
=====

xml2rfc accepts a single XML document as input and outputs to one or more
conversion formats.

**Basic Usage**: ``xml2rfc SOURCE [options] FORMATS...``

**Options**
    The following parameters affect how xml2rfc behaves, however none are
required.

    ===============  =======================
==================================================
    Short            Long                    Description
    ===============  =======================
==================================================
    ``-C``           ``--clear-cache``       purge the cache and exit
    ``-h``           ``--help``              show the help message and exit
    ``-n``           ``--no-dtd``            disable DTD validation step
    ``-N``           ``--no-network``        don't use the network to
resolve references
    ``-q``           ``--quiet``             dont print anything
    ``-v``           ``--verbose``           print extra information


[FILE:100:distinfo]
dc62e1d2fea896855ee0681f02bcb7596e3b6b5aa559348b8520a4eb0c793282      1978529 xml2rfc-2.10.0.tar.gz

