# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-xml2rfc
VERSION=		3.5.0
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Request For Comment authoring with XML (PY38)
SDESC[py39]=		Request For Comment authoring with XML (PY39)
HOMEPAGE=		https://tools.ietf.org/tools/xml2rfc/trac/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/x/xml2rfc
DISTFILE[1]=		xml2rfc-3.5.0.tar.gz:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		xml2rfc-3.5.0

GENERATED=		yes

[PY38].BUILDRUN_DEPENDS_ON=		python-appdirs:single:py38
					python-ConfigArgParse:single:py38
					python-google-i18n-address:single:py38
					python-html5lib:single:py38
					python-intervaltree:single:py38
					python-Jinja2:single:py38
					python-kitchen:single:py38
					python-lxml:single:py38
					python-pycountry:single:py38
					python-pyflakes:single:py38
					python-PyYAML:single:py38
					python-requests:single:py38
					python-setuptools:single:py38
					python-six:single:py38
[PY38].USES_ON=				python:py38

[PY39].BUILDRUN_DEPENDS_ON=		python-appdirs:single:py39
					python-ConfigArgParse:single:py39
					python-google-i18n-address:single:py39
					python-html5lib:single:py39
					python-intervaltree:single:py39
					python-Jinja2:single:py39
					python-kitchen:single:py39
					python-lxml:single:py39
					python-pycountry:single:py39
					python-pyflakes:single:py39
					python-PyYAML:single:py39
					python-requests:single:py39
					python-setuptools:single:py39
					python-six:single:py39
[PY39].USES_ON=				python:py39

[FILE:3727:descriptions/desc.single]
Introduction
============

The IETF_ uses a specific format for the standards and other documents it
publishes as RFCs_, and for the draft documents which are produced when
developing documents for publications.  There exists a number of different
tools to facilitate the formatting of drafts and RFCs according to the
existing rules, and this tool, **xml2rfc**, is one of them.  It takes as
input
an xml file which contains the text and meta-information about author names
etc., and transforms it into suitably formatted output.  The input xml file
should follow the grammars in RFC7749_ (for v2 documents) or RFC7991_ (for 
v3 documents). Note that the grammar for v3 is still being refined, and 
changes will eventually be captured in the `bis draft for 7991`_. 
Changes not yet captured can be seen in the xml2rfc source `v3.rng`_.

**xml2rfc** provides a variety of output formats. See the command line
help for a full list of formats. It also provides conversion from v2 to
v3, and can run the preptool_ on its input.

.. _IETF: https://www.ietf.org/
.. _RFCs: https://www.rfc-editor.org/
.. _RFC7749: https://tools.ietf.org/html/rfc7749
.. _RFC7991: https://tools.ietf.org/html/rfc7991
.. _bis draft for 7991: https://tools.ietf.org/html/draft-iab-rfc7991bis
.. _v3.rng:
https://trac.tools.ietf.org/tools/xml2rfc/trac/browser/trunk/cli/xml2rfc/data/v3.rng
.. _preptool: https://tools.ietf.org/html/rfc7998

Installation
============

Installation of the python package is done as usual with 'pip install
xml2rfc',
using appropriate switches and/or sudo.

Installation of support libraries for the PDF-formatter
-------------------------------------------------------

In order to generate PDFs, xml2rfc uses the WeasyPrint module, which
depends on external libaries that must be installed as native packages
on your platform, separately from the xml2rfc install.

First, install the Cairo, Pango, and GDK-PixBuf library files on your
system.  See installation instructions on the WeasyPrint Docs:

    https://weasyprint.readthedocs.io/en/stable/install.html

(Python 3 is not needed if your system Python is 2.7, though).

(On some OS X systems with System Integrity Protection active, you may
need to create a symlink from your home directory to the library
installation
directory (often /opt/local/lib):

    ln -s /opt/local/lib ~/lib

in order for weasyprint to find the installed cairo and pango libraries.
Whether this is needed or not depends on whether you used macports or
homebrew
to install cairo and pango, and the homebrew / macport version.)

Next, install the pycairo and weasyprint python modules using pip.
Depending on your system, you may need to use 'sudo' or install in
user-specific directories, using the --user switch.  On OS X in
particular, you may also need to install a newer version of setuptools
using --user before weasyprint can be installed.  If you install with 
the --user switch, you may need to also set PYTHONPATH, e.g.,

    PYTHONPATH=/Users/henrik/Library/Python/2.7/lib/python/site-packages

for Python 2.7.

The basic pip commands (modify as needed according to the text above)
are:

    pip install 'pycairo>=1.18' 'weasyprint<=0.42.3'

With these installed and available to xml2rfc, the --pdf switch will be
enabled.

For PDF output, you also need to install the Noto font set.  Download the
full
set from
https://noto-website-2.storage.googleapis.com/pkgs/Noto-unhinted.zip,
and install as appropriate for your platform.

Usage
=====

xml2rfc accepts a single XML document as input and outputs to one or more
conversion formats.

**Basic Usage**: ``xml2rfc SOURCE [options] FORMATS...

Run xml2rfc --help`` for a full listing of command-line options.

Changelog
=========



[FILE:99:distinfo]
3ec836a9545f549707a8c8176038160185b9d08c1dd80304a906527da21bff68      4450772 xml2rfc-3.5.0.tar.gz

