# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		psutils
VERSION=		17
KEYWORDS=		print
VARIANTS=		standard
SDESC[standard]=	Tools for Manipulating PostScript Files
HOMEPAGE=		http://knackered.org/angus/psutils/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		ftp://ftp.dcs.ed.ac.uk/pub/ajcd/
			ftp://ftp.knackered.org/pub/psutils/
DISTFILE[1]=		psutils-p17.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	libpaper:single:standard

USES=			perl

DISTNAME=		psutils

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"PS Utilities License (BSD-like)"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		print/psutils

INVALID_RPATH=		yes

MAKEFILE=		Makefile.unix
MAKE_ENV=		DATADIR="{{PREFIX}}/share/psutils"
			PERL="{{PERL}}"
			CHMOD="{{CHMOD}}"

[FILE:1473:descriptions/desc.single]
This package contains a collection of PostScript document utilities

psbook             rearranges pages into signatures
psselect           selects pages and page ranges
pstops             performs general page rearrangement and selection
psnup              put multiple pages per physical sheet of paper
psresize           alter document paper size
epsffit            fits an EPSF file to a given bounding box
getafm        (sh) outputs PostScript to retrieve AFM file from printer
showchar      (sh) outputs PostScript to draw a character with metric info
fixdlsrps   (perl) filter to fix DviLaser/PS output so that PSUtils works
fixfmps     (perl) filter to fix framemaker documents so psselect etc. work
fixmacps    (perl) filter to fix Mac documents with saner version of md
fixpsditps  (perl) filter to fix Transcript psdit docs to work with PSUtils
fixpspps    (perl) filter to fix PSPrint PostScript so psselect etc. work
fixscribeps (perl) filter to fix Scribe PostScript so psselect etc. work
fixtpps     (perl) filter to fix Troff Tpscript documents
fixwfwps    (perl) filter to fix Word for Windows documents for PSUtils
fixwpps     (perl) filter to fix WordPerfect documents for PSUtils
fixwwps     (perl) filter to fix Windows Write documents for PSUtils
extractres  (perl) filter to extract resources from PostScript files
includeres  (perl) filter to include resources into PostScript files
psmerge     (perl) hack script to merge multiple PostScript files


[FILE:97:distinfo]
3853eb79584ba8fbe27a815425b65a9f7f15b258e0d43a05a856bdb75d588ae4        62039 psutils-p17.tar.gz


[FILE:558:manifests/plist.single]
bin/
 epsffit
 extractres
 fixdlsrps
 fixfmps
 fixmacps
 fixpsditps
 fixpspps
 fixscribeps
 fixtpps
 fixwfwps
 fixwpps
 fixwwps
 getafm
 includeres
 psbook
 psmerge
 psnup
 psresize
 psselect
 pstops
 showchar
share/man/man1/
 epsffit.1.gz
 extractres.1.gz
 fixdlsrps.1.gz
 fixfmps.1.gz
 fixmacps.1.gz
 fixpsditps.1.gz
 fixpspps.1.gz
 fixscribeps.1.gz
 fixtpps.1.gz
 fixwfwps.1.gz
 fixwpps.1.gz
 fixwwps.1.gz
 getafm.1.gz
 includeres.1.gz
 psbook.1.gz
 psmerge.1.gz
 psnup.1.gz
 psresize.1.gz
 psselect.1.gz
 pstops.1.gz
share/psutils/
 md68_0.ps
 md71_0.ps


[FILE:3075:patches/patch-Makefile.unix]
--- Makefile.unix.orig	1997-03-11 22:52:59 UTC
+++ Makefile.unix
@@ -25,21 +25,22 @@ PAPER=a4
 
 OS = UNIX
 
-BINDIR = /usr/local/bin
+BINDIR ?= $(DESTDIR)$(PREFIX)/bin
 SCRIPTDIR = $(BINDIR)
-INCLUDEDIR = /usr/local/share/psutils
-PERL = /usr/local/bin/perl
+INCLUDEDIR ?= $(DESTDIR)$(DATADIR)
+PERL ?= $(PERL5)
 
-BINMODE = 0755
-MANMODE = 0644
-CHMOD = chmod
+BINMODE ?= 0755
+MANMODE ?= 0644
+CHMOD ?= chmod
 INSTALL = install -c -m $(BINMODE)
 INSTALLMAN = install -c -m $(MANMODE)
 MANEXT = 1
-MANDIR = /usr/local/share/man/man$(MANEXT)
+MANDIR ?= $(DESTDIR)$(MANPREFIX)/man/man$(MANEXT)
 
-CC = gcc
-CFLAGS = -DPAPER=\"$(PAPER)\" -DUNIX -O -Wall
+CC ?= gcc
+CFLAGS += -DLIBPAPER -DPAPER=\"$(PAPER)\" -I${LOCALBASE}/include -DUNIX -Wall
+LDFLAGS+= -L${LOCALBASE}/lib -lm -lpaper
 
 BIN = psbook psselect pstops epsffit psnup \
 	psresize
@@ -65,30 +66,30 @@ pserror.o: psutil.h patchlev.h pserror.h
 epsffit.o: epsffit.c pserror.h patchlev.h
 
 epsffit: epsffit.o pserror.o
-	$(CC) $(CCFLAGS) -o epsffit pserror.o epsffit.o
+	$(CC) $(LDFLAGS) -o epsffit pserror.o epsffit.o
 
 psnup: psnup.o psutil.o psspec.o pserror.o
-	$(CC) $(CCFLAGS) -o psnup psutil.o psspec.o pserror.o psnup.o
+	$(CC) $(LDFLAGS) -o psnup psutil.o psspec.o pserror.o psnup.o
 
 psnup.o: psutil.h patchlev.h psspec.h pserror.h psnup.c
 
 psresize: psresize.o psutil.o pserror.o psspec.o
-	$(CC) $(CCFLAGS) -o psresize psutil.o psspec.o pserror.o psresize.o
+	$(CC) $(LDFLAGS) -o psresize psutil.o psspec.o pserror.o psresize.o
 
 psresize.o: psutil.h patchlev.h psspec.h pserror.h psresize.c
 
 psbook: psbook.o psutil.o pserror.o
-	$(CC) $(CCFLAGS) -o psbook psutil.o pserror.o psbook.o
+	$(CC) $(LDFLAGS) -o psbook psutil.o pserror.o psbook.o
 
 psbook.o: psutil.h patchlev.h pserror.h psbook.c
 
 psselect: psselect.o psutil.o pserror.o
-	$(CC) $(CCFLAGS) -o psselect psutil.o pserror.o psselect.o
+	$(CC) $(LDFLAGS) -o psselect psutil.o pserror.o psselect.o
 
 psselect.o: psutil.h patchlev.h pserror.h psselect.c
 
 pstops: pstops.o psutil.o psspec.o pserror.o
-	$(CC) $(CCFLAGS) -o pstops psutil.o psspec.o pserror.o pstops.o
+	$(CC) $(LDFLAGS) -o pstops psutil.o psspec.o pserror.o pstops.o
 
 pstops.o: psutil.h patchlev.h psspec.h pserror.h pstops.c
 
@@ -222,27 +223,27 @@ install.bin: $(BIN)
 	-mkdir $(BINDIR)
 	@for i in $(BIN); do \
 		echo Installing $$i; \
-		$(INSTALL) $$i $(BINDIR); \
+		$(BSD_INSTALL_PROGRAM) $$i $(BINDIR); \
 	done
 
 install.script: $(PERLSCRIPTS) $(SHELLSCRIPTS)
 	-mkdir $(SCRIPTDIR)
 	@for i in $(PERLSCRIPTS) $(SHELLSCRIPTS); do \
 		echo Installing $$i; \
-		$(INSTALL) $$i $(SCRIPTDIR); \
+		$(BSD_INSTALL_SCRIPT) $$i $(SCRIPTDIR); \
 	done
 
 install.include: $(INCLUDES)
 	-mkdir $(INCLUDEDIR)
 	@for i in $(INCLUDES); do \
 		echo Installing $$i; \
-		$(INSTALLMAN) $$i $(INCLUDEDIR); \
+		$(BSD_INSTALL_DATA) $$i $(INCLUDEDIR); \
 	done
 
 install.man: $(MANPAGES)
 	-mkdir $(MANDIR)
 	@for i in $(MANPAGES); do \
 		echo Installing manual page for $$i; \
-		$(INSTALLMAN) $$i $(MANDIR)/$$i; \
+		$(BSD_INSTALL_DATA) $$i $(MANDIR)/$$i; \
 	done
 


[FILE:663:patches/patch-b4]
--- psutil.c.bak	Thu Oct  5 10:17:44 2000
+++ psutil.c	Thu Oct  5 10:17:44 2000
@@ -48,10 +48,12 @@
    { "a4", 595, 842 },		/* 21cm * 29.7cm */
    { "a5", 421, 595 },		/* 14.85cm * 21cm */
    { "b5", 516, 729 },		/* 18.2cm * 25.72cm */
+   { "b4", 729, 1032 },		/* 25.72cm * 36.4cm */
    { "A3", 842, 1191 },		/* 29.7cm * 42cm */
    { "A4", 595, 842 },		/* 21cm * 29.7cm */
    { "A5", 421, 595 },		/* 14.85cm * 21cm */
    { "B5", 516, 729 },		/* 18.2cm * 25.72cm */
+   { "B4", 729, 1032 },		/* 25.72cm * 36.4cm */
    { "letter", 612, 792 },	/* 8.5in * 11in */
    { "legal", 612, 1008 },	/* 8.5in * 14in */
    { "ledger", 1224, 792 },	/* 17in * 11in */


[FILE:594:patches/patch-epsffit.c]
--- epsffit.c.orig	1997-03-11 22:52:52 UTC
+++ epsffit.c
@@ -39,10 +39,10 @@ static void usage(void)
    exit(1);
 }
 
-void main(int argc, char **argv)
+int main(int argc, char **argv)
 {
    int bbfound = 0;              /* %%BoundingBox: found */
-   int urx, ury, llx, lly;
+   int urx = 0, ury = 0, llx = 0, lly = 0;
    int furx, fury, fllx, flly;
    int showpage = 0, centre = 0, rotate = 0, aspect = 0, maximise = 0;
    char buf[BUFSIZ];
@@ -185,5 +185,5 @@ void main(int argc, char **argv)
    } else
       message(FATAL, "no %%%%BoundingBox:\n");
 
-   exit(0);
+   return (0);
 }


[FILE:894:patches/patch-getafm.sh]
--- getafm.sh.orig	1997-03-11 22:52:57 UTC
+++ getafm.sh
@@ -1,7 +1,7 @@
 #!/bin/sh
 
 if [ $# -ne 1 ]; then
-  echo "usage: $0 font-name | gsnd - >font-name.afm" >&2
+  echo "usage: $0 font-name | gsnd -q - >font-name.afm" >&2
   exit 1
 fi
 
@@ -13,6 +13,11 @@ cat << EOF
 %	getafm 1.00 (c) AJCD
 % and getafm.ps by an unknown author,
 %	modified by J. Daniel Smith <dsmith@mailhost.aa.cad.slb.com>
+%
+% modified by Joachim H. Kaiser <jhk@cmpnetmail.com>:
+% - suggest a quiet gs run in usage
+% - get font version info (from 'version', not 'Version')
+% - add copyright field to output
 
 % Metrics dictionary code added by AJCD, 7/6/93
 
@@ -66,8 +71,9 @@ cat << EOF
 	(isFixedPitch)(IsFixedPitch) prany
 	(UnderlinePosition)dup prany
 	(UnderlineThickness)dup prany
-	(Version)(version) prany
+	(version)(Version) prany
 	(Notice)dup prany
+	(Copyright)dup prany
       pop
     }
     {


[FILE:341:patches/patch-psbook.c]
--- psbook.c.orig	1997-03-11 22:53:01 UTC
+++ psbook.c
@@ -32,7 +32,7 @@ static void usage(void)
 }
 
 
-void main(int argc, char *argv[])
+int main(int argc, char *argv[])
 {
    int signature = 0;
    int currentpg, maxpage;
@@ -107,5 +107,5 @@ void main(int argc, char *argv[])
    }
    writetrailer();
 
-   exit(0);
+   return (0);
 }


[FILE:452:patches/patch-pserror.c]
--- pserror.c.orig	1997-03-11 22:53:01 UTC
+++ pserror.c
@@ -24,7 +24,7 @@ extern char *program ;	/* Defined by mai
 void message(int flags, char *format, ...)
 {
   va_list args ;
-  static column = 0 ;		/* current screen column for message wrap */
+  static int column = 0 ;		/* current screen column for message wrap */
   char msgbuf[MAX_MESSAGE] ;	/* buffer in which to put the message */
   char *bufptr = msgbuf ;	/* message buffer pointer */
 


[FILE:1706:patches/patch-psnup.c]
--- psnup.c.orig	1997-03-11 22:53:02 UTC
+++ psnup.c
@@ -28,6 +28,10 @@
 #include "pserror.h"
 #include "patchlev.h"
 
+#if defined(LIBPAPER)
+#include <paper.h>
+#endif
+
 char *program ;
 int pages ;
 int verbose ;
@@ -66,12 +70,12 @@ static int nextdiv(int n, int m)
    return (0);
 }
 
-void main(int argc, char *argv[])
+int main(int argc, char *argv[])
 {
-   int horiz, vert, rotate, column, flip, leftright, topbottom;
+   int horiz = 0, vert = 0, rotate = 0, column, flip, leftright, topbottom;
    int nup = 1;
    double draw = 0;				/* draw page borders */
-   double scale;				/* page scale */
+   double scale = 0;				/* page scale */
    double uscale = 0;				/* user supplied scale */
    double ppwid, pphgt;				/* paper dimensions */
    double margin, border;			/* paper & page margins */
@@ -79,13 +83,21 @@ void main(int argc, char *argv[])
    double iwidth, iheight ;			/* input paper size */
    double tolerance = 100000;			/* layout tolerance */
    Paper *paper;
+   char *name;
 
+#if defined(LIBPAPER)
+	name = (char *)systempapername();
+	if (name == NULL)
+		name = (char *)defaultpapername();
+#else
 #ifdef PAPER
-   if ( (paper = findpaper(PAPER)) != (Paper *)0 ) {
-      width = (double)PaperWidth(paper);
-      height = (double)PaperHeight(paper);
-   }
+	name = PAPER;
 #endif
+#endif
+	if ((paper = findpaper(name)) != NULL) {
+		width = (double)PaperWidth(paper);
+		height = (double)PaperHeight(paper);
+	}
 
    margin = border = vshift = hshift = column = flip = 0;
    leftright = topbottom = 1;
@@ -331,6 +343,6 @@ void main(int argc, char *argv[])
       pstops(nup, 1, 0, specs, draw);		/* do page rearrangement */
    }
 
-   exit(0);
+   return (0);
 }
 


[FILE:1349:patches/patch-psresize.c]
--- psresize.c.orig	1997-03-11 22:53:03 UTC
+++ psresize.c
@@ -20,6 +20,10 @@
 #include "pserror.h"
 #include "patchlev.h"
 
+#if defined(LIBPAPER)
+#include <paper.h>
+#endif
+
 char *program ;
 int pages ;
 int verbose ;
@@ -46,7 +50,7 @@ static void argerror(void)
 #define MIN(x,y) ((x) > (y) ? (y) : (x))
 #define MAX(x,y) ((x) > (y) ? (x) : (y))
 
-void main(int argc, char *argv[])
+int main(int argc, char *argv[])
 {
    double scale, rscale;			/* page scale */
    double waste, rwaste;			/* amount wasted */
@@ -56,13 +60,21 @@ void main(int argc, char *argv[])
    double inheight = -1;
    Paper *paper;
    PageSpec *specs;
+   char *name = NULL;
 
+#if defined(LIBPAPER)
+	name = (char *)systempapername();
+	if (name == NULL)
+		name = (char *)defaultpapername();
+#else
 #ifdef PAPER
-   if ( (paper = findpaper(PAPER)) != (Paper *)0 ) {
-      inwidth = width = (double)PaperWidth(paper);
-      inheight = height = (double)PaperHeight(paper);
-   }
+	name = PAPER;
+#endif
 #endif
+	if ((paper = findpaper(name)) != NULL) {
+		inwidth = width = (double)PaperWidth(paper);
+		inheight = height = (double)PaperHeight(paper);
+	}
 
    vshift = hshift = 0;
    rotate = 0;
@@ -175,6 +187,6 @@ void main(int argc, char *argv[])
       
    pstops(1, 1, 0, specs, 0.0);		/* do page rearrangement */
 
-   exit(0);
+   return (0);
 }
 


[FILE:383:patches/patch-psselect.c]
--- psselect.c.orig	1997-03-11 22:53:03 UTC
+++ psselect.c
@@ -91,7 +91,7 @@ static PageRange *addrange(char *str, Pa
 }
 
 
-void main(int argc, char *argv[])
+int main(int argc, char *argv[])
 {
    int currentpg, maxpage = 0;
    int even = 0, odd = 0, reverse = 0;
@@ -235,5 +235,5 @@ void main(int argc, char *argv[])
    }
    writetrailer();
 
-   exit(0);
+   return (0);
 }


[FILE:1117:patches/patch-pstops.c]
--- pstops.c.orig	1997-03-11 22:53:04 UTC
+++ pstops.c
@@ -13,6 +13,10 @@
 #include "pserror.h"
 #include "patchlev.h"
 
+#if defined(LIBPAPER)
+#include <paper.h>
+#endif
+
 char *program ;
 int pages ;
 int verbose ;
@@ -112,19 +116,27 @@ static PageSpec *parsespecs(char *str)
    return (head);
 }
 
-void main(int argc, char *argv[])
+int main(int argc, char *argv[])
 {
    PageSpec *specs = NULL;
    int nobinding = 0;
    double draw = 0;
    Paper *paper;
+   char *name;
 
+#if defined(LIBPAPER)
+	name = (char *)systempapername();
+	if (name == NULL)
+		name = (char *)defaultpapername();
+#else
 #ifdef PAPER
-   if ( (paper = findpaper(PAPER)) != (Paper *)0 ) {
-      width = (double)PaperWidth(paper);
-      height = (double)PaperHeight(paper);
-   }
+	name = PAPER;
+#endif
 #endif
+	if ((paper = findpaper(name)) != NULL) {
+		width = (double)PaperWidth(paper);
+		height = (double)PaperHeight(paper);
+	}
 
    infile = stdin;
    outfile = stdout;
@@ -194,5 +206,5 @@ void main(int argc, char *argv[])
 
    pstops(modulo, pagesperspec, nobinding, specs, draw);
 
-   exit(0);
+   return (0);
 }


[FILE:1276:patches/patch-psutil.c]
--- psutil.c.orig	2018-10-09 04:52:16 UTC
+++ psutil.c
@@ -21,6 +21,11 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 
+#if defined(LIBPAPER)
+#include <math.h>
+#include <paper.h>
+#endif
+
 #define iscomment(x,y) (strncmp(x,y,strlen(y)) == 0)
 
 extern char *program ;
@@ -42,6 +47,7 @@ static int outputpage = 0;
 static int maxpages = 100;
 static long *pageptr;
 
+#if !defined(LIBPAPER)
 /* list of paper sizes supported */
 static Paper papersizes[] = {
    { "a3", 842, 1191 },		/* 29.7cm * 42cm */
@@ -70,6 +76,7 @@ static Paper papersizes[] = {
 Paper* findpaper(char *name)
 {
    Paper *pp;
+
    for (pp = papersizes; PaperName(pp); pp++) {
       if (strcmp(PaperName(pp), name) == 0) {
 	 return pp;
@@ -77,6 +84,27 @@ Paper* findpaper(char *name)
    }
    return (Paper *)NULL;
 }
+#else
+static Paper pspec;
+
+Paper *findpaper(char *name)
+{
+	const struct paper *pp;
+
+	paperinit();
+	for (pp = paperfirst(); pp; pp = papernext(pp)) {
+		if (strcmp(name, papername(pp)) == 0) {
+			pspec.name = strdup(name);
+			pspec.width = round(paperpswidth(pp));
+			pspec.height = round(paperpsheight(pp));
+			return (&pspec);
+		}
+	}
+	return (NULL);
+}
+#endif
+
+
 
 /* Make a file seekable, using temporary files if necessary */
 FILE *seekable(FILE *fp)

