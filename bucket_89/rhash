# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		rhash
VERSION=		1.4.3
KEYWORDS=		security
VARIANTS=		standard ssl
SDESC[ssl]=		File digest utility with ssl runtime loading
SDESC[standard]=	File digest library and utility
HOMEPAGE=		https://github.com/rhash/RHash
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/rhash:RHash:v1.4.3
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[ssl]=		single
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	SSL
OPTIONS_STANDARD=	none
VOPTS[ssl]=		SSL=ON

USES=			cpe gettext

DISTNAME=		RHash-1.4.3

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

CPE_VENDOR=		rhash_project
FPC_EQUIVALENT=		security/rhash

MUST_CONFIGURE=		yes
CONFIGURE_ARGS=		--prefix="{{PREFIX}}"
			--enable-lib-shared
			--enable-lib-static
			--extra-cflags="{{CPPFLAGS}}"
			--extra-ldflags="{{LDFLAGS}}"
			--mandir="{{MANPREFIX}}/man"

BUILD_TARGET=		build-shared
MAKE_ARGS=		INSTALL_PROGRAM="{{INSTALL_PROGRAM}}"
			INSTALL_SHARED="{{INSTALL_PROGRAM}}"

INSTALL_TARGET=		install install-pkg-config
INSTALL_REQ_TOOLCHAIN=	yes

[SSL].DESCRIPTION=			Use OpenSSL's MD5, SHA1 and SHA2 algorithms
[SSL].CONFIGURE_ARGS_OFF=		--disable-openssl
[SSL].CONFIGURE_ARGS_ON=		--enable-openssl-runtime
[SSL].USES_ON=				ssl:openssl

post-patch:
	${REINPLACE_CMD} -e 's,/etc/,${PREFIX}&,' ${WRKSRC}/parse_cmdline.c
	${REINPLACE_CMD} -e '/BYTE_ORDER/s,__,_,g' \
		${WRKSRC}/librhash/byte_order.h
	# remove windows-only function that sun linker squawks on
	# because its scraped into a symbol map while undefined
	${REINPLACE_CMD} -e '/rhash_wfile/d' ${WRKSRC}/librhash/rhash.h

post-install:
.if "${.MAKE.OS.NAME}" == "Darwin"
	${LN} -s librhash.0.dylib ${STAGEDIR}${PREFIX}/lib/librhash.dylib
.else
	${LN} -s librhash.so.0 ${STAGEDIR}${PREFIX}/lib/librhash.so
.endif
	${MV} ${STAGEDIR}${PREFIX}/etc/rhashrc \
	      ${STAGEDIR}${PREFIX}/etc/rhashrc.sample

[FILE:606:descriptions/desc.single]
RHash is a console utility and library for computing and verifying hash sums
of files.  It supports CRC32, MD4, MD5, SHA1, SHA256, SHA512, SHA3, Tiger,
TTH, Torrent BTIH, AICH, ED2K, GOST R 34.11-94, RIPEMD-160, HAS-160, EDON-R
256/512, Whirlpool, and Snefru-128/256 hash sums.  Its features are:

  * Can calculate Magnet links
  * Output in a predefined (SFV, BSD-like) or a user-defined format
  * Ability to process directories recursively
  * Updating existing hash-files (adding hash sums of files missing in a
    hash-file)
  * Portable, written in pure C, small in size, open source (MIT license)


[FILE:103:distinfo]
1e40fa66966306920f043866cbe8612f4b939b033ba5e2708c3f41be257c8a3e       429290 rhash-RHash-1.4.3.tar.gz


[FILE:526:manifests/plist.single]
@sample etc/rhashrc.sample
bin/
 ed2k-link
 edonr256-hash
 edonr512-hash
 gost12-256-hash
 gost12-512-hash
 has160-hash
 magnet-link
 rhash
 sfv-hash
 tiger-hash
 tth-hash
 whirlpool-hash
include/
 rhash.h
 rhash_torrent.h
lib/
 librhash.a
 librhash.so
 librhash.so.0
lib/pkgconfig/librhash.pc
share/man/man1/
 ed2k-link.1.gz
 edonr256-hash.1.gz
 edonr512-hash.1.gz
 gost12-256-hash.1.gz
 gost12-512-hash.1.gz
 has160-hash.1.gz
 magnet-link.1.gz
 rhash.1.gz
 sfv-hash.1.gz
 tiger-hash.1.gz
 tth-hash.1.gz
 whirlpool-hash.1.gz


[FILE:800:patches/patch-configure]
$NetBSD: patch-configure,v 1.1 2020/08/24 12:58:52 schmonz Exp $

Avoid choosing aligned_alloc() when it's not present, such as CentOS 6
with lang/gcc7.

--- configure.orig	2022-06-14 20:25:13 UTC
+++ configure
@@ -659,6 +659,16 @@ elif test "$OPT_OPENSSL" = "auto" || tes
   finish_check "$ALLOW_RUNTIME_LINKING"
 fi
 
+start_check "libc provides aligned_alloc"
+HAS_STDC_ALIGNED_ALLOC=no
+if cc_check_statement "stdlib.h" 'aligned_alloc(256, 1024);' "-Werror -Wno-unused-result"; then
+  HAS_STDC_ALIGNED_ALLOC=yes
+fi
+if test "$HAS_STDC_ALIGNED_ALLOC" = "no"; then
+  BUILD_EXTRA_CFLAGS=$(join_params $BUILD_EXTRA_CFLAGS -DNOPE_DOES_NOT_HAS_STDC_ALIGNED_ALLOC)
+fi
+finish_check "$HAS_STDC_ALIGNED_ALLOC"
+
 SHARED_VSCRIPT=
 if ! darwin; then
   start_check "linker support for --version-script"


[FILE:430:patches/patch-librhash_byte__order.h]
--- librhash/byte_order.h.orig	2022-06-14 20:25:13 UTC
+++ librhash/byte_order.h
@@ -18,6 +18,13 @@
 extern "C" {
 #endif
 
+#ifdef __sun__
+#undef  _LITTLE_ENDIAN
+#define _LITTLE_ENDIAN	1234
+#define _BIG_ENDIAN	4321
+#define _BYTE_ORDER	_LITTLE_ENDIAN
+#endif
+
 /* if x86 compatible cpu */
 #if defined(i386) || defined(__i386__) || defined(__i486__) || \
 	defined(__i586__) || defined(__i686__) || defined(__pentium__) || \


[FILE:530:patches/patch-librhash_util.h]
NetBSD: Avoid choosing aligned_alloc() when it's not present, such as CentOS 6
        with lang/gcc7.

--- librhash/util.h.orig	2022-06-14 20:25:13 UTC
+++ librhash/util.h
@@ -42,6 +42,7 @@ extern "C" {
 # define rhash_aligned_free(ptr) _aligned_free(ptr)
 
 #elif !defined(NO_STDC_ALIGNED_ALLOC) && (__STDC_VERSION__ >= 201112L || defined(_ISOC11_SOURCE)) \
+	&& !defined(NOPE_DOES_NOT_HAS_STDC_ALIGNED_ALLOC) \
 	&& !defined(__APPLE__) && (!defined(__ANDROID_API__) || __ANDROID_API__ >= 28)
 
 # define HAS_STDC_ALIGNED_ALLOC

