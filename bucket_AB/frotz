# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		frotz
VERSION=		2.54
KEYWORDS=		games
VARIANTS=		standard
SDESC[standard]=	Infocom-style interactive fiction player
HOMEPAGE=		https://gitlab.com/DavidGriffith/frotz
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://gitlab.com/DavidGriffith/frotz/-/archive/2.54/
DISTFILE[1]=		frotz-2.54.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dumb
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		freetype:dev:standard
			libao:dev:standard
			libsndfile:dev:standard
			libsamplerate:dev:standard
			libmodplug:dev:standard
			xorg-bdftopcf:single:standard
			xorg-mkfontscale:primary:standard
BUILDRUN_DEPENDS=	freetype:primary:standard
			libao:primary:standard
			libsndfile:primary:standard
			libsamplerate:primary:standard
			libmodplug:primary:standard

USES=			gmake ncurses pkgconfig jpeg png zlib fonts
			execinfo:build
SDL_COMPONENTS=		sdl2 mixer2
XORG_COMPONENTS=	xt x11

LICENSE=		GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/common/main.c
LICENSE_SCHEME=		solo

FONTNAME=		zork
FPC_EQUIVALENT=		games/frotz

MAKE_ENV=		CURSES=ncurses

INSTALL_TARGET=		install-all

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*frotz

[FILE:462:descriptions/desc.primary]
An interpreter for all Infocom games. Complies with standard 1.0 of
Graham Nelson's specification. Frotz runs text adventures which come in
so-called story files: ZORK1.DAT, TRINITY.DAT, CURSES.Z5, JIGSAW.Z8,
ARTHUR.ZIP etc. It is possible to play Atari ST, Amiga or Macintosh games
on your computer once you manage to transfer the story files.  There is an
increasing number of new games available on the Internet. Check the
if-archive at http://ifarchive.org/


[FILE:136:descriptions/desc.dumb]
This package contains dfrotz, a version of frotz that runs on dumb
terminals and doesn't pull in additional packages, not even ncurses.


[FILE:97:distinfo]
756d7e11370c9c8e61573e350e2a5071e77fd2781be74c107bd432f817f3abc7       354087 frotz-2.54.tar.bz2


[FILE:132:manifests/plist.primary]
%%FONTSDIR%%/
 Zork_r400-10.pcf
 Zork_r400-11.pcf
 Zork_r400-13.pcf
 Zork_r400-16.pcf
 Zork_r400-20.pcf
bin/
 frotz
 sfrotz
 xfrotz


[FILE:11:manifests/plist.dumb]
bin/dfrotz


[FILE:67:manifests/plist.man]
share/man/man6/
 dfrotz.6.gz
 frotz.6.gz
 sfrotz.6.gz
 xfrotz.6.gz


[FILE:2212:patches/patch-Makefile]
--- Makefile.orig	2022-04-14 06:47:41 UTC
+++ Makefile
@@ -160,46 +160,11 @@ CURSES_LDFLAGS += -l$(CURSES)
 endif
 endif
 
-
-# OS-specific configurations.
-# NetBSD
-ifeq ($(UNAME_S),NetBSD)
-NETBSD = yes
-CFLAGS += -D_NETBSD_SOURCE -I/usr/pkg/include
-LDFLAGS += -Wl,-R/usr/pkg/lib -L/usr/pkg/lib
-SDL_LDFLAGS += -lexecinfo
-ifeq ($(CURSES), ncursesw)
-CURSES_CFLAGS += -I/usr/pkg/include/ncursesw
-else
-CURSES_CFLAGS += -I/usr/pkg/include/ncurses
-endif
-endif
-
-# FreeBSD
-ifeq ($(UNAME_S),FreeBSD)
-FREEBSD = yes
-CFLAGS += -I/usr/local/include -D__BSD_VISIBLE=1
-LDFLAGS += -L/usr/local/lib
-SDL_LDFLAGS += -lexecinfo
-endif
-
-# OpenBSD
-ifeq ($(UNAME_S),OpenBSD)
-OPENBSD = yes
-NO_EXECINFO_H = yes
-NO_UCONTEXT_H = yes
-NO_IMMINTRIN_H = yes
-CFLAGS += -I/usr/local/include
-LDFLAGS += -L/usr/local/lib
-SDL_CFLAGS += -DSDL_DISABLE_IMMINTRIN_H
-SDL_LDFLAGS += -lexecinfo
-endif
-
 # Linux
 ifeq ($(UNAME_S),Linux)
 LINUX = yes
 CFLAGS += -D_POSIX_C_SOURCE=200809L
-NPROCS = $(shell grep -c ^processor /proc/cpuinfo)
+SDL_LDFLAGS += -ldl
 endif
 
 # macOS
@@ -292,13 +257,14 @@ DOS_DIR = $(SRCDIR)/dos
 X11_DIR = $(SRCDIR)/x11
 X11_LIB = $(X11_DIR)/frotz_x11.a
 export X11_PKGS = x11 xt libpng libjpeg zlib
-X11_FONTDIR = $(DESTDIR)$(PREFIX)/share/fonts/X11/zork
+X11_FONTDIR = $(DESTDIR)$(PREFIX)/share/fonts/zork
 X11_LDFLAGS = `pkg-config $(X11_PKGS) --libs` -lm
 
 SDL_DIR = $(SRCDIR)/sdl
 SDL_LIB = $(SDL_DIR)/frotz_sdl.a
 export SDL_PKGS = libpng libjpeg sdl2 SDL2_mixer freetype2 zlib
-SDL_LDFLAGS += $(shell $(PKG_CONFIG) $(SDL_PKGS) --libs) -lm
+SDL_LDFLAGS += $(shell $(PKG_CONFIG) $(SDL_PKGS) --libs) -lm -lexecinfo_pic
+SDL_CFLAGS += $(shell $(PKG_CONFIG) sdl2 --cflags)
 
 SUBDIRS = $(COMMON_DIR) $(CURSES_DIR) $(X11_DIR) $(SDL_DIR) $(DUMB_DIR) $(BLORB_DIR) $(DOS_DIR)
 SUB_CLEAN = $(SUBDIRS:%=%-clean)
@@ -583,14 +549,6 @@ ifndef CURSES
 	@echo "** ERROR You need to pick a flavor of curses in the Makefile!"
 	exit 1
 endif
-ifeq ($(USE_UTF8), yes)
-ifneq ($(CURSES),ncursesw)
-ifndef MACOS
-	@echo "** ERROR UTF-8 support only works with ncursesw!"
-	exit 2
-endif
-endif
-endif
 	@echo "** Generating $@"
 	@echo "#ifndef CURSES_DEFINES_H" > $@
 	@echo "#define CURSES_DEFINES_H" >> $@

