# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-idna
VERSION=		2.7
KEYWORDS=		python devel
VARIANTS=		py27 py35 py36
SDESC[py35]=		Int. Domain Names in Applications (PY 35)
SDESC[py36]=		Int. Domain Names in Applications (PY 36)
SDESC[py27]=		Int. Domain Names in Applications (PY 27)
HOMEPAGE=		https://github.com/kjd/idna
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/i/idna
DISTFILE[1]=		idna-2.7.tar.gz:main
DF_INDEX=		1
SPKGS[py35]=		single
SPKGS[py36]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY35 PY36
OPTIONS_STANDARD=	none
VOPTS[py35]=		PY27=OFF PY35=ON PY36=OFF
VOPTS[py36]=		PY27=OFF PY35=OFF PY36=ON
VOPTS[py27]=		PY27=ON PY35=OFF PY36=OFF

DISTNAME=		idna-2.7

GENERATED=		yes

[PY35].USES_ON=				python:py35

[PY36].USES_ON=				python:py36

[PY27].USES_ON=				python:py27

[FILE:2742:descriptions/desc.single]
Internationalized Domain Names in Applications (IDNA)
=====================================================

Support for the Internationalised Domain Names in Applications
(IDNA) protocol as specified in `RFC 5891
<http://tools.ietf.org/html/rfc5891>`_.
This is the latest version of the protocol and is sometimes referred to as
“IDNA 2008”.

This library also provides support for Unicode Technical Standard 46,
`Unicode IDNA Compatibility Processing
<http://unicode.org/reports/tr46/>`_.

This acts as a suitable replacement for the “encodings.idna” module that
comes with the Python standard library, but only supports the
old, deprecated IDNA specification (`RFC 3490
<http://tools.ietf.org/html/rfc3490>`_).

Basic functions are simply executed:

.. code-block:: pycon

    # Python 3
    >>> import idna
    >>> idna.encode('ドメイン.テスト')
    b'xn--eckwd4c7c.xn--zckzah'
    >>> print(idna.decode('xn--eckwd4c7c.xn--zckzah'))
    ドメイン.テスト

    # Python 2
    >>> import idna
    >>> idna.encode(u'ドメイン.テスト')
    'xn--eckwd4c7c.xn--zckzah'
    >>> print idna.decode('xn--eckwd4c7c.xn--zckzah')
    ドメイン.テスト

Packages
--------

The latest tagged release version is published in the PyPI repository:

.. image:: https://badge.fury.io/py/idna.svg
   :target: http://badge.fury.io/py/idna


Installation
------------

To install this library, you can use pip:

.. code-block:: bash

    $ pip install idna

Alternatively, you can install the package using the bundled setup script:

.. code-block:: bash

    $ python setup.py install

This library works with Python 2.6 or later, and Python 3.3 or later.


Usage
-----

For typical usage, the ``encode`` and ``decode`` functions will take a
domain
name argument and perform a conversion to A-labels or U-labels
respectively.

.. code-block:: pycon

    # Python 3
    >>> import idna
    >>> idna.encode('ドメイン.テスト')
    b'xn--eckwd4c7c.xn--zckzah'
    >>> print(idna.decode('xn--eckwd4c7c.xn--zckzah'))
    ドメイン.テスト

You may use the codec encoding and decoding methods using the
``idna.codec`` module:

.. code-block:: pycon

    # Python 2
    >>> import idna.codec
    >>> print u'домена.испытание'.encode('idna')
    xn--80ahd1agd.xn--80akhbyknj4f
    >>> print 'xn--80ahd1agd.xn--80akhbyknj4f'.decode('idna')
    домена.испытание

Conversions can be applied at a per-label basis using the ``ulabel`` or
``alabel``
functions if necessary:

.. code-block:: pycon

    # Python 2
    >>> idna.alabel(u'测试')
    'xn--0zwm56d'

Compatibility Mapping (UTS #46)
+++++++++++++++++++++++++++++++

As described in `RFC 5895 <http://tools.ietf.org/html/rfc5895>`_, the IDNA


[FILE:94:distinfo]
684a38a6f903c1d71d6d5fac066b58d7768af4de2b832e426ec79c30daa94a16       172698 idna-2.7.tar.gz

