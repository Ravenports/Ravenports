# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gegl
VERSION=		0.4.48
REVISION=		1
KEYWORDS=		graphics
VARIANTS=		std
SDESC[std]=		Graph based image processing framework
HOMEPAGE=		https://www.gegl.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GIMP/gegl/0.4
DISTFILE[1]=		gegl-0.4.48.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			nls

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		bash:primary:std
			harfbuzz:dev:std
			poppler:glibdev:std
			poppler:dev:std
			babl:dev:std
			ffmpeg6:dev:std
			openexr:dev:std
			graphviz:dev:std
			gexiv2:dev:std
			WebP:dev:std
			libraw:dev:std
			fribidi:dev:std
			json-glib:dev:std
			video4linux:dev:std
			libspiro:dev:std
BUILDRUN_DEPENDS=	babl:primary:std
			json-glib:primary:std
			fribidi:primary:std
			libnsgif:single:std
			poppler:glib:std
			ffmpeg6:primary:std
			graphviz:primary:std
			openexr:primary:std
			libraw:primary:std
			libspiro:primary:std
			WebP:primary:std
			gexiv2:primary:std
			evdev-proto:single:std
			video4linux:primary:std

USES=			cpe png jpeg tiff zstd meson pkgconfig shebangfix
GNOME_COMPONENTS=	glib intltool gdkpixbuf cairo pango librsvg
SDL_COMPONENTS=		sdl2

LICENSE=		LGPL3+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL3+:{{WRKSRC}}/COPYING.LESSER
LICENSE_AWK=		TERMS:"__GEGL_H__"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/gegl/gegl.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/gegl
MESON_ARGS=		-Dcairo=enabled
			-Dexiv2=enabled
			-Dgdk-pixbuf=enabled
			-Dgexiv2=enabled
			-Dgraphviz=enabled
			-Djasper=enabled
			-Dlcms=enabled
			-Dlibav=enabled
			-Dlibjpeg=enabled
			-Dlibpng=enabled
			-Dlibraw=enabled
			-Dlibrsvg=enabled
			-Dlibspiro=enabled
			-Dlibtiff=enabled
			-Dlibv4l=enabled
			-Dlibv4l2=enabled
			-Dpango=enabled
			-Dpangocairo=enabled
			-Dpoppler=enabled
			-Dsdl2=enabled
			-Dwebp=enabled
			-Ddocs=false
			-Dworkshop=false
			-Dintrospection=false
			-Dmrg=disabled
			-Dopenexr=disabled
			-Dpygobject=disabled
			-Dlua=disabled
			-Dvapigen=disabled
			-Dlensfun=disabled
			-Dumfpack=disabled
			-Dsdl1=disabled
SHEBANG_FILES=		tools/xml_insert.sh

SOVERSION=		0.447.1
PLIST_SUB=		GV=0.4

[FILE:321:descriptions/desc.primary]
The Generic Graphics Library (GEGL) is a graph based image processing
framework.

GEGL provides infrastructure to do demand-based cached non-destructive
image editing on larger than RAM buffers. Through the babl library it
provides support for a wide range of color models and pixel storage
formats for input and output.


[FILE:97:distinfo]
418c26d94be8805d7d98f6de0c6825ca26bd74fcacb6c188da47533d9ee28247      5805488 gegl-0.4.48.tar.xz


[FILE:1111:manifests/plist.primary]
@comment lib/gegl-%%GV%%/exr-load.so
@comment lib/gegl-%%GV%%/exr-save.so
bin/
 gegl
 gegl-imgcmp
lib/
 libgegl-%%GV%%.so.%%SOMAJOR%%
 libgegl-%%GV%%.so.%%SOVERSION%%
 libgegl-npd-%%GV%%.so
 libgegl-sc-%%GV%%.so
lib/gegl-%%GV%%/
 dropshadow2.json
 ff-load.so
 ff-save.so
 gegl-common-cxx-x86_64-v2.so
 gegl-common-cxx-x86_64-v3.so
 gegl-common-cxx.so
 gegl-common-gpl3-x86_64-v2.so
 gegl-common-gpl3-x86_64-v3.so
 gegl-common-gpl3.so
 gegl-common-x86_64-v2.so
 gegl-common-x86_64-v3.so
 gegl-common.so
 gegl-core.so
 gegl-generated-x86_64-v2.so
 gegl-generated-x86_64-v3.so
 gegl-generated.so
 gegl-transformops-x86_64-v2.so
 gegl-transformops-x86_64-v3.so
 gif-load.so
 grey2.json
 jp2-load.so
 jpg-load.so
 jpg-save.so
 lcms-from-profile.so
 npd.so
 npy-save.so
 path.so
 pdf-load.so
 pixbuf-load.so
 pixbuf-save.so
 png-load.so
 png-save.so
 ppm-load.so
 ppm-save.so
 raw-load.so
 rgbe-load.so
 rgbe-save.so
 sdl2-display.so
 seamless-clone-compose.so
 seamless-clone.so
 svg-load.so
 text.so
 tiff-load.so
 tiff-save.so
 transformops.so
 v4l.so
 vector-fill.so
 vector-stroke.so
 webp-load.so
 webp-save.so


[FILE:1696:manifests/plist.dev]
include/gegl-%%GV%%/
 gegl-apply.h
 gegl-audio-fragment.h
 gegl-buffer-backend.h
 gegl-buffer-enums.h
 gegl-buffer-iterator.h
 gegl-buffer-matrix2.h
 gegl-buffer-swap.h
 gegl-buffer.h
 gegl-color.h
 gegl-cpuaccel.h
 gegl-curve.h
 gegl-debug.h
 gegl-enums.h
 gegl-graph-debug.h
 gegl-init.h
 gegl-lookup.h
 gegl-math.h
 gegl-matrix.h
 gegl-memory.h
 gegl-metadata.h
 gegl-metadatahash.h
 gegl-metadatastore.h
 gegl-node.h
 gegl-op.h
 gegl-operations-util.h
 gegl-parallel.h
 gegl-paramspecs.h
 gegl-path.h
 gegl-plugin.h
 gegl-processor.h
 gegl-random.h
 gegl-rectangle.h
 gegl-scratch.h
 gegl-tile-backend.h
 gegl-tile-handler.h
 gegl-tile-source.h
 gegl-tile.h
 gegl-types.h
 gegl-utils.h
 gegl-version.h
 gegl.h
include/gegl-%%GV%%/npd/
 deformation.h
 graphics.h
 lattice_cut.h
 npd.h
 npd_common.h
 npd_debug.h
 npd_gegl.h
 npd_math.h
include/gegl-%%GV%%/opencl/
 cl.h
 cl_d3d10.h
 cl_ext.h
 cl_gl.h
 cl_gl_ext.h
 cl_platform.h
 gegl-cl-color.h
 gegl-cl-init.h
 gegl-cl-random.h
 gegl-cl-types.h
 gegl-cl.h
 opencl.h
include/gegl-%%GV%%/operation/
 gegl-extension-handler.h
 gegl-operation-area-filter.h
 gegl-operation-composer.h
 gegl-operation-composer3.h
 gegl-operation-context.h
 gegl-operation-filter.h
 gegl-operation-handlers.h
 gegl-operation-meta-json.h
 gegl-operation-meta.h
 gegl-operation-point-composer.h
 gegl-operation-point-composer3.h
 gegl-operation-point-filter.h
 gegl-operation-point-render.h
 gegl-operation-property-keys.h
 gegl-operation-sink.h
 gegl-operation-source.h
 gegl-operation-temporal.h
 gegl-operation.h
include/gegl-%%GV%%/sc/
 sc-common.h
 sc-context.h
 sc-outline.h
 sc-sample.h
lib/libgegl-%%GV%%.so
lib/pkgconfig/
 gegl-%%GV%%.pc
 gegl-sc-%%GV%%.pc


[FILE:1607:manifests/plist.nls]
share/locale/bs/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/ca/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/da/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/de/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/el/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/en_GB/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/eo/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/es/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/eu/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/fr/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/gl/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/hr/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/id/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/is/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/it/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/ka/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/kab/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/ko/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/lv/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/mr/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/nb/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/ne/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/nl/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/oc/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/pl/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/pt/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/pt_BR/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/ro/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/ru/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/sk/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/sl/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/sr/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/sr@latin/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/sv/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/tr/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/uk/LC_MESSAGES/gegl-%%GV%%.mo
share/locale/zh_CN/LC_MESSAGES/gegl-%%GV%%.mo


[FILE:1160:patches/patch-gegl_gegl-config.c]
--- gegl/gegl-config.c.orig	2023-03-26 13:19:28 UTC
+++ gegl/gegl-config.c
@@ -285,6 +285,21 @@ gegl_config_class_init (GeglConfigClass
                              ) * page_size;
       mach_port_deallocate (mach_task_self (), host);
     }
+#elif defined(__DragonFly__)
+
+    int64_t usermem, free_pages, inact;
+    size_t len = sizeof usermem;
+
+    if(sysctlbyname("hw.usermem", &usermem, &len, NULL, 0)) {
+      mem_total = usermem;
+    };
+
+    if(sysctlbyname("vm.stats.vm.v_free_count", &free_pages, &len, NULL, 0)) {
+	if(sysctlbyname("vm.stats.vm.v_inactive_count", &inact, &len, NULL, 0)) {
+	    mem_available = (free_pages + inact) * sysconf (_SC_PAGESIZE);
+	}
+    };
+
 #elif defined(__FreeBSD__)
     bool ok = true;
 
@@ -319,7 +334,11 @@ gegl_config_class_init (GeglConfigClass
     }
 #else
     mem_total = (uint64_t) sysconf (_SC_PHYS_PAGES) * sysconf (_SC_PAGESIZE);
+# ifdef _SC_AVPHYS_PAGES
     mem_available = (uint64_t) sysconf (_SC_AVPHYS_PAGES) * sysconf (_SC_PAGESIZE);
+# else
+    mem_available = (uint64_t) sysconf (_SC_PHYS_PAGES) * sysconf (_SC_PAGESIZE);
+# endif
 #endif
 
     default_tile_cache_size = mem_total;

