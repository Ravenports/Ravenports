# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		pinentry
VERSION=		1.3.2
KEYWORDS=		security
VARIANTS=		std ncurses qt5 fltk gnome3
SDESC[std]=		Assuan passphrase entry dialog (console)
SDESC[qt5]=		Assuan passphrase entry dialog (Qt5)
SDESC[ncurses]=		Assuan passphrase entry dialog (ncurses)
SDESC[fltk]=		Assuan passphrase entry dialog (FLTK)
SDESC[gnome3]=		Assuan passphrase entry dialog (GNOME3)
HOMEPAGE=		https://www.gnupg.org/aegypten2/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNUPG/pinentry
DISTFILE[1]=		pinentry-1.3.2.tar.bz2:main
DF_INDEX=		1
SPKGS[std]=		single
SPKGS[qt5]=		single
SPKGS[ncurses]=		single
SPKGS[fltk]=		single
SPKGS[gnome3]=		single

OPTIONS_AVAILABLE=	NCURSES QT5 GTK2 FLTK NOTSTD GNOME3
OPTIONS_STANDARD=	none
VOPTS[qt5]=		NCURSES=OFF QT5=ON GTK2=OFF FLTK=OFF NOTSTD=ON
			GNOME3=OFF
VOPTS[ncurses]=		NCURSES=ON QT5=OFF GTK2=OFF FLTK=OFF NOTSTD=ON
			GNOME3=OFF
VOPTS[fltk]=		NCURSES=OFF QT5=OFF GTK2=OFF FLTK=ON NOTSTD=ON
			GNOME3=OFF
VOPTS[gnome3]=		NCURSES=OFF QT5=OFF GTK2=OFF FLTK=OFF NOTSTD=ON
			GNOME3=ON

BUILD_DEPENDS=		libgpg-error:dev:std
			libassuan:dev:std
			libsecret:dev:std
BUILDRUN_DEPENDS=	libgpg-error:primary:std
			libsecret:primary:std
			libassuan:primary:std

USES=			gmake pkgconfig
GNOME_COMPONENTS=	glib

LICENSE=		GPLv2+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/pinentry/pinentry.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		security/pinentry

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-libsecret
			--disable-pinentry-emacs

[NOTSTD].DESCRIPTION=			Indicates non-console variant
[NOTSTD].CONFIGURE_ARGS_OFF=		--enable-pinentry-tty
[NOTSTD].CONFIGURE_ARGS_ON=		--disable-pinentry-tty
					--disable-pinentry-emacs
					--disable-inside-emacs

[GNOME3].DESCRIPTION=			Build GNOME3 variant
[GNOME3].BUILDRUN_DEPENDS_ON=		gcr3:primary:std
[GNOME3].BUILD_DEPENDS_ON=		harfbuzz:dev:std
					gcr3:dev:std
[GNOME3].CONFIGURE_ENABLE_BOTH=		pinentry-gnome3
[GNOME3].GNOME_COMPONENTS_ON=		gtk3
[GNOME3].USES_ON=			fontconfig:build

[FLTK].DESCRIPTION=			Build FLTK variant
[FLTK].BUILDRUN_DEPENDS_ON=		fltk:primary:std
[FLTK].BUILD_DEPENDS_ON=		fltk:dev:std
[FLTK].CONFIGURE_ENABLE_BOTH=		pinentry-fltk
[FLTK].XORG_COMPONENTS_ON=		x11
					xft
					xcursor
					xfixes
					xext
					xinerama

[GTK2].DESCRIPTION=			Build GTK2 variant
[GTK2].BUILD_DEPENDS_ON=		harfbuzz:dev:std
[GTK2].CONFIGURE_ENABLE_BOTH=		pinentry-gtk2
[GTK2].GNOME_COMPONENTS_ON=		gtk2

[QT5].DESCRIPTION=			Build Qt5 variant
[QT5].BUILDRUN_DEPENDS_ON=		qt5-qtbase:primary:std
[QT5].BUILD_DEPENDS_ON=			qt5-qttools:set:std
[QT5].CONFIGURE_ARGS_OFF=		--disable-pinentry-qt
[QT5].CONFIGURE_ARGS_ON=		--program-suffix=5
[QT5].CONFIGURE_ENABLE_BOTH=		pinentry-qt5
[QT5].CONFIGURE_ENV_ON=			PKG_CONFIG_PATH={{LOCALBASE}}/lib/qt5/pkgconfig
[QT5].MAKEFILE_ON=			PREPEND_PATH={{LOCALBASE}}/lib/qt5/bin

[NCURSES].DESCRIPTION=			Build ncurses variant
[NCURSES].CFLAGS_ON=			-DWITH_UTF8_CONVERSION
[NCURSES].CONFIGURE_ARGS_OFF=		--disable-fallback-curses
[NCURSES].CONFIGURE_ENABLE_BOTH=	pinentry-curses
[NCURSES].USES_ON=			ncurses

post-install-NOTSTD-ON:
	${RM} ${STAGEDIR}${PREFIX}/bin/pinentry

[FILE:135:descriptions/desc.single]
This is a collection of simple PIN or passphrase entry dialogs which
utilize the Assuan protocol as described by the aegypten project.


[FILE:101:distinfo]
8e986ed88561b4da6e9efe0c54fa4ca8923035c99264df0b0464497c5fb94e9e       612858 pinentry-1.3.2.tar.bz2


[FILE:29:manifests/plist.single.std]
bin/
 pinentry
 pinentry-tty


[FILE:20:manifests/plist.single.ncurses]
bin/pinentry-curses


[FILE:95:manifests/plist.single.qt5]
bin/pinentry-qt55
share/applications/org.gnupg.pinentry-qt5.desktop
share/pixmaps/pinentry.png


[FILE:18:manifests/plist.single.fltk]
bin/pinentry-fltk


[FILE:20:manifests/plist.single.gnome3]
bin/pinentry-gnome3


[FILE:589:patches/patch-configure]
--- configure.orig	2024-07-03 09:29:09 UTC
+++ configure
@@ -14459,7 +14459,7 @@ if test "$pinentry_fltk" != "no"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for FLTK 1.3" >&5
 printf %s "checking for FLTK 1.3... " >&6; }
    FLTK_VERSION=`${FLTK_CONFIG} --api-version`
-   if test ${FLTK_VERSION} != "1.3" ; then
+   if test ${FLTK_VERSION} != "1.4" ; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
 printf "%s\n" "no" >&6; }
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: FLTK 1.3 not found (available $FLTK_VERSION)" >&5


[FILE:215:patches/patch-doc_Makefile.in]
--- doc/Makefile.in.orig	2024-07-03 09:29:09 UTC
+++ doc/Makefile.in
@@ -688,7 +688,7 @@ info: info-am
 
 info-am: $(INFO_DEPS)
 
-install-data-am: install-info-am
+install-data-am:
 
 install-dvi: install-dvi-am
 


[FILE:776:patches/patch-fltk_pinwindow.cxx]
Rename encrypt to encrypt_pixmap to avoid namespace conflict with
unistd.h encrypt() on FreeBSD 10.4

--- fltk/pinwindow.cxx.orig	2023-03-20 07:31:44 UTC
+++ fltk/pinwindow.cxx
@@ -46,7 +46,7 @@ const char *PinWindow::PROMPT		= "Passph
 
 static const char *timeout_format = "%s(%d)";
 
-static Fl_Pixmap encrypt(encrypt_xpm);
+static Fl_Pixmap encrypt_pixmap(encrypt_xpm);
 static Fl_Pixmap icon(icon_xpm);
 
 PinWindow::PinWindow() : window_(NULL)
@@ -147,7 +147,7 @@ int PinWindow::init(const int cx, const
 	window_->icon(&app);
 
 	icon_ = new Fl_Box(10, 10, 64, 64);
-	icon_->image(encrypt);
+	icon_->image(encrypt_pixmap);
 
     message_ = new Fl_Box(79, 5, cx-99, 44, PROMPT);
 	message_->align(Fl_Align(FL_ALIGN_LEFT_TOP | FL_ALIGN_WRAP | FL_ALIGN_INSIDE)); // left


[FILE:739:patches/patch-pinentry_pinentry.c]
--- pinentry/pinentry.c.orig	2024-07-03 09:19:19 UTC
+++ pinentry/pinentry.c
@@ -42,7 +42,7 @@
 #include "pinentry.h"
 #include "password-cache.h"
 
-#ifdef INSIDE_EMACS
+#if 0
 # include "pinentry-emacs.h"
 #endif
 #ifdef FALLBACK_CURSES
@@ -1201,7 +1201,7 @@ option_handler (assuan_context_t ctx, co
     }
   else if (!strcmp (key, "allow-emacs-prompt") && !*value)
     {
-#ifdef INSIDE_EMACS
+#if 0
       pinentry_enable_emacs_cmd_handler ();
 #endif
     }
@@ -1896,7 +1896,7 @@ cmd_getinfo (assuan_context_t ctx, char
   else if (!strcmp (line, "ttyinfo"))
     {
       char emacs_status[10];
-#ifdef INSIDE_EMACS
+#if 0
       snprintf (emacs_status, sizeof emacs_status,
                 "%d", pinentry_emacs_status ());
 #else


[FILE:298:patches/patch-secmem_secmem.c]
--- secmem/secmem.c.orig	2024-02-26 14:24:12 UTC
+++ secmem/secmem.c
@@ -84,7 +84,7 @@ log_fatal(char *template, ...)
 #  define MAP_ANONYMOUS MAP_ANON
 #endif
 
-#define DEFAULT_POOLSIZE 16384
+#define DEFAULT_POOLSIZE 16384*4
 
 typedef struct memblock_struct MEMBLOCK;
 struct memblock_struct {

