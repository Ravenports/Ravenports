# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		pgplot
VERSION=		5.2.2
REVISION=		2
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	FORTRAN/C scientific graphic library
HOMEPAGE=		https://www.astro.caltech.edu/~tjp/pgplot/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		ftp://ftp.astro.caltech.edu/pub/pgplot/
DISTFILE[1]=		pgplot522.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			png shebangfix perl:build cmake fortran:examples
XORG_COMPONENTS=	x11 xt

DISTNAME=		pgplot

LICENSE=		CUSTOM1:primary
LICENSE_NAME=		CUSTOM1:"PGPLOT License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/copyright.notice
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/pgplot
SHEBANG_FILES=		makehtml
			maketex
SHEBANG_OLD_PERL=	/usr/local/bin/perl

CFLAGS=			-Wno-implicit-function-declaration

post-patch:
	${REINPLACE_CMD} -e 's|png_ptr->jmpbuf|png_jmpbuf(png_ptr)|' \
		${WRKSRC}/drivers/pndriv.c
	${REINPLACE_CMD} -e 's|/usr/local/pgplot|${PREFIX}/share/pgplot|g' \
		${WRKSRC}/src/grgfil.f

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/pg*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.so
	${STRIP_CMD} ${STAGEDIR}${STD_EXAMPLESDIR}/*pgdemo*

post-extract:
	${CP} ${FILESDIR}/grexec.f ${WRKSRC}/sys/
	${CP} ${FILESDIR}/CMakeLists.txt ${WRKSRC}/
.for d in drivers pgdispd fonts src sys examples
	${CP} ${FILESDIR}/${d}_CMakeLists.txt ${WRKSRC}/${d}/CMakeLists.txt
.endfor

[FILE:408:descriptions/desc.primary]
PGPLOT is a Fortran subroutine package for drawing graphs on a variety
of display devices. For more details, see the manual ``PGPLOT Graphics
Subroutine Library'', available from T. J. Pearson.

The CPGPLOT library adds an intermediate level of wrapper functions
between C programs and the PGPLOT library. These functions hide the
system dependencies of calling PGPLOT behind a system independent
interface.


[FILE:95:distinfo]
a5799ff719a510d84d26df4ae7409ae61fe66477e3f1e8820422a9a4727a5be4      1197397 pgplot522.tar.gz


[FILE:164:manifests/plist.primary]
bin/
 pgdisp
 pgxwin_server
include/cpgplot.h
lib/
 libcpgplot.a
 libcpgplot.so
 libcpgplot.so.5
 libpgplot.a
 libpgplot.so
 libpgplot.so.5
share/pgplot/grfont.dat


[FILE:101:manifests/plist.docs]
share/doc/pgplot/
 cpgplot.doc
 pgplot-routines.tex
 pgplot.doc
 pgplot.html
 readme.pgdisp
 rgb.txt


[FILE:193:manifests/plist.examples]
share/examples/pgplot/
 cpgdemo
 pgdemo1
 pgdemo10
 pgdemo11
 pgdemo12
 pgdemo13
 pgdemo14
 pgdemo15
 pgdemo16
 pgdemo17
 pgdemo2
 pgdemo3
 pgdemo4
 pgdemo5
 pgdemo6
 pgdemo7
 pgdemo8
 pgdemo9


[FILE:1127:patches/patch-64bit-drivers]
--- drivers/gidriv.f.orig	1998-05-13 21:05:05.000000000 -0400
+++ drivers/gidriv.f	2011-12-07 16:57:04.000000000 -0500
@@ -78,7 +78,7 @@
 C Note: for 64-bit operating systems, change the following 
 C declaration to INTEGER*8:
 C
-      INTEGER PIXMAP, WORK
+      INTEGER*8 PIXMAP, WORK
 C
       SAVE UNIT, IC, CTABLE, NPICT, MAXIDX, BX, BY, PIXMAP, FILENM
       SAVE CDEFLT, STATE
--- drivers/ppdriv.f.orig	1998-05-13 21:04:29.000000000 -0400
+++ drivers/ppdriv.f	2011-12-07 16:57:39.000000000 -0500
@@ -68,7 +68,7 @@
 C Note: for 64-bit operating systems, change the following 
 C declaration to INTEGER*8:
 C
-      INTEGER PIXMAP
+      INTEGER*8 PIXMAP
 C
       SAVE    UNIT, IC, CVAL, CTABLE, BX, BY, PIXMAP, NPICT, CDEFLT
       SAVE    STATE
--- drivers/wddriv.f.orig	1998-05-13 21:03:53.000000000 -0400
+++ drivers/wddriv.f	2011-12-07 16:56:29.000000000 -0500
@@ -61,7 +61,7 @@
 C Note: for 64-bit operating systems, change the following 
 C declaration to INTEGER*8:
 C
-      INTEGER PIXMAP
+      INTEGER*8 PIXMAP
 C
       SAVE UNIT, IC, CTABLE, NPICT, MAXIDX, BX, BY, PIXMAP, FILENM
       SAVE CDEFLT, STATE


[FILE:684:patches/patch-pgdispd_figcurs.c]
--- pgdispd/figcurs.c.orig	1993-11-29 19:55:24 UTC
+++ pgdispd/figcurs.c
@@ -21,6 +21,7 @@
 #include <stdio.h>
 #include <sys/types.h>
 #include <netinet/in.h>
+#include <stdlib.h>
 
 /* The X Window include files */
 #include <X11/Xlib.h>
@@ -113,8 +114,6 @@ XEvent event;
 	void getbuttonval();
 	int getkeyval();
 
-	char *malloc();
-
 	if (event.type == ButtonPress) getbuttonval(event.xbutton.button, &val);
 	else if (!getkeyval(event, &val)) return(1);
 
@@ -167,8 +166,6 @@ XEvent event;
 	void getbuttonval();
 	int getkeyval();
 
-	char *malloc();
-
 	if (event.type == ButtonPress) getbuttonval(event.xbutton.button, &val);
 	else if (!getkeyval(event, &val)) return(1);
 


[FILE:227:patches/patch-pgdispd_getvisuals.c]
--- pgdispd/getvisuals.c.orig	1993-05-10 00:42:46 UTC
+++ pgdispd/getvisuals.c
@@ -30,6 +30,7 @@
 #include "messages.h"
 
 #include <stdio.h>
+#include <stdlib.h>
 
 #define MAX_DEPTH	24	/* the maximum visual depth to use */
 


[FILE:421:patches/patch-pgdispd_initlgwin.c]
--- pgdispd/initlgwin.c.orig	1995-02-24 18:13:24 UTC
+++ pgdispd/initlgwin.c
@@ -34,6 +34,7 @@
 
 /* The system include files */
 #include <stdio.h>
+#include <stdlib.h>
 
 /* the X Window include files */
 #include <X11/Xlib.h>
@@ -67,7 +68,6 @@ int initlgwin()
 
 	Pixmap XCreatePixmap();
 	void initlgluts();	/* initialize the LUTs */
-	char *malloc();
 	void initwmattr();
 
 	/* Initialize the line graphics LUTs */


[FILE:591:patches/patch-pgdispd_proccom.c]
--- pgdispd/proccom.c.orig	1994-08-22 20:33:35 UTC
+++ pgdispd/proccom.c
@@ -92,8 +92,9 @@ static char rcsid[]="@(#)$Id: proccom.c,
 #include <stdio.h>
 #include <sys/types.h>
 #include <netinet/in.h>
+#include <stdlib.h>
 
-#ifndef VMS
+#if !defined(VMS) && !defined(__FreeBSD__) && !defined(__DragonFly__)
 #include <values.h>
 #endif
 
@@ -163,8 +164,6 @@ int *retbuflen;	/* the length of retbuf
 	void drawline();	/* draw a line in the bitmap window */
 	Pixmap XCreatePixmap();
 
-	char *malloc();
-
 	if (!len & savedshorts)
 	{ /* an incomplete command was sent! */
 		savedshorts=0;


[FILE:314:files/CMakeLists.txt]
cmake_minimum_required(VERSION 3.16)
project(pgplot)
enable_language(Fortran)

SET(CMAKE_SKIP_BUILD_RPATH  TRUE)

add_subdirectory(drivers)
add_subdirectory(pgdispd)
add_subdirectory(fonts)
add_subdirectory(src)
add_subdirectory(sys)
add_subdirectory(examples)

install(FILES rgb.txt DESTINATION share/doc/pgplot)


[FILE:5373:files/drivers.list]
! PGPLOT drivers.
!------------------------------------------------------------------------------
! To configure PGPLOT, ensure that drivers you do not want are
! commented out (place ! in column 1). N.B. Many device-drivers are
! available on selected operating systems only.
!------------------------------------------------------------------------------
! File       Code       Description                                Restrictions
! BCDRIV 0 /BCANON    Canon Laser printer (bitmap version), landscape
! CADRIV 0 /CANON     Canon Laser printer, LBP-8/A2, landscape
! CCDRIV 0 /CCP       DEC LJ250 Color Companion printer
! CWDRIV 0 /CW6320    Gould/Bryans Colourwriter 6320 pen plotter	Std F77
! EPDRIV 0 /EPSON     Epson FX100 dot matrix printer
! EXDRIV 1 /EXCL      Talaris/EXCL printers, landscape
! EXDRIV 2 /EXCL      Talaris/EXCL printers, portrait
! GCDRIV 0 /GENICOM   Genicom 4410 dot-matrix printer, landscape
!             Caution: use of GIDRIV may require a license from Unisys:
  GIDRIV 1 /GIF       GIF-format file, landscape
  GIDRIV 2 /VGIF      GIF-format file, portrait
  GLDRIV 1 /HPGL      Hewlett-Packard HP-GL plotters, landscape		Std F77
  GLDRIV 2 /VHPGL     Hewlett-Packard HP-GL plotters, portrait		Std F77
! GODRIV 0 /GOC       GOC Sigma T5670 terminal				VMS 
! GVDRIV 0 /GVENICOM  Genicom 4410 dot-matrix printer, portrait
  HGDRIV 0 /HPGL2     Hewlett-Packard graphics language
! HIDRIV 0 /HIDMP     Houston Instruments HIDMP pen plotter
! HJDRIV 0 /HJ        Hewlett-Packard Desk/Laserjet printer
! HPDRIV 0 /HP7221    Hewlett-Packard HP7221 pen plotter		Std F77
! IMDRIV 0 /IMPRESS   Imagen printers (Impress language), landscape
! IRDRIV 0 /IRIS      SiliconGraphics Console				SGI (C)
! LADRIV 0 /LA50      Dec LA50 and other sixel printers
! LJDRIV 0 /LJ        Hewlett-Packard LaserJet printers
! LSDRIV 1 /LIPS2     Canon LaserShot printer (landscape)
! LSDRIV 2 /VLIPS2    Canon LaserShot printer (portrait)
! LNDRIV 0 /LN03      Dec LN03-PLUS Laser printer (landscape)           VMS
! LVDRIV 0 /LVN03     Dec LN03-PLUS Laser printer (portrait)            VMS
  LXDRIV 0 /LATEX     LaTeX picture environment
! MFDRIV 0 /FILE      PGPLOT graphics metafile
! NEDRIV 0 /NEXT      Computers running NeXTstep operating system
  NUDRIV 0 /NULL      Null device (no output)				Std F77
  PPDRIV 1 /PPM       Portable Pixel Map file, landscape
  PPDRIV 2 /VPPM      Portable PIxel Map file, portrait
  PSDRIV 1 /PS        PostScript printers, monochrome, landscape	Std F77
  PSDRIV 2 /VPS       Postscript printers, monochrome, portrait		Std F77
  PSDRIV 3 /CPS       PostScript printers, color, landscape		Std F77
  PSDRIV 4 /VCPS      PostScript printers, color, portrait		Std F77
! PXDRIV 0 /PRINTRONI Printronix P300 or P600 dot-matrix printer
! QMDRIV 1 /QMS       QUIC devices (QMS and Talaris), landscape		Std F77
! QMDRIV 2 /VQMS      QUIC devices (QMS and Talaris), portrait		Std F77
! SVDRIV 0 /SUNVIEW   Sun workstations running SunView			SunOS C
! TFDRIV 0 /TFILE     Tektronix-format disk file                        VMS
! TODRIV 0 /TOSHIBA   Toshiba "3-in-one" printer, model P351
! TTDRIV 1 /TEK4010   Tektronix 4006/4010 storage-tube terminal		Std F77
! TTDRIV 2 /GF        GraphOn terminal					Std F77
! TTDRIV 3 /RETRO     RetroGraphics terminal				Std F77
  TTDRIV 4 /GTERM     GTERM Tektronix terminal emulator			Std F77
  TTDRIV 5 /XTERM     XTERM Tektronix terminal emulator			Std F77
! TTDRIV 6 /ZSTEM     ZSTEM terminal emulator				Std F77
! TTDRIV 7 /V603      Visual 603 terminal				Std F77
! TTDRIV 8 /KRM3      Kermit 3 on IBM-PC				Std F77
  TTDRIV 9 /TK4100    Tektronix 4100-series terminals			Std F77
! TXDRIV 0 /TX        TeX PK Font Output files
! VADRIV 0 /VCANON    Canon Laser printer, LBP-8/A2, portrait
! VBDRIV 0 /VBCANON   Canon Laser printer (bitmap version), portrait
! VIDRIV 0 /VIPRESS   Imagen printers (Impress language), portrait
! VTDRIV 0 /VT125     Dec Regis terminals (VT125 etc.)			Std F77
  WDDRIV 1 /WD        X Window dump file, landscape
  WDDRIV 2 /VWD       X Window dump file, portrait
! WSDRIV 0 /WS        VAX workstations running VWS software		VMS
  X2DRIV 0 /XDISP     PGDISP or FIGDISP server for X workstations	C
  XWDRIV 1 /XWINDOW   Workstations running X Window System		C
  XWDRIV 2 /XSERVE    Persistent window on X Window System		C
! ZEDRIV 0 /ZETA      Zeta 8 Digital Plotter
!
! The following drivers can only be used in PGPLOT installations on MS-DOS
! systems with appropriate hardware and software. Do not select these 
! on UNIX or VMS systems.
!
! LHDRIV 0 /LH        IBM PCs and clones, Lahey F77 32-bit Fortran v5.0
! MSDRIV 0 /MSOFT     IBM PCs and clones running Microsoft Fortran 5.0
! SSDRIV 0 /SS        IBM PCs and clones, MS-DOS, Salford Software FTN
!
! The following driver can only be used in PGPLOT installations on Acorn
! Archimedes systems with appropriate hardware and software.
!
! ACDRIV 0 /ARC       Acorn Archimedes computer
!
! Selection of the XMOTIF driver causes a stub driver to be placed in
! the main PGPLOT library. The real driver is placed in libXmPgplot.a.
! Applications that need the Motif driver should link with libXmPgplot.a
! before the PGPLOT library. This treatment means that only Motif
! applications have to be linked with Motif libraries.
!
! XMDRIV 0 /XMOTIF    Motif applications containing XmPgplot widgets.   C


[FILE:200:files/drivers_CMakeLists.txt]
set (prog pgxwin_server)

add_executable (${prog}
	pgxwin_server.c
)

target_compile_definitions (${prog} PUBLIC PGDISP)
target_link_libraries (${prog} X11)

install (TARGETS ${prog} DESTINATION bin)


[FILE:478:files/examples_CMakeLists.txt]
foreach(N 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17)
  add_executable(pgdemo${N} pgdemo${N}.f)
  target_link_libraries(pgdemo${N} pgplot X11)
  target_compile_options(pgdemo${N} PUBLIC -fno-backslash)
  install(TARGETS pgdemo${N} DESTINATION share/examples/pgplot)
endforeach(N)

include_directories(${CMAKE_BINARY_DIR}/src)

add_executable(cpgdemo ../cpg/cpgdemo.c)
target_link_libraries(cpgdemo cpgplot pgplot X11 m)
install(TARGETS cpgdemo DESTINATION share/examples/pgplot)


[FILE:420:files/fonts_CMakeLists.txt]
set(outprefix grfont)
set(infile ${CMAKE_SOURCE_DIR}/fonts/${outprefix}.txt)
set(outfile ${CMAKE_CURRENT_BINARY_DIR}/${outprefix}.dat)

add_executable (pgpack pgpack.f)

add_custom_command(
	OUTPUT ${outfile}
	COMMAND pgpack < ${infile}
	DEPENDS pgpack ${infile}
	COMMENT "Generated ${outfile}"
	VERBATIM
)

add_custom_target (generate_file ALL
	DEPENDS ${outfile}
)

install (FILES ${outfile} DESTINATION share/pgplot)


[FILE:1806:files/grexec.f]
C*GREXEC -- PGPLOT device handler dispatch routine
C+
      SUBROUTINE GREXEC(IDEV,IFUNC,RBUF,NBUF,CHR,LCHR)
      INTEGER IDEV, IFUNC, NBUF, LCHR
      REAL    RBUF(*)
      CHARACTER*(*) CHR
C---
      INTEGER NDEV
      PARAMETER (NDEV=21)
      CHARACTER*10 MSG
C---
      GOTO(1,2,3,4,5,6,7,8,9,10,11,12,13,14,
     +     15,16,17,18,19,20,21) IDEV
      IF (IDEV.EQ.0) THEN
          RBUF(1) = NDEV
          NBUF = 1
      ELSE
          WRITE (MSG,'(I10)') IDEV
          CALL GRWARN('Unknown device code in GREXEC: '//MSG)
      END IF
      RETURN
C---
1     CALL GIDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,1)
      RETURN
2     CALL GIDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,2)
      RETURN
3     CALL GLDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,1)
      RETURN
4     CALL GLDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,2)
      RETURN
5     CALL HGDRIV(IFUNC,RBUF,NBUF,CHR,LCHR)
      RETURN
6     CALL LXDRIV(IFUNC,RBUF,NBUF,CHR,LCHR)
      RETURN
7     CALL NUDRIV(IFUNC,RBUF,NBUF,CHR,LCHR)
      RETURN
8     CALL PPDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,1)
      RETURN
9     CALL PPDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,2)
      RETURN
10    CALL PSDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,1)
      RETURN
11    CALL PSDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,2)
      RETURN
12    CALL PSDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,3)
      RETURN
13    CALL PSDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,4)
      RETURN
14    CALL TTDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,4)
      RETURN
15    CALL TTDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,5)
      RETURN
16    CALL TTDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,9)
      RETURN
17    CALL WDDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,1)
      RETURN
18    CALL WDDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,2)
      RETURN
19    CALL X2DRIV(IFUNC,RBUF,NBUF,CHR,LCHR)
      RETURN
20    CALL XWDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,1)
      RETURN
21    CALL XWDRIV(IFUNC,RBUF,NBUF,CHR,LCHR,2)
      RETURN
C
      END


[FILE:498:files/pgdispd_CMakeLists.txt]
set (prog pgdisp)

add_executable (${prog}
	cleanup.c
	exposelgwin.c
	figcurs.c
	getcolors.c
	getdata.c
	getvisuals.c
	handlexevent.c
	initlgluts.c
	initlgwin.c
	initlock.c
	initwmattr.c
	mainloop.c
	pgdisp.c
	proccom.c
	resdb.c
	resizelgwin.c
	returnbuf.c
	updatelgtitle.c
	waitevent.c
)

target_compile_definitions (${prog} PUBLIC PGDISP)
target_link_libraries (${prog} X11)

install(TARGETS ${prog} DESTINATION bin)
install(FILES aaaread.me
	RENAME readme.pgdisp
	DESTINATION share/doc/pgplot
)


[FILE:4104:files/src_CMakeLists.txt]
add_executable (pgbind ../cpg/pgbind.c)
target_compile_definitions (pgbind PUBLIC PG_PPU)

set(libsrcs
	pgarro.f pgask.f pgband.f pgbbuf.f pgbeg.f pgbin.f pgbox.f
	pgbox1.f pgcirc.f pgcl.f pgclos.f pgcn01.f pgcnsc.f pgconb.f pgconl.f
	pgcons.f pgcont.f pgconx.f pgcp.f pgctab.f pgcurs.f pgdraw.f pgebuf.f
	pgend.f pgenv.f pgeras.f pgerrb.f pgerrx.f pgerry.f pgetxt.f pgfunt.f
	pgfunx.f pgfuny.f pggray.f pghi2d.f pghis1.f pghist.f pghtch.f
	pgiden.f pgimag.f pginit.f pglab.f pglcur.f pgldev.f pglen.f pgline.f
	pgmove.f pgmtxt.f pgncur.f pgnoto.f pgnpl.f pgnumb.f pgolin.f pgopen.f
	pgpage.f pgpanl.f pgpap.f pgpixl.f pgpnts.f pgpoly.f pgpt.f pgptxt.f
	pgqah.f pgqcf.f pgqch.f pgqci.f pgqcir.f pgqcol.f pgqcr.f pgqcs.f
	pgqfs.f pgqhs.f pgqid.f pgqinf.f pgqitf.f pgqls.f pgqlw.f pgqpos.f
	pgqtbg.f pgqtxt.f pgqvp.f pgqvsz.f pgqwin.f pgrect.f pgrnd.f pgrnge.f
	pgsah.f pgsave.f pgscf.f pgsch.f pgsci.f pgscir.f pgscr.f pgscrn.f
	pgsfs.f pgshls.f pgshs.f pgsitf.f pgslct.f pgsls.f pgslw.f pgstbg.f
	pgsubp.f pgsvp.f pgswin.f pgtbox.f pgtext.f pgupdt.f pgvect.f pgvsiz.f
	pgvstd.f pgvw.f pgwedg.f pgwnad.f pgadvance.f pgbegin.f pgcurse.f
	pglabel.f pgmtext.f pgncurse.f pgpaper.f pgpoint.f pgptext.f pgvport.f
	pgvsize.f pgvstand.f pgwindow.f pgaxis.f pgconf.f pgerr1.f pgpt1.f
	pgqclp.f pgqdt.f pgqndt.f pgsclp.f pgscrl.f pgtick.f
)
set(src
	cpgarro.c cpgask.c cpgband.c cpgbbuf.c cpgbeg.c cpgbin.c cpgbox.c
	cpgcirc.c cpgclos.c cpgconb.c cpgconl.c cpgcons.c cpgcont.c cpgctab.c
	cpgcurs.c cpgdraw.c cpgebuf.c cpgend.c cpgenv.c cpgeras.c cpgerrb.c
	cpgerrx.c cpgerry.c cpgetxt.c cpggray.c cpghi2d.c cpghist.c cpgiden.c
	cpgimag.c cpglab.c cpglcur.c cpgldev.c cpglen.c cpgline.c cpgmove.c
	cpgmtxt.c cpgncur.c cpgnumb.c cpgolin.c cpgopen.c cpgpage.c cpgpanl.c
	cpgpap.c cpgpixl.c cpgpnts.c cpgpoly.c cpgpt.c cpgptxt.c cpgqah.c
	cpgqcf.c cpgqch.c cpgqci.c cpgqcir.c cpgqcol.c cpgqcr.c cpgqcs.c
	cpgqfs.c cpgqhs.c cpgqid.c cpgqinf.c cpgqitf.c cpgqls.c cpgqlw.c
	cpgqpos.c cpgqtbg.c cpgqtxt.c cpgqvp.c cpgqvsz.c cpgqwin.c cpgrect.c
	cpgrnd.c cpgrnge.c cpgsah.c cpgsave.c cpgscf.c cpgsch.c cpgsci.c
	cpgscir.c cpgscr.c cpgscrn.c cpgsfs.c cpgshls.c cpgshs.c cpgsitf.c
	cpgslct.c cpgsls.c cpgslw.c cpgstbg.c cpgsubp.c cpgsvp.c cpgswin.c
	cpgtbox.c cpgtext.c cpgunsa.c cpgupdt.c cpgvect.c cpgvsiz.c cpgvstd.c
	cpgwedg.c cpgwnad.c cpgaxis.c cpgconf.c cpgerr1.c cpgpt1.c cpgqclp.c
	cpgqdt.c cpgqndt.c cpgsclp.c cpgscrl.c cpgtick.c
)

macro(bind infile)
add_custom_command(
	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/c${infile}.c
	COMMAND pgbind bsd -h -w ${CMAKE_SOURCE_DIR}/src/${infile}.f
	DEPENDS pgbind ${CMAKE_SOURCE_DIR}/src/${infile}.f
	VERBATIM
)
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/c${infile}.c
	PROPERTIES GENERATED true
)
endmacro(bind)

foreach(dossier ${src})
	set(pathsrc ${pathsrc} ${CMAKE_CURRENT_BINARY_DIR}/${dossier})
	set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/${dossier}
		PROPERTIES GENERATED true)
endforeach(dossier)

foreach(dossier ${libsrcs})
	set(pathlibsrcs ${pathlibsrcs} ${CMAKE_SOURCE_DIR}/src/${dossier})
endforeach(dossier)

add_custom_command(
	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/cpgplot.h ${pathsrc}
	COMMAND pgbind bsd -h -w ${pathlibsrcs}
	DEPENDS pgbind ${pathlibsrcs}
	VERBATIM
)

set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/cpgplot.h
	PROPERTIES GENERATED true)

add_library(plotobj OBJECT ${src})
set_property(TARGET plotobj PROPERTY POSITION_INDEPENDENT_CODE 1)

add_library(cpgplot SHARED $<TARGET_OBJECTS:plotobj>)
add_library(cpgplot_static ${src})

set_target_properties(cpgplot PROPERTIES VERSION 5)
set_target_properties(cpgplot PROPERTIES SOVERSION 5)
set_target_properties(cpgplot PROPERTIES PUBLIC_HEADER
	${CMAKE_CURRENT_BINARY_DIR}/cpgplot.h)

target_compile_definitions (cpgplot PUBLIC PG_PPU)
target_compile_definitions (cpgplot_static PUBLIC PG_PPU)

install(TARGETS cpgplot
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	PUBLIC_HEADER DESTINATION include)

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libcpgplot_static.a
	RENAME libcpgplot.a
	DESTINATION lib)
install(FILES ../cpg/cpgplot.doc DESTINATION share/doc/pgplot)


[FILE:5920:files/sys_CMakeLists.txt]
set (S "${CMAKE_SOURCE_DIR}/src")
set (D "../drivers")
set (BSD "../sys_freebsd")

set(PG_ROUTINES
	${S}/pgarro.f
	${S}/pgask.f
	${S}/pgaxis.f
	${S}/pgaxlg.f
	${S}/pgband.f
	${S}/pgbbuf.f
	${S}/pgbeg.f
	${S}/pgbin.f
	${S}/pgbox.f
	${S}/pgbox1.f
	${S}/pgcirc.f
	${S}/pgcl.f
	${S}/pgclos.f
	${S}/pgcn01.f
	${S}/pgcnsc.f
	${S}/pgconb.f 
	${S}/pgconf.f 
	${S}/pgconl.f 
	${S}/pgcons.f 
	${S}/pgcont.f 
	${S}/pgconx.f 
	${S}/pgcp.f 
	${S}/pgctab.f
	${S}/pgcurs.f 
	${S}/pgdraw.f 
	${S}/pgebuf.f 
	${S}/pgend.f 
	${S}/pgenv.f 
	${S}/pgeras.f 
	${S}/pgerr1.f 
	${S}/pgerrb.f
	${S}/pgerrx.f 
	${S}/pgerry.f 
	${S}/pgetxt.f 
	${S}/pgfunt.f 
	${S}/pgfunx.f 
	${S}/pgfuny.f 
	${S}/pggray.f
	${S}/pghi2d.f 
	${S}/pghis1.f 
	${S}/pghist.f 
	${S}/pghtch.f 
	${S}/pgiden.f 
	${S}/pgimag.f 
	${S}/pginit.f 
	${S}/pglab.f
	${S}/pglcur.f 
	${S}/pgldev.f 
	${S}/pglen.f 
	${S}/pgline.f 
	${S}/pgmove.f 
	${S}/pgmtxt.f 
	${S}/pgncur.f 
	${S}/pgnoto.f
	${S}/pgnpl.f 
	${S}/pgnumb.f 
	${S}/pgolin.f 
	${S}/pgopen.f 
	${S}/pgpage.f 
	${S}/pgpanl.f 
	${S}/pgpap.f 
	${S}/pgpixl.f
	${S}/pgpnts.f 
	${S}/pgpoly.f 
	${S}/pgpt.f 
	${S}/pgpt1.f 
	${S}/pgptxt.f 
	${S}/pgqah.f 
	${S}/pgqcf.f 
	${S}/pgqch.f
	${S}/pgqci.f 
	${S}/pgqcir.f 
	${S}/pgqclp.f 
	${S}/pgqcol.f 
	${S}/pgqcr.f 
	${S}/pgqcs.f 
	${S}/pgqdt.f 
	${S}/pgqfs.f
	${S}/pgqhs.f 
	${S}/pgqid.f 
	${S}/pgqinf.f 
	${S}/pgqitf.f 
	${S}/pgqls.f 
	${S}/pgqlw.f 
	${S}/pgqndt.f 
	${S}/pgqpos.f
	${S}/pgqtbg.f 
	${S}/pgqtxt.f 
	${S}/pgqvp.f 
	${S}/pgqvsz.f 
	${S}/pgqwin.f 
	${S}/pgrect.f 
	${S}/pgrnd.f 
	${S}/pgrnge.f
	${S}/pgsah.f 
	${S}/pgsave.f 
	${S}/pgscf.f 
	${S}/pgsch.f 
	${S}/pgsci.f 
	${S}/pgscir.f 
	${S}/pgsclp.f 
	${S}/pgscr.f
	${S}/pgscrl.f 
	${S}/pgscrn.f 
	${S}/pgsfs.f 
	${S}/pgshls.f 
	${S}/pgshs.f 
	${S}/pgsitf.f 
	${S}/pgslct.f 
	${S}/pgsls.f
	${S}/pgslw.f 
	${S}/pgstbg.f 
	${S}/pgsubp.f 
	${S}/pgsvp.f 
	${S}/pgswin.f 
	${S}/pgtbox.f 
	${S}/pgtext.f 
	${S}/pgtick.f
	${S}/pgtikl.f 
	${S}/pgupdt.f 
	${S}/pgvect.f 
	${S}/pgvsiz.f 
	${S}/pgvstd.f 
	${S}/pgvw.f 
	${S}/pgwedg.f 
	${S}/pgwnad.f
)

set(PG_NON_STANDARD
	${S}/pgadvance.f 
	${S}/pgbegin.f 
	${S}/pgcurse.f 
	${S}/pglabel.f
	${S}/pgmtext.f 
	${S}/pgncurse.f 
	${S}/pgpaper.f 
	${S}/pgpoint.f 
	${S}/pgptext.f 
	${S}/pgvport.f 
	${S}/pgvsize.f
	${S}/pgvstand.f 
	${S}/pgwindow.f
)

set(GR_ROUTINES
	${S}/grarea.f 
	${S}/grbpic.f 
	${S}/grchsz.f 
	${S}/grclip.f 
	${S}/grclos.f 
	${S}/grclpl.f
	${S}/grctoi.f 
	${S}/grcurs.f 
	${S}/grdot0.f 
	${S}/grdot1.f 
	${S}/grdtyp.f 
	${S}/gresc.f 
	${S}/grepic.f 
	${S}/gretxt.f
	${S}/grfa.f 
	${S}/grfao.f 
	${S}/grgfil.f 
	${S}/grgray.f 
	${S}/grimg0.f 
	${S}/grimg1.f 
	${S}/grimg2.f 
	${S}/grimg3.f
	${S}/grinit.f 
	${S}/gritoc.f 
	${S}/grldev.f 
	${S}/grlen.f 
	${S}/grlin0.f 
	${S}/grlin1.f 
	${S}/grlin2.f 
	${S}/grlin3.f
	${S}/grlina.f 
	${S}/grmcur.f 
	${S}/grmker.f 
	${S}/grmova.f 
	${S}/grmsg.f 
	${S}/gropen.f 
	${S}/grpage.f 
	${S}/grpars.f
	${S}/grpixl.f 
	${S}/grpocl.f 
	${S}/grprom.f 
	${S}/grpxpo.f 
	${S}/grpxps.f 
	${S}/grpxpx.f 
	${S}/grpxre.f
	${S}/grqcap.f 
	${S}/grqci.f 
	${S}/grqcol.f 
	${S}/grqcr.f 
	${S}/grqdev.f 
	${S}/grqdt.f 
	${S}/grqfnt.f 
	${S}/grqls.f
	${S}/grqlw.f 
	${S}/grqpos.f 
	${S}/grqtxt.f 
	${S}/grqtyp.f 
	${S}/grquit.f 
	${S}/grrec0.f 
	${S}/grrect.f 
	${S}/grsci.f
	${S}/grscr.f 
	${S}/grsetc.f 
	${S}/grscrl.f 
	${S}/grsetc.f 
	${S}/grsets.f 
	${S}/grsfnt.f 
	${S}/grsize.f 
	${S}/grskpb.f
	${S}/grslct.f 
	${S}/grsls.f 
	${S}/grslw.f 
	${S}/grsyds.f 
	${S}/grsymk.f 
	${S}/grsyxd.f 
	${S}/grterm.f 
	${S}/grtext.f
	${S}/grtoup.f 
	${S}/grtrim.f 
	${S}/grtrn0.f 
	${S}/grtxy0.f 
	${S}/grvct0.f 
	${S}/grwarn.f 
	${S}/grxhls.f
	${S}/grxrgb.f
)

set(DRIVERS
	${D}/gidriv.f
	${D}/gldriv.f
	${D}/hgdriv.f
	${D}/lxdriv.f
	${D}/nudriv.f
	${D}/ppdriv.f
	${D}/psdriv.f
	${D}/ttdriv.f
	${D}/wddriv.f
	${D}/x2driv.c
	${D}/figdisp_comm.c
	${D}/xwdriv.c
	${D}/cgdriv.c
	${D}/pndriv.c
	${D}/xadriv.c
)

set(SYSTEM_ROUTINES
	grdate.c grfileio.c grflun.f grgcom.f grgenv.f
	grgetc.c grglun.f grgmem.c grgmsg.f grlgtr.f groptx.f grsy00.f
	grtermio.c grtrml.f grtter.f gruser.c
)

IF(CMAKE_SYSTEM_NAME MATCHES "(FreeBSD|DragonFly)")
	set(OS_SPECIFIC ${BSD}/iand.c)
ENDIF()

set(SRCS 
	${PG_ROUTINES}
	${PG_NON_STANDARD}
	${GR_ROUTINES}
	${SYSTEM_ROUTINES}
	${DRIVERS}
	${OS_SPECIFIC}
	grexec.f	# provided
)

add_library(fplotobj OBJECT ${SRCS})
set_property(TARGET fplotobj PROPERTY POSITION_INDEPENDENT_CODE 1)

add_library(pgplot SHARED $<TARGET_OBJECTS:fplotobj>)
add_library(pgplot_static ${SRCS})

set_target_properties(pgplot PROPERTIES VERSION 5)
set_target_properties(pgplot PROPERTIES SOVERSION 5)

target_compile_definitions (fplotobj PUBLIC PG_PPU)
target_compile_definitions (pgplot_static PUBLIC PG_PPU)

target_link_libraries (pgplot png)

install(TARGETS pgplot
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libpgplot_static.a
	RENAME libpgplot.a
	DESTINATION lib)

set (out_doc ${CMAKE_CURRENT_BINARY_DIR}/pgplot.doc)
set (out_htm ${CMAKE_CURRENT_BINARY_DIR}/pgplot.html)
set (out_tex ${CMAKE_CURRENT_BINARY_DIR}/pgplot-routines.tex)

add_custom_command(
	OUTPUT ${out_doc}
	COMMAND ${CMAKE_SOURCE_DIR}/makedoc ${PG_ROUTINES} ${PG_NON_STANDARD} > ${out_doc}
	DEPENDS ${PG_ROUTINES} ${PG_NON_STANDARD}
	COMMENT "Generated ${out_doc}"
	VERBATIM
)

add_custom_command(
	OUTPUT ${out_htm}
	COMMAND ${CMAKE_SOURCE_DIR}/makehtml ${PG_ROUTINES} ${PG_NON_STANDARD} > ${out_htm}
	DEPENDS ${PG_ROUTINES} ${PG_NON_STANDARD}
	COMMENT "Generated ${out_htm}"
	VERBATIM
)

add_custom_command(
	OUTPUT ${out_tex}
	COMMAND ${CMAKE_SOURCE_DIR}/maketex ${PG_ROUTINES} ${PG_NON_STANDARD} > ${out_tex}
	DEPENDS ${PG_ROUTINES} ${PG_NON_STANDARD}
	COMMENT "Generated ${out_tex}"
	VERBATIM
)

add_custom_target(gen_docs ALL
	DEPENDS ${out_doc} ${out_htm} ${out_tex}
)

install(FILES ${out_doc} ${out_htm} ${out_tex}
	DESTINATION share/doc/pgplot)

