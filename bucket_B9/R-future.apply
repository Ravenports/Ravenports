# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		R-future.apply
VERSION=		1.9.1
KEYWORDS=		cran
VARIANTS=		standard
SDESC[standard]=	Apply Function in Parallel using Futures
HOMEPAGE=		https://future.apply.futureverse.org
CONTACT=		CRAN_Automaton[cran@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		CRAN/src/contrib
DISTFILE[1]=		future.apply_1.9.1.tar.gz:main
DIST_SUBDIR=		CRAN
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	R-future:single:standard
			R-globals:single:standard

USES=			cran gmake

DISTNAME=		future.apply

GENERATED=		yes

INSTALL_REQ_TOOLCHAIN=	yes

[FILE:525:descriptions/desc.single]
future.apply: Apply Function to Elements in Parallel using Futures

Implementations of apply(), by(), eapply(), lapply(), Map(), .mapply(),
mapply(), replicate(), sapply(), tapply(), and vapply() that can be
resolved using any future-supported backend, e.g. parallel on the local
machine or distributed on a compute cluster. These future_*apply()
functions come with the same pros and cons as the corresponding base-R
*apply() functions but with the additional feature of being able to be
processed via the future framework.


[FILE:109:distinfo]
4f22ccd5caa62077581c6adc4d35543451e547220270aed3f1abcbaa6a202133        65416 CRAN/future.apply_1.9.1.tar.gz

