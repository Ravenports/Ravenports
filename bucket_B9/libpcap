# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libpcap
VERSION=		1.8.1
KEYWORDS=		net
VARIANTS=		standard
SDESC[standard]=	Network packet capture library
HOMEPAGE=		https://www.tcpdump.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.tcpdump.org/release/
DISTFILE[1]=		libpcap-1.8.1.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BROKEN[linux]=		Tries to include net/bpf.h header

BUILD_DEPENDS=		flex:primary:standard
			bison:primary:standard

USES=			gmake

FPC_EQUIVALENT=		net/libpcap

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-dbus=no
			--with-pcap=bpf
CONFIGURE_ENV=		LEX={{LOCALBASE}}/bin/flex

INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		1.8.1

CFLAGS=			-fPIC

[FILE:116:descriptions/desc.single]
libpcap is a ubiquitous network traffic capture library used by a wide
variety of BSD, Linux and UN*X applications.


[FILE:99:distinfo]
673dbc69fdc3f5a86fb5759ab19899039a8e5e6c631749e48dcd9c6f0c83541e       739163 libpcap-1.8.1.tar.gz


[FILE:1678:manifests/plist.single]
bin/pcap-config
include/
 pcap-bpf.h
 pcap-namedb.h
 pcap.h
include/pcap/
 bluetooth.h
 bpf.h
 can_socketcan.h
 dlt.h
 export-defs.h
 ipnet.h
 namedb.h
 nflog.h
 pcap.h
 sll.h
 usb.h
 vlan.h
lib/
 libpcap.a
 libpcap.so
 libpcap.so.%%SOMAJOR%%
 libpcap.so.%%SOVERSION%%
share/man/man1/pcap-config.1.gz
share/man/man3/
 pcap.3.gz
 pcap_activate.3.gz
 pcap_breakloop.3.gz
 pcap_can_set_rfmon.3.gz
 pcap_close.3.gz
 pcap_compile.3.gz
 pcap_create.3.gz
 pcap_datalink.3.gz
 pcap_datalink_name_to_val.3.gz
 pcap_datalink_val_to_name.3.gz
 pcap_dump.3.gz
 pcap_dump_close.3.gz
 pcap_dump_file.3.gz
 pcap_dump_flush.3.gz
 pcap_dump_ftell.3.gz
 pcap_dump_open.3.gz
 pcap_file.3.gz
 pcap_fileno.3.gz
 pcap_findalldevs.3.gz
 pcap_freecode.3.gz
 pcap_get_selectable_fd.3.gz
 pcap_get_tstamp_precision.3.gz
 pcap_geterr.3.gz
 pcap_inject.3.gz
 pcap_is_swapped.3.gz
 pcap_lib_version.3.gz
 pcap_list_datalinks.3.gz
 pcap_list_tstamp_types.3.gz
 pcap_lookupdev.3.gz
 pcap_lookupnet.3.gz
 pcap_loop.3.gz
 pcap_major_version.3.gz
 pcap_next_ex.3.gz
 pcap_offline_filter.3.gz
 pcap_open_dead.3.gz
 pcap_open_live.3.gz
 pcap_open_offline.3.gz
 pcap_set_buffer_size.3.gz
 pcap_set_datalink.3.gz
 pcap_set_immediate_mode.3.gz
 pcap_set_promisc.3.gz
 pcap_set_rfmon.3.gz
 pcap_set_snaplen.3.gz
 pcap_set_timeout.3.gz
 pcap_set_tstamp_precision.3.gz
 pcap_set_tstamp_type.3.gz
 pcap_setdirection.3.gz
 pcap_setfilter.3.gz
 pcap_setnonblock.3.gz
 pcap_snapshot.3.gz
 pcap_stats.3.gz
 pcap_statustostr.3.gz
 pcap_strerror.3.gz
 pcap_tstamp_type_name_to_val.3.gz
 pcap_tstamp_type_val_to_name.3.gz
share/man/man5/pcap-savefile.5.gz
share/man/man7/
 pcap-filter.7.gz
 pcap-linktype.7.gz
 pcap-tstamp.7.gz


[FILE:2934:patches/patch-Makefile.in]
--- Makefile.in.orig	2016-10-26 00:07:59 UTC
+++ Makefile.in
@@ -570,51 +570,19 @@ install: install-shared install-archive
 		    $(DESTDIR)$(includedir)/$$i; done
 	[ -d $(DESTDIR)$(bindir) ] || \
 	    (mkdir -p $(DESTDIR)$(bindir); chmod 755 $(DESTDIR)$(bindir))
-	$(INSTALL_PROGRAM) pcap-config $(DESTDIR)$(bindir)/pcap-config
+	$(INSTALL_DATA) pcap-config $(DESTDIR)$(bindir)/pcap-config
+	chmod 755 $(DESTDIR)$(bindir)/pcap-config
 	for i in $(MAN1); do \
 		$(INSTALL_DATA) $(srcdir)/$$i \
 		    $(DESTDIR)$(mandir)/man1/$$i; done
 	for i in $(MAN3PCAP_NOEXPAND); do \
+		j=$$(echo $$i | sed -e 's/3pcap/3/') ; \
 		$(INSTALL_DATA) $(srcdir)/$$i \
-		    $(DESTDIR)$(mandir)/man3/$$i; done
+		    $(DESTDIR)$(mandir)/man3/$$j; done
 	for i in $(MAN3PCAP_EXPAND:.in=); do \
+		j=$$(echo $$i | sed -e 's/3pcap/3/') ; \
 		$(INSTALL_DATA) $$i \
-		    $(DESTDIR)$(mandir)/man3/$$i; done
-	(cd $(DESTDIR)$(mandir)/man3 && \
-	rm -f pcap_datalink_val_to_description.3pcap && \
-	$(LN_S) pcap_datalink_val_to_name.3pcap \
-		 pcap_datalink_val_to_description.3pcap && \
-	rm -f pcap_dump_fopen.3pcap && \
-	$(LN_S) pcap_dump_open.3pcap pcap_dump_fopen.3pcap && \
-	rm -f pcap_freealldevs.3pcap && \
-	$(LN_S) pcap_findalldevs.3pcap pcap_freealldevs.3pcap && \
-	rm -f pcap_perror.3pcap && \
-	$(LN_S) pcap_geterr.3pcap pcap_perror.3pcap && \
-	rm -f pcap_sendpacket.3pcap && \
-	$(LN_S) pcap_inject.3pcap pcap_sendpacket.3pcap && \
-	rm -f pcap_free_datalinks.3pcap && \
-	$(LN_S) pcap_list_datalinks.3pcap pcap_free_datalinks.3pcap && \
-	rm -f pcap_free_tstamp_types.3pcap && \
-	$(LN_S) pcap_list_tstamp_types.3pcap pcap_free_tstamp_types.3pcap && \
-	rm -f pcap_dispatch.3pcap && \
-	$(LN_S) pcap_loop.3pcap pcap_dispatch.3pcap && \
-	rm -f pcap_minor_version.3pcap && \
-	$(LN_S) pcap_major_version.3pcap pcap_minor_version.3pcap && \
-	rm -f pcap_next.3pcap && \
-	$(LN_S) pcap_next_ex.3pcap pcap_next.3pcap && \
-	rm -f pcap_open_dead_with_tstamp_precision.3pcap && \
-	$(LN_S) pcap_open_dead.3pcap \
-		 pcap_open_dead_with_tstamp_precision.3pcap && \
-	rm -f pcap_open_offline_with_tstamp_precision.3pcap && \
-	$(LN_S) pcap_open_offline.3pcap pcap_open_offline_with_tstamp_precision.3pcap && \
-	rm -f pcap_fopen_offline.3pcap && \
-	$(LN_S) pcap_open_offline.3pcap pcap_fopen_offline.3pcap && \
-	rm -f pcap_fopen_offline_with_tstamp_precision.3pcap && \
-	$(LN_S) pcap_open_offline.3pcap pcap_fopen_offline_with_tstamp_precision.3pcap && \
-	rm -f pcap_tstamp_type_val_to_description.3pcap && \
-	$(LN_S) pcap_tstamp_type_val_to_name.3pcap pcap_tstamp_type_val_to_description.3pcap && \
-	rm -f pcap_getnonblock.3pcap && \
-	$(LN_S) pcap_setnonblock.3pcap pcap_getnonblock.3pcap)
+			$(DESTDIR)$(mandir)/man3/$$j; done
 	for i in $(MANFILE); do \
 		$(INSTALL_DATA) `echo $$i | sed 's/.manfile.in/.manfile/'` \
 		    $(DESTDIR)$(mandir)/man@MAN_FILE_FORMATS@/`echo $$i | sed 's/.manfile.in/.@MAN_FILE_FORMATS@/'`; done


[FILE:1402:patches/patch-gencode.c]
--- gencode.c.orig	2016-10-26 00:07:59 UTC
+++ gencode.c
@@ -523,7 +523,8 @@ static struct block *gen_host6(compiler_
     struct in6_addr *, int, int, int);
 #endif
 #ifndef INET6
-static struct block *gen_gateway(const u_char *, bpf_u_int32 **, int, int);
+static struct block *gen_gateway(compiler_state_t *, const u_char *,
+    bpf_u_int32 **, int, int);
 #endif
 static struct block *gen_ipfrag(compiler_state_t *);
 static struct block *gen_portatom(compiler_state_t *, int, bpf_int32);
@@ -690,7 +691,9 @@ pcap_compile(pcap_t *p, struct bpf_progr
 	}
 	initchunks(&cstate);
 	cstate.no_optimize = 0;
+#ifdef INET6
 	cstate.ai = NULL;
+#endif
 	cstate.ic.root = NULL;
 	cstate.ic.cur_mark = 0;
 	cstate.bpf_pcap = p;
@@ -4902,11 +4905,8 @@ gen_host6(compiler_state_t *cstate, stru
 
 #ifndef INET6
 static struct block *
-gen_gateway(eaddr, alist, proto, dir)
-	const u_char *eaddr;
-	bpf_u_int32 **alist;
-	int proto;
-	int dir;
+gen_gateway(compiler_state_t *cstate, const u_char *eaddr,
+    bpf_u_int32 **alist, int proto, int dir)
 {
 	struct block *b0, *b1, *tmp;
 
@@ -6470,7 +6470,7 @@ gen_scode(compiler_state_t *cstate, cons
 		alist = pcap_nametoaddr(name);
 		if (alist == NULL || *alist == NULL)
 			bpf_error(cstate, "unknown host '%s'", name);
-		b = gen_gateway(eaddr, alist, proto, dir);
+		b = gen_gateway(cstate, eaddr, alist, proto, dir);
 		free(eaddr);
 		return b;
 #else

