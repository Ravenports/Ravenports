# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-cryptography
VERSION=		3.4.4
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Cryptographic recipes and primitives (PY38)
SDESC[py39]=		Cryptographic recipes and primitives (PY39)
HOMEPAGE=		https://github.com/pyca/cryptography
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/c/cryptography
DISTFILE[1]=		cryptography-3.4.4.tar.gz:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

USES=			cpe ssl

DISTNAME=		cryptography-3.4.4

CPE_PRODUCT=		python-cryptography
CPE_VENDOR=		python-cryptography_project
GENERATED=		yes

[PY38].BUILDRUN_DEPENDS_ON=		python-cffi:single:py38
					python-setuptools-rust:single:py38
[PY38].USES_ON=				python:py38,sutools

[PY39].BUILDRUN_DEPENDS_ON=		python-cffi:single:py39
					python-setuptools-rust:single:py39
[PY39].USES_ON=				python:py39,sutools

[FILE:1834:descriptions/desc.single]
pyca/cryptography
=================

    :alt: Latest Version

    :alt: Latest Docs

cryptography is a package which provides cryptographic recipes and
primitives to Python developers.  Our goal is for it to be your
"cryptographic
standard library". It supports Python 3.6+ and PyPy3 7.2+.

cryptography includes both high level recipes and low level interfaces to
common cryptographic algorithms such as symmetric ciphers, message digests,
and
key derivation functions. For example, to encrypt something with
cryptography's high level symmetric encryption recipe:

.. code-block:: pycon

    >>> from cryptography.fernet import Fernet
    >>> # Put this somewhere safe!
    >>> key = Fernet.generate_key()
    >>> f = Fernet(key)
    >>> token = f.encrypt(b"A really secret message. Not for prying eyes.")
    >>> token
    '...'
    >>> f.decrypt(token)
    'A really secret message. Not for prying eyes.'

You can find more information in the `documentation`_.

You can install cryptography with:

.. code-block:: console

    $ pip install cryptography

For full details see `the installation documentation`_.

Discussion
~~~~~~~~~~

If you run into bugs, you can file them in our `issue tracker`_.

We maintain a `cryptography-dev`_ mailing list for development discussion.

You can also join ``#cryptography-dev`` on Freenode to ask questions or get
involved.

Security
~~~~~~~~

Need to report a security issue? Please consult our `security reporting`_
documentation.

.. _`documentation`: https://cryptography.io/
.. _`the installation documentation`:
https://cryptography.io/en/latest/installation.html
.. _`issue tracker`: https://github.com/pyca/cryptography/issues
.. _`cryptography-dev`:
https://mail.python.org/mailman/listinfo/cryptography-dev
.. _`security reporting`: https://cryptography.io/en/latest/security.html


[FILE:104:distinfo]
ee5e19f0856b6fbbdbab15c2787ca65d203801d2d65d0b8de6218f424206c848       545208 cryptography-3.4.4.tar.gz

