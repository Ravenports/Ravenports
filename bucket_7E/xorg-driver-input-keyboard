# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-driver-input-keyboard
VERSION=		1.9.0
KEYWORDS=		x11_drivers
VARIANTS=		standard
SDESC[standard]=	X.org keyboard input driver
HOMEPAGE=		https://www.x.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		XORG/individual/driver
DISTFILE[1]=		xf86-input-keyboard-1.9.0.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	xorg-server:single:standard

USES=			libtool
XORG_COMPONENTS=	xorgproto

DISTNAME=		xf86-input-keyboard-1.9.0

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11-drivers/xf86-input-keyboard

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip

[FILE:60:descriptions/desc.single]
This package contains the X.Org xf86-input-keyboard driver.


[FILE:112:distinfo]
f7c900f21752683402992b288d5a2826de7a6c0c0abac2aadd7e8a409e170388       341693 xf86-input-keyboard-1.9.0.tar.bz2


[FILE:58:manifests/plist.single]
lib/xorg/modules/input/kbd_drv.so
share/man/man4/kbd.4.gz


[FILE:2114:patches/patch-src_at__scancode.c]
--- src/at_scancode.c.orig	2014-02-10 22:04:31 UTC
+++ src/at_scancode.c
@@ -82,6 +82,10 @@ ATScancode(InputInfoPtr pInfo, int *scan
        case KEY_Prefix0:
           pKbd->scanPrefix = 0;
           switch (*scanCode) {
+            case 0x1e:            *scanCode = KEY_AudioRaise;break;
+            case 0x1f:            *scanCode = KEY_AudioLower;break;
+            case 0x20:            *scanCode = KEY_Power;     break;
+            case 0x25:            *scanCode = KEY_Mute;      break;
             case KEY_KP_7:        *scanCode = KEY_Home;      break;  /* curs home */
             case KEY_KP_8:        *scanCode = KEY_Up;        break;  /* curs up */
             case KEY_KP_9:        *scanCode = KEY_PgUp;      break;  /* curs pgup */
@@ -102,6 +106,17 @@ ATScancode(InputInfoPtr pInfo, int *scan
             case 0x5b:            *scanCode = KEY_LMeta;     break;
             case 0x5c:            *scanCode = KEY_RMeta;     break;
             case 0x5d:            *scanCode = KEY_Menu;      break;
+            case 0x5e:            *scanCode = KEY_L1;        break;  /* stop */
+            case 0x5f:            *scanCode = KEY_L2;        break;  /* again */
+            case 0x60:            *scanCode = KEY_L3;        break;  /* props */
+            case 0x61:            *scanCode = KEY_L4;        break;  /* undo */
+            case 0x62:            *scanCode = KEY_L5;        break;  /* front */
+            case 0x63:            *scanCode = KEY_L6;        break;  /* copy */
+            case 0x64:            *scanCode = KEY_L7;        break;  /* open */
+            case 0x65:            *scanCode = KEY_L8;        break;  /* paste */
+            case 0x66:            *scanCode = KEY_L9;        break;  /* find */
+            case 0x67:            *scanCode = KEY_L10;       break;  /* cut */
+            case 0x68:            *scanCode = KEY_Help;      break;
             case KEY_F3:          *scanCode = KEY_F13;       break;
             case KEY_F4:          *scanCode = KEY_F14;       break;
             case KEY_F5:          *scanCode = KEY_F15;       break;


[FILE:8979:patches/patch-src_bsd__KbdMap.c]
Don't query console keymap

This seems to be useless and doesn't work anymore with vt(4), due to the
use of Unicode codepoints in vt(4). So remove the related code. This fixes
a segmentation fault during X.Org server startup.

PR:             191459
Submitted by:   Claude Buisson <clbuisson@orange.fr> (earlier version)

--- src/bsd_KbdMap.c.orig	2015-08-07 03:16:08 UTC
+++ src/bsd_KbdMap.c
@@ -27,168 +27,6 @@
 #include "xf86Keymap.h"
 #include "bsd_kbd.h"
 
-#if (defined(SYSCONS_SUPPORT) || defined(PCVT_SUPPORT)) && defined(GIO_KEYMAP)
-#define KD_GET_ENTRY(i,n) \
-  eascii_to_x[((keymap.key[i].spcl << (n+1)) & 0x100) + keymap.key[i].map[n]]
-
-static unsigned char remap[NUM_KEYCODES] = {
-     0, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,   /* 0x00 - 0x07 */
-  0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,   /* 0x08 - 0x0f */
-  0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,   /* 0x10 - 0x17 */
-  0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,   /* 0x18 - 0x1f */
-  0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,   /* 0x20 - 0x27 */
-  0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,   /* 0x28 - 0x2f */
-  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,    0,   /* 0x30 - 0x37 */
-  0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,   /* 0x38 - 0x3f */
-  0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46,    0,   /* 0x40 - 0x47 */
-     0,    0,    0,    0,    0,    0,    0,    0,   /* 0x48 - 0x4f */
-     0,    0,    0,    0,    0,    0, 0x56, 0x57,   /* 0x50 - 0x57 */
-  0x58,    0,    0,    0,    0,    0,    0,    0,   /* 0x58 - 0x5f */
-     0,    0,    0,    0,    0,    0,    0,    0,   /* 0x60 - 0x67 */
-     0,    0,    0,    0,    0,    0,    0,    0,   /* 0x68 - 0x6f */
-     0,    0, 0x69, 0x65,    0,    0,    0,    0,   /* 0x70 - 0x77 */
-     0,    0,    0,    0,    0,    0,    0,    0,   /* 0x78 - 0x7f */
-};
-
-/* This table assumes the ibm code page 437 coding for characters 
- * > 0x80. They are returned in this form by PCVT */
-static KeySym eascii_to_x[512] = {
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	XK_BackSpace,	XK_Tab,		XK_Linefeed,	NoSymbol,
-	NoSymbol,	XK_Return,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	XK_Escape,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	XK_space,	XK_exclam,	XK_quotedbl,	XK_numbersign,
-	XK_dollar,	XK_percent,	XK_ampersand,	XK_apostrophe,
-	XK_parenleft,	XK_parenright,	XK_asterisk,	XK_plus,
-	XK_comma,	XK_minus,	XK_period,	XK_slash,
-	XK_0,		XK_1,		XK_2,		XK_3,
-	XK_4,		XK_5,		XK_6,		XK_7,
-	XK_8,		XK_9,		XK_colon,	XK_semicolon,
-	XK_less,	XK_equal,	XK_greater,	XK_question,
-	XK_at,		XK_A,		XK_B,		XK_C,
-	XK_D,		XK_E,		XK_F,		XK_G,
-	XK_H,		XK_I,		XK_J,		XK_K,
-	XK_L,		XK_M,		XK_N,		XK_O,
-	XK_P,		XK_Q,		XK_R,		XK_S,
-	XK_T,		XK_U,		XK_V,		XK_W,
-	XK_X,		XK_Y,		XK_Z,		XK_bracketleft,
-	XK_backslash,	XK_bracketright,XK_asciicircum,	XK_underscore,
-	XK_grave,	XK_a,		XK_b,		XK_c,
-	XK_d,		XK_e,		XK_f,		XK_g,
-	XK_h,		XK_i,		XK_j,		XK_k,
-	XK_l,		XK_m,		XK_n,		XK_o,
-	XK_p,		XK_q,		XK_r,		XK_s,
-	XK_t,		XK_u,		XK_v,		XK_w,
-	XK_x,		XK_y,		XK_z,		XK_braceleft,
-	XK_bar,		XK_braceright,	XK_asciitilde,	XK_Delete,
-	XK_Ccedilla,	XK_udiaeresis,	XK_eacute,	XK_acircumflex,
-	XK_adiaeresis,	XK_agrave,	XK_aring,	XK_ccedilla,
-	XK_ecircumflex,	XK_ediaeresis,	XK_egrave,	XK_idiaeresis,
-	XK_icircumflex,	XK_igrave,	XK_Adiaeresis,	XK_Aring,
-	XK_Eacute,	XK_ae,		XK_AE,		XK_ocircumflex,
-	XK_odiaeresis,	XK_ograve,	XK_ucircumflex,	XK_ugrave,
-	XK_ydiaeresis,	XK_Odiaeresis,	XK_Udiaeresis,	XK_cent,
-	XK_sterling,	XK_yen,		XK_paragraph,	XK_section,
-	XK_aacute,	XK_iacute,	XK_oacute,	XK_uacute,
-	XK_ntilde,	XK_Ntilde,	XK_ordfeminine,	XK_masculine,
-	XK_questiondown,XK_hyphen,	XK_notsign,	XK_onehalf,
-	XK_onequarter,	XK_exclamdown,	XK_guillemotleft,XK_guillemotright,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	XK_Greek_alpha,	XK_ssharp,	XK_Greek_GAMMA,	XK_Greek_pi,
-	XK_Greek_SIGMA,	XK_Greek_sigma,	XK_mu,	        XK_Greek_tau,
-	XK_Greek_PHI,	XK_Greek_THETA,	XK_Greek_OMEGA,	XK_Greek_delta,
-	XK_infinity,	XK_Ooblique,	XK_Greek_epsilon, XK_intersection,
-	XK_identical,	XK_plusminus,	XK_greaterthanequal, XK_lessthanequal,
-	XK_topintegral,	XK_botintegral,	XK_division,	XK_similarequal,
-	XK_degree,	NoSymbol,	NoSymbol,	XK_radical,
-	XK_Greek_eta,	XK_twosuperior,	XK_periodcentered, NoSymbol,
-
-	/* 
-	 * special marked entries (256 + x)
-	 */
-
-	/* This has been checked against what syscons actually does */
-	NoSymbol,	NoSymbol,	XK_Shift_L,	XK_Shift_R,
-	XK_Caps_Lock,	XK_Num_Lock,	XK_Scroll_Lock,	XK_Alt_L,
-	XK_ISO_Left_Tab,XK_Control_L,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	XK_F1,
-	XK_F2,		XK_F3,		XK_F4,		XK_F5,
-	XK_F6,		XK_F7,		XK_F8,		XK_F9,
-	XK_F10,		XK_F11,		XK_F12,		NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	XK_Control_R,	XK_Alt_R,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol,
-	NoSymbol,	NoSymbol,	NoSymbol,	NoSymbol
-};
-
 #ifdef SYSCONS_SUPPORT
 static
 unsigned char sysconsCODEMap[] = {
@@ -205,7 +43,6 @@ TransMapRec sysconsCODE = {
     sysconsCODEMap
 };
 #endif
-#endif /* SYSCONS_SUPPORT || PCVT_SUPPORT */
 
 #ifdef WSCONS_SUPPORT
 
@@ -1261,40 +1098,6 @@ KbdGetMapping (InputInfoPtr pInfo, KeySy
   KeySym        *k;
   int           i;
 
-#ifndef __bsdi__
-  switch (pKbd->consType) {
-
-/*
- * XXX wscons has no GIO_KEYMAP
- */
-#if (defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT)) && defined(GIO_KEYMAP)
-  case SYSCONS:
-  case PCVT:
-    {
-      keymap_t keymap;
-    
-      if (ioctl(pInfo->fd, GIO_KEYMAP, &keymap) != -1) {
-	for (i = 0; i < keymap.n_keys && i < NUM_KEYCODES; i++)
-	  if (remap[i]) {
-	    k = map + (remap[i] << 2);
-	    k[0] = KD_GET_ENTRY(i,0);           /* non-shifed */
-	    k[1] = KD_GET_ENTRY(i,1);	      /* shifted */
-	    k[2] = KD_GET_ENTRY(i,4);	      /* alt */
-	    k[3] = KD_GET_ENTRY(i,5);	      /* alt - shifted */
-	    if (k[3] == k[2]) k[3] = NoSymbol;
-	    if (k[2] == k[1]) k[2] = NoSymbol;
-	    if (k[1] == k[0]) k[1] = NoSymbol;
-	    if (k[0] == k[2] && k[1] == k[3])
-	      k[2] = k[3] = NoSymbol;
-	  }
-      }
-    }
-    break;
-#endif /* SYSCONS || PCVT */
-    
-  } 
-#endif /* !bsdi */
-
   /*
    * compute the modifier map
    */


[FILE:346:patches/patch-src_bsd__kbd.c]
--- src/bsd_kbd.c.orig	2013-10-28 00:44:23 UTC
+++ src/bsd_kbd.c
@@ -237,6 +237,12 @@ KbdOn(InputInfoPtr pInfo, int what)
 #endif
 	}
     }
+/*
+ * Switch keyboards which are not attached to console in RAW mode
+ */
+#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT)
+	ioctl(pInfo->fd, KDSKBMODE, K_RAW);
+#endif
     return Success;
 }
 


[FILE:665:patches/patch-src_kdb.c]
--- src/kbd.c.orig	2016-05-30 21:35:35 UTC
+++ src/kbd.c
@@ -25,6 +25,7 @@
 
 #include "xf86.h"
 #include "atKeynames.h"
+#include "xf86Priv.h"
 #include "xf86Privstr.h"
 
 #include <X11/extensions/XI.h>
@@ -382,6 +383,14 @@ KbdProc(DeviceIntPtr device, int what)
     }
     pKbd->KbdOff(pInfo, what);
     device->public.on = FALSE;
+	/*
+	 * Close device file for keyboards which are not attached
+	 * to console, otherwise they can't be opened again after
+	 * relogin when using session manager like xdm.
+	 * X server will take care about console attached keyboards.
+	 */
+	if (pInfo->fd != xf86Info.consoleFd)
+		close(pInfo->fd);
     break;
 
   default:

