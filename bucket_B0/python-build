# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-build
VERSION=		1.2.2
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Simple, correct Python build frontend (3.11)
SDESC[v12]=		Simple, correct Python build frontend (3.12)
HOMEPAGE=		https://build.pypa.io
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/91/fd/e4bda6228637ecae5732162b5ac2a5a822e2ba8e546eb4997cde51b231a3
DISTFILE[1]=		build-1.2.2-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		build-1.2.2.dist-info

GENERATED=		yes

[PY311].RUN_DEPENDS_ON=			python-packaging:single:v11
					python-pyproject_hooks:single:v11
					python-colorama:single:v11
					python-importlib-metadata:single:v11
[PY311].USES_ON=			python:v11,wheel

[PY312].RUN_DEPENDS_ON=			python-packaging:single:v12
					python-pyproject_hooks:single:v12
					python-colorama:single:v12
					python-importlib-metadata:single:v12
[PY312].USES_ON=			python:v12,wheel

[FILE:2416:descriptions/desc.single]
# build

[![pre-commit.ci
status]](https://results.pre-commit.ci/latest/github/pypa/build/main)
[CI test]
[codecov]

[Documentation Status]
[PyPI version]
[Discord]

A simple, correct Python build frontend.

See the [documentation] for more information.

### Installation

`build` can be installed via `pip` or an equivalent via:

```console
$ pip install build
```

### Usage

```console
$ python -m build
```

This will build the package in an isolated environment, generating a
source-distribution and wheel in the directory `dist/`.
See the [documentation] for full information.

### Common arguments

- `--sdist` (`-s`): Produce just an SDist
- `--wheel` (`-w`): Produce just a wheel
- `-C<option>=<value>`: A Config-setting, the PEP 517 way of passing
options to a backend. Can be passed multiple times. Matching options will
make a list. Note that setuptools has very limited support.
- `--installer`: Pick an installer for the isolated build (`pip` or `uv`).
- `--no-isolation` (`-n`): Disable build isolation.
- `--skip-dependency-check` (`-x`): Disable dependency checking when not
isolated; this should be done if some requirements or version ranges are
not required for non-isolated builds.
- `--outdir (`-o`): The output directory (defaults to `dist`)

Some common combinations of arguments:

- `--sdist --wheel` (`-sw`): Produce and SDist and a wheel, both from the
source distribution. The default (if no flag is passed) is to build an
SDist and then build a wheel _from_ the SDist.
- `-nx`: Disable build isolation and dependency checking. Identical to pip
and uv's `--no-build-isolation` flag.

### Integration with other tools

#### pipx

If you use [pipx][], such as in GitHub Actions, the following command will
download
and run build in one step:

```console
$ pipx run build
```

#### uv

If you want to use [uv][] to speed up the virtual environment creation, you
can use
`--installer=uv`. You can get a Python wheel for `uv` with the `[uv]`
extra.
Combining both suggestions yields the following:

```console
$ pipx run build[uv] --installer=uv
```

#### cibuildwheel

If you are using [cibuildwheel][], build is integrated and can be use with
either (in your `pyproject.toml`):

```toml
[tool.cibuildwheel]
build-frontend = "build"
`

or

`toml
[tool.cibuildwheel]
build-frontend = "build[uv]"
```

(Be sure to pre-install uv before running cibuildwheel for this one!)

### Code of Conduct



[FILE:107:distinfo]
277ccc71619d98afdd841a0e96ac9fe1593b823af481d3b0cea748e8894e0613        22823 build-1.2.2-py3-none-any.whl

