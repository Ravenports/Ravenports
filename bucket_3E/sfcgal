# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		sfcgal
VERSION=		1.3.9
REVISION=		1
KEYWORDS=		math graphics
VARIANTS=		standard
SDESC[standard]=	C++ wrapper library around CGAL
HOMEPAGE=		http://www.sfcgal.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITLAB/Oslandia:SFCGAL:v1.3.9
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gmp:static:standard
			mpfr:static:standard
BUILDRUN_DEPENDS=	cgal:single:standard
			gmp:shared:standard
			mpfr:shared:standard
			boost-libraries:rest:python_default

USES=			cmake libtool

LICENSE=		GPLv2+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/Solid.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		databases/sfcgal

SOVERSION=		1.3.9

CXXFLAGS=		-Wno-deprecated-declarations
CMAKE_ARGS=		-DBUILD_SHARED_LIBS:BOOL=ON

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libSFCGAL.so

[FILE:331:descriptions/desc.single]
SFCGAL is a C++ wrapper library around CGAL with the aim of supporting ISO
19107:2013 and OGC Simple Features Access 1.2 for 3D operations.

SFCGAL provides standard compliant geometry types and operations, that can
be accessed from its C or C++ APIs. PostGIS uses the C API, to expose some
SFCGAL's functions in spatial databases


[FILE:108:distinfo]
38ae8021b6db830fff8166b07b8f67640e93f74f033275f82de800b5420a5fd3      2484155 Oslandia-SFCGAL-v1.3.9.tar.gz


[FILE:2098:manifests/plist.single]
bin/sfcgal-config
include/SFCGAL/
 Coordinate.h
 Envelope.h
 Exception.h
 Geometry.h
 GeometryCollection.h
 GeometryVisitor.h
 Kernel.h
 LineString.h
 MultiLineString.h
 MultiPoint.h
 MultiPolygon.h
 MultiSolid.h
 Point.h
 Polygon.h
 PolyhedralSurface.h
 PreparedGeometry.h
 Solid.h
 Surface.h
 Transform.h
 Triangle.h
 TriangulatedSurface.h
 Validity.h
 config.h
 export.h
 numeric.h
 version.h
include/SFCGAL/algorithm/
 BoundaryVisitor.h
 ConsistentOrientationBuilder.h
 area.h
 collect.h
 collectionExtract.h
 collectionHomogenize.h
 collectionToMulti.h
 connection.h
 convexHull.h
 covers.h
 difference.h
 differencePrimitives.h
 distance.h
 distance3d.h
 extrude.h
 force2D.h
 force3D.h
 intersection.h
 intersects.h
 isValid.h
 length.h
 lineSubstring.h
 minkowskiSum.h
 normal.h
 offset.h
 orientation.h
 plane.h
 straightSkeleton.h
 tesselate.h
 translate.h
 union.h
 volume.h
include/SFCGAL/capi/sfcgal_c.h
include/SFCGAL/detail/
 ComplexComparator.h
 EnvelopeVisitor.h
 ForceValidityVisitor.h
 GeometrySet.h
 GetPointsVisitor.h
 Interval.h
 Point_inside_polyhedron.h
 TestGeometry.h
 TypeForDimension.h
 polygonSetToMultiPolygon.h
 ublas.h
include/SFCGAL/detail/algorithm/coversPoints.h
include/SFCGAL/detail/generator/
 building.h
 disc.h
 hoch.h
 sierpinski.h
include/SFCGAL/detail/graph/
 Edge.h
 GeometryGraph.h
 GeometryGraphBuilder.h
 Vertex.h
include/SFCGAL/detail/graph/algorithm/
 isHalfEdge.h
 orientation.h
include/SFCGAL/detail/io/
 OsgFactory.h
 Serialization.h
 WktReader.h
 WktWriter.h
include/SFCGAL/detail/tools/
 CharArrayBuffer.h
 InputStreamReader.h
 Log.h
 Registry.h
include/SFCGAL/detail/transform/
 AffineTransform2.h
 AffineTransform3.h
 Force2D.h
 ForceOrderPoints.h
 ForceZ.h
 ForceZOrderPoints.h
 RoundTransform.h
include/SFCGAL/detail/triangulate/
 ConstraintDelaunayTriangulation.h
 markDomains.h
 triangulateInGeometrySet.h
include/SFCGAL/io/
 GeometryStreams.h
 ewkt.h
 osg.h
 vtk.h
 wkt.h
include/SFCGAL/triangulate/
 triangulate2DZ.h
 triangulatePolygon.h
lib/
 libSFCGAL.so
 libSFCGAL.so.%%SOMAJOR%%
 libSFCGAL.so.%%SOVERSION%%
lib/pkgconfig/sfcgal.pc


[FILE:806:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2020-09-10 06:47:44 UTC
+++ CMakeLists.txt
@@ -105,14 +105,6 @@ if ( SFCGAL_BUILD_TESTS OR SFCGAL_BUILD_
 	set( SFCGAL_Boost_COMPONENTS program_options chrono filesystem timer ${SFCGAL_Boost_COMPONENTS} )
 endif()
 find_package( Boost COMPONENTS ${SFCGAL_Boost_COMPONENTS} REQUIRED )
-if((${Boost_MAJOR_VERSION} EQUAL 1) AND (${Boost_MINOR_VERSION} EQUAL 58))
-	message( STATUS "Defining BOOST_VARIANT_USE_RELAXED_GET_BY_DEFAULT" )
-	add_definitions( "-DBOOST_VARIANT_USE_RELAXED_GET_BY_DEFAULT" )
-endif()
-# patch boost 1.60.0
-if((${Boost_MAJOR_VERSION} EQUAL 1) AND (${Boost_MINOR_VERSION} EQUAL 60) AND (${Boost_SUBMINOR_VERSION} EQUAL 0))
-  include_directories( patches/boost-1.60.0 )
-endif()
 
 if( SFCGAL_USE_STATIC_LIBS )
   add_definitions( "-DSFCGAL_USE_STATIC_LIBS" )

