# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-django-tables2
VERSION=		2.6.0
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Table/data-grid framework for Django (3.10)
SDESC[v11]=		Table/data-grid framework for Django (3.11)
HOMEPAGE=		https://github.com/jieter/django-tables2/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/76/d5/2df10d1a5a659bce0afc4165e1855a9813a0f87b06d90e1cc1e83f01ad3a
DISTFILE[1]=		django_tables2-2.6.0-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		django_tables2-2.6.0.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-Django:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-Django:single:v11
[PY311].USES_ON=			python:v11,wheel

[FILE:1833:descriptions/desc.single]
# django-tables2 - An app for creating HTML tables

[Latest PyPI version]
[Any color you like]

django-tables2 simplifies the task of turning sets of data into HTML
tables. It
has native support for pagination and sorting. It does for HTML tables what
`django.forms` does for HTML forms. e.g.

- Available on pypi as [django-tables2]
- Tested against currently supported versions of Django
  [and supported python 3 versions Django supports].
- [Documentation on readthedocs.org]
- [Bug tracker]

Features:

- Any iterable can be a data-source, but special support for Django
`QuerySets` is included.
- The builtin UI does not rely on JavaScript.
- Support for automatic table generation based on a Django model.
- Supports custom column functionality via subclassing.
- Pagination.
- Column based table sorting.
- Template tag to enable trivial rendering to HTML.
- Generic view mixin.

![An example table rendered using django-tables2]

![An example table rendered using django-tables2 and bootstrap theme]

![An example table rendered using django-tables2 and semantic-ui theme]

## Example

Start by adding `django_tables2` to your `INSTALLED_APPS` setting like
this:

```python
INSTALLED_APPS = (
    ...,
    "django_tables2",
)
```

Creating a table for a model `Simple` is as simple as:

```python
import django_tables2 as tables

class SimpleTable(tables.Table):
    class Meta:
        model = Simple
```
This would then be used in a view:

```python
class TableView(tables.SingleTableView):
    table_class = SimpleTable
    queryset = Simple.objects.all()
    template_name = "simple_list.html"
```
And finally in the template:

```
{% load django_tables2 %}
{% render_table table %}
```

This example shows one of the simplest cases, but django-tables2 can do a
lot more!
Check out the [documentation] for more details.


[FILE:120:distinfo]
04f23c1181d93716c67085a3c324b449180fd0c5162ef4619acb0b2d9a166133        95199 django_tables2-2.6.0-py2.py3-none-any.whl

