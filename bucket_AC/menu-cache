# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		menu-cache
VERSION=		1.1.0
KEYWORDS=		x11
VARIANTS=		std
SDESC[std]=		Caching mechanism for freedesktop-compliant menus
HOMEPAGE=		https://github.com/lxde/menu-cache
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/lxde:menu-cache:1.1.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		automake:primary:std
BUILDRUN_DEPENDS=	libfm-extra:single:std

USES=			cpe gmake libtool:build pkgconfig gtk-doc
GNOME_COMPONENTS=	glib

LICENSE=		LGPL21+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/menu-cache-gen/main.c
LICENSE_SCHEME=		solo

CPE_PRODUCT=		libmenu-cache
CPE_VENDOR=		libmenu-cache_project
FPC_EQUIVALENT=		x11/menu-cache

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-static

INSTALL_TARGET=		install-strip
SOVERSION=		3.2.0

MOUNT_PROCFS=		yes
VAR_OPSYS[sunos]=	LDFLAGS=-lsocket

pre-configure:
	(cd ${WRKSRC} && ./autogen.sh)

post-patch-sunos:
	${REINPLACE_CMD} -e 's|<sys/fcntl.h>|<fcntl.h>|' \
		${WRKSRC}/libmenu-cache/menu-cache.c \
		${WRKSRC}/menu-cache-daemon/menu-cached.c

[FILE:133:descriptions/desc.single]
Libmenu-cache is a library creating and utilizing caches to speed up the
manipulation for freedesktop.org defined application menus.


[FILE:107:distinfo]
990857aa61a2894730e3749b6bc0f905967eed0c21aa2b62a7694007bdccbe8d        68203 lxde-menu-cache-1.1.0.tar.gz


[FILE:197:manifests/plist.single]
include/menu-cache/menu-cache.h
lib/
 libmenu-cache.so
 libmenu-cache.so.%%SOMAJOR%%
 libmenu-cache.so.%%SOVERSION%%
lib/pkgconfig/libmenu-cache.pc
libexec/menu-cache/
 menu-cache-gen
 menu-cached


[FILE:3505:patches/patch-fix-fno-common]
From 1ce739649b4d66339a03fc0ec9ee7a2f7c141780 Mon Sep 17 00:00:00 2001
From: Mamoru TASAKA <mtasaka@fedoraproject.org>
Date: Fri, 24 Jan 2020 13:33:00 +0900
Subject: [PATCH] Support gcc10 compilation

gcc10 now defaults to -fno-common, and with gcc10 menu-cache compilation fails like

/bin/ld: menu-merge.o:menu-cache-gen/menu-tags.h:167: multiple definition of `DirDirs'; main.o:menu-cache-gen/menu-tags.h:167: first defined here
/bin/ld: menu-merge.o:menu-cache-gen/menu-tags.h:164: multiple definition of `AppDirs'; main.o:menu-cache-gen/menu-tags.h:164: first defined here
/bin/ld: menu-merge.o:menu-cache-gen/menu-tags.h:52: multiple definition of `menuTag_Layout'; main.o:menu-cache-gen/menu-tags.h:52: first defined here
....

This patch fixes compilation with gcc10: properly declaring variables in header with "extern", and also removing some unneeded variables in header files.
---
 menu-cache-gen/menu-tags.h | 55 ++++++++++++--------------------------
 1 file changed, 17 insertions(+), 38 deletions(-)

--- menu-cache-gen/menu-tags.h
+++ menu-cache-gen/menu-tags.h
@@ -22,38 +22,17 @@
 #include <libfm/fm-extra.h>
 #include <menu-cache.h>
 
-FmXmlFileTag menuTag_Menu;
-FmXmlFileTag menuTag_AppDir;
-FmXmlFileTag menuTag_DefaultAppDirs;
-FmXmlFileTag menuTag_DirectoryDir;
-FmXmlFileTag menuTag_DefaultDirectoryDirs;
-FmXmlFileTag menuTag_Include;
-FmXmlFileTag menuTag_Exclude;
-FmXmlFileTag menuTag_Filename;
-FmXmlFileTag menuTag_Or;
-FmXmlFileTag menuTag_And;
-FmXmlFileTag menuTag_Not;
-FmXmlFileTag menuTag_Category;
-FmXmlFileTag menuTag_MergeFile;
-FmXmlFileTag menuTag_MergeDir;
-FmXmlFileTag menuTag_DefaultMergeDirs;
-FmXmlFileTag menuTag_Directory;
-FmXmlFileTag menuTag_Name;
-FmXmlFileTag menuTag_Deleted;
-FmXmlFileTag menuTag_NotDeleted;
-FmXmlFileTag menuTag_OnlyUnallocated;
-FmXmlFileTag menuTag_NotOnlyUnallocated;
-FmXmlFileTag menuTag_All;
-FmXmlFileTag menuTag_LegacyDir;
-FmXmlFileTag menuTag_KDELegacyDirs;
-FmXmlFileTag menuTag_Move;
-FmXmlFileTag menuTag_Old;
-FmXmlFileTag menuTag_New;
-FmXmlFileTag menuTag_Layout;
-FmXmlFileTag menuTag_DefaultLayout;
-FmXmlFileTag menuTag_Menuname;
-FmXmlFileTag menuTag_Separator;
-FmXmlFileTag menuTag_Merge;
+extern FmXmlFileTag menuTag_AppDir;
+extern FmXmlFileTag menuTag_DirectoryDir;
+extern FmXmlFileTag menuTag_Include;
+extern FmXmlFileTag menuTag_Exclude;
+extern FmXmlFileTag menuTag_Filename;
+extern FmXmlFileTag menuTag_Or;
+extern FmXmlFileTag menuTag_And;
+extern FmXmlFileTag menuTag_Not;
+extern FmXmlFileTag menuTag_Category;
+extern FmXmlFileTag menuTag_All;
+extern FmXmlFileTag menuTag_LegacyDir;
 
 typedef enum {
     MERGE_NONE, /* starting value */
@@ -152,19 +131,19 @@ typedef struct {
 } MenuRule;
 
 /* requested language(s) */
-char **languages;
+extern char **languages;
 
 /* list of menu files to monitor */
-GSList *MenuFiles;
+extern GSList *MenuFiles;
 
 /* list of menu dirs to monitor */
-GSList *MenuDirs;
+extern GSList *MenuDirs;
 
 /* list of available app dirs */
-GSList *AppDirs;
+extern GSList *AppDirs;
 
 /* list of available dir dirs */
-GSList *DirDirs;
+extern GSList *DirDirs;
 
 /* parse and merge menu files */
 MenuMenu *get_merged_menu(const char *file, FmXmlFile **xmlfile, GError **error);
@@ -177,7 +156,7 @@ gboolean save_menu_cache(MenuMenu *layout, const char *menuname, const char *fil
 void _free_layout_items(GList *data);
 
 /* verbosity level */
-gint verbose;
+extern gint verbose;
 
 #define DBG if (verbose) g_debug
 #define VDBG if (verbose > 1) g_debug

