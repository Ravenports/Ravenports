# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		firefox
VERSION=		89.0.2
KEYWORDS=		www
VARIANTS=		standard
SDESC[standard]=	Mozilla web browser
HOMEPAGE=		https://www.mozilla.org/en-US/firefox/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		MOZILLA/firefox/releases/89.0.2/source
DISTFILE[1]=		firefox-89.0.2.source.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		autoconf213:single:standard
			cbindgen:single:standard
			nodejs:primary:standard
			rust:single:standard
			yasm:single:standard
			nasm:primary:standard
			zip:single:standard
			python-sqlite3:single:python_used
			evdev-proto:single:standard
BUILDRUN_DEPENDS=	dbus-glib:primary:standard
			ffmpeg:primary:standard
			harfbuzz:primary:standard
			icu:single:standard
			libcanberra:primary:standard
			libevent:single:standard
			libffi:single:standard
			libnotify:primary:standard
			libproxy:single:standard
			libdrm:single:standard
			nss:primary:standard
RUN_DEPENDS=		pciutils:library:standard

USES=			cpe desktop-utils:single gmake jpeg perl:build
			pkgconfig png python:build zlib clang:keepcc
GNOME_COMPONENTS=	gdkpixbuf gtk2 gtk3
XORG_COMPONENTS=	pixman xcb

LICENSE=		MPL:single
LICENSE_TERMS=		single:{{WRKSRC}}/toolkit/content/license.html
LICENSE_FILE=		MPL:stock
LICENSE_SCHEME=		solo

CPE_VENDOR=		mozilla
FPC_EQUIVALENT=		www/firefox

MUST_CONFIGURE=		yes
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ENV=		PYTHON3={{PYTHON_CMD}}
			SETUPTOOLS_USE_DISTUTILS=stdlib

MAKE_ENV=		PYTHON3={{PYTHON_CMD}}
			CXXSTDLIB="stdc++"

QMAKE_ARGS=		--enable-application=browser
			--enable-chrome-format=omni
			--enable-default-toolkit=cairo-gtk3
			--enable-install-strip
			--enable-official-branding
			--enable-optimize
			--enable-release
			--enable-strip
			--enable-libproxy
			--enable-system-ffi
			--enable-system-pixman
			--disable-alsa
			--disable-debug
			--disable-debug-symbols
			--disable-dtrace
			--disable-jack
			--disable-profiling
			--disable-pulseaudio
			--disable-tests
			--disable-updater
			--disable-webrtc
			--disable-hardening
			--prefix="{{PREFIX}}"
			--with-intl-api
			--with-system-graphite2
			--with-system-harfbuzz
			--with-system-icu
			--with-system-jpeg="{{LOCALBASE}}"
			--with-system-libevent
			--with-system-nspr
			--with-system-nss
			--with-system-png="{{LOCALBASE}}"
			--with-system-zlib
VAR_OPSYS[linux]=	QMAKE_ARGS=--disable-elf-hack

post-patch:
	${REINPLACE_CMD} -e 's|%%LOCALBASE%%|${LOCALBASE}|g' \
		${WRKSRC}/browser/app/nsBrowserApp.cpp
	${REINPLACE_CMD} -e 's/%u/%U/' -e '/X-MultipleArgs/d' \
		-e '/^Icon/s/=.*/=firefox/' \
		${WRKSRC}/taskcluster/docker/firefox-snap/firefox.desktop
	(cd ${WRKSRC}/gfx/angle/checkout/src/compiler/translator && \
		${REINPLACE_CMD} -e 's|<math.h>|<cmath>|' \
		InfoSink.h IntermNode.cpp)
	# disable SCTP
	${REINPLACE_CMD} -e 's|MOZ_SCTP|MOZ_DISABLE_SCTP|' \
		${WRKSRC}/netwerk/moz.build
	# disable rust checksums
	${REINPLACE_CMD} -e 's/"files":{[^}]*}/"files":{}/' \
		 ${WRKSRC}/third_party/rust/libc/.cargo-checksum.json
	# Set mozilla options
	@${ECHO_CMD} "--=> Setting configuration <=--"
	@for arg in ${QMAKE_ARGS}; do \
		${ECHO_CMD} ".mozconfig <<  $$arg" ;\
		${ECHO_CMD} ac_add_options $$arg >> ${WRKSRC}/.mozconfig ;\
	done
	@${ECHO_CMD} LDFLAGS=\"-Wl,-rpath,${PREFIX}/lib/firefox\" \
		>> ${WRKSRC}/.mozconfig

post-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/share/pixmaps \
		${STAGEDIR}${PREFIX}/share/applications
	${INSTALL_DATA} ${WRKSRC}/taskcluster/docker/firefox-snap/firefox.desktop \
		${STAGEDIR}${PREFIX}/share/applications/
	${LN} -sf ${PREFIX}/lib/firefox/browser/chrome/icons/default/default48.png \
		${STAGEDIR}${PREFIX}/share/pixmaps/firefox.png

pre-configure:
	(cd ${WRKSRC} && ${LOCALBASE}/bin/autoconf-2.13)
	(cd ${WRKSRC}/js/src/ && ${LOCALBASE}/bin/autoconf-2.13)

[FILE:527:descriptions/desc.single]
Firefox is a full-featured standard-compliant web browser, built on the
Mozilla codebase by thousands of contributors around the world.
It is extensible through thousands of user-contributed extensions, and
features:
 * Improved Security;
 * Improved Tabbed Browsing, with tab grouping;
 * Private Browsing;
 * Spell Checking;
 * Search Suggestions;
 * Session Restore;
 * Web Feeds (RSS);
 * Live Titles;
 * Integrated Search;
 * Live Bookmarks;
 * Pop-up Blocker;
 * Phishing Protection;
 * Themes;
 * Search Engine Manager.


[FILE:107:distinfo]
3225f583c5e36bdf52ad16f71a2c359deb0c765c38205acdeb6b7b6520ac5494    371053016 firefox-89.0.2.source.tar.xz


[FILE:1018:manifests/plist.single]
%%ONLY-LINUX%%lib/firefox/
 Throbber-small.gif
 crashreporter
 crashreporter.ini
 libmozsandbox.so
 minidump-analyzer
%%ONLY-LINUX%%lib/firefox/browser/crashreporter-override.ini
bin/firefox
lib/firefox/
 application.ini
 dependentlibs.list
 firefox
 firefox-bin
 liblgpllibs.so
 libmozavcodec.so
 libmozavutil.so
 libmozgtk.so
 libmozsqlite3.so
 libxul.so
 omni.ja
 pingsender
 platform.ini
 plugin-container
 removed-files
lib/firefox/browser/omni.ja
lib/firefox/browser/chrome/icons/default/
 default128.png
 default16.png
 default32.png
 default48.png
 default64.png
lib/firefox/browser/features/
 doh-rollout@mozilla.org.xpi
 formautofill@mozilla.org.xpi
 pictureinpicture@mozilla.org.xpi
 screenshots@mozilla.org.xpi
 webcompat-reporter@mozilla.org.xpi
 webcompat@mozilla.org.xpi
lib/firefox/defaults/pref/channel-prefs.js
lib/firefox/fonts/TwemojiMozilla.ttf
lib/firefox/gmp-clearkey/0.1/
 libclearkey.so
 manifest.json
lib/firefox/gtk2/libmozgtk.so
share/applications/firefox.desktop
share/pixmaps/firefox.png


[FILE:4592:patches/patch-addon-search]
https://github.com/mozilla/addons/issues/708
https://github.com/mozilla/addons-frontend/issues/4610

diff --git browser/app/profile/firefox.js browser/app/profile/firefox.js
index 75c2c5e435e35..4d8c09c02759b 100644
--- browser/app/profile/firefox.js
+++ browser/app/profile/firefox.js
@@ -39,7 +39,7 @@ pref("extensions.postDownloadThirdPartyPrompt", true);
 // Preferences for AMO integration
 pref("extensions.getAddons.cache.enabled", true);
 pref("extensions.getAddons.get.url", "https://services.addons.mozilla.org/api/v4/addons/search/?guid=%IDS%&lang=%LOCALE%");
-pref("extensions.getAddons.search.browseURL", "https://addons.mozilla.org/%LOCALE%/firefox/search?q=%TERMS%&platform=%OS%&appver=%VERSION%");
+pref("extensions.getAddons.search.browseURL", "https://addons.mozilla.org/%LOCALE%/firefox/search?q=%TERMS%&platform=Linux&appver=%VERSION%");
 pref("extensions.getAddons.link.url", "https://addons.mozilla.org/%LOCALE%/firefox/");
 pref("extensions.getAddons.langpacks.url", "https://services.addons.mozilla.org/api/v4/addons/language-tools/?app=firefox&type=language&appversion=%VERSION%");
 pref("extensions.getAddons.discovery.api_url", "https://services.addons.mozilla.org/api/v4/discovery/?lang=%LOCALE%&edition=%DISTRIBUTION%");
@@ -176,8 +176,8 @@ pref("app.update.langpack.enabled", true);
 //  .. etc ..
 //
 pref("extensions.update.enabled", true);
-pref("extensions.update.url", "https://versioncheck.addons.mozilla.org/update/VersionCheck.php?reqVersion=%REQ_VERSION%&id=%ITEM_ID%&version=%ITEM_VERSION%&maxAppVersion=%ITEM_MAXAPPVERSION%&status=%ITEM_STATUS%&appID=%APP_ID%&appVersion=%APP_VERSION%&appOS=%APP_OS%&appABI=%APP_ABI%&locale=%APP_LOCALE%&currentAppVersion=%CURRENT_APP_VERSION%&updateType=%UPDATE_TYPE%&compatMode=%COMPATIBILITY_MODE%");
-pref("extensions.update.background.url", "https://versioncheck-bg.addons.mozilla.org/update/VersionCheck.php?reqVersion=%REQ_VERSION%&id=%ITEM_ID%&version=%ITEM_VERSION%&maxAppVersion=%ITEM_MAXAPPVERSION%&status=%ITEM_STATUS%&appID=%APP_ID%&appVersion=%APP_VERSION%&appOS=%APP_OS%&appABI=%APP_ABI%&locale=%APP_LOCALE%&currentAppVersion=%CURRENT_APP_VERSION%&updateType=%UPDATE_TYPE%&compatMode=%COMPATIBILITY_MODE%");
+pref("extensions.update.url", "https://versioncheck.addons.mozilla.org/update/VersionCheck.php?reqVersion=%REQ_VERSION%&id=%ITEM_ID%&version=%ITEM_VERSION%&maxAppVersion=%ITEM_MAXAPPVERSION%&status=%ITEM_STATUS%&appID=%APP_ID%&appVersion=%APP_VERSION%&appOS=Linux&appABI=%APP_ABI%&locale=%APP_LOCALE%&currentAppVersion=%CURRENT_APP_VERSION%&updateType=%UPDATE_TYPE%&compatMode=%COMPATIBILITY_MODE%");
+pref("extensions.update.background.url", "https://versioncheck-bg.addons.mozilla.org/update/VersionCheck.php?reqVersion=%REQ_VERSION%&id=%ITEM_ID%&version=%ITEM_VERSION%&maxAppVersion=%ITEM_MAXAPPVERSION%&status=%ITEM_STATUS%&appID=%APP_ID%&appVersion=%APP_VERSION%&appOS=Linux&appABI=%APP_ABI%&locale=%APP_LOCALE%&currentAppVersion=%CURRENT_APP_VERSION%&updateType=%UPDATE_TYPE%&compatMode=%COMPATIBILITY_MODE%");
 pref("extensions.update.interval", 86400);  // Check for updates to Extensions and
                                             // Themes every day
 
diff --git toolkit/mozapps/extensions/internal/AddonRepository.jsm toolkit/mozapps/extensions/internal/AddonRepository.jsm
index f70fd8d7e3bd8..81e8cd7764fdf 100644
--- toolkit/mozapps/extensions/internal/AddonRepository.jsm
+++ toolkit/mozapps/extensions/internal/AddonRepository.jsm
@@ -602,7 +602,7 @@ var AddonRepository = {
       addon.version = String(aEntry.current_version.version);
       if (Array.isArray(aEntry.current_version.files)) {
         for (let file of aEntry.current_version.files) {
-          if (file.platform == "all" || file.platform == PLATFORM) {
+          if (file.platform == "all" || file.platform == "linux" || file.platform == PLATFORM) {
             if (file.url) {
               addon.sourceURI = NetUtil.newURI(file.url);
             }
diff --git toolkit/mozapps/extensions/internal/XPIDatabase.jsm toolkit/mozapps/extensions/internal/XPIDatabase.jsm
index f70fd8d7e3bd8..81e8cd7764fdf 100644
--- toolkit/mozapps/extensions/internal/XPIDatabase.jsm
+++ toolkit/mozapps/extensions/internal/XPIDatabase.jsm
@@ -355,7 +355,7 @@ class AddonInternal {
     // Something is causing errors in here
     try {
       for (let platform of this.targetPlatforms) {
-        if (platform.os == Services.appinfo.OS) {
+        if (platform.os == "Linux" || platform.os == Services.appinfo.OS) {
           if (platform.abi) {
             needsABI = true;
             if (platform.abi === abi)


[FILE:445:patches/patch-browser_app_nsBrowserApp.cpp]
--- browser/app/nsBrowserApp.cpp.orig	2016-09-19 16:19:28 UTC
+++ browser/app/nsBrowserApp.cpp
@@ -324,6 +324,9 @@ int main(int argc, char* argv[], char* e
 {
   mozilla::TimeStamp start = mozilla::TimeStamp::Now();
 
+  setenv("MOZ_GMP_PATH", "%%LOCALBASE%%/lib/browser_plugins/symlinks/gecko", 0);
+  setenv("MOZ_PLUGIN_PATH", "%%LOCALBASE%%/lib/browser_plugins/symlinks/gecko", 0);
+
 #ifdef HAS_DLL_BLOCKLIST
   DllBlocklist_Initialize();
 


[FILE:1730:patches/patch-bug1288587]
diff --git a/build/moz.configure/init.configure b/build/moz.configure/init.configure
index 855214a..1e91d51 100644
--- build/moz.configure/init.configure
+++ build/moz.configure/init.configure
@@ -238,6 +238,7 @@ option(
 @imports(_from="mozbuild.pythonutil", _import="find_python3_executable")
 @imports(_from="mozbuild.pythonutil", _import="python_executable_version")
 @imports(_from="six", _import="ensure_text")
+@imports(_from="__builtin__", _import="KeyError")
 def virtualenv_python3(env_python, virtualenv_name, build_env, mozconfig, help):
     # Avoid re-executing python when running configure --help.
     if help:
@@ -271,6 +272,12 @@ def virtualenv_python3(env_python, virtualenv_name, bu
             python = mozconfig["vars"]["added"]["PYTHON3"]
         elif "PYTHON3" in mozconfig["vars"]["modified"]:
             python = mozconfig["vars"]["modified"]["PYTHON3"][1]
+        for i in ("env", "vars"):
+            for j in ("added", "modified"):
+                try:
+                    del mozconfig[i][j]["PYTHON3"]
+                except KeyError:
+                    pass
 
     log.debug("python3: executable from configuration: %r" % python)
 
@@ -364,7 +371,10 @@ def virtualenv_python3(env_python, virtualenv_name, bu
         )
         log.info("Re-executing in the virtualenv")
         if env_python:
-            del os.environ["PYTHON3"]
+                try:
+                    del os.environ["PYTHON3"]
+                except KeyError:
+                    pass
         # Homebrew on macOS will change Python's sys.executable to a custom
         # value which messes with mach's virtualenv handling code. Override
         # Homebrew's changes with the correct sys.executable value.


[FILE:3539:patches/patch-bug1559213]
commit 717bba28411c
Author: Jory A. Pratt <anarchy@gentoo.org>
Date:   Thu Jun 13 11:53:00 2019 -0700

    Bug 1559213 - Allow to use system av1 libs instead of bundled.
---
 config/external/moz.build      |  5 +++--
 config/system-headers.mozbuild |  8 ++++++++
 dom/media/platforms/moz.build  |  5 +++++
 toolkit/moz.configure          | 19 ++++++++++++++++++-
 4 files changed, 34 insertions(+), 3 deletions(-)

diff --git config/external/moz.build config/external/moz.build
index 03e4fa143bd1..a67d10b11fe6 100644
--- config/external/moz.build
+++ config/external/moz.build
@@ -40,8 +40,9 @@ if not CONFIG["MOZ_SYSTEM_LIBVPX"]:
     external_dirs += ["media/libvpx"]
 
 if CONFIG["MOZ_AV1"]:
-    external_dirs += ["media/libaom"]
-    external_dirs += ["media/libdav1d"]
+    if not CONFIG["MOZ_SYSTEM_AV1"]:
+        external_dirs += ["media/libaom"]
+        external_dirs += ["media/libdav1d"]
 
 if not CONFIG["MOZ_SYSTEM_PNG"]:
     external_dirs += ["media/libpng"]
diff --git config/system-headers.mozbuild config/system-headers.mozbuild
index bcf5c4925564..48964a999a9b 100644
--- config/system-headers.mozbuild
+++ config/system-headers.mozbuild
@@ -1305,6 +1305,14 @@ if CONFIG['MOZ_SYSTEM_HARFBUZZ']:
         'harfbuzz/hb.h',
     ]
 
+if CONFIG['MOZ_SYSTEM_AV1']:
+    system_headers += [
+        'aom/aom_decoder.h',
+        'aom/aomdx.h',
+        'aom/aom_image.h',
+        'dav1d/dav1d.h',
+    ]
+
 if CONFIG['MOZ_SYSTEM_LIBVPX']:
     system_headers += [
         'vpx_mem/vpx_mem.h',
diff --git dom/media/platforms/moz.build dom/media/platforms/moz.build
index 092cee0c9b66..38e45de5b5f0 100644
--- dom/media/platforms/moz.build
+++ dom/media/platforms/moz.build
@@ -78,6 +78,11 @@ if CONFIG["MOZ_AV1"]:
         "agnostic/AOMDecoder.cpp",
         "agnostic/DAV1DDecoder.cpp",
     ]
+    if CONFIG['MOZ_SYSTEM_AV1']:
+        CXXFLAGS += CONFIG['MOZ_SYSTEM_LIBAOM_CFLAGS']
+        OS_LIBS += CONFIG['MOZ_SYSTEM_LIBAOM_LIBS']
+        CXXFLAGS += CONFIG['MOZ_SYSTEM_LIBDAV1D_CFLAGS']
+        OS_LIBS += CONFIG['MOZ_SYSTEM_LIBDAV1D_LIBS']
 
 if CONFIG["MOZ_OMX"]:
     EXPORTS += [
diff --git toolkit/moz.configure toolkit/moz.configure
index 82b5a59acf42..e2329560b42b 100644
--- toolkit/moz.configure.orig	2021-04-13 16:12:34.770032000 +0200
+++ toolkit/moz.configure	2021-04-18 00:03:41.432698000 +0200
@@ -538,7 +538,23 @@
         return True
 
 
-@depends(target, when=av1 & compile_environment)
+option("--with-system-av1",
+       help="Use system av1 (located with pkgconfig)")
+
+system_libaom_info = pkg_check_modules("MOZ_SYSTEM_LIBAOM", "aom >= 1.0.0",
+                                       when="--with-system-av1")
+
+system_libdav1d_info = pkg_check_modules("MOZ_SYSTEM_LIBDAV1D", "dav1d >= 0.1.1",
+                                         when="--with-system-av1")
+
+@depends(system_libaom_info, system_libdav1d_info)
+def system_av1(system_libaom_info, system_libdav1d_info):
+    has_av1_libs = False
+    if system_libaom_info and system_libdav1d_info:
+        has_av1_libs = True
+    return has_av1_libs
+
+@depends(target, when=av1 & depends(system_av1)(lambda v: not v) & compile_environment)
 def dav1d_asm(target):
     if target.cpu in ("aarch64", "x86", "x86_64"):
         return True
@@ -554,6 +570,7 @@
 set_define("MOZ_DAV1D_ASM", dav1d_asm)
 set_config("MOZ_AV1", av1)
 set_define("MOZ_AV1", av1)
+set_config("MOZ_SYSTEM_AV1", depends_if(system_av1)(lambda _: True))
 
 # Built-in fragmented MP4 support.
 # ==============================================================


[FILE:1325:patches/patch-bug1618914]
[Wayland] Fall back to ftruncate if posix_fallocate isn't supported by filesystem.

diff --git widget/gtk/WindowSurfaceWayland.cpp widget/gtk/WindowSurfaceWayland.cpp
index 9a73326399bd5..9e42a7f1c5d18 100644
--- widget/gtk/WindowSurfaceWayland.cpp
+++ widget/gtk/WindowSurfaceWayland.cpp
@@ -221,7 +221,9 @@ static int WaylandAllocateShmMemory(int aSize) {
   do {
     ret = posix_fallocate(fd, 0, aSize);
   } while (ret == EINTR);
-  if (ret != 0) {
+  if (ret == 0) {
+    return fd;
+  } else if (ret != ENODEV && ret != EINVAL && ret != EOPNOTSUPP) {
     NS_WARNING(
         nsPrintfCString("posix_fallocate() fails to allocate shm memory: %s",
                         strerror(ret))
@@ -229,7 +231,7 @@ static int WaylandAllocateShmMemory(int aSize) {
     close(fd);
     return -1;
   }
-#else
+#endif
   do {
     ret = ftruncate(fd, aSize);
   } while (ret < 0 && errno == EINTR);
@@ -240,7 +242,6 @@ static int WaylandAllocateShmMemory(int aSize) {
     close(fd);
     fd = -1;
   }
-#endif
 
   return fd;
 }
@@ -253,7 +254,7 @@ static bool WaylandReAllocateShmMemory(int aFd, int aSize) {
   do {
     errno = posix_fallocate(aFd, 0, aSize);
   } while (errno == EINTR);
-  if (errno != 0) {
+  if (errno != 0 && errno != ENODEV && errno != EINVAL && errno != EOPNOTSUPP) {
     return false;
   }
 #endif


[FILE:2015:patches/patch-bug1659612]
media/libcubeb/src/cubeb_alsa.c:613:9: error: implicitly declaring library function 'snprintf' with type 'int (char *, unsigned int, const char *, ...)' [-Werror,-Wimplicit-function-declaration]
    r = snprintf(node_name, sizeof(node_name), "pcm.%s", string);
        ^
media/libcubeb/src/cubeb_alsa.c:613:9: note: include the header <stdio.h> or explicitly provide a declaration for 'snprintf'
media/libcubeb/src/cubeb_alsa.c:1168:3: error: implicitly declaring library function 'alloca' with type 'void *(unsigned int)' [-Werror,-Wimplicit-function-declaration]
  snd_pcm_hw_params_alloca(&hw_params);
  ^
/usr/local/include/alsa/pcm.h:737:39: note: expanded from macro 'snd_pcm_hw_params_alloca'
#define snd_pcm_hw_params_alloca(ptr) __snd_alloca(ptr, snd_pcm_hw_params)
                                      ^
/usr/local/include/alsa/global.h:106:57: note: expanded from macro '__snd_alloca'
#define __snd_alloca(ptr,type) do { *ptr = (type##_t *) alloca(type##_sizeof()); memset(*ptr, 0, type##_sizeof()); } while (0)
                                                        ^
media/libcubeb/src/cubeb_alsa.c:1168:3: note: include the header <stdlib.h> or explicitly provide a declaration for 'alloca'
/usr/local/include/alsa/pcm.h:737:39: note: expanded from macro 'snd_pcm_hw_params_alloca'
#define snd_pcm_hw_params_alloca(ptr) __snd_alloca(ptr, snd_pcm_hw_params)
                                      ^
/usr/local/include/alsa/global.h:106:57: note: expanded from macro '__snd_alloca'
#define __snd_alloca(ptr,type) do { *ptr = (type##_t *) alloca(type##_sizeof()); memset(*ptr, 0, type##_sizeof()); } while (0)
                                                        ^
2 errors generated.

--- media/libcubeb/src/cubeb_alsa.c~
+++ media/libcubeb/src/cubeb_alsa.c
@@ -5,9 +5,7 @@
  * accompanying file LICENSE for details.
  */
 #undef NDEBUG
-#define _DEFAULT_SOURCE
-#define _BSD_SOURCE
-#define _XOPEN_SOURCE 500
+#define _GNU_SOURCE 1
 #include <pthread.h>
 #include <sys/time.h>
 #include <assert.h>


[FILE:2564:patches/patch-bug1664115]
Revert bug 1647717 to workaround the issue of occational tab crashing when
using any cubeb backends other than pulse-rust to play media. The loss of
such change will be that users will not be able to do profiling on threads
created by libcubeb.

--- dom/media/AudioStream.cpp.orig	2021-03-20 22:57:21.194862000 +0100
+++ dom/media/AudioStream.cpp	2021-03-20 23:00:50.527112000 +0100
@@ -26,7 +26,6 @@
 #endif
 #include "Tracing.h"
 #include "webaudio/blink/DenormalDisabler.h"
-#include "AudioThreadRegistry.h"
 
 // Use abort() instead of exception in SoundTouch.
 #define ST_NO_EXCEPTION_HANDLING 1
@@ -139,9 +138,7 @@
       mTimeStretcher(nullptr),
       mState(INITIALIZED),
       mDataSource(aSource),
-      mPrefillQuirk(false),
-      mAudioThreadId(0),
-      mSandboxed(CubebUtils::SandboxEnabled()) {}
+      mPrefillQuirk(false) {}
 
 AudioStream::~AudioStream() {
   LOG("deleted, state %d", mState);
@@ -565,21 +562,7 @@
       aWriter.Available());
 }
 
-bool AudioStream::CheckThreadIdChanged() {
-#ifdef MOZ_GECKO_PROFILER
-  auto id = profiler_current_thread_id();
-  if (id != mAudioThreadId) {
-    mAudioThreadId = id;
-    return true;
-  }
-#endif
-  return false;
-}
-
 long AudioStream::DataCallback(void* aBuffer, long aFrames) {
-  if (!mSandboxed && CheckThreadIdChanged()) {
-    CubebUtils::GetAudioThreadRegistry()->Register(mAudioThreadId);
-  }
   WebCore::DenormalDisabler disabler;
 
   TRACE_AUDIO_CALLBACK_BUDGET(aFrames, mAudioClock.GetInputRate());
@@ -635,9 +618,6 @@
   mDumpFile.Write(static_cast<const AudioDataValue*>(aBuffer),
                   aFrames * mOutChannels);
 
-  if (!mSandboxed && writer.Available() != 0) {
-    CubebUtils::GetAudioThreadRegistry()->Unregister(mAudioThreadId);
-  }
   return aFrames - writer.Available();
 }
 
--- dom/media/AudioStream.h.orig	2021-03-20 23:01:10.169773000 +0100
+++ dom/media/AudioStream.h	2021-03-20 23:01:56.622691000 +0100
@@ -294,7 +294,6 @@
 
   template <typename Function, typename... Args>
   int InvokeCubeb(Function aFunction, Args&&... aArgs);
-  bool CheckThreadIdChanged();
 
   // The monitor is held to protect all access to member variables.
   Monitor mMonitor;
@@ -328,9 +327,6 @@
   // the default device is used. It is set
   // during the Init() in decoder thread.
   RefPtr<AudioDeviceInfo> mSinkInfo;
-  /* Contains the id of the audio thread, from profiler_get_thread_id. */
-  std::atomic<int> mAudioThreadId;
-  const bool mSandboxed = false;
 
   MozPromiseHolder<MediaSink::EndedPromise> mEndedPromise;
   Atomic<bool> mPlaybackComplete;


[FILE:6500:patches/patch-bug1676134]
Enable Pipewire on BSDs

diff --git third_party/libwebrtc/webrtc/modules/desktop_capture/desktop_capture_generic_gn/moz.build third_party/libwebrtc/webrtc/modules/desktop_capture/desktop_capture_generic_gn/moz.build
index a0e116195e0e..cbe27e94108b 100644
--- third_party/libwebrtc/webrtc/modules/desktop_capture/desktop_capture_generic_gn/moz.build
+++ third_party/libwebrtc/webrtc/modules/desktop_capture/desktop_capture_generic_gn/moz.build
@@ -87,8 +87,13 @@ if CONFIG["OS_TARGET"] == "DragonFly":
     DEFINES["USE_X11"] = "1"
     DEFINES["WEBRTC_BSD"] = True
     DEFINES["WEBRTC_POSIX"] = True
+    DEFINES["WEBRTC_USE_PIPEWIRE"] = True
     DEFINES["_FILE_OFFSET_BITS"] = "64"
 
+    LOCAL_INCLUDES += [
+        "/third_party/pipewire/"
+    ]
+
     OS_LIBS += [
         "X11",
         "X11-xcb",
@@ -103,11 +108,14 @@ if CONFIG["OS_TARGET"] == "DragonFly":
     ]
 
     UNIFIED_SOURCES += [
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/base_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/desktop_device_info_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/mouse_cursor_monitor_x11.cc",
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/screen_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/screen_capturer_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/shared_x_display.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/shared_x_util.cc",
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_capturer_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_finder_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_list_utils.cc",
@@ -124,8 +132,13 @@ if CONFIG["OS_TARGET"] == "FreeBSD":
     DEFINES["USE_X11"] = "1"
     DEFINES["WEBRTC_BSD"] = True
     DEFINES["WEBRTC_POSIX"] = True
+    DEFINES["WEBRTC_USE_PIPEWIRE"] = True
     DEFINES["_FILE_OFFSET_BITS"] = "64"
 
+    LOCAL_INCLUDES += [
+        "/third_party/pipewire/"
+    ]
+
     OS_LIBS += [
         "X11",
         "X11-xcb",
@@ -140,11 +153,14 @@ if CONFIG["OS_TARGET"] == "FreeBSD":
     ]
 
     UNIFIED_SOURCES += [
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/base_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/desktop_device_info_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/mouse_cursor_monitor_x11.cc",
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/screen_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/screen_capturer_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/shared_x_display.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/shared_x_util.cc",
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_capturer_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_finder_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_list_utils.cc",
@@ -200,8 +216,13 @@ if CONFIG["OS_TARGET"] == "NetBSD":
     DEFINES["USE_X11"] = "1"
     DEFINES["WEBRTC_BSD"] = True
     DEFINES["WEBRTC_POSIX"] = True
+    DEFINES["WEBRTC_USE_PIPEWIRE"] = True
     DEFINES["_FILE_OFFSET_BITS"] = "64"
 
+    LOCAL_INCLUDES += [
+        "/third_party/pipewire/"
+    ]
+
     OS_LIBS += [
         "X11",
         "X11-xcb",
@@ -216,11 +237,14 @@ if CONFIG["OS_TARGET"] == "NetBSD":
     ]
 
     UNIFIED_SOURCES += [
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/base_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/desktop_device_info_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/mouse_cursor_monitor_x11.cc",
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/screen_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/screen_capturer_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/shared_x_display.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/shared_x_util.cc",
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_capturer_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_finder_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_list_utils.cc",
@@ -237,8 +261,13 @@ if CONFIG["OS_TARGET"] == "OpenBSD":
     DEFINES["USE_X11"] = "1"
     DEFINES["WEBRTC_BSD"] = True
     DEFINES["WEBRTC_POSIX"] = True
+    DEFINES["WEBRTC_USE_PIPEWIRE"] = True
     DEFINES["_FILE_OFFSET_BITS"] = "64"
 
+    LOCAL_INCLUDES += [
+        "/third_party/pipewire/"
+    ]
+
     OS_LIBS += [
         "X11",
         "X11-xcb",
@@ -253,11 +282,14 @@ if CONFIG["OS_TARGET"] == "OpenBSD":
     ]
 
     UNIFIED_SOURCES += [
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/base_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/desktop_device_info_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/mouse_cursor_monitor_x11.cc",
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/screen_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/screen_capturer_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/shared_x_display.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/shared_x_util.cc",
+        "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_capturer_pipewire.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_capturer_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_finder_x11.cc",
         "/third_party/libwebrtc/webrtc/modules/desktop_capture/linux/window_list_utils.cc",


[FILE:14717:patches/patch-bug1680982]
commit 3204512f58a1
Author: Greg V <greg@unrelenting.technology>
Date:   Sun Dec 6 22:07:00 2020 +0000

    Bug 1680982 - Use evdev instead of the Linux legacy joystick API for gamepads
    
    Using evdev is a prerequisite for adding rumble (haptic feedback) and LED support.
    
    - BTN_GAMEPAD semantic buttons are interpreted directly,
    since all kernel drivers are supposed to use them correctly:
    https://www.kernel.org/doc/html/latest/input/gamepad.html
    - BTN_JOYSTICK legacy style numbered buttons use the model specific remappers
    - we support even strange devices that combine both styles in one device
    - the Linux gamepad module is enabled on FreeBSD and DragonFly, because
    these kernels provide evdev, and libudev-devd provides enough of libudev
    (evdev headers are provided by the devel/evdev-proto package)
    
    Differential Revision: https://phabricator.services.mozilla.com/D98868
---
 dom/gamepad/linux/LinuxGamepad.cpp | 262 ++++++++++++++++++++++++++++++++-----
 dom/gamepad/moz.build              |   2 +-
 2 files changed, 229 insertions(+), 35 deletions(-)

diff --git dom/gamepad/linux/LinuxGamepad.cpp dom/gamepad/linux/LinuxGamepad.cpp
index deee47b9d267..31f0aad7ae4a 100644
--- dom/gamepad/linux/LinuxGamepad.cpp
+++ dom/gamepad/linux/LinuxGamepad.cpp
@@ -5,15 +5,16 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /*
- * LinuxGamepadService: A Linux backend for the GamepadService.
- * Derived from the kernel documentation at
- * http://www.kernel.org/doc/Documentation/input/joystick-api.txt
+ * LinuxGamepadService: An evdev backend for the GamepadService.
+ *
+ * Ref: https://www.kernel.org/doc/html/latest/input/gamepad.html
  */
 #include <algorithm>
+#include <unordered_map>
 #include <cstddef>
 
 #include <glib.h>
-#include <linux/joystick.h>
+#include <linux/input.h>
 #include <stdio.h>
 #include <stdint.h>
 #include <sys/ioctl.h>
@@ -21,10 +22,14 @@
 #include "nscore.h"
 #include "mozilla/dom/GamepadHandle.h"
 #include "mozilla/dom/GamepadPlatformService.h"
+#include "mozilla/dom/GamepadRemapping.h"
 #include "mozilla/Tainting.h"
 #include "mozilla/UniquePtr.h"
 #include "udev.h"
 
+#define LONG_BITS (sizeof(long) * 8)
+#define NLONGS(x) (((x) + LONG_BITS - 1) / LONG_BITS)
+
 namespace {
 
 using namespace mozilla::dom;
@@ -36,19 +41,29 @@ using mozilla::udev_list_entry;
 using mozilla::udev_monitor;
 using mozilla::UniquePtr;
 
-static const float kMaxAxisValue = 32767.0;
-static const char kJoystickPath[] = "/dev/input/js";
+static const char kEvdevPath[] = "/dev/input/event";
+
+static inline bool TestBit(const unsigned long* arr, int bit) {
+  return !!(arr[bit / LONG_BITS] & (1LL << (bit % LONG_BITS)));
+}
+
+static inline double ScaleAxis(const input_absinfo& info, int value) {
+  return 2.0 * (value - info.minimum) / (double)(info.maximum - info.minimum) -
+         1.0;
+}
 
 // TODO: should find a USB identifier for each device so we can
 // provide something that persists across connect/disconnect cycles.
-typedef struct {
+struct Gamepad {
   GamepadHandle handle;
-  guint source_id;
-  int numAxes;
-  int numButtons;
-  char idstring[256];
-  char devpath[PATH_MAX];
-} Gamepad;
+  RefPtr<GamepadRemapper> remapper = nullptr;
+  guint source_id = UINT_MAX;
+  char idstring[256] = {0};
+  char devpath[PATH_MAX] = {0};
+  uint8_t key_map[KEY_MAX] = {0};
+  uint8_t abs_map[ABS_MAX] = {0};
+  std::unordered_map<uint16_t, input_absinfo> abs_info;
+};
 
 class LinuxGamepadService {
  public:
@@ -66,7 +81,7 @@ class LinuxGamepadService {
   bool is_gamepad(struct udev_device* dev);
   void ReadUdevChange();
 
-  // handler for data from /dev/input/jsN
+  // handler for data from /dev/input/eventN
   static gboolean OnGamepadData(GIOChannel* source, GIOCondition condition,
                                 gpointer data);
 
@@ -114,8 +129,14 @@ void LinuxGamepadService::AddDevice(struct udev_device* dev) {
   g_io_channel_set_encoding(channel, nullptr, nullptr);
   g_io_channel_set_buffered(channel, FALSE);
   int fd = g_io_channel_unix_get_fd(channel);
+
+  struct input_id id {};
+  if (ioctl(fd, EVIOCGID, &id) == -1) {
+    return;
+  }
+
   char name[128];
-  if (ioctl(fd, JSIOCGNAME(sizeof(name)), &name) == -1) {
+  if (ioctl(fd, EVIOCGNAME(sizeof(name)), &name) == -1) {
     strcpy(name, "unknown");
   }
   const char* vendor_id =
@@ -131,20 +152,86 @@ void LinuxGamepadService::AddDevice(struct udev_device* dev) {
       model_id = mUdev.udev_device_get_sysattr_value(parent, "id/product");
     }
   }
+  if (!vendor_id && id.vendor != 0) {
+    vendor_id = (const char*)alloca(5);
+    snprintf((char*)vendor_id, 5, "%04x", id.vendor);
+  }
+  if (!model_id && id.product != 0) {
+    model_id = (const char*)alloca(5);
+    snprintf((char*)model_id, 5, "%04x", id.product);
+  }
   snprintf(gamepad->idstring, sizeof(gamepad->idstring), "%s-%s-%s",
            vendor_id ? vendor_id : "unknown", model_id ? model_id : "unknown",
            name);
 
   char numAxes = 0, numButtons = 0;
-  ioctl(fd, JSIOCGAXES, &numAxes);
-  gamepad->numAxes = numAxes;
-  ioctl(fd, JSIOCGBUTTONS, &numButtons);
-  gamepad->numButtons = numButtons;
+  unsigned long key_bits[NLONGS(KEY_CNT)] = {0};
+  unsigned long abs_bits[NLONGS(ABS_CNT)] = {0};
+  ioctl(fd, EVIOCGBIT(EV_KEY, sizeof(key_bits)), key_bits);
+  ioctl(fd, EVIOCGBIT(EV_ABS, sizeof(abs_bits)), abs_bits);
+
+  /* Here, we try to support even strange cases where proper semantic
+   * BTN_GAMEPAD button are combined with arbitrary extra buttons. */
+  for (uint16_t i = BTN_JOYSTICK; i < KEY_MAX; i++) {
+    /* Do not map semantic buttons, they are handled directly */
+    if (i == BTN_GAMEPAD) {
+      i = BTN_THUMBR + 1;
+      continue;
+    }
+    if (i == BTN_DPAD_UP) {
+      i = BTN_DPAD_RIGHT + 1;
+      continue;
+    }
+    if (TestBit(key_bits, i)) {
+      gamepad->key_map[i] = numButtons++;
+    }
+  }
+  for (uint16_t i = 0; i < BTN_JOYSTICK; i++) {
+    if (TestBit(key_bits, i)) {
+      gamepad->key_map[i] = numButtons++;
+    }
+  }
+  for (uint16_t i = BTN_GAMEPAD; i <= BTN_THUMBR; i++) {
+    /* But if any semantic event exists, count them all */
+    if (TestBit(key_bits, i)) {
+      numButtons += BUTTON_INDEX_COUNT;
+      break;
+    }
+  }
+  for (uint16_t i = 0; i < ABS_MAX; ++i) {
+    if (TestBit(abs_bits, i)) {
+      gamepad->abs_info.emplace(i, input_absinfo{});
+      if (ioctl(fd, EVIOCGABS(i), &gamepad->abs_info[i]) < 0) {
+        continue;
+      }
+      if (gamepad->abs_info[i].minimum == gamepad->abs_info[i].maximum) {
+        gamepad->abs_info.erase(i);
+        continue;
+      }
+      gamepad->abs_map[i] = numAxes++;
+    }
+  }
+
+  if (numAxes == 0) {
+    NS_WARNING("Gamepad with zero axes detected?");
+  }
+  if (numButtons == 0) {
+    NS_WARNING("Gamepad with zero buttons detected?");
+  }
+
+  bool defaultRemapper = false;
+  RefPtr<GamepadRemapper> remapper =
+      GetGamepadRemapper(id.vendor, id.product, defaultRemapper);
+  MOZ_ASSERT(remapper);
+  remapper->SetAxisCount(numAxes);
+  remapper->SetButtonCount(numButtons);
 
   gamepad->handle = service->AddGamepad(
-      gamepad->idstring, mozilla::dom::GamepadMappingType::_empty,
-      mozilla::dom::GamepadHand::_empty, gamepad->numButtons, gamepad->numAxes,
-      0, 0, 0);  // TODO: Bug 680289, implement gamepad haptics for Linux.
+      gamepad->idstring, remapper->GetMappingType(), GamepadHand::_empty,
+      remapper->GetButtonCount(), remapper->GetAxisCount(), 0,
+      remapper->GetLightIndicatorCount(), remapper->GetTouchEventCount());
+  gamepad->remapper = remapper.forget();
+  // TODO: Bug 680289, implement gamepad haptics for Linux.
   // TODO: Bug 1523355, implement gamepad lighindicator and touch for Linux.
 
   gamepad->source_id =
@@ -257,7 +344,7 @@ bool LinuxGamepadService::is_gamepad(struct udev_device* dev) {
   if (!devpath) {
     return false;
   }
-  if (strncmp(kJoystickPath, devpath, sizeof(kJoystickPath) - 1) != 0) {
+  if (strncmp(kEvdevPath, devpath, sizeof(kEvdevPath) - 1) != 0) {
     return false;
   }
 
@@ -292,7 +379,7 @@ gboolean LinuxGamepadService::OnGamepadData(GIOChannel* source,
   if (condition & G_IO_ERR || condition & G_IO_HUP) return FALSE;
 
   while (true) {
-    struct js_event event;
+    struct input_event event {};
     gsize count;
     GError* err = nullptr;
     if (g_io_channel_read_chars(source, (gchar*)&event, sizeof(event), &count,
@@ -301,18 +388,125 @@ gboolean LinuxGamepadService::OnGamepadData(GIOChannel* source,
       break;
     }
 
-    // TODO: store device state?
-    if (event.type & JS_EVENT_INIT) {
-      continue;
-    }
-
     switch (event.type) {
-      case JS_EVENT_BUTTON:
-        service->NewButtonEvent(gamepad->handle, event.number, !!event.value);
+      case EV_KEY:
+        switch (event.code) {
+          /* The gamepad events are meaningful, and according to
+           * https://www.kernel.org/doc/html/latest/input/gamepad.html
+           * "No other devices, that do not look/feel like a gamepad, shall
+           * report these events" */
+          case BTN_SOUTH:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_PRIMARY,
+                                    !!event.value);
+            break;
+          case BTN_EAST:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_SECONDARY,
+                                    !!event.value);
+            break;
+          case BTN_NORTH:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_QUATERNARY,
+                                    !!event.value);
+            break;
+          case BTN_WEST:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_TERTIARY,
+                                    !!event.value);
+            break;
+          case BTN_TL:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_LEFT_SHOULDER,
+                                    !!event.value);
+            break;
+          case BTN_TR:
+            service->NewButtonEvent(gamepad->handle,
+                                    BUTTON_INDEX_RIGHT_SHOULDER, !!event.value);
+            break;
+          case BTN_TL2:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_LEFT_TRIGGER,
+                                    !!event.value);
+            break;
+          case BTN_TR2:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_RIGHT_TRIGGER,
+                                    !!event.value);
+            break;
+          case BTN_SELECT:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_BACK_SELECT,
+                                    !!event.value);
+            break;
+          case BTN_START:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_START,
+                                    !!event.value);
+            break;
+          case BTN_MODE:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_META,
+                                    !!event.value);
+            break;
+          case BTN_THUMBL:
+            service->NewButtonEvent(
+                gamepad->handle, BUTTON_INDEX_LEFT_THUMBSTICK, !!event.value);
+            break;
+          case BTN_THUMBR:
+            service->NewButtonEvent(
+                gamepad->handle, BUTTON_INDEX_RIGHT_THUMBSTICK, !!event.value);
+            break;
+          case BTN_DPAD_UP:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_DPAD_UP,
+                                    !!event.value);
+            break;
+          case BTN_DPAD_DOWN:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_DPAD_DOWN,
+                                    !!event.value);
+            break;
+          case BTN_DPAD_LEFT:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_DPAD_LEFT,
+                                    !!event.value);
+            break;
+          case BTN_DPAD_RIGHT:
+            service->NewButtonEvent(gamepad->handle, BUTTON_INDEX_DPAD_RIGHT,
+                                    !!event.value);
+            break;
+          default:
+            /* For non-gamepad events, this is the "anything goes" numbered
+             * handling that should be handled with remappers. */
+            gamepad->remapper->RemapButtonEvent(
+                gamepad->handle, gamepad->key_map[event.code], !!event.value);
+            break;
+        }
         break;
-      case JS_EVENT_AXIS:
-        service->NewAxisMoveEvent(gamepad->handle, event.number,
-                                  ((float)event.value) / kMaxAxisValue);
+      case EV_ABS:
+        if (!gamepad->abs_info.count(event.code)) continue;
+        switch (event.code) {
+          case ABS_HAT0X:
+            service->NewButtonEvent(
+                gamepad->handle, BUTTON_INDEX_DPAD_LEFT,
+                AxisNegativeAsButton(
+                    ScaleAxis(gamepad->abs_info[event.code], event.value)));
+            service->NewButtonEvent(
+                gamepad->handle, BUTTON_INDEX_DPAD_RIGHT,
+                AxisPositiveAsButton(
+                    ScaleAxis(gamepad->abs_info[event.code], event.value)));
+            break;
+          case ABS_HAT0Y:
+            service->NewButtonEvent(
+                gamepad->handle, BUTTON_INDEX_DPAD_UP,
+                AxisNegativeAsButton(
+                    ScaleAxis(gamepad->abs_info[event.code], event.value)));
+            service->NewButtonEvent(
+                gamepad->handle, BUTTON_INDEX_DPAD_DOWN,
+                AxisPositiveAsButton(
+                    ScaleAxis(gamepad->abs_info[event.code], event.value)));
+            break;
+          case ABS_HAT1X:
+          case ABS_HAT1Y:
+          case ABS_HAT2X:
+          case ABS_HAT2Y:
+          case ABS_HAT3X:
+          case ABS_HAT3Y:
+            break;
+          default:
+            gamepad->remapper->RemapAxisMoveEvent(
+                gamepad->handle, gamepad->abs_map[event.code],
+                ScaleAxis(gamepad->abs_info[event.code], event.value));
+            break;
+        }
         break;
     }
   }
diff --git dom/gamepad/moz.build dom/gamepad/moz.build
index 5f55d5a95e96..544b7f927736 100644
--- dom/gamepad/moz.build
+++ dom/gamepad/moz.build
@@ -59,7 +59,7 @@ elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "windows":
     UNIFIED_SOURCES += ["windows/WindowsGamepad.cpp"]
 elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "android":
     UNIFIED_SOURCES += ["android/AndroidGamepad.cpp"]
-elif CONFIG["OS_ARCH"] == "Linux":
+elif CONFIG["OS_ARCH"] in ("Linux", "FreeBSD", "DragonFly"):
     UNIFIED_SOURCES += ["linux/LinuxGamepad.cpp"]
 else:
     UNIFIED_SOURCES += ["fallback/FallbackGamepad.cpp"]


[FILE:9827:patches/patch-bug847568]
# Allow building against system-wide graphite2/harfbuzz.

diff --git config/system-headers.mozbuild config/system-headers.mozbuild
index 7620b4d00623..09d3db5ca8c0 100644
--- config/system-headers.mozbuild
+++ config/system-headers.mozbuild
@@ -1292,6 +1292,19 @@ if CONFIG['MOZ_ENABLE_LIBPROXY']:
         'proxy.h',
     ]
 
+if CONFIG['MOZ_SYSTEM_GRAPHITE2']:
+    system_headers += [
+        'graphite2/Font.h',
+        'graphite2/Segment.h',
+    ]
+
+if CONFIG['MOZ_SYSTEM_HARFBUZZ']:
+    system_headers += [
+        'harfbuzz/hb-glib.h',
+        'harfbuzz/hb-ot.h',
+        'harfbuzz/hb.h',
+    ]
+
 if CONFIG['MOZ_SYSTEM_LIBVPX']:
     system_headers += [
         'vpx_mem/vpx_mem.h',
diff --git dom/base/moz.build dom/base/moz.build
index 8e19020315ae..2fcdbb6f7b42 100644
--- dom/base/moz.build
+++ dom/base/moz.build
@@ -546,6 +546,9 @@ if CONFIG["MOZ_BUILD_APP"] in ["browser", "mobile/android", "xulrunner"]:
 if CONFIG["MOZ_X11"]:
     CXXFLAGS += CONFIG["TK_CFLAGS"]
 
+if CONFIG["MOZ_SYSTEM_HARFBUZZ"]:
+    CXXFLAGS += CONFIG["MOZ_HARFBUZZ_CFLAGS"]
+
 GeneratedFile(
     "UseCounterList.h",
     script="gen-usecounters.py",
diff --git gfx/graphite2/geckoextra/moz.build gfx/graphite2/geckoextra/moz.build
new file mode 100644
index 0000000000000..24e8d7a03274a
--- /dev/null
+++ gfx/graphite2/geckoextra/moz.build
@@ -0,0 +1,21 @@
+# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+EXPORTS.graphite2 += [
+    'include/GraphiteExtra.h',
+    'include/GraphiteStructsForRLBox.h',
+]
+
+UNIFIED_SOURCES += [
+    '../geckoextra/src/GraphiteExtra.cpp',
+]
+
+CXXFLAGS += CONFIG['MOZ_GRAPHITE2_CFLAGS']
+
+# Match bundled graphite2 configuration
+AllowCompilerWarnings()
+
+FINAL_LIBRARY = 'gkmedias'
diff --git gfx/graphite2/moz-gr-update.sh gfx/graphite2/moz-gr-update.sh
index faaab1b17971..04eff5f09882 100644
--- gfx/graphite2/moz-gr-update.sh
+++ gfx/graphite2/moz-gr-update.sh
@@ -1,6 +1,7 @@
 #!/bin/bash
 
 # Script used to update the Graphite2 library in the mozilla source tree
+# and bump version for --with-system-graphite2
 
 # This script lives in gfx/graphite2, along with the library source,
 # but must be run from the top level of the mozilla-central tree.
@@ -37,12 +38,16 @@ echo "See" $0 "for update procedure." >> gfx/graphite2/README.mozilla
 #find gfx/graphite2/ -name "*.cpp" -exec perl -p -i -e "s/<cstdio>/<stdio.h>/;s/Windows.h/windows.h/;" {} \;
 #find gfx/graphite2/ -name "*.h" -exec perl -p -i -e "s/<cstdio>/<stdio.h>/;s/Windows.h/windows.h/;" {} \;
 
+# chase version for --with-system-graphite2
+perl -p -i -e "s/[0-9]+\,[0-9]+\,[0-9]+/$RELEASE/ and tr/./,/ \
+  if /GR2_VERSION_REQUIRE/" old-configure.in
+
 # summarize what's been touched
 echo Updated to $RELEASE.
 echo Here is what changed in the gfx/graphite2 directory:
 echo
 
-hg stat gfx/graphite2
+hg stat old-configure.in gfx/graphite2
 
 echo
 echo If gfx/graphite2/src/files.mk has changed, please make corresponding
diff --git gfx/harfbuzz/README-mozilla gfx/harfbuzz/README-mozilla
index 22c76a7df020..a01490bd49ee 100644
--- gfx/harfbuzz/README-mozilla
+++ gfx/harfbuzz/README-mozilla
@@ -15,3 +15,8 @@ from within the gfx/harfbuzz directory.
 
 If the collection of source files changes, manual updates to moz.build may be
 needed as we don't use the upstream makefiles.
+
+The in-tree copy may be omitted during build by --with-system-harfbuzz.
+Make sure to keep pkg-config version check within toolkit/moz.configure in sync
+with checkout version or increment latest tag by one if it's not based
+on upstream release.
diff --git gfx/moz.build gfx/moz.build
index 771f652e837a..3b358d84e384 100644
--- gfx/moz.build
+++ gfx/moz.build
@@ -13,6 +13,14 @@ with Files("wr/**"):
 if CONFIG["MOZ_TREE_CAIRO"]:
     DIRS += ["cairo"]
 
+if CONFIG["MOZ_SYSTEM_GRAPHITE2"]:
+    DIRS += ["graphite2/geckoextra"]
+else:
+    DIRS += ["graphite2/src" ]
+
+if not CONFIG["MOZ_SYSTEM_HARFBUZZ"]:
+    DIRS += ["harfbuzz/src"]
+
 DIRS += [
     "2d",
     "ycbcr",
@@ -21,8 +29,6 @@ DIRS += [
     "qcms",
     "gl",
     "layers",
-    "graphite2/src",
-    "harfbuzz/src",
     "ots/src",
     "thebes",
     "ipc",
diff --git gfx/skia/generate_mozbuild.py gfx/skia/generate_mozbuild.py
index e06ae3457a47..93faa61594a3 100755
--- gfx/skia/generate_mozbuild.py
+++ gfx/skia/generate_mozbuild.py
@@ -98,6 +98,9 @@ if CONFIG['CC_TYPE'] in ('clang', 'clang-cl'):
         '-Wno-unused-private-field',
     ]
 
+if CONFIG['MOZ_SYSTEM_HARFBUZZ']:
+    CXXFLAGS += CONFIG['MOZ_HARFBUZZ_CFLAGS']
+
 if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'android'):
     CXXFLAGS += CONFIG['MOZ_CAIRO_CFLAGS']
     CXXFLAGS += CONFIG['CAIRO_FT_CFLAGS']
diff --git gfx/skia/moz.build gfx/skia/moz.build
index 2118677ca3a8..e4978b413784 100644
--- gfx/skia/moz.build
+++ gfx/skia/moz.build
@@ -490,6 +490,9 @@ if CONFIG['CC_TYPE'] in ('clang', 'clang-cl'):
         '-Wno-unused-private-field',
     ]
 
+if CONFIG['MOZ_SYSTEM_HARFBUZZ']:
+    CXXFLAGS += CONFIG['MOZ_HARFBUZZ_CFLAGS']
+
 if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'android'):
     CXXFLAGS += CONFIG['MOZ_CAIRO_CFLAGS']
     CXXFLAGS += CONFIG['CAIRO_FT_CFLAGS']
diff --git gfx/thebes/moz.build gfx/thebes/moz.build
index 56f1b9fe3f4b..0ac1100b0df3 100644
--- gfx/thebes/moz.build
+++ gfx/thebes/moz.build
@@ -287,7 +287,13 @@ if CONFIG["MOZ_WAYLAND"]:
 
 LOCAL_INCLUDES += CONFIG["SKIA_INCLUDES"]
 
-DEFINES["GRAPHITE2_STATIC"] = True
+if CONFIG["MOZ_SYSTEM_GRAPHITE2"]:
+    CXXFLAGS += CONFIG["MOZ_GRAPHITE2_CFLAGS"]
+else:
+    DEFINES["GRAPHITE2_STATIC"] = True
+
+if CONFIG["MOZ_SYSTEM_HARFBUZZ"]:
+    CXXFLAGS += CONFIG["MOZ_HARFBUZZ_CFLAGS"]
 
 if CONFIG["CC_TYPE"] == "clang":
     # Suppress warnings from Skia header files.
diff --git intl/unicharutil/util/moz.build intl/unicharutil/util/moz.build
index cb1233c56d7e..06fb1f9f174b 100644
--- intl/unicharutil/util/moz.build
+++ intl/unicharutil/util/moz.build
@@ -25,4 +25,7 @@ UNIFIED_SOURCES += [
     "nsUnicodeProperties.cpp",
 ]
 
+if CONFIG["MOZ_SYSTEM_HARFBUZZ"]:
+    CXXFLAGS += CONFIG["MOZ_HARFBUZZ_CFLAGS"]
+
 FINAL_LIBRARY = "xul"
diff --git netwerk/dns/moz.build netwerk/dns/moz.build
index 79c26e3e7001..c4d93bc5f7dc 100644
--- netwerk/dns/moz.build
+++ netwerk/dns/moz.build
@@ -105,3 +105,6 @@ USE_LIBS += ["icu"]
 
 if CONFIG["CC_TYPE"] in ("clang", "gcc"):
     CXXFLAGS += ["-Wno-error=shadow"]
+
+if CONFIG["MOZ_SYSTEM_HARFBUZZ"]:
+    CXXFLAGS += CONFIG["MOZ_HARFBUZZ_CFLAGS"]
diff --git old-configure.in old-configure.in
index 95a58b634593..b614eef85c89 100644
--- old-configure.in
+++ old-configure.in
@@ -2303,6 +2303,27 @@ dnl ========================================================
 
 AC_SUBST(MOZ_LINUX_32_SSE2_STARTUP_ERROR)
 
+dnl ========================================================
+dnl Check for graphite2
+dnl ========================================================
+if test -n "$MOZ_SYSTEM_GRAPHITE2"; then
+    dnl graphite2.pc has bogus version, check manually
+    _SAVE_CFLAGS=$CFLAGS
+    CFLAGS="$CFLAGS $MOZ_GRAPHITE2_CFLAGS"
+    AC_TRY_COMPILE([ #include <graphite2/Font.h>
+                     #define GR2_VERSION_REQUIRE(major,minor,bugfix)  \
+                             ( GR2_VERSION_MAJOR * 10000 + GR2_VERSION_MINOR \
+                               * 100 + GR2_VERSION_BUGFIX >= \
+                               (major) * 10000 + (minor) * 100 + (bugfix) )
+                   ], [
+                     #if !GR2_VERSION_REQUIRE(1,3,14)
+                     #error "Insufficient graphite2 version."
+                     #endif
+                   ], [],
+                   [AC_MSG_ERROR([--with-system-graphite2 requested but no working libgraphite2 found])])
+    CFLAGS=$_SAVE_CFLAGS
+fi
+
 dnl ========================================================
 dnl Check for pixman and cairo
 dnl ========================================================
diff --git toolkit/library/moz.build toolkit/library/moz.build
index 24f940e1ed7e..079a575adec3 100644
--- toolkit/library/moz.build
+++ toolkit/library/moz.build
@@ -247,6 +247,12 @@ if CONFIG["MOZ_SYSTEM_PNG"]:
 if CONFIG["MOZ_SYSTEM_WEBP"]:
     OS_LIBS += CONFIG["MOZ_WEBP_LIBS"]
 
+if CONFIG["MOZ_SYSTEM_GRAPHITE2"]:
+    OS_LIBS += CONFIG["MOZ_GRAPHITE2_LIBS"]
+
+if CONFIG["MOZ_SYSTEM_HARFBUZZ"]:
+    OS_LIBS += CONFIG["MOZ_HARFBUZZ_LIBS"]
+
 if CONFIG["MOZ_SYSTEM_LIBEVENT"]:
     OS_LIBS += CONFIG["MOZ_LIBEVENT_LIBS"]
 
diff --git toolkit/moz.configure toolkit/moz.configure
index 9297e4d6f501..d8e273887e4b 100644
--- toolkit/moz.configure
+++ toolkit/moz.configure
@@ -1055,6 +1055,25 @@ set_config("FT2_LIBS", ft2_info.libs)
 add_old_configure_assignment("FT2_LIBS", ft2_info.libs)
 add_old_configure_assignment("FT2_CFLAGS", ft2_info.cflags)
 
+# Graphite2
+# ==============================================================
+option("--with-system-graphite2",
+       help="Use system graphite2 (located with pkgconfig)")
+
+system_graphite2 = pkg_check_modules("MOZ_GRAPHITE2", "graphite2",
+                                     when="--with-system-graphite2")
+
+set_config("MOZ_SYSTEM_GRAPHITE2", depends_if(system_graphite2)(lambda _: True))
+
+# HarfBuzz
+# ==============================================================
+option("--with-system-harfbuzz",
+       help="Use system harfbuzz (located with pkgconfig)")
+
+system_harfbuzz = pkg_check_modules("MOZ_HARFBUZZ", "harfbuzz >= 2.7.4",
+                                    when="--with-system-harfbuzz")
+
+set_config("MOZ_SYSTEM_HARFBUZZ", depends_if(system_harfbuzz)(lambda _: True))
 
 # Remote agent
 # (partial implementation of Chromium Remote Debugging Protocol)


[FILE:335:patches/patch-config_makefiles_rust.mk]
--- config/makefiles/rust.mk.orig	2020-07-08 19:27:08 UTC
+++ config/makefiles/rust.mk
@@ -61,7 +61,7 @@ ifndef MOZ_DEBUG_RUST
 # Enable link-time optimization for release builds, but not when linking
 # gkrust_gtest.
 ifeq (,$(findstring gkrust_gtest,$(RUST_LIBRARY_FILE)))
-cargo_rustc_flags += -Clto
+do_nada =
 endif
 endif
 endif


[FILE:853:patches/patch-dom_media_flac_FlacDecoder.cpp]
Enable FLAC on platforms without ffvpx like powerpc*

diff --git dom/media/flac/FlacDecoder.cpp dom/media/flac/FlacDecoder.cpp
index 53fc3c9937f7..b23771ab80fa 100644
--- dom/media/flac/FlacDecoder.cpp
+++ dom/media/flac/FlacDecoder.cpp
@@ -7,6 +7,7 @@
 #include "FlacDecoder.h"
 #include "MediaContainerType.h"
 #include "mozilla/StaticPrefs_media.h"
+#include "PDMFactory.h"
 
 namespace mozilla {
 
@@ -14,6 +15,11 @@ namespace mozilla {
 bool FlacDecoder::IsEnabled() {
 #ifdef MOZ_FFVPX
   return StaticPrefs::media_flac_enabled();
+#elif defined(MOZ_FFMPEG)
+  RefPtr<PDMFactory> platform = new PDMFactory();
+  return StaticPrefs::media_flac_enabled() &&
+         platform->SupportsMimeType("audio/flac"_ns,
+                                    /* DecoderDoctorDiagnostics* */ nullptr);
 #else
   // Until bug 1295886 is fixed.
   return false;


[FILE:914:patches/patch-env-api-keys]
# Accept API keys from environment like before bug 1294585

--- build/moz.configure/keyfiles.configure
+++ build/moz.configure/keyfiles.configure
@@ -19,6 +19,7 @@ def keyfile(desc, default=None, help=None, callback=lambda x: x):
     @checking("for the %s key" % desc, lambda x: x and x is not no_key)
     @imports(_from="__builtin__", _import="open")
     @imports(_from="__builtin__", _import="IOError")
+    @imports(_from="os", _import="environ")
     def keyfile(value):
         if value:
             try:
@@ -29,7 +30,7 @@ def keyfile(desc, default=None, help=None, callback=lambda x: x):
                     raise FatalCheckError("'%s' is empty." % value[0])
             except IOError as e:
                 raise FatalCheckError("'%s': %s." % (value[0], e.strerror))
-        return no_key
+        return environ.get("MOZ_%s_KEY" % desc.upper().replace(" ", "_")) or no_key
 
     return keyfile
 


[FILE:2142:patches/patch-freebsd11.3]
Drop after FreeBSD 11.3 EOL around 2020-09-20.
https://svnweb.freebsd.org/changeset/base/351766

mozglue/baseprofiler/core/shared-libraries-linux.cc:374:34: error: use of undeclared
      identifier 'NT_GNU_BUILD_ID'
      if (note_header->n_type == NT_GNU_BUILD_ID) break;
                                 ^
In file included from Unified_cpp_mozglue_baseprofiler0.cpp:137:
mozglue/baseprofiler/lul/LulElf.cpp:762:32: error: use of undeclared identifier
      'NT_GNU_BUILD_ID'
    if (note_header->n_type == NT_GNU_BUILD_ID) break;
                               ^
In file included from Unified_cpp_tools_profiler1.cpp:38:
tools/profiler/lul/LulElf.cpp:776:32: error: use of undeclared identifier
      'NT_GNU_BUILD_ID'
    if (note_header->n_type == NT_GNU_BUILD_ID) break;
                               ^

--- mozglue/baseprofiler/core/shared-libraries-linux.cc.orig	2020-06-25 17:04:48 UTC
+++ mozglue/baseprofiler/core/shared-libraries-linux.cc
@@ -50,6 +50,11 @@ extern "C" MOZ_EXPORT __attribute__((weak)) int dl_ite
 #  define ElfW(type) Elf_##type
 #endif
 
+#if defined(GP_OS_freebsd) && !defined(NT_GNU_BUILD_ID)
+// FreeBSD < 11.4 doesn't define NT_GNU_BUILD_ID
+#  define NT_GNU_BUILD_ID 3
+#endif
+
 // ----------------------------------------------------------------------------
 // Starting imports from toolkit/crashreporter/google-breakpad/, as needed by
 // this file when moved to mozglue.
--- mozglue/baseprofiler/lul/LulElf.cpp.orig	2020-06-25 17:04:48 UTC
+++ mozglue/baseprofiler/lul/LulElf.cpp
@@ -79,6 +79,11 @@
 #  define EM_AARCH64 183
 #endif
 
+#if defined(GP_OS_freebsd) && !defined(NT_GNU_BUILD_ID)
+// FreeBSD < 11.4 doesn't define NT_GNU_BUILD_ID
+#  define NT_GNU_BUILD_ID 3
+#endif
+
 // This namespace contains helper functions.
 namespace {
 
--- tools/profiler/lul/LulElf.cpp.orig	2020-06-25 17:05:05 UTC
+++ tools/profiler/lul/LulElf.cpp
@@ -84,6 +84,11 @@
 #  define EM_AARCH64 183
 #endif
 
+#if defined(GP_OS_freebsd) && !defined(NT_GNU_BUILD_ID)
+// FreeBSD < 11.4 doesn't define NT_GNU_BUILD_ID
+#  define NT_GNU_BUILD_ID 3
+#endif
+
 // This namespace contains helper functions.
 namespace {
 


[FILE:890:patches/patch-gfx_skia_skia_src_core_SkCpu.cpp]
Regressed by https://svnweb.freebsd.org/changeset/base/324815

gfx/skia/skia/src/core/SkCpu.cpp:81:27: error: use of undeclared identifier 'getauxval'
        uint32_t hwcaps = getauxval(AT_HWCAP);
                          ^

--- gfx/skia/skia/src/core/SkCpu.cpp.orig	2020-04-29 20:59:56 UTC
+++ gfx/skia/skia/src/core/SkCpu.cpp
@@ -72,6 +72,20 @@
         return features;
     }
 
+#elif defined(SK_CPU_ARM64) && defined(__FreeBSD__)
+    #include <machine/armreg.h>
+
+    static uint32_t read_cpu_features() {
+        uint32_t features = 0;
+        uint64_t id_aa64isar0;
+
+        id_aa64isar0 = READ_SPECIALREG(ID_AA64ISAR0_EL1);
+        if (ID_AA64ISAR0_CRC32(id_aa64isar0) == ID_AA64ISAR0_CRC32_BASE) {
+            features |= SkCpu::CRC32;
+        }
+        return features;
+    }
+
 #elif defined(SK_CPU_ARM64) && __has_include(<sys/auxv.h>)
     #include <sys/auxv.h>
 


[FILE:228:patches/patch-image_imgFrame.h]
--- image/imgFrame.h.orig	2020-04-29 21:55:18 UTC
+++ image/imgFrame.h
@@ -8,6 +8,7 @@
 #define mozilla_image_imgFrame_h
 
 #include <utility>
+#include <functional>
 
 #include "AnimationParams.h"
 #include "MainThreadUtils.h"


[FILE:316:patches/patch-ipc_chromium_src_base_platform__thread__posix.cc]
--- ipc/chromium/src/base/platform_thread_posix.cc.orig	2020-04-29 20:59:57 UTC
+++ ipc/chromium/src/base/platform_thread_posix.cc
@@ -16,6 +16,8 @@
 #elif defined(OS_LINUX)
 #  include <sys/syscall.h>
 #  include <sys/prctl.h>
+#elif defined(OS_DRAGONFLY)
+#  include <sys/lwp.h>
 #endif
 
 #if !defined(OS_MACOSX)


[FILE:615:patches/patch-ipc_chromium_src_base_shared__memory__posix.cc]
--- ipc/chromium/src/base/shared_memory_posix.cc.orig	2020-04-29 20:59:57 UTC
+++ ipc/chromium/src/base/shared_memory_posix.cc
@@ -182,6 +182,11 @@ bool SharedMemory::AppendPosixShmPrefix(
     StringAppendF(str, "snap.%s.", kSnap);
   }
 #  endif  // OS_LINUX
+#  ifdef OS_DRAGONFLY
+  // DragonFly BSD has a userland IPC implementation, we need to prefix the
+  // path to shm_open(3), preferably with '/tmp'
+  StringAppendF(str, "tmp/");
+#  endif
   // Hopefully the "implementation defined" name length limit is long
   // enough for this.
   StringAppendF(str, "org.mozilla.ipc.%d.", static_cast<int>(pid));


[FILE:575:patches/patch-js_src_old-configure.in]
--- js/src/old-configure.in.orig	2020-04-29 21:00:01 UTC
+++ js/src/old-configure.in
@@ -786,7 +786,7 @@ dnl Checks for header files.
 dnl ========================================================
 AC_HEADER_DIRENT
 case "$target_os" in
-freebsd*)
+freebsd*|dragonfly*)
 # for stuff like -lXshm
     CPPFLAGS="${CPPFLAGS} ${X_CFLAGS}"
     ;;
@@ -905,7 +905,7 @@ then
     fi
 
 	case "$target" in
-	    *-*-freebsd*)
+	    *-*-freebsd*|*-*-dragonfly*)
 			AC_DEFINE(_REENTRANT)
 			AC_DEFINE(_THREAD_SAFE)
 			dnl -pthread links in -lpthread, so don't specify it explicitly.


[FILE:297:patches/patch-media_libcubeb_src_cubeb__jack.cpp]
--- media/libcubeb/src/cubeb_jack.cpp.orig	2020-04-29 21:00:35 UTC
+++ media/libcubeb/src/cubeb_jack.cpp
@@ -8,7 +8,7 @@
  */
 #define _DEFAULT_SOURCE
 #define _BSD_SOURCE
-#ifndef __FreeBSD__
+#if !(defined __FreeBSD__ || defined __DragonFly__)
 #define _POSIX_SOURCE
 #endif
 #include <dlfcn.h>


[FILE:278:patches/patch-third__party_dav1d_src_mem.h]
--- third_party/dav1d/src/mem.h.orig	2021-03-18 13:51:06 UTC
+++ third_party/dav1d/src/mem.h
@@ -31,7 +31,7 @@
 #include <stdlib.h>
 
 #if defined(HAVE_ALIGNED_MALLOC) || defined(HAVE_MEMALIGN)
-#include <malloc.h>
+#include <stdlib.h>
 #endif
 
 #include "common/attributes.h"


[FILE:3831:patches/patch-third__party_rust_libc_src_unix_bsd_freebsdlike_dragonfly_mod.rs]
--- third_party/rust/libc/src/unix/bsd/freebsdlike/dragonfly/mod.rs.orig	2020-09-17 00:32:52 UTC
+++ third_party/rust/libc/src/unix/bsd/freebsdlike/dragonfly/mod.rs
@@ -8,6 +8,8 @@ pub type nlink_t = u32;
 pub type blksize_t = i64;
 pub type clockid_t = ::c_ulong;
 
+pub type shmatt_t = ::c_uint;
+
 pub type c_long = i64;
 pub type c_ulong = u64;
 pub type time_t = i64;
@@ -21,6 +23,10 @@ pub type fsfilcnt_t = u64;
 pub type mqd_t = ::c_int;
 pub type sem_t = *mut sem;
 
+pub type key_t = ::c_long;
+pub type msglen_t = ::c_ulong;
+pub type msgqnum_t = ::c_ulong;
+
 #[cfg_attr(feature = "extra_traits", derive(Debug))]
 pub enum sem {}
 impl ::Copy for sem {}
@@ -238,6 +244,48 @@ s_no_extra_traits! {
         __unused3: *mut ::c_void        //actually a function pointer
     }
 
+    pub struct ipc_perm {
+        pub cuid: ::uid_t,
+        pub cgid: ::gid_t,
+        pub uid: ::uid_t,
+        pub gid: ::gid_t,
+        pub mode: ::mode_t,
+        pub seq: ::c_ushort,
+        pub key: ::key_t,
+    }
+
+    pub struct msqid_ds {
+        pub msg_perm: ::ipc_perm,
+        __unused1: *mut ::c_void,
+        __unused2: *mut ::c_void,
+        pub msg_cbytes: ::msglen_t,
+        pub msg_qnum: ::msgqnum_t,
+        pub msg_qbytes: ::msglen_t,
+        pub msg_lspid: ::pid_t,
+        pub msg_lrpid: ::pid_t,
+        pub msg_stime: ::time_t,
+	__unused3: ::c_long,
+        pub msg_rtime: ::time_t,
+	__unused4: ::c_long,
+        pub msg_ctime: ::time_t,
+	__unused5: ::c_long,
+	__unused6: ::c_long,
+	__unused7: ::c_long,
+	__unused8: ::c_long,
+	__unused9: ::c_long,
+    }
+
+    pub struct shmid_ds {
+        pub shm_perm: ::ipc_perm,
+        pub shm_segsz: ::size_t,
+        pub shm_lpid: ::pid_t,
+        pub shm_cpid: ::pid_t,
+        pub shm_nattch: ::shmatt_t,
+        pub shm_atime: ::time_t,
+        pub shm_dtime: ::time_t,
+        pub shm_ctime: ::time_t,
+	pub shm_internal: *mut ::c_void,
+    }
 }
 
 cfg_if! {
@@ -929,6 +977,23 @@ pub const NET_RT_FLAGS: ::c_int = 2;
 pub const NET_RT_IFLIST: ::c_int = 3;
 pub const NET_RT_MAXID: ::c_int = 4;
 
+// System V IPC
+pub const IPC_PRIVATE: ::key_t = 0;
+pub const IPC_CREAT: ::c_int = 0o1000;
+pub const IPC_EXCL: ::c_int = 0o2000;
+pub const IPC_NOWAIT: ::c_int = 0o4000;
+pub const IPC_RMID: ::c_int = 0;
+pub const IPC_SET: ::c_int = 1;
+pub const IPC_STAT: ::c_int = 2;
+pub const IPC_R: ::c_int = 0o400;
+pub const IPC_W: ::c_int = 0o200;
+pub const IPC_M: ::c_int = 0o10000;
+pub const MSG_NOERROR: ::c_int = 0o10000;
+pub const SHM_RDONLY: ::c_int = 0o10000;
+pub const SHM_RND: ::c_int = 0o20000;
+pub const SHM_R: ::c_int = 0o400;
+pub const SHM_W: ::c_int = 0o200;
+
 pub const SOMAXOPT_SIZE: ::c_int = 65536;
 
 pub const MSG_UNUSED09: ::c_int = 0x00000200;
@@ -1059,6 +1124,7 @@ f! {
 }
 
 extern "C" {
+    pub fn __errno_location() -> *mut ::c_int;
     pub fn setgrent();
     pub fn mprotect(
         addr: *mut ::c_void,
@@ -1072,6 +1138,30 @@ extern "C" {
         tp: *const ::timespec,
     ) -> ::c_int;
 
+    pub fn shmget(key: ::key_t, size: ::size_t, shmflg: ::c_int) -> ::c_int;
+    pub fn shmat(
+        shmid: ::c_int,
+        addr: *const ::c_void,
+        flag: ::c_int,
+    ) -> *mut ::c_void;
+    pub fn shmdt(shmaddr: *const ::c_void) -> ::c_int;
+    pub fn shmctl(
+        shmid: ::c_int,
+        cmd: ::c_int,
+        buf: *mut ::shmid_ds,
+    ) -> ::c_int;
+    pub fn msgctl(
+        msqid: ::c_int,
+        cmd: ::c_int,
+        buf: *mut ::msqid_ds,
+    ) -> ::c_int;
+    pub fn msgget(key: ::key_t, msgflg: ::c_int) -> ::c_int;
+    pub fn msgsnd(
+        msqid: ::c_int,
+        msgp: *const ::c_void,
+        msgsz: ::size_t,
+        msgflg: ::c_int,
+    ) -> ::c_int;
     pub fn setutxdb(_type: ::c_uint, file: *mut ::c_char) -> ::c_int;
 
     pub fn aio_waitcomplete(


[FILE:231:files/pkg-message-single]
==========================================================================

  If Firefox segfaults, try setting MOZ_FORCE_DISABLE_E10S=1 in
  environment.

==========================================================================

