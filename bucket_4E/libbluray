# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libbluray
VERSION=		1.4.0
KEYWORDS=		multimedia
VARIANTS=		std
SDESC[std]=		Blu-Ray discs playback library for media players
HOMEPAGE=		https://www.videolan.org/developers/libbluray.html
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://downloads.videolan.org/pub/videolan/libbluray/1.4.0/
DISTFILE[1]=		libbluray-1.4.0.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			tools
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

EXRUN[tools]=		libbluray:primary:std

USES=			cpe fontconfig freetype pkgconfig meson
GNOME_COMPONENTS=	libxml2

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/libbluray/bluray.h
LICENSE_SCHEME=		solo

CPE_VENDOR=		videolan
FPC_EQUIVALENT=		multimedia/libbluray
MESON_ARGS=		-Dbdj_jar=disabled
			-Denable_docs=false

SOVERSION=		3.0.0

[FILE:260:descriptions/desc.primary]
libbluray is an open-source library designed for Blu-Ray Discs playback 
for media players, like VLC or MPlayer.

The library integrates navigation, playlist parsing, menus and BD-J. It is 
DRM-circumvention free, and thus, safe to integrate in your software.


[FILE:58:descriptions/desc.tools]
This package contains the tools that ship with libbluray.


[FILE:101:distinfo]
77937baf07eadda4b2b311cf3af4c50269d2ea3165041f5843d96476c4c92777       458580 libbluray-1.4.0.tar.xz


[FILE:59:manifests/plist.primary]
lib/
 libbluray.so.%%SOMAJOR%%
 libbluray.so.%%SOVERSION%%


[FILE:41:manifests/plist.tools]
bin/
 bd_info
 bd_list_titles
 bd_splice


[FILE:199:manifests/plist.dev]
include/libbluray/
 bluray-version.h
 bluray.h
 clpi_data.h
 filesystem.h
 keys.h
 log_control.h
 meta_data.h
 overlay.h
 player_settings.h
lib/
 libbluray.a
 libbluray.so
lib/pkgconfig/libbluray.pc


[FILE:581:patches/patch-meson.build]
--- meson.build.orig	2025-08-11 20:23:19 UTC
+++ meson.build
@@ -59,6 +59,10 @@ elif host_machine.system() == 'openbsd'
     test_args += '-D_BSD_SOURCE'
 elif host_machine.system() == 'freebsd'
     test_args += ['-D__BSD_VISIBLE=1', '-D__XSI_VISIBLE=1']
+elif host_machine.system() == 'dragonfly'
+    test_args += ['-D__BSD_VISIBLE=1', '-D__XSI_VISIBLE=1']
+elif host_machine.system() == 'midnightbsd'
+    test_args += ['-D__BSD_VISIBLE=1', '-D__XSI_VISIBLE=1']
 elif host_machine.system() == 'sunos'
     test_args += '-D__EXTENSIONS__'
 elif host_machine.system() == 'linux'

