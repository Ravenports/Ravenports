# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gitolite
VERSION=		3.6.11
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Finely-grained git repository hosting
HOMEPAGE=		https://gitolite.com/gitolite/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/sitaramc:gitolite:v3.6.11
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			contrib
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

RUN_DEPENDS=		perl-JSON:single:perl_default
			git:primary:standard

USES=			cpe shebangfix perl

LICENSE=		GPLv2:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

CPE_VENDOR=		sitaram_chamarty
FPC_EQUIVALENT=		devel/gitolite
SHEBANG_NEW_BASH=	/bin/sh
SHEBANG_REGEX=		.*

INVALID_RPATH=		yes

SUB_FILES=		pkg-message-single
SUB_LIST=		DOCDIR={{PREFIX}}/share/doc/gitolite

post-patch:
	${REINPLACE_CMD} -i'' -e 's,#!/usr/bin/perl,#!${PERL},' \
		${WRKSRC}/src/lib/Gitolite/Hooks/*.pm

do-build:
	${MKDIR} ${WRKSRC}/lib
	@echo "${GH_TAGNAME}" > ${WRKSRC}/src/VERSION
	${MV} ${WRKSRC}/src/lib/Gitolite ${WRKSRC}/lib/
	${RMDIR} ${WRKSRC}/src/lib
	${MV} ${WRKSRC}/check-g2-compat ${WRKSRC}/src/
	${MV} ${WRKSRC}/convert-gitosis-conf ${WRKSRC}/src/
	${FIND} ${WRKSRC} '(' -name '*.bak' -o -name '*.orig' ')' -delete

post-extract:
	${AWK} '/^\# license/ { matched=1} matched { print }' \
		${WRKSRC}/README.markdown > ${WRKDIR}/TERMS

do-install:
	@${MKDIR} ${STAGEDIR}${STD_DOCDIR}
	(cd ${WRKSRC}/src && \
		${COPYTREE_BIN} \* ${STAGEDIR}${PREFIX}/libexec/gitolite)
	(cd ${WRKSRC}/lib && \
		${COPYTREE_SHARE} Gitolite ${STAGEDIR}${PREFIX}/${SITE_PERL_REL}/)
	${LN} -s ../libexec/gitolite/gitolite \
		${STAGEDIR}${PREFIX}/bin/gitolite
	${INSTALL_DATA} ${WRKSRC}/README.markdown ${STAGEDIR}${STD_DOCDIR}
	${INSTALL_DATA} ${WRKSRC}/CHANGELOG ${STAGEDIR}${STD_DOCDIR}
	# install the contrib scripts in a separate subpackage
	${MKDIR} ${STAGEDIR}${PREFIX}/share/gitolite
	${MKDIR} ${STAGEDIR}${PREFIX}/share/vim
	(cd ${WRKSRC}/contrib && \
		${COPYTREE_SHARE} . ${STAGEDIR}${PREFIX}/share/gitolite)
	${MV} ${STAGEDIR}${PREFIX}/share/gitolite/vim \
		${STAGEDIR}${PREFIX}/share/vim/vimfiles

[FILE:649:descriptions/desc.primary]
Gitolite is an access control layer on top of git, which allows access
control down to the branch level, including specifying who can and cannot
rewind a given branch.

Gitolite lets you use a single user on a server to host many git
repositories and provide access to many developers, without having to
give them real userids on or shell access to the server. Authentication
is most commonly done using sshd, but you can also use httpd if you prefer.

Gitolite can restrict who can read from (clone/fetch) or write to (push) a
repository. It can also restrict who can push to what branch or tag, which
is very important in a corporate environment.


[FILE:69:descriptions/desc.contrib]
This package contains gitolite scripts contributed by third parties.


[FILE:110:distinfo]
2166a61b14de19e605b14f4a13a070fbfd5ecd247b6fd725108f111198a2c121       198340 sitaramc-gitolite-3.6.11.tar.gz


[FILE:1483:manifests/plist.primary]
%%SITE_PERL%%/Gitolite/
 Cache.pm
 Common.pm
 Conf.pm
 Easy.pm
 Rc.pm
 Setup.pm
 Test.pm
 Triggers.pm
%%SITE_PERL%%/Gitolite/Conf/
 Explode.pm
 Load.pm
 Store.pm
 Sugar.pm
%%SITE_PERL%%/Gitolite/Hooks/
 PostUpdate.pm
 Update.pm
%%SITE_PERL%%/Gitolite/Test/Tsh.pm
%%SITE_PERL%%/Gitolite/Triggers/
 Alias.pm
 AutoCreate.pm
 CpuTime.pm
 Kindergarten.pm
 Mirroring.pm
 Motd.pm
 RefexExpr.pm
 RepoUmask.pm
 Shell.pm
 TProxy.pm
 Writable.pm
bin/gitolite
libexec/gitolite/
 VERSION
 check-g2-compat
 convert-gitosis-conf
 gitolite
 gitolite-shell
libexec/gitolite/VREF/
 COUNT
 EMAIL-CHECK
 FILETYPE
 MAX_NEWBIN_SIZE
 MERGE-CHECK
 NAME_NC
 VOTES
 lock
 partial-copy
 refex-expr
libexec/gitolite/commands/
 1plus1
 D
 access
 compile-template-data
 config
 create
 creator
 desc
 fork
 git-annex-shell
 git-config
 help
 htpasswd
 info
 list-dangling-repos
 lock
 mirror
 motd
 option
 owns
 perms
 print-default-rc
 push
 readme
 rsync
 sshkeys-lint
 sskm
 sudo
 svnserve
 symbolic-ref
 who-pushed
 writable
libexec/gitolite/syntactic-sugar/
 continuation-lines
 keysubdirs-as-groups
 macros
 refex-expr
libexec/gitolite/triggers/
 bg
 expand-deny-messages
 partial-copy
 renice
 repo-specific-hooks
 set-default-roles
 upstream
libexec/gitolite/triggers/post-compile/
 create-with-reference
 ssh-authkeys
 ssh-authkeys-shell-users
 ssh-authkeys-split
 update-description-file
 update-git-configs
 update-git-daemon-access-list
 update-gitweb-access-list
 update-gitweb-daemon-from-options


[FILE:452:manifests/plist.contrib]
share/gitolite/commands/
 compile-1
 ukm
share/gitolite/hooks/repo-specific/save-push-signatures
share/gitolite/lib/Apache/gitolite.conf
share/gitolite/lib/Gitolite/Triggers/RedmineUserAlias.pm
share/gitolite/t/ukm.t
share/gitolite/triggers/
 IP-check
 file_mirror
share/gitolite/utils/
 ad_groups.sh
 gitolite-local
 ipa_groups.pl
 ldap_groups.sh
 rc-format-v3.4
 testconf
share/vim/vimfiles/indent/gitolite.vim
share/vim/vimfiles/syntax/gitolite.vim


[FILE:48:manifests/plist.docs]
share/doc/gitolite/
 CHANGELOG
 README.markdown


[FILE:325:patches/patch-src_triggers_post-compile_ssh-authkeys-split]
--- src/triggers/post-compile/ssh-authkeys-split.orig	2018-09-30 04:37:17 UTC
+++ src/triggers/post-compile/ssh-authkeys-split
@@ -73,7 +73,7 @@ do
     seq=0
     while read line
     do
-        (( seq++ ))
+	seq=$(( $seq + 1 ))
         [ -z "$line" ] && continue
         f=$SKD/$base@$seq.pub
         echo "$line" > $f


[FILE:676:files/pkg-message-single.in]
==============================================================================

Final gitolite setup instructions:

Any ssh user can be a gitolite provider. Simply run the following command as
the user:

%%PREFIX%%/bin/gitolite setup -pk /path/to/admin.ssh.key.pub

This will setup up the configuration files and repositories for gitolite.

The admin ssh key allows full access to the gitolite-admin repository where
additional users and repositories can be configured.

By default, the git user is created for use by gitolite.

A quick-install guide can be found in:

%%DOCDIR%%/README.markdown

==============================================================================

