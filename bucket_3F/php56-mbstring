# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		php56-mbstring
VERSION=		5.6.35
KEYWORDS=		lang www php converters
VARIANTS=		standard
SDESC[standard]=	PHP 5.6 extension: mbstring (Multibyte string)
HOMEPAGE=		http://php.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		PHP/distributions
DISTFILE[1]=		php-5.6.35.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	REGEX
OPTIONS_STANDARD=	REGEX
OPT_ON[all]=		REGEX

BUILD_DEPENDS=		pcre:static:standard

USES=			php:ext,56

DISTNAME=		php-5.6.35/ext/{{PHP_MODNAME}}
EXTRACT_HEAD[1]=	{{TAR}} -xf
EXTRACT_TAIL[1]=	php-5.6.35/ext/{{PHP_MODNAME}}

FPC_EQUIVALENT=		converters/php56-mbstring
PHP_HEADER_DIRS=	libmbfl
			libmbfl/filters
			libmbfl/mbfl
			libmbfl/nls

CONFIGURE_ARGS=		--enable-mbstring
			--with-pcre-dir={{LOCALBASE}}

[REGEX].DESCRIPTION=			Enable multibyte regex support
[REGEX].BUILDRUN_DEPENDS_ON=		oniguruma:primary:standard
[REGEX].CONFIGURE_ARGS_OFF=		--disable-mbregex
[REGEX].CONFIGURE_ARGS_ON=		--with-onig={{LOCALBASE}}

[FILE:96:distinfo]
9985cb64cb8224c289effff5b34f670d14f838175f76daea0507d643eec650d2     12466396 php-5.6.35.tar.xz


[FILE:1441:patches/patch-config.m4]
--- config.m4.orig	2009-11-25 02:30:06.000000000 +0100
+++ config.m4	2010-04-12 09:59:54.000000000 +0200
@@ -43,6 +43,30 @@
     PHP_ADD_INCLUDE([$ext_builddir/$dir])
   done
 
+  dnl This is PECL build, check if bundled PCRE library is used
+  old_CPPFLAGS=$CPPFLAGS
+  CPPFLAGS=$INCLUDES
+  AC_EGREP_CPP(yes,[
+#include <main/php_config.h>
+#if defined(HAVE_BUNDLED_PCRE) && !defined(COMPILE_DL_PCRE)
+yes
+#endif
+  ],[
+    PHP_PCRE_REGEX=yes
+  ],[
+    AC_EGREP_CPP(yes,[
+#include <main/php_config.h>
+#if defined(HAVE_PCRE) && !defined(COMPILE_DL_PCRE)
+yes
+#endif
+    ],[
+      PHP_PCRE_REGEX=pecl
+      PHP_ADD_INCLUDE($PHP_PCRE_DIR/include)
+    ],[
+      PHP_PCRE_REGEX=no
+    ])
+  ])
+
   if test "$ext_shared" = "no"; then
     PHP_ADD_SOURCES(PHP_EXT_DIR(mbstring), $PHP_MBSTRING_BASE_SOURCES)
     out="php_config.h"
@@ -80,7 +104,6 @@
 int foo(int x, ...) {
 	va_list va;
 	va_start(va, x);
-	va_arg(va, int);
 	va_arg(va, char *);
 	va_arg(va, double);
 	return 0;
@@ -347,6 +370,9 @@
 [  --with-onig[=DIR]         MBSTRING: Use external oniguruma. DIR is the oniguruma install prefix.
                             If DIR is not set, the bundled oniguruma will be used], no, no)
 
+PHP_ARG_WITH(pcre-dir, pcre install prefix,
+[  --with-pcre-dir           MBSTRING: pcre install prefix], no, no)
+
 if test "$PHP_MBSTRING" != "no"; then  
   AC_DEFINE([HAVE_MBSTRING],1,[whether to have multibyte string support])
 


[FILE:779:patches/patch-php__mbregex.c]
--- php_mbregex.c.orig	2018-02-27 23:15:25 UTC
+++ php_mbregex.c
@@ -454,7 +454,7 @@ static php_mb_regex_t *php_mbregex_compi
 	OnigUChar err_str[ONIG_MAX_ERROR_MESSAGE_LEN];
 
 	found = zend_hash_find(&MBREX(ht_rc), (char *)pattern, patlen+1, (void **) &rc);
-	if (found == FAILURE || (*rc)->options != options || (*rc)->enc != enc || (*rc)->syntax != syntax) {
+	if (found == FAILURE || onig_get_options(*rc) != options || onig_get_encoding(*rc) != enc || onig_get_syntax(*rc) != syntax) {
 		if ((err_code = onig_new(&retval, (OnigUChar *)pattern, (OnigUChar *)(pattern + patlen), options, enc, syntax, &err_info)) != ONIG_NORMAL) {
 			onig_error_code_to_str(err_str, err_code, &err_info);
 			php_error_docref(NULL TSRMLS_CC, E_WARNING, "mbregex compile err: %s", err_str);

