# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		mbedtls
VERSION=		3.6.1
KEYWORDS=		security devel
VARIANTS=		std
SDESC[std]=		Light-weight cryptographic and SSL/TLS library
HOMEPAGE=		https://www.trustedfirmware.org/projects/mbed-tls/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main framework
SITES[main]=		GITHUB/ARMmbed:mbedtls:v3.6.1
SITES[framework]=	GITHUB/Mbed-TLS:mbedtls-framework:94599c0:framework
DISTFILE[1]=		generated:main
DISTFILE[2]=		generated:framework
DF_INDEX=		1 2
SPKGS[std]=		set
			primary
			tools
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

EXRUN[tools]=		mbedtls:primary:std

USES=			cpe gmake python

LICENSE=		APACHE20:primary GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		APACHE20:stock
			GPLv2+:stock
LICENSE_AWK=		TERMS:"^The full text of each"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		dual

CPE_PRODUCT=		mbed_tls
CPE_VENDOR=		arm
FPC_EQUIVALENT=		security/mbedtls

BUILD_TARGET=		no_test
MAKE_ENV=		SHARED=1

PLIST_SUB=		SO_TLS=21
			SO_509=7
			SO_CRYPTO=16

pre-build:
	${FIND} ${WRKSRC} -name "*.orig" -delete
	${REINPLACE_CMD} \
		-e 's/PREFIX/NAMEPREFIX/' \
		-e 's/$$(DESTDIR)/&$$(PREFIX)/' \
		${WRKSRC}/Makefile

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.so
	${FIND} ${STAGEDIR}${PREFIX}/bin -type f | while read f; \
	do \
	  check=$$(file "$$f" | grep "dynamically linked"); \
	  if [ -n "$$check" ]; then \
	    ${STRIP_CMD} "$$f"; \
	  fi; \
	done

[FILE:273:descriptions/desc.primary]
Mbed TLS is a C library that implements cryptographic primitives, X.509
certificate manipulation and the SSL/TLS and DTLS protocols. Its small
code footprint makes it suitable for embedded systems.

Mbed TLS includes a reference implementation of the PSA Cryptography API.


[FILE:58:descriptions/desc.tools]
This packages contains tools powered by Mbed TLS library.


[FILE:227:distinfo]
e3650e1a2adb506a721ba67ccf0041b2b78bca6979daaebced5b3454275be8b6      5373924 ARMmbed-mbedtls-3.6.1.tar.gz
e085b42e2efcb386556074e93b03d525d3ab49193d1d0cc386cf2c10cc6dc70a       636532 Mbed-TLS-mbedtls-framework-94599c0.tar.gz


[FILE:90:manifests/plist.primary]
lib/
 libmbedcrypto.so.%%SO_CRYPTO%%
 libmbedtls.so.%%SO_TLS%%
 libmbedx509.so.%%SO_509%%


[FILE:1601:manifests/plist.tools]
bin/
 mbedtls_aead_demo
 mbedtls_benchmark
 mbedtls_cert_app
 mbedtls_cert_req
 mbedtls_cert_write
 mbedtls_cipher_aead_demo
 mbedtls_crl_app
 mbedtls_crypt_and_hash
 mbedtls_crypto_examples
 mbedtls_dh_client
 mbedtls_dh_genprime
 mbedtls_dh_server
 mbedtls_dlopen
 mbedtls_dlopen_demo.sh
 mbedtls_dtls_client
 mbedtls_dtls_server
 mbedtls_ecdh_curve25519
 mbedtls_ecdsa
 mbedtls_fuzz_client
 mbedtls_fuzz_dtlsclient
 mbedtls_fuzz_dtlsserver
 mbedtls_fuzz_pkcs7
 mbedtls_fuzz_privkey
 mbedtls_fuzz_pubkey
 mbedtls_fuzz_server
 mbedtls_fuzz_x509crl
 mbedtls_fuzz_x509crt
 mbedtls_fuzz_x509csr
 mbedtls_gen_entropy
 mbedtls_gen_key
 mbedtls_gen_random_ctr_drbg
 mbedtls_generate_cpp_dummy_build.sh
 mbedtls_generic_sum
 mbedtls_hello
 mbedtls_hmac_demo
 mbedtls_key_app
 mbedtls_key_app_writer
 mbedtls_key_ladder_demo
 mbedtls_key_ladder_demo.sh
 mbedtls_load_roots
 mbedtls_md_hmac_demo
 mbedtls_metatest
 mbedtls_mini_client
 mbedtls_mpi_demo
 mbedtls_pem2der
 mbedtls_pk_decrypt
 mbedtls_pk_encrypt
 mbedtls_pk_sign
 mbedtls_pk_verify
 mbedtls_psa_constant_names
 mbedtls_psa_hash
 mbedtls_psa_hash_demo.sh
 mbedtls_query_compile_time_config
 mbedtls_query_included_headers
 mbedtls_req_app
 mbedtls_rsa_decrypt
 mbedtls_rsa_encrypt
 mbedtls_rsa_genkey
 mbedtls_rsa_sign
 mbedtls_rsa_sign_pss
 mbedtls_rsa_verify
 mbedtls_rsa_verify_pss
 mbedtls_selftest
 mbedtls_ssl_client1
 mbedtls_ssl_client2
 mbedtls_ssl_context_info
 mbedtls_ssl_fork_server
 mbedtls_ssl_mail_client
 mbedtls_ssl_server
 mbedtls_ssl_server2
 mbedtls_strerror
 mbedtls_udp_proxy
 mbedtls_udp_proxy_wrapper.sh
 mbedtls_zeroize


[FILE:1625:manifests/plist.dev]
include/mbedtls/
 aes.h
 aria.h
 asn1.h
 asn1write.h
 base64.h
 bignum.h
 block_cipher.h
 build_info.h
 camellia.h
 ccm.h
 chacha20.h
 chachapoly.h
 check_config.h
 cipher.h
 cmac.h
 compat-2.x.h
 config_adjust_legacy_crypto.h
 config_adjust_legacy_from_psa.h
 config_adjust_psa_from_legacy.h
 config_adjust_psa_superset_legacy.h
 config_adjust_ssl.h
 config_adjust_x509.h
 config_psa.h
 constant_time.h
 ctr_drbg.h
 debug.h
 des.h
 dhm.h
 ecdh.h
 ecdsa.h
 ecjpake.h
 ecp.h
 entropy.h
 error.h
 gcm.h
 hkdf.h
 hmac_drbg.h
 lms.h
 mbedtls_config.h
 md.h
 md5.h
 memory_buffer_alloc.h
 net_sockets.h
 nist_kw.h
 oid.h
 pem.h
 pk.h
 pkcs12.h
 pkcs5.h
 pkcs7.h
 platform.h
 platform_time.h
 platform_util.h
 poly1305.h
 private_access.h
 psa_util.h
 ripemd160.h
 rsa.h
 sha1.h
 sha256.h
 sha3.h
 sha512.h
 ssl.h
 ssl_cache.h
 ssl_ciphersuites.h
 ssl_cookie.h
 ssl_ticket.h
 threading.h
 timing.h
 version.h
 x509.h
 x509_crl.h
 x509_crt.h
 x509_csr.h
include/psa/
 build_info.h
 crypto.h
 crypto_adjust_auto_enabled.h
 crypto_adjust_config_dependencies.h
 crypto_adjust_config_key_pair_types.h
 crypto_adjust_config_synonyms.h
 crypto_builtin_composites.h
 crypto_builtin_key_derivation.h
 crypto_builtin_primitives.h
 crypto_compat.h
 crypto_config.h
 crypto_driver_common.h
 crypto_driver_contexts_composites.h
 crypto_driver_contexts_key_derivation.h
 crypto_driver_contexts_primitives.h
 crypto_extra.h
 crypto_legacy.h
 crypto_platform.h
 crypto_se_driver.h
 crypto_sizes.h
 crypto_struct.h
 crypto_types.h
 crypto_values.h
lib/
 libmbedcrypto.a
 libmbedcrypto.so
 libmbedtls.a
 libmbedtls.so
 libmbedx509.a
 libmbedx509.so

