# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		mbedtls
VERSION=		2.26.0
KEYWORDS=		security devel
VARIANTS=		standard
SDESC[standard]=	Light-weight cryptographic and SSL/TLS library
HOMEPAGE=		https://tls.mbed.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/ARMmbed:mbedtls:v2.26.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe gmake python

LICENSE=		APACHE20:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		APACHE20:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"MBEDTLS_SSL_H"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/include/mbedtls/ssl.h
LICENSE_SCHEME=		solo

CPE_PRODUCT=		mbed_tls
CPE_VENDOR=		arm
FPC_EQUIVALENT=		security/mbedtls

BUILD_TARGET=		no_test
MAKE_ENV=		SHARED=1

pre-build:
	${FIND} ${WRKSRC} -name "*.orig" -delete
	${REINPLACE_CMD} \
		-e 's/PREFIX/NAMEPREFIX/' \
		-e 's/$$(DESTDIR)/&$$(PREFIX)/' \
		${WRKSRC}/Makefile

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.so
	${FIND} ${STAGEDIR}${PREFIX}/bin -type f | while read f; \
	do \
	  check=$$(file "$$f" | grep "dynamically linked"); \
	  if [ -n "$$check" ]; then \
	    ${STRIP_CMD} "$$f"; \
	  fi; \
	done

[FILE:273:descriptions/desc.single]
Mbed TLS is a C library that implements cryptographic primitives, X.509
certificate manipulation and the SSL/TLS and DTLS protocols. Its small
code footprint makes it suitable for embedded systems.

Mbed TLS includes a reference implementation of the PSA Cryptography API.


[FILE:108:distinfo]
37949e823c7e1f6695fc56858578df355da0770c284b1c1304cfc8b396d539cd      4081036 ARMmbed-mbedtls-2.26.0.tar.gz


[FILE:2602:manifests/plist.single]
bin/
 mbedtls_aescrypt2
 mbedtls_benchmark
 mbedtls_cert_app
 mbedtls_cert_req
 mbedtls_cert_write
 mbedtls_crl_app
 mbedtls_crypt_and_hash
 mbedtls_crypto_examples
 mbedtls_dh_client
 mbedtls_dh_genprime
 mbedtls_dh_server
 mbedtls_dtls_client
 mbedtls_dtls_server
 mbedtls_ecdh_curve25519
 mbedtls_ecdsa
 mbedtls_fuzz_client
 mbedtls_fuzz_dtlsclient
 mbedtls_fuzz_dtlsserver
 mbedtls_fuzz_privkey
 mbedtls_fuzz_pubkey
 mbedtls_fuzz_server
 mbedtls_fuzz_x509crl
 mbedtls_fuzz_x509crt
 mbedtls_fuzz_x509csr
 mbedtls_gen_entropy
 mbedtls_gen_key
 mbedtls_gen_random_ctr_drbg
 mbedtls_gen_random_havege
 mbedtls_generic_sum
 mbedtls_hello
 mbedtls_key_app
 mbedtls_key_app_writer
 mbedtls_key_ladder_demo
 mbedtls_key_ladder_demo.sh
 mbedtls_mini_client
 mbedtls_mpi_demo
 mbedtls_pem2der
 mbedtls_pk_decrypt
 mbedtls_pk_encrypt
 mbedtls_pk_sign
 mbedtls_pk_verify
 mbedtls_psa_constant_names
 mbedtls_query_compile_time_config
 mbedtls_req_app
 mbedtls_rsa_decrypt
 mbedtls_rsa_encrypt
 mbedtls_rsa_genkey
 mbedtls_rsa_sign
 mbedtls_rsa_sign_pss
 mbedtls_rsa_verify
 mbedtls_rsa_verify_pss
 mbedtls_selftest
 mbedtls_ssl_client1
 mbedtls_ssl_client2
 mbedtls_ssl_context_info
 mbedtls_ssl_fork_server
 mbedtls_ssl_mail_client
 mbedtls_ssl_server
 mbedtls_ssl_server2
 mbedtls_strerror
 mbedtls_udp_proxy
 mbedtls_udp_proxy_wrapper.sh
 mbedtls_zeroize
include/mbedtls/
 aes.h
 aesni.h
 arc4.h
 aria.h
 asn1.h
 asn1write.h
 base64.h
 bignum.h
 blowfish.h
 bn_mul.h
 camellia.h
 ccm.h
 certs.h
 chacha20.h
 chachapoly.h
 check_config.h
 cipher.h
 cipher_internal.h
 cmac.h
 compat-1.3.h
 config.h
 config_psa.h
 ctr_drbg.h
 debug.h
 des.h
 dhm.h
 ecdh.h
 ecdsa.h
 ecjpake.h
 ecp.h
 ecp_internal.h
 entropy.h
 entropy_poll.h
 error.h
 gcm.h
 havege.h
 hkdf.h
 hmac_drbg.h
 md.h
 md2.h
 md4.h
 md5.h
 md_internal.h
 memory_buffer_alloc.h
 net.h
 net_sockets.h
 nist_kw.h
 oid.h
 padlock.h
 pem.h
 pk.h
 pk_internal.h
 pkcs11.h
 pkcs12.h
 pkcs5.h
 platform.h
 platform_time.h
 platform_util.h
 poly1305.h
 psa_util.h
 ripemd160.h
 rsa.h
 rsa_internal.h
 sha1.h
 sha256.h
 sha512.h
 ssl.h
 ssl_cache.h
 ssl_ciphersuites.h
 ssl_cookie.h
 ssl_internal.h
 ssl_ticket.h
 threading.h
 timing.h
 version.h
 x509.h
 x509_crl.h
 x509_crt.h
 x509_csr.h
 xtea.h
include/psa/
 crypto.h
 crypto_compat.h
 crypto_config.h
 crypto_driver_common.h
 crypto_extra.h
 crypto_platform.h
 crypto_se_driver.h
 crypto_sizes.h
 crypto_struct.h
 crypto_types.h
 crypto_values.h
lib/
 libmbedcrypto.a
 libmbedcrypto.so
 libmbedcrypto.so.6
 libmbedtls.a
 libmbedtls.so
 libmbedtls.so.13
 libmbedx509.a
 libmbedx509.so
 libmbedx509.so.1


[FILE:461:patches/patch-config.h]
--- include/mbedtls/config.h.orig	2021-03-12 16:55:26 UTC
+++ include/mbedtls/config.h
@@ -2090,7 +2090,7 @@
  *
  * Uncomment this to enable pthread mutexes.
  */
-//#define MBEDTLS_THREADING_PTHREAD
+#define MBEDTLS_THREADING_PTHREAD
 
 /**
  * \def MBEDTLS_USE_PSA_CRYPTO
@@ -3414,7 +3414,7 @@
  *
  * Enable this layer to allow use of mutexes within mbed TLS
  */
-//#define MBEDTLS_THREADING_C
+#define MBEDTLS_THREADING_C
 
 /**
  * \def MBEDTLS_TIMING_C

