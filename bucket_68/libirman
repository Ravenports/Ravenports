# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libirman
VERSION=		0.5.2
KEYWORDS=		comms
VARIANTS=		std
SDESC[std]=		Library for Evation's Irman infrared receiver
HOMEPAGE=		https://sourceforge.net/projects/libirman/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/libirman/0.5.2
DISTFILE[1]=		libirman-0.5.2.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			tools
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			libtool pkgconfig

LICENSE=		GPLv2:tools LGPL20:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2:{{WRKSRC}}/COPYING
			LGPL20:{{WRKSRC}}/COPYING.lib
LICENSE_AWK=		TERMS:"Introduction"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/README
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		comms/libirman

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		0.0.0

post-install:
	${MV} ${STAGEDIR}${PREFIX}/etc/irman.conf \
		${STAGEDIR}${PREFIX}/etc/irman.conf.sample

[FILE:234:descriptions/desc.primary]
The irman driver is originally developed for the irman devices, see 
http://www.intolect.com/irmandetail.htm. These are nowadays discontinued. 
However, some modern hardware (notably the irtoy) is able to emulate the 
irman protocol.


[FILE:72:descriptions/desc.tools]
This subpackage contains the test tools that are bundled with libirman.


[FILE:100:distinfo]
43e58d7cd22b3a4c4dc8dcf8542a269ebcb4d8f6ceea0577b9fc882898f09a47       374770 libirman-0.5.2.tar.gz


[FILE:79:manifests/plist.primary]
etc/irman.conf.sample
lib/
 libirman.so.%%SOMAJOR%%
 libirman.so.%%SOVERSION%%


[FILE:72:manifests/plist.dev]
include/irman.h
lib/
 libirman.a
 libirman.so
lib/pkgconfig/libirman.pc


[FILE:47:manifests/plist.tools]
bin/
 test_func
 test_io
 test_name
 workmanir


[FILE:39:manifests/plist.docs]
share/doc/libirman/
 README
 TECHNICAL


[FILE:424:patches/patch-irio.c]
--- irio.c.orig	2025-01-05 20:12:02.374191000 +0100
+++ irio.c	2025-01-05 20:12:35.681160000 +0100
@@ -97,14 +97,6 @@
     return -1;
   }
 
-  /* lock the file for ourselves */
-  if (flock(portfd, LOCK_EX | LOCK_NB) < 0) {
-    /* unable to get lock */
-    close(portfd);
-    portfd = 0;
-    return -1;
-  }
-
   /* get port attributes, store in oldterm */
   if (tcgetattr(portfd, &oldterm) < 0) {
     close(portfd);

