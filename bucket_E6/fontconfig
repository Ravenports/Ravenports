# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		fontconfig
VERSION=		2.17.0
KEYWORDS=		x11_fonts
VARIANTS=		std
SDESC[std]=		XML-based font configuration API for X Windows
HOMEPAGE=		http://www.freedesktop.org/wiki/Software/fontconfig
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://gitlab.freedesktop.org/fontconfig/fontconfig/-/archive/2.17.0/
DISTFILE[1]=		fontconfig-2.17.0.tar.bz2:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man

OPTIONS_AVAILABLE=	HINTING_NONE HINTING_SLIGHT HINTING_MEDIUM
			HINTING_FULL
OPTIONS_STANDARD=	HINTING_NONE HINTING_SLIGHT HINTING_MEDIUM
			HINTING_FULL
OPTGROUP_RADIO=		HINTING
OPTDESCR[HINTING]=	Preferred pixel hinting configuration
OPTGROUP[HINTING]=	HINTING_NONE HINTING_SLIGHT HINTING_MEDIUM
			HINTING_FULL
OPT_ON[all]=		HINTING_SLIGHT

BUILD_DEPENDS=		gperf:primary:std
			docbook-utils:primary:std
EXRUN[dev]=		freetype:dev:std
			expat:dev:std

USES=			cpe meson pkgconfig freetype expat

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

CPE_VENDOR=		fontconfig_project
MESON_ARGS=		-Ddoc-man=enabled
			-Ddoc-txt=disabled
			-Ddoc-pdf=disabled
			-Ddoc-html=disabled
			-Dnls=disabled
			-Dtests=disabled
			-Dtools=enabled
			-Dcache-build=disabled
			-Diconv=disabled
			-Dfontations=disabled
			-Dxml-backend=expat
			-Dcache-dir="/var/db/fontconfig"
			-Dtemplate-dir="{{PREFIX}}/etc/fonts/conf.avail"
			-Dconfig-dir="{{PREFIX}}/etc/fonts/conf.d"
			-Dxml-dir="{{PREFIX}}/etc/fonts"
			-Ddefault-fonts-dirs="{{PREFIX}}/share/fonts"
			-Dadditional-fonts-dirs="{{LOCALBASE}}/lib/X11/fonts"

SOVERSION=		1.16.0
SUB_FILES=		triggers-primary.ucl

VAR_OPSYS[sunos]=	CFLAGS=-D__EXTENSIONS__

[HINTING_MEDIUM].DESCRIPTION=		Medium hinting
[HINTING_MEDIUM].CONFIGURE_ARGS_ON=	-Ddefault-hinting=medium
[HINTING_MEDIUM].PLIST_SUB_ON=		PREFERRED_HINTING=medium

[HINTING_NONE].DESCRIPTION=		No hinting
[HINTING_NONE].CONFIGURE_ARGS_ON=	-Ddefault-hinting=none
[HINTING_NONE].PLIST_SUB_ON=		PREFERRED_HINTING=none

[HINTING_SLIGHT].DESCRIPTION=		Slight hinting
[HINTING_SLIGHT].CONFIGURE_ARGS_ON=	-Ddefault-hinting=slight
[HINTING_SLIGHT].PLIST_SUB_ON=		PREFERRED_HINTING=slight

[HINTING_FULL].DESCRIPTION=		Full hinting
[HINTING_FULL].CONFIGURE_ARGS_ON=	-Ddefault-hinting=full
[HINTING_FULL].PLIST_SUB_ON=		PREFERRED_HINTING=full

post-install:
	${MV} ${STAGEDIR}${PREFIX}/etc/fonts/fonts.conf \
		${STAGEDIR}${PREFIX}/etc/fonts/fonts.conf.sample

[FILE:799:descriptions/desc.primary]
Fontconfig does the following:

 * discover new fonts when installed automatically, removing a common
   source of configuration problems.
 * perform font name substitution, so that appropriate alternative fonts
   can be selected if fonts are missing.
 * identify the set of fonts required to completely cover a language set.
 * have GUI configuration tools built as it uses an XML-based configuration
   file (though with autodiscovery, we believe this need is minimized).
 * efficiently and quickly find the fonts you need among the set of fonts
   you have installed, even if you have installed thousands of fonts,
   while minimzing memory usage.
 * be used in concert with the X Render Extension and FreeType to implement
   high quality, anti-aliased and subpixel rendered text on a display.


[FILE:104:distinfo]
486c53e63c07cefd56ccd1234a665bc45fa2f37072c189ccb06373b97c7d73c2       510849 fontconfig-2.17.0.tar.bz2


[FILE:1725:manifests/plist.primary]
@sample etc/fonts/fonts.conf.sample
bin/
 fc-cache
 fc-cat
 fc-conflist
 fc-list
 fc-match
 fc-pattern
 fc-query
 fc-scan
 fc-validate
etc/fonts/fonts.dtd
etc/fonts/conf.avail/
 05-reset-dirs-sample.conf
 09-autohint-if-no-hinting.conf
 10-autohint.conf
 10-hinting-full.conf
 10-hinting-medium.conf
 10-hinting-none.conf
 10-hinting-slight.conf
 10-no-antialias.conf
 10-scale-bitmap-fonts.conf
 10-sub-pixel-bgr.conf
 10-sub-pixel-none.conf
 10-sub-pixel-rgb.conf
 10-sub-pixel-vbgr.conf
 10-sub-pixel-vrgb.conf
 10-unhinted.conf
 10-yes-antialias.conf
 11-lcdfilter-default.conf
 11-lcdfilter-legacy.conf
 11-lcdfilter-light.conf
 11-lcdfilter-none.conf
 20-unhint-small-vera.conf
 25-unhint-nonlatin.conf
 30-metric-aliases.conf
 35-lang-normalize.conf
 40-nonlatin.conf
 45-generic.conf
 45-latin.conf
 48-guessfamily.conf
 48-spacing.conf
 49-sansserif.conf
 50-user.conf
 51-local.conf
 60-generic.conf
 60-latin.conf
 65-fonts-persian.conf
 65-khmer.conf
 65-nonlatin.conf
 69-unifont.conf
 70-no-bitmaps-and-emoji.conf
 70-no-bitmaps-except-emoji.conf
 70-no-bitmaps.conf
 70-yes-bitmaps.conf
 80-delicious.conf
 90-synthetic.conf
etc/fonts/conf.d/
 10-hinting-%%PREFERRED_HINTING%%.conf
 10-scale-bitmap-fonts.conf
 10-sub-pixel-none.conf
 10-yes-antialias.conf
 11-lcdfilter-default.conf
 20-unhint-small-vera.conf
 30-metric-aliases.conf
 40-nonlatin.conf
 45-generic.conf
 45-latin.conf
 48-spacing.conf
 49-sansserif.conf
 50-user.conf
 51-local.conf
 60-generic.conf
 60-latin.conf
 65-fonts-persian.conf
 65-nonlatin.conf
 69-unifont.conf
 70-no-bitmaps-except-emoji.conf
 80-delicious.conf
 90-synthetic.conf
 README
lib/
 libfontconfig.so.%%SOMAJOR%%
 libfontconfig.so.%%SOVERSION%%
@dir /var/db/fontconfig


[FILE:161:manifests/plist.dev]
include/fontconfig/
 fcfreetype.h
 fcprivate.h
 fontconfig.h
lib/libfontconfig.so
lib/pkgconfig/fontconfig.pc
share/gettext/its/
 fontconfig.its
 fontconfig.loc


[FILE:4712:manifests/plist.man]
share/man/man1/
 fc-cache.1
 fc-cat.1
 fc-conflist.1
 fc-list.1
 fc-match.1
 fc-pattern.1
 fc-query.1
 fc-scan.1
 fc-validate.1
share/man/man3/
 FcAtomicCreate.3
 FcAtomicDeleteNew.3
 FcAtomicDestroy.3
 FcAtomicLock.3
 FcAtomicNewFile.3
 FcAtomicOrigFile.3
 FcAtomicReplaceOrig.3
 FcAtomicUnlock.3
 FcBlanksAdd.3
 FcBlanksCreate.3
 FcBlanksDestroy.3
 FcBlanksIsMember.3
 FcCacheCopySet.3
 FcCacheCreateTagFile.3
 FcCacheDir.3
 FcCacheNumFont.3
 FcCacheNumSubdir.3
 FcCacheSubdir.3
 FcCharSetAddChar.3
 FcCharSetCopy.3
 FcCharSetCount.3
 FcCharSetCoverage.3
 FcCharSetCreate.3
 FcCharSetDelChar.3
 FcCharSetDestroy.3
 FcCharSetEqual.3
 FcCharSetFirstPage.3
 FcCharSetHasChar.3
 FcCharSetIntersect.3
 FcCharSetIntersectCount.3
 FcCharSetIsSubset.3
 FcCharSetMerge.3
 FcCharSetNew.3
 FcCharSetNextPage.3
 FcCharSetSubtract.3
 FcCharSetSubtractCount.3
 FcCharSetUnion.3
 FcConfigAcceptFilter.3
 FcConfigAcceptFont.3
 FcConfigAppFontAddDir.3
 FcConfigAppFontAddFile.3
 FcConfigAppFontClear.3
 FcConfigBuildFonts.3
 FcConfigCreate.3
 FcConfigDestroy.3
 FcConfigEnableHome.3
 FcConfigFileInfoIterGet.3
 FcConfigFileInfoIterInit.3
 FcConfigFileInfoIterNext.3
 FcConfigFilename.3
 FcConfigGetBlanks.3
 FcConfigGetCache.3
 FcConfigGetCacheDirs.3
 FcConfigGetConfigDirs.3
 FcConfigGetConfigFiles.3
 FcConfigGetCurrent.3
 FcConfigGetDefaultLangs.3
 FcConfigGetFilename.3
 FcConfigGetFontDirs.3
 FcConfigGetFonts.3
 FcConfigGetRescanInterval.3
 FcConfigGetSysRoot.3
 FcConfigHome.3
 FcConfigParseAndLoad.3
 FcConfigParseAndLoadFromMemory.3
 FcConfigPreferAppFont.3
 FcConfigReference.3
 FcConfigSetCurrent.3
 FcConfigSetDefaultSubstitute.3
 FcConfigSetFontSetFilter.3
 FcConfigSetRescanInterval.3
 FcConfigSetSysRoot.3
 FcConfigSubstitute.3
 FcConfigSubstituteWithPat.3
 FcConfigUptoDate.3
 FcDefaultSubstitute.3
 FcDirCacheClean.3
 FcDirCacheCreateUUID.3
 FcDirCacheDeleteUUID.3
 FcDirCacheLoad.3
 FcDirCacheLoadFile.3
 FcDirCacheRead.3
 FcDirCacheRescan.3
 FcDirCacheUnlink.3
 FcDirCacheUnload.3
 FcDirCacheValid.3
 FcDirSave.3
 FcDirScan.3
 FcFileIsDir.3
 FcFileScan.3
 FcFini.3
 FcFontList.3
 FcFontMatch.3
 FcFontRenderPrepare.3
 FcFontSetAdd.3
 FcFontSetCreate.3
 FcFontSetDestroy.3
 FcFontSetList.3
 FcFontSetMatch.3
 FcFontSetPrint.3
 FcFontSetSort.3
 FcFontSetSortDestroy.3
 FcFontSort.3
 FcFontationsQueryAll.3
 FcFreeTypeCharIndex.3
 FcFreeTypeCharSet.3
 FcFreeTypeCharSetAndSpacing.3
 FcFreeTypeQuery.3
 FcFreeTypeQueryAll.3
 FcFreeTypeQueryFace.3
 FcGetDefaultLangs.3
 FcGetLangs.3
 FcGetVersion.3
 FcInit.3
 FcInitBringUptoDate.3
 FcInitLoadConfig.3
 FcInitLoadConfigAndFonts.3
 FcInitReinitialize.3
 FcIsLower.3
 FcIsUpper.3
 FcLangGetCharSet.3
 FcLangNormalize.3
 FcLangSetAdd.3
 FcLangSetCompare.3
 FcLangSetContains.3
 FcLangSetCopy.3
 FcLangSetCreate.3
 FcLangSetDel.3
 FcLangSetDestroy.3
 FcLangSetEqual.3
 FcLangSetGetLangs.3
 FcLangSetHasLang.3
 FcLangSetHash.3
 FcLangSetSubtract.3
 FcLangSetUnion.3
 FcMatrixCopy.3
 FcMatrixEqual.3
 FcMatrixInit.3
 FcMatrixMultiply.3
 FcMatrixRotate.3
 FcMatrixScale.3
 FcMatrixShear.3
 FcNameConstant.3
 FcNameGetConstant.3
 FcNameGetConstantFor.3
 FcNameGetObjectType.3
 FcNameParse.3
 FcNameRegisterConstants.3
 FcNameRegisterObjectTypes.3
 FcNameUnparse.3
 FcNameUnregisterConstants.3
 FcNameUnregisterObjectTypes.3
 FcObjectSetAdd.3
 FcObjectSetBuild.3
 FcObjectSetCreate.3
 FcObjectSetDestroy.3
 FcPatternAdd-Type.3
 FcPatternAdd.3
 FcPatternAddWeak.3
 FcPatternBuild.3
 FcPatternCreate.3
 FcPatternDel.3
 FcPatternDestroy.3
 FcPatternDuplicate.3
 FcPatternEqual.3
 FcPatternEqualSubset.3
 FcPatternFilter.3
 FcPatternFindIter.3
 FcPatternFormat.3
 FcPatternGet-Type.3
 FcPatternGet.3
 FcPatternGetWithBinding.3
 FcPatternHash.3
 FcPatternIterEqual.3
 FcPatternIterGetObject.3
 FcPatternIterGetValue.3
 FcPatternIterIsValid.3
 FcPatternIterNext.3
 FcPatternIterStart.3
 FcPatternIterValueCount.3
 FcPatternObjectCount.3
 FcPatternPrint.3
 FcPatternReference.3
 FcPatternRemove.3
 FcRangeCopy.3
 FcRangeCreateDouble.3
 FcRangeCreateInteger.3
 FcRangeDestroy.3
 FcRangeGetDouble.3
 FcStrBasename.3
 FcStrBuildFilename.3
 FcStrCmp.3
 FcStrCmpIgnoreCase.3
 FcStrCopy.3
 FcStrCopyFilename.3
 FcStrDirname.3
 FcStrDowncase.3
 FcStrFree.3
 FcStrListCreate.3
 FcStrListDone.3
 FcStrListFirst.3
 FcStrListNext.3
 FcStrPlus.3
 FcStrSetAdd.3
 FcStrSetAddFilename.3
 FcStrSetCreate.3
 FcStrSetDel.3
 FcStrSetDestroy.3
 FcStrSetEqual.3
 FcStrSetMember.3
 FcStrStr.3
 FcStrStrIgnoreCase.3
 FcToLower.3
 FcUcs4ToUtf8.3
 FcUtf16Len.3
 FcUtf16ToUcs4.3
 FcUtf8Len.3
 FcUtf8ToUcs4.3
 FcValueDestroy.3
 FcValueEqual.3
 FcValuePrint.3
 FcValueSave.3
 FcWeightFromOpenType.3
 FcWeightFromOpenTypeDouble.3
 FcWeightToOpenType.3
 FcWeightToOpenTypeDouble.3
share/man/man5/fonts-conf.5


[FILE:395:patches/patch-meson.build]
--- meson.build.orig	2025-06-27 03:12:04 UTC
+++ meson.build
@@ -591,7 +591,7 @@ configure_file(output: 'fonts.conf',
                install_tag: 'runtime')
 
 install_data('fonts.dtd',
-             install_dir: join_paths(get_option('prefix'), get_option('datadir'), 'xml/fontconfig'),
+             install_dir: get_option('xml-dir'),
              install_tag: 'runtime')
 
 fc_headers = [


[FILE:554:patches/patch-src_fccfg.c]
--- src/fccfg.c.orig	2025-06-27 03:12:04 UTC
+++ src/fccfg.c
@@ -3175,7 +3175,7 @@ FcConfigFileInfoIterGet (FcConfig
     if (name)
 	*name = FcStrdup (r->name && r->name[0] ? r->name : (const FcChar8 *)"fonts.conf");
     if (description)
-	*description = FcStrdup (!r->description ? _ ("No description") : dgettext (r->domain ? (const char *)r->domain : GETTEXT_PACKAGE "-conf", (const char *)r->description));
+	*description = FcStrdup (!r->description ? "No description" : (const char *) r->description);
     if (enabled)
 	*enabled = r->enabled;
 


[FILE:420:patches/patch-src_fcint.h]
--- src/fcint.h.orig	2025-06-27 03:12:04 UTC
+++ src/fcint.h
@@ -134,15 +134,7 @@ extern pfnSHGetFolderPathA          pSHG
 #endif
 
 /* NLS */
-#ifdef ENABLE_NLS
-#  include <libintl.h>
-#  define _(x) (dgettext (GETTEXT_PACKAGE, x))
-#else
-/* dgettext macro must be defined after existing declarations */
-#  include <locale.h>
-#  define dgettext(d, s) (s)
 #  define _(x)           (x)
-#endif
 
 #define N_(x) x
 


[FILE:1682:patches/patch-src_fclang.c]
--- src/fclang.c.orig	2025-06-27 03:12:04 UTC
+++ src/fclang.c
@@ -173,6 +173,7 @@ FcLangNormalize (const FcChar8 *lang)
 {
     FcChar8 *result = NULL, *s, *orig;
     char    *territory, *encoding, *modifier;
+    char    *script;
     size_t   llen, tlen = 0, mlen = 0;
 
     if (!lang || !*lang)
@@ -232,24 +233,30 @@ FcLangNormalize (const FcChar8 *lang)
 	    modifier = encoding;
 	}
     }
-    territory = strchr ((const char *)s, '_');
-    if (!territory)
-	territory = strchr ((const char *)s, '-');
+    territory = strrchr ((const char *)s, '_');
     if (territory) {
 	*territory = 0;
 	territory++;
 	tlen = strlen (territory);
     }
+    /* There might by a script component, e.g. sr_Cyrl_RS@UTF-8.  We can't assume all legal locale
+       names are in the form <lang>_<country code>.<encoding>.  If the script component is here,
+       skip it to define the language properly (e.g. "sr" instead of "sr_Cyrl") */
+    script = strchr ((const char *) s, '_');
+    if (script)
+    {
+        *script = 0;
+    }
     llen = strlen ((const char *)s);
     if (llen < 2 || llen > 3) {
-	fprintf (stderr, "Fontconfig warning: ignoring %s: not a valid language tag\n",
-	         lang);
+	fprintf (stderr, "Fontconfig warning: ignoring %s: not a valid language tag (%s)\n",
+	         s, lang);
 	goto bail0;
     }
     if (territory && (tlen < 2 || tlen > 3) &&
         !(territory[0] == 'z' && tlen < 5)) {
-	fprintf (stderr, "Fontconfig warning: ignoring %s: not a valid region tag\n",
-	         lang);
+	fprintf (stderr, "Fontconfig warning: ignoring %s: not a valid region tag (%s)\n",
+	         territory, lang);
 	goto bail0;
     }
     if (territory)


[FILE:217:files/triggers-primary.ucl.in]
fc_cache: {
    dir_path: ["%%PREFIX%%/share/fonts", "%%PREFIX%%/etc/fonts/conf.d"]
    trigger: <<EOS
print("Triggered: Running fc-cache to build fontconfig cache.")
pkg.exec({"%%PREFIX%%/bin/fc-cache", "-s"})
EOS
}

