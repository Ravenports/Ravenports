# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		zstd
VERSION=		1.5.7
KEYWORDS=		archivers
VARIANTS=		std
SDESC[std]=		Fast real-time compression algorithm (aka zstd)
HOMEPAGE=		https://facebook.github.io/zstd/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/facebook:zstd:v1.5.7
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe gmake

LICENSE=		BSD3CLAUSE:primary GPLv2:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENSE
			GPLv2:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"__cplusplus"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/lib/zstd.h
LICENSE_SCHEME=		dual

CPE_PRODUCT=		zstandard
CPE_VENDOR=		facebook
FPC_EQUIVALENT=		archivers/zstd

BUILD_TARGET=		default
MAKE_ARGS=		INCLUDEDIR="{{PREFIX}}/include"
			LIBDIR="{{PREFIX}}/lib"
			MANDIR="{{MANPREFIX}}/man"
			PKGCONFIGDIR="{{PREFIX}}/lib/pkgconfig"
			INSTALL_PROGRAM="{{INSTALL_PROGRAM}}"
			INSTALL_SCRIPT="{{INSTALL_SCRIPT}}"
			INSTALL_DATA="{{INSTALL_DATA}}"
			INSTALL_MAN="{{INSTALL_MAN}}"
			INSTALL=install
			HASH=md5

INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		1.5.7

post-patch:
	${REINPLACE_CMD} -e '/define BACKTRACES_ENABLE/d' \
		${WRKSRC}/programs/fileio.c

post-patch-sunos:
	${REINPLACE_CMD} -e 's| DragonFly| DragonFly SunOS|' \
		${WRKSRC}/Makefile
	${REINPLACE_CMD} -e 's|LDFLAGS +=|LDFLAGS += -lrt|' \
		${WRKSRC}/programs/Makefile

[FILE:629:descriptions/desc.primary]
Zstd, short for Zstandard, is a real-time compression algorithm providing
high compression ratios.  It offers a very wide range of compression vs.
speed trade-offs while being backed by a very fast decoder.  It offers
a special mode for small data called "dictionary compression" and it can
create dictionaries from any sample set.  Zstd is BSD-licensed.

Using Izbench on the Silesia compression corpus, zstd ranked at the
top with a compression ratio of 2.877, a compression rate of 325 Mb/s,
and a decompression rate of 325.  Zlib followed at 2.730, 95 Mb/s (C)
and 360 Mb/s (D).  See WWW page for the full benchmark results.


[FILE:105:distinfo]
37d7284556b20954e56e1ca85b80226768902e2edabd3b649e9e72c0c9012ee3      2451884 facebook-zstd-1.5.7.tar.gz


[FILE:111:manifests/plist.primary]
bin/
 unzstd
 zstd
 zstdcat
 zstdgrep
 zstdless
 zstdmt
lib/
 libzstd.so.%%SOMAJOR%%
 libzstd.so.%%SOVERSION%%


[FILE:109:manifests/plist.dev]
include/
 zdict.h
 zstd.h
 zstd_errors.h
lib/
 libzstd.a
 libzstd.so
 libzstd_pic.a
lib/pkgconfig/libzstd.pc


[FILE:69:manifests/plist.man]
share/man/man1/
 unzstd.1
 zstd.1
 zstdcat.1
 zstdgrep.1
 zstdless.1


[FILE:659:patches/patch-Makefile]
--- Makefile.orig	2025-02-19 00:04:24 UTC
+++ Makefile
@@ -147,7 +147,7 @@ clean:
 #------------------------------------------------------------------------------
 # make install is validated only for Linux, macOS, Hurd and some BSD targets
 #------------------------------------------------------------------------------
-ifneq (,$(filter Linux Darwin GNU/kFreeBSD GNU OpenBSD FreeBSD DragonFly NetBSD MSYS_NT% CYGWIN_NT% Haiku AIX,$(shell sh -c 'MSYSTEM="MSYS" uname') ))
+ifneq (,$(filter Linux Darwin GNU/kFreeBSD GNU OpenBSD FreeBSD DragonFly NetBSD MidnightBSD MSYS_NT% CYGWIN_NT% Haiku AIX,$(shell sh -c 'MSYSTEM="MSYS" uname') ))
 
 HOST_OS = POSIX
 


[FILE:2143:patches/patch-lib_Makefile]
--- lib/Makefile.orig	2025-02-19 00:04:24 UTC
+++ lib/Makefile
@@ -51,6 +51,8 @@ endif
 ZSTD_LOCAL_SRC := $(notdir $(ZSTD_FILES))
 ZSTD_LOCAL_OBJ0 := $(ZSTD_LOCAL_SRC:.c=.o)
 ZSTD_LOCAL_OBJ := $(ZSTD_LOCAL_OBJ0:.S=.o)
+ZSTD_LOCAL_SOBJ0 := $(ZSTD_LOCAL_SRC:.c=.So)
+ZSTD_LOCAL_SOBJ := $(ZSTD_LOCAL_SOBJ0:.S=.o)
 
 VERSION := $(ZSTD_VERSION)
 
@@ -81,8 +83,8 @@ ifeq ($(UNAME_TARGET_SYSTEM), Darwin)
   SHARED_EXT_VER = $(LIBVER).$(SHARED_EXT)
   SONAME_FLAGS = -install_name $(LIBDIR)/libzstd.$(SHARED_EXT_MAJOR) -compatibility_version $(LIBVER_MAJOR) -current_version $(LIBVER)
 else
-  ifeq ($(UNAME_TARGET_SYSTEM), AIX)
-    SONAME_FLAGS =
+  ifeq ($(UNAME), SunOS)
+    SONAME_FLAGS = -Wl,-h,libzstd.$(SHARED_EXT).$(LIBVER_MAJOR)
   else
     SONAME_FLAGS = -Wl,-soname=libzstd.$(SHARED_EXT).$(LIBVER_MAJOR)
   endif
@@ -132,6 +134,14 @@ libzstd.a: $(ZSTD_STATICLIB)
 
 endif
 
+%.So: %.c
+	@echo PIC-CC $@
+	$(CC) $(FLAGS) -fpic -DPIC -c $< -o $@
+
+libzstd_pic.a: $(ZSTD_LOCAL_SOBJ)
+	@echo assembling PIC library
+	$(AR) rcsv $@ $^
+
 ifneq (,$(filter Windows%,$(TARGET_SYSTEM)))
 
 LIBZSTD = dll/libzstd.dll
@@ -181,7 +191,7 @@ endif  # if windows
 libzstd : $(LIBZSTD)
 
 .PHONY: lib
-lib : libzstd.a libzstd
+lib : libzstd.a libzstd libzstd_pic.a
 
 
 # note : do not define lib-mt or lib-release as .PHONY
@@ -268,7 +278,7 @@ clean:
 #-----------------------------------------------------------------------------
 # make install is validated only for below listed environments
 #-----------------------------------------------------------------------------
-ifneq (,$(filter Linux Darwin GNU/kFreeBSD GNU OpenBSD FreeBSD NetBSD DragonFly SunOS Haiku AIX MSYS_NT% CYGWIN_NT%,$(UNAME)))
+ifneq (,$(filter Linux Darwin GNU/kFreeBSD GNU OpenBSD FreeBSD NetBSD DragonFly MidnightBSD SunOS Haiku AIX MSYS_NT% CYGWIN_NT%,$(UNAME)))
 
 lib: libzstd.pc
 
@@ -355,6 +365,7 @@ install-static:
 	[ -e $(DESTDIR)$(LIBDIR) ] || $(INSTALL) -d -m 755 $(DESTDIR)$(LIBDIR)/
 	@echo Installing static library
 	$(INSTALL_DATA) libzstd.a $(DESTDIR)$(LIBDIR)
+	$(INSTALL_DATA) libzstd_pic.a $(DESTDIR)$(LIBDIR)
 
 .PHONY: install-shared
 install-shared:


[FILE:759:patches/patch-programs_Makefile]
--- programs/Makefile.orig	2025-02-19 00:04:24 UTC
+++ programs/Makefile
@@ -345,7 +345,7 @@ include $(wildcard $(DEPFILES))
 #-----------------------------------------------------------------------------
 # make install is validated only for Linux, macOS, BSD, Hurd and Solaris targets
 #-----------------------------------------------------------------------------
-ifneq (,$(filter Linux Darwin GNU/kFreeBSD GNU OpenBSD FreeBSD NetBSD DragonFly SunOS Haiku AIX MSYS_NT% CYGWIN_NT%,$(UNAME)))
+ifneq (,$(filter Linux Darwin GNU/kFreeBSD GNU OpenBSD FreeBSD NetBSD DragonFly MidnightBSD SunOS Haiku AIX MSYS_NT% CYGWIN_NT%,$(UNAME)))
 
 HAVE_COLORNEVER = $(shell echo a | egrep --color=never a > /dev/null 2> /dev/null && echo 1 || echo 0)
 EGREP_OPTIONS ?=

