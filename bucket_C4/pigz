# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		pigz
VERSION=		2.5
KEYWORDS=		archivers
VARIANTS=		standard
SDESC[standard]=	Parallel Implementation of GZip
HOMEPAGE=		https://zlib.net/pigz/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://zlib.net/pigz/
DISTFILE[1]=		pigz-2.5.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe gmake zlib

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"Pigz License (similar to BSD)"
LICENSE_FILE=		CUSTOM1:{{WRKDIR}}/LICENSE
LICENSE_AWK=		CUSTOM1:"Version history:"
LICENSE_SOURCE=		CUSTOM1:{{WRKSRC}}/pigz.c
LICENSE_SCHEME=		solo

CPE_VENDOR=		zlib
FPC_EQUIVALENT=		archivers/pigz

BUILD_TARGET=		pigz
MAKE_ARGS=		CC="{{CC}}"
			CFLAGS="{{CFLAGS}}"
			LDFLAGS="{{LDFLAGS}}"

VAR_OPSYS[sunos]=	CFLAGS=-D_XPG6

do-install:
	${INSTALL_PROGRAM} ${WRKSRC}/pigz ${STAGEDIR}${PREFIX}/bin
	${LN} -sf pigz ${STAGEDIR}${PREFIX}/bin/unpigz
	${INSTALL_MAN} ${WRKSRC}/pigz.1 ${STAGEDIR}${MANPREFIX}/man/man1/

[FILE:403:descriptions/desc.single]
pigz, which stands for parallel implementation of gzip, is a fully
functional replacement for gzip that exploits multiple processors and
multiple cores to the hilt when compressing data. pigz was written by
Mark Adler, and uses the zlib and pthread libraries.

It supports the zlib format (.zz) as well as gzip format (.gz).

It is pronounced “pig-zee”. It is not pronounced like the plural of pig.


[FILE:94:distinfo]
a006645702caaecace633a89eb5c371482b44a48d04f34e0058e2b85d75d4c36       106438 pigz-2.5.tar.gz


[FILE:44:manifests/plist.single]
bin/
 pigz
 unpigz
share/man/man1/pigz.1.gz


[FILE:414:patches/patch-pigz.c]
--- pigz.c.orig	2021-01-24 05:19:13 UTC
+++ pigz.c
@@ -333,7 +333,6 @@
 // Portability defines.
 #define _FILE_OFFSET_BITS 64            // Use large file functions
 #define _LARGE_FILES                    // Same thing for AIX
-#define _POSIX_C_SOURCE 200809L         // For MinGW
 
 // Included headers and what is expected from each.
 #include <stdio.h>      // fflush(), fprintf(), fputs(), getchar(), putc(),

