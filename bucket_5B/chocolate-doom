# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		chocolate-doom
VERSION=		3.1.0
KEYWORDS=		games
VARIANTS=		std
SDESC[std]=		Source port accurately recreating the DooM engine
HOMEPAGE=		https://www.chocolate-doom.org/wiki/index.php/Chocolate_Doom
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/chocolate-doom:chocolate-doom:chocolate-doom-3.1.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			docs
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe autoreconf gmake pkgconfig python:build png
SDL_COMPONENTS=		sdl2 mixer2 net2

LICENSE=		GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING.md
LICENSE_SCHEME=		solo

CPE_PRODUCT=		chocolate_doom
CPE_VENDOR=		chocolate-doom
FPC_EQUIVALENT=		games/chocolate-doom

MUST_CONFIGURE=		gnu

SUB_FILES=		messages-primary.ucl

post-patch:
	${REINPLACE_CMD} -e 's!__PREFIX__!${PREFIX}!' ${WRKSRC}/src/d_iwad.c

post-install:
.for f in chocolate-doom-setup chocolate-heretic-setup chocolate-hexen-setup chocolate-strife-setup
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/${f}
.endfor
	${RM} ${STAGEDIR}${PREFIX}/share/doc/*/COPYING.md
	${MV} ${STAGEDIR}${PREFIX}/share/doc/chocolate-heretic ${STAGEDIR}${STD_DOCDIR}/
	${MV} ${STAGEDIR}${PREFIX}/share/doc/chocolate-hexen ${STAGEDIR}${STD_DOCDIR}/
	${MV} ${STAGEDIR}${PREFIX}/share/doc/chocolate-strife ${STAGEDIR}${STD_DOCDIR}/

post-extract:
	${HEAD} -n 13 ${WRKSRC}/src/doomkeys.h > ${WRKDIR}/TERMS

[FILE:779:descriptions/desc.primary]
Chocolate-doom is a so-called source port of the original DooM engine. 
After ID Software released the DooM source code, many such projects were 
created to bring the game to different platforms and add many new features.

What makes chocolate-doom different from all the others is that it does 
not aim to add anything that would alter the gameplay. The project aims to 
faithfully and accurately re-create the original experience from the 90s. 
It goes as far with this as implementing compatibility code so that 
popular hacks for the DOS EXE files are emulated and old patch WADs can be 
supported.

In addition to DooM the following other DooM engine games are supported:
 - DooM II
 - Final DooM (TNT / Plutonia)
 - Heretic
 - HeXen (including DK)
 - Strife
 - Chex Quest



[FILE:136:distinfo]
f2c64843dcec312032b180c3b2f34b4cb26c4dcdaa7375a1601a3b1df11ef84d      2256537 chocolate-doom-chocolate-doom-chocolate-doom-3.1.0.tar.gz


[FILE:875:manifests/plist.primary]
bin/
 chocolate-doom
 chocolate-doom-setup
 chocolate-heretic
 chocolate-heretic-setup
 chocolate-hexen
 chocolate-hexen-setup
 chocolate-server
 chocolate-strife
 chocolate-strife-setup
share/applications/
 org.chocolate_doom.Doom.desktop
 org.chocolate_doom.Heretic.desktop
 org.chocolate_doom.Hexen.desktop
 org.chocolate_doom.Setup.desktop
 org.chocolate_doom.Strife.desktop
share/applications/screensavers/org.chocolate_doom.Doom_Screensaver.desktop
share/bash-completion/completions/
 chocolate-doom
 chocolate-heretic
 chocolate-hexen
 chocolate-strife
share/icons/hicolor/128x128/apps/
 chocolate-doom.png
 chocolate-heretic.png
 chocolate-hexen.png
 chocolate-setup.png
 chocolate-strife.png
share/metainfo/
 org.chocolate_doom.Doom.metainfo.xml
 org.chocolate_doom.Heretic.metainfo.xml
 org.chocolate_doom.Hexen.metainfo.xml
 org.chocolate_doom.Strife.metainfo.xml


[FILE:562:manifests/plist.docs]
share/doc/chocolate-doom/
 CMDLINE.doom
 ChangeLog
 INSTALL.doom
 NEWS.md
 NOT-BUGS.md
 PHILOSOPHY.md
 README.Music.md
 README.md
share/doc/chocolate-doom/chocolate-heretic/
 CMDLINE.heretic
 ChangeLog
 INSTALL.heretic
 NEWS.md
 PHILOSOPHY.md
 README.Music.md
 README.md
share/doc/chocolate-doom/chocolate-hexen/
 CMDLINE.hexen
 ChangeLog
 INSTALL.hexen
 NEWS.md
 PHILOSOPHY.md
 README.Music.md
 README.md
share/doc/chocolate-doom/chocolate-strife/
 CMDLINE.strife
 ChangeLog
 INSTALL.strife
 NEWS.md
 PHILOSOPHY.md
 README.Music.md
 README.Strife.md
 README.md


[FILE:383:manifests/plist.man]
share/man/man5/
 chocolate-doom.cfg.5
 chocolate-heretic.cfg.5
 chocolate-hexen.cfg.5
 chocolate-strife.cfg.5
 default.cfg.5
 heretic.cfg.5
 hexen.cfg.5
 strife.cfg.5
share/man/man6/
 chocolate-doom-setup.6
 chocolate-doom.6
 chocolate-heretic-setup.6
 chocolate-heretic.6
 chocolate-hexen-setup.6
 chocolate-hexen.6
 chocolate-server.6
 chocolate-strife-setup.6
 chocolate-strife.6


[FILE:742:patches/patch-src_d__iwad.c]
--- src/d_iwad.c.intermediate	2024-08-16 01:30:22 UTC
+++ src/d_iwad.c
@@ -677,13 +677,14 @@ static void AddXdgDirs(void)
     if (env == NULL)
     {
         // (Trailing / omitted from paths, as it is added below)
-        env = "/usr/local/share:/usr/share";
+        env = "/usr/local/share:/usr/share:/__PREFIX__/share";
     }
 
     // The "standard" location for IWADs on Unix that is supported by most
     // source ports is /usr/share/games/doom - we support this through the
     // XDG_DATA_DIRS mechanism, through which it can be overridden.
     AddIWADPath(env, "/games/doom");
+    AddIWADPath(env, "/games/doomengine");
     AddIWADPath(env, "/doom");
 
     // The convention set by RBDOOM-3-BFG is to install Doom 3: BFG


[FILE:459:files/messages-primary.ucl.in]
primary: {
  type: "install"
  message: <<EOM
This is just the game engine which cannot be used without game data.
If you own any full version of the supported games, put the WAD
(resource container) files into /raven/share/games/doomengine so that
chocolate-doom will find them.

If you do not have any retail IWAD, have a look at the doomgame-iwad
package. The shareware / demo versions of the games as well as some
fan-made free games are available.
EOM
}

