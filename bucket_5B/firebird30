# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		firebird30
VERSION=		3.0.6
KEYWORDS=		databases
VARIANTS=		standard
SDESC[standard]=	Firebird-3 relational SQL database
HOMEPAGE=		https://www.firebirdsql.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/FirebirdSQL/firebird/archive/
DISTFILE[1]=		R3_0_6.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			server
			client
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BROKEN[freebsd]=	isc_file.cpp:1698: undefined reference to `iconv_open'
BROKEN[linux]=		free fails, invalid size: 0x00007f739ca112a0 ***
BROKEN[dragonfly]=	[Makefile:362: metadata.fdb] Segmentation fault (core dumped)
NOT_FOR_ARCH=		aarch64

BUILDRUN_DEPENDS=	libedit:single:standard
			icu:single:standard
EXRUN[server]=		firebird30:client:standard

USERS=			firebird
GROUPS=			firebird
USERGROUP_SPKG=		server

USES=			autoreconf:build cpe gmake libtool:build pkgconfig
			zlib c++:server,client

DISTNAME=		firebird-R3_0_6

LICENSE=		CUSTOM1:server CUSTOM2:server
LICENSE_NAME=		CUSTOM1:"Initial Developer's Public License"
			CUSTOM2:"InterBase Public License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/builds/install/misc/IDPLicense.txt
			CUSTOM2:{{WRKSRC}}/builds/install/misc/IPLicense.txt
LICENSE_SCHEME=		multi

CPE_PRODUCT=		firebird
CPE_VENDOR=		firebirdsql

MUST_CONFIGURE=		gnu
CONFIGURE_SCRIPT=	autogen.sh
CONFIGURE_ARGS=		--prefix=/var/db/firebird
			--exec-prefix={{PREFIX}}
			--with-fbconf={{PREFIX}}/etc/firebird
			--with-fbglock=/var/db/firebird
			--with-fbhelp=/var/db/firebird/help
			--with-fbintl={{PREFIX}}/libexec/firebird/intl
			--with-fblog=/var/db/firebird
			--with-fbmsg={{PREFIX}}/share/firebird
			--with-fbplugins={{PREFIX}}/libexec/firebird/plugins
			--with-fbsbin={{PREFIX}}/sbin
			--with-fbsecure-db=/var/db/firebird
			--with-fbudf={{PREFIX}}/libexec/firebird/UDF
			--with-system-editline
			--with-builtin-tommath
CONFIGURE_ENV=		PTHREAD_LIBS="-lpthread"
			ac_cv_header_atomic_ops_h="no"
			ac_cv_lib_atomic_ops_main="no"
			ac_cv_lib_edit_readline="yes"

MAKE_ENV=		FIREBIRD_TMP="{{WRKDIR}}"
			FIREBIRD_LOCK="{{WRKDIR}}"
SINGLE_JOB=		yes

PLIST_SUB=		SOVERSION=3.0.6
			SOMINOR=3.0
			SOMAJOR=3
			LOCALSTATEDIR=/var/db/firebird
			CONFDIR=etc/firebird
RC_SUBR=		firebird:server
SUB_FILES=		pkg-message-server
SUB_LIST=		DOCDIR={{STD_DOCDIR}}

CFLAGS=			-Wno-deprecated
VAR_OPSYS[freebsd]=	CONFIGURE_ARGS=--enable-raw-devices=no
VAR_OPSYS[dragonfly]=	CONFIGURE_ARGS=--enable-raw-devices=no

post-patch:
	${REINPLACE_CMD} -e 's|<malloc.h>|<stdlib.h>|' \
		${WRKSRC}/src/common/classes/alloc.h \
		${WRKSRC}/extern/cloop/src/tests/test1/CTest.c

post-patch-dragonfly:
	# exit failure on dragonfly
	# assertion: z->z_Magic == ZALLOC_SLAB_MAGIC in _slabfree
	# these aren't acceptable fixes
	${REINPLACE_CMD} -e '/dontCleanup = false/ s/false/true/' \
		${WRKSRC}/src/common/classes/init.cpp
	${REINPLACE_CMD} -e '/delete m_head;/d' \
		${WRKSRC}/src/isql/InputDevices.cpp

do-install-linux:
	@${MKDIR} ${STAGEDIR}${PREFIX}/bin \
		${STAGEDIR}${PREFIX}/lib \
		${STAGEDIR}${PREFIX}/include \
		${STAGEDIR}${PREFIX}/sbin \
		${STAGEDIR}${PREFIX}/share/firebird \
		${STAGEDIR}${PREFIX}/etc/firebird \
		${STAGEDIR}${PREFIX}/libexec/firebird/udf \
		${STAGEDIR}/var/db/firebird/help \
		${STAGEDIR}${PREFIX}/libexec/firebird/intl \
		${STAGEDIR}${PREFIX}/libexec/firebird/plugins
	${INSTALL_LIB} ${WRKSRC}/gen/firebird/lib/libib_util.so \
		${WRKSRC}/gen/firebird/lib/libfbclient.so.3.0.6 \
		${WRKSRC}/gen/firebird/lib/libfbembed.so.3.0.6 \
		${STAGEDIR}${PREFIX}/lib
.for ext in so so.3 so.3.0
	${LN} -fs libfbclient.so.3.0.6 ${STAGEDIR}${PREFIX}/lib/libfbclient.${ext}
	${LN} -fs libfbembed.so.3.0.6 ${STAGEDIR}${PREFIX}/lib/libfbembed.${ext}
	${LN} -fs libfbembed.so.3.0.6 ${STAGEDIR}${PREFIX}/lib/libgds.${ext}
.endfor
	${INSTALL_DATA} ${WRKSRC}/gen/firebird/include/*.h ${STAGEDIR}${PREFIX}/include
	${INSTALL_DATA} ${WRKSRC}/gen/firebird/*.msg ${STAGEDIR}${PREFIX}/share/firebird
	${SED} -e "s=%%PREFIX%%=${PREFIX}=g" ${WRKSRC}/gen/install/misc/firebird.conf \
		> ${WRKDIR}/firebird.conf
	${INSTALL_DATA} ${WRKDIR}/firebird.conf ${STAGEDIR}${PREFIX}/etc/firebird/firebird.conf.sample
	${INSTALL_DATA} ${WRKSRC}/gen/install/misc/aliases.conf \
		${STAGEDIR}${PREFIX}/etc/firebird/aliases.conf.sample
	${INSTALL_DATA} ${WRKSRC}/gen/install/misc/fbtrace.conf \
		${STAGEDIR}${PREFIX}/etc/firebird/fbtrace.conf
	${INSTALL_DATA} ${WRKSRC}/gen/install/misc/fbintl.conf \
		${STAGEDIR}${PREFIX}/libexec/firebird/intl/fbintl.conf
.for bin in gpre isql-fb qli fbguard fbsplit fbstat fbsvcmgr fbtracemgr gbak gdef gfix gsec nbackup
	${INSTALL_PROGRAM} ${WRKSRC}/gen/firebird/bin/${bin} ${STAGEDIR}${PREFIX}/bin
.endfor
.for sbin in fb_inet_server fb_lock_print fb_smp_server fbserver
	${INSTALL_PROGRAM} ${WRKSRC}/gen/firebird/bin/${sbin} ${STAGEDIR}${PREFIX}/sbin
.endfor
.for udf_so in ib_udf.so fbudf.so
	${INSTALL} ${STRIP} -m 0555 ${WRKSRC}/gen/firebird/UDF/${udf_so} \
		${STAGEDIR}${PREFIX}/libexec/firebird/udf
.endfor
.for udf_sql in src/extlib/ib_udf2.sql src/extlib/fbudf/fbudf.sql
	${INSTALL} -m 0444 ${WRKSRC}/${udf_sql} ${STAGEDIR}${PREFIX}/libexec/firebird/udf
.endfor
	${INSTALL} ${STRIP} -m 0555 ${WRKSRC}/gen/firebird/plugins/libfbtrace.so \
		${STAGEDIR}${PREFIX}/libexec/firebird/plugins
	${INSTALL} -m 0660 ${WRKSRC}/gen/firebird/security2.fdb \
		${STAGEDIR}/var/db/firebird/security2.fdb.sample
	${INSTALL} -m 0440 ${WRKSRC}/gen/firebird/help/help.fdb \
		${STAGEDIR}/var/db/firebird/help
	${INSTALL} ${STRIP} -m 0555 ${WRKSRC}/gen/firebird/intl/libfbintl.so \
		${STAGEDIR}${PREFIX}/libexec/firebird/intl/fbintl.so
	# docs
	@${MKDIR} ${STAGEDIR}${STD_DOCDIR}/sql.extensions \
		${STAGEDIR}${STD_DOCDIR}/license \
		${STAGEDIR}${STD_DOCDIR}/upgrade
	${INSTALL_DATA} ${WRKSRC}/doc/sql.extensions/* \
		${STAGEDIR}${STD_DOCDIR}/sql.extensions
	${INSTALL_DATA} ${WRKSRC}/doc/license/* \
		${STAGEDIR}${STD_DOCDIR}/license
	${INSTALL_DATA} ${WRKSRC}/src/misc/upgrade/v2/* \
		${STAGEDIR}${STD_DOCDIR}/upgrade
.for F in WhatsNew README.* Firebird* ReleaseNotes.pdf ambiguity.txt ods11-index-structure.html
	${INSTALL_DATA} ${WRKSRC}/doc/${F} ${STAGEDIR}${STD_DOCDIR}
.endfor

[FILE:568:descriptions/desc.server]
Firebird is a relational database offering many ANSI SQL-99 features
that runs on Linux, Windows, and a variety of Unix platforms.  Firebird
offers excellent concurrency, high performance, and powerful language
support for stored procedures and triggers.  It has been used in
production systems, under a variety of names since 1981.

Firebird is completely free of any registration, licensing or deployment
fees.  It may be deployed freely for use with any third-party software,
whether commercial or not.

This package contains the Firebird server and related files.


[FILE:193:descriptions/desc.client]
Firebird is a relational database offering many ANSI SQL-99 features
that runs on Linux, Windows, and a variety of Unix platforms.

This package contains the Firebird client and related files.


[FILE:92:distinfo]
942f6acb203187e9b3f3a64445484db662aae14810b99abd1393ebd3bf36bd7d     10668976 R3_0_6.tar.gz


[FILE:870:manifests/plist.server]
@sample %%CONFDIR%%/aliases.conf.sample
@sample %%LOCALSTATEDIR%%/security2.fdb.sample
%%CONFDIR%%/fbtrace.conf
@(firebird,firebird,) %%LOCALSTATEDIR%%/help/help.fdb
bin/
 fbguard
 fbsplit
 fbstat
 fbsvcmgr
 fbtracemgr
 gbak
 gdef
 gfix
 gsec
 nbackup
@(,firebird,) libexec/firebird/intl/fbintl.conf
@(,firebird,) libexec/firebird/intl/fbintl.so
@(,firebird,) libexec/firebird/plugins/libfbtrace.so
@(,firebird,) libexec/firebird/udf/fbudf.so
@(,firebird,) libexec/firebird/udf/fbudf.sql
@(,firebird,) libexec/firebird/udf/ib_udf.so
@(,firebird,) libexec/firebird/udf/ib_udf2.sql
sbin/
 fb_inet_server
 fb_lock_print
 fb_smp_server
 fbserver
@preunexec [ -s %%LOCALSTATEDIR%%/firebird.log ] || rm -f %%LOCALSTATEDIR%%/firebird.log
@rmtry %%LOCALSTATEDIR%%/isc_event1.`hostname`
@rmtry %%LOCALSTATEDIR%%/isc_init1.`hostname`
@rmtry %%LOCALSTATEDIR%%/isc_lock1.`hostname`


[FILE:443:manifests/plist.client]
@sample %%CONFDIR%%/firebird.conf.sample
bin/
 gpre
 isql-fb
 qli
include/
 ib_util.h
 ibase.h
 iberror.h
 perf.h
lib/
 libfbclient.so
 libfbclient.so.%%SOMAJOR%%
 libfbclient.so.%%SOMINOR%%
 libfbclient.so.%%SOVERSION%%
 libfbembed.so
 libfbembed.so.%%SOMAJOR%%
 libfbembed.so.%%SOMINOR%%
 libfbembed.so.%%SOVERSION%%
 libgds.so
 libgds.so.%%SOMAJOR%%
 libgds.so.%%SOMINOR%%
 libib_util.so
share/firebird/
 de_DE.msg
 firebird.msg
 fr_FR.msg


[FILE:287:patches/patch-builds_install_misc_firebird.conf.in]
--- builds/install/misc/firebird.conf.in.orig	2020-06-26 08:30:29 UTC
+++ builds/install/misc/firebird.conf.in
@@ -189,7 +189,7 @@
 #
 # Type: string (special format)
 #
-#UdfAccess = Restrict UDF
+UdfAccess = Restrict %%PREFIX%%/libexec/firebird/udf
 
 
 # ----------------------------


[FILE:1435:patches/patch-builds_posix_make.defaults]
--- builds/posix/make.defaults.orig	2020-06-26 08:30:29 UTC
+++ builds/posix/make.defaults
@@ -144,7 +144,7 @@ RM_R=		rm -rf
 CHMOD=			chmod
 CHMOD_6=		chmod 666
 CHMOD_7=		chmod 777
-CHMOD_S7=		chmod 06777
+CHMOD_S7=		chmod 04555
 MV=			mv -f
 TOUCH=			touch
 CP=			cp
@@ -240,7 +240,7 @@ LIBFBINTL_SO = $(FB_BUILD)/intl/$(LIB_PR
 
 ifeq ($(EDITLINE_FLG),Y)
   ifeq ($(STD_EDITLINE), true)
-	LIBEDITLINE := -l$(READLINE)
+	LIBEDITLINE := $(shell pkgconf libedit --libs)
   else
 	LIBEDITLINE := $(LIB)/libedit.a
   endif
@@ -362,7 +362,7 @@ CREATE_DB	= $(RBIN)/create_db$(EXEC_EXT)
 GDS_DROP	= $(BIN)/gds_drop$(EXEC_EXT)
 FBSVCMGR	= $(BIN)/fbsvcmgr$(EXEC_EXT)
 FBTRACEMGR	= $(BIN)/fbtracemgr$(EXEC_EXT)
-GSTAT		= $(BIN)/gstat$(EXEC_EXT)
+GSTAT		= $(BIN)/fbstat$(EXEC_EXT)
 NBACKUP		= $(BIN)/nbackup$(EXEC_EXT)
 LOCKPRINT	= $(BIN)/fb_lock_print$(EXEC_EXT)
 GSEC		= $(BIN)/gsec$(EXEC_EXT)
@@ -383,13 +383,13 @@ SECURITY_FDB	= $(FIREBIRD)/security3.fdb
 QLI            = $(BIN)/qli$(EXEC_EXT)
 
 # From isql
-ISQL            = $(BIN)/isql$(EXEC_EXT)
-RUN_ISQL        = $(RBIN)/isql$(EXEC_EXT)
+ISQL            = $(BIN)/isql-fb$(EXEC_EXT)
+RUN_ISQL        = $(RBIN)/isql-fb$(EXEC_EXT)
 
 # From burp
 GBAK            = $(BIN)/gbak$(EXEC_EXT)
 RUN_GBAK        = $(RBIN)/gbak$(EXEC_EXT)
-GSPLIT          = $(BIN)/gsplit$(EXEC_EXT)
+GSPLIT          = $(BIN)/fbsplit$(EXEC_EXT)
 
 # From gpre
 # (gpre current is a link to one of the others)


[FILE:810:patches/patch-builds_posix_prefix.freebsd__amd64]
--- builds/posix/prefix.freebsd_amd64.orig	2020-06-26 08:30:29 UTC
+++ builds/posix/prefix.freebsd_amd64
@@ -20,5 +20,13 @@
 
 EXE_LINK_OPTIONS+=-Wl,-rpath,../gen/firebird/lib
 
-PROD_FLAGS=-O -fno-builtin -DFREEBSD -DAMD64 -pipe -MMD -fPIC
-DEV_FLAGS=-ggdb -DFREEBSD -DAMD64 -pipe -MMD -p -fPIC -Wall -Wno-non-virtual-dtor
+COMMON_FLAGS=-DFREEBSD -DAMD64 -pipe -MMD -fPIC
+PROD_FLAGS=$(COMMON_FLAGS) -O0 -g -fno-builtin -Wno-deprecated
+DEV_FLAGS=$(COMMON_FLAGS) -ggdb -p -Wall -Wno-non-virtual-dtor
+
+# This file must be compiled with SSE4.2 support
+%/CRC32C.o: COMMON_FLAGS += -msse4
+
+# These files are generated incorrectly (e.g. array.epp => array.cpp)
+%/array.o %/blob.o %/alice_meta.o %/restore.o %/backup.o: COMMON_FLAGS += -Wno-narrowing
+%/OdsDetection.o %/dba.o: COMMON_FLAGS += -Wno-narrowing


[FILE:652:patches/patch-configure.ac]
--- configure.ac.orig	2020-06-26 08:30:29 UTC
+++ configure.ac
@@ -147,7 +147,7 @@ dnl CPU_TYPE=ppc64
 	EXPORT_SYMBOLS_STYLE=aix
     ;;
 
-  amd64-*-freebsd* | x86_64*-*-freebsd* | x86_64*-*-k*bsd*-gnu)
+  amd64-*-freebsd* | x86_64*-*-freebsd* | x86_64-*-dragonfly* | x86_64*-*-k*bsd*-gnu)
     MAKEFILE_PREFIX=freebsd_amd64
     case "$build" in
         x86_64*-*-k*bsd-gnu)      # Debian/kFreeBSD
@@ -173,7 +173,7 @@ dnl CPU_TYPE=ppc64
     SHRLIB_EXT=so
     ;;
 
-  *-*-freebsd* | *-*-k*bsd*-gnu)
+  *-*-freebsd* | *-*-dragonfly* | *-*-k*bsd*-gnu)
     MAKEFILE_PREFIX=freebsd
     case "$build" in
         *-*-k*bsd-gnu)      # Debian/kFreeBSD


[FILE:1837:patches/patch-debian-fbserver-startup]
Description: fix fbguard to exit to the OS only after fbserver is ready
 Exiting right after forking causes a race condition making it possible that
 the service says it is startew, but the fbserver process isn't ready yet to
 serve requests, because it hasn't called listen() yet.
 .
 The patch makes fbserver send SIGUSR1 to the fbguard parent process, which
 waits for SIGUSR1 before it returns the controll to the OS.
Bug-Debian: https://bugs.debian.org/859234
Forwarded: https://sourceforge.net/p/firebird/mailman/message/35769037/
Author: Damyan Ivanov <dmn@debian.org>

see separate src/remote/inet.cpp patch (partial)

--- src/utilities/guard/guard.cpp.orig	2020-06-26 08:30:29 UTC
+++ src/utilities/guard/guard.cpp
@@ -162,13 +162,32 @@ int CLIB_ROUTINE main( int argc, char **
 		exit(-5);
 	}
 
+	sigset_t ss, save_sig_mask;
+	sigemptyset(&ss);
+	sigaddset(&ss, SIGUSR1);
+	sigprocmask(SIG_BLOCK, &ss, &save_sig_mask);
+
 	// detach from controlling tty
 	if (daemon && fork()) {
+		int sig;
+
+		struct timespec ts = { .tv_sec=15, .tv_nsec= 0 };
+		do {
+			sig = sigtimedwait( &ss, NULL, &ts );
+		} while ( sig == EINTR );
+
+		if ( sig != SIGUSR1 ) {
+			fprintf( stderr, "Time out waiting for fbserver process start\n");
+			exit(-4);
+		}
+
 		exit(0);
 	}
+	sigprocmask(SIG_SETMASK, &save_sig_mask, NULL);
 	divorce_terminal(0);
 
 	time_t timer = 0;
+	bool first_start = true;
 
 	do {
 		int ret_code;
@@ -187,6 +206,18 @@ int CLIB_ROUTINE main( int argc, char **
 		}
 		timer = time(0);
 
+		if (first_start)
+		{
+			char pid[10];
+			snprintf(pid, sizeof(pid), "%d", getppid());
+			setenv("FB_SIGNAL_PROCESS", pid, 1);
+			first_start = false;
+		}
+		else
+		{
+			unsetenv("FB_SIGNAL_PROCESS");
+		}
+
 		pid_t child_pid =
 			UTIL_start_process(SERVER_BINARY, server_args, prog_name);
 		if (child_pid == -1)


[FILE:1563:patches/patch-debian-no-copy-from-icu]
Description: Link isql with ICU instead of embedding part of it in the source
Author: Damyan Ivanov <dmn@debian.org>

see builds/posix/Makefile.in patch for rest (partial)

--- src/isql/isql.epp.orig	2020-06-26 08:30:29 UTC
+++ src/isql/isql.epp
@@ -167,34 +167,6 @@ const char* UNKNOWN = "*unknown*";
 
 namespace IcuUtil
 {
-	// Duplicate from ICU to not need to link ISQL with it. It's used by U8_NEXT_UNSAFE.
-	static const uint8_t utf8_countTrailBytes[256] = {
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-
-		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
-		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
-
-		2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
-		3, 3, 3, 3, 3,
-		3, 3, 3,    /* illegal in Unicode */
-		4, 4, 4, 4, /* illegal in Unicode */
-		5, 5,       /* illegal in Unicode */
-		0, 0        /* illegal bytes 0xfe and 0xff */
-	};
-
 	// Return the number of characters of a string.
 	static unsigned charLength(SSHORT charset, unsigned len, const char* str)
 	{


[FILE:329:patches/patch-extern_btyacc_Makefile]
--- extern/btyacc/Makefile.orig	2020-06-26 08:30:29 UTC
+++ extern/btyacc/Makefile
@@ -42,7 +42,7 @@ OTHERS	      = README README.BYACC \
 all:		$(PROGRAM)
 
 $(PROGRAM):     $(OBJS) $(LIBS)
-		$(CC) $(LDFLAGS) -o $(PROGRAM) $(OBJS) $(LIBS)
+		$(CC) $(CFLAGS) $(LDFLAGS) -o $(PROGRAM) $(OBJS) $(LIBS)
 
 clean:;		rm -f $(OBJS)
 


[FILE:735:patches/patch-extern_cloop_Makefile]
--- extern/cloop/Makefile.orig	2020-06-26 08:30:29 UTC
+++ extern/cloop/Makefile
@@ -6,7 +6,7 @@ TARGET	:= release
 
 CC	:= $(CC)
 CXX	:= $(CXX)
-LD	:= $(CXX)
+LD	:= $(CXX) $(LDFLAGS)
 
 SRC_DIR		:= src
 BUILD_DIR	:= build
@@ -27,8 +27,9 @@ SRCS_CPP := $(foreach sdir,$(SRC_DIRS),$
 OBJS_C := $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRCS_C))
 OBJS_CPP := $(patsubst $(SRC_DIR)/%.cpp,$(OBJ_DIR)/%.o,$(SRCS_CPP))
 
-C_FLAGS := -ggdb -fPIC -MMD -MP -W -Wall -Wno-unused-parameter
-CXX_FLAGS := $(C_FLAGS)
+COMMON_C_FLAGS := -ggdb -fPIC -MMD -MP -W -Wall -Wno-unused-parameter
+C_FLAGS := $(COMMON_C_FLAGS) $(CFLAGS) $(CPPFLAGS)
+CXX_FLAGS := $(COMMON_C_FLAGS) $(CXXFLAGS) $(CPPFLAGS)
 FPC_FLAGS := -Mdelphi
 
 ifeq ($(TARGET),release)


[FILE:296:patches/patch-src_common_os_posix_SyncSignals.cpp]
--- src/common/os/posix/SyncSignals.cpp.orig	2020-06-26 08:30:29 UTC
+++ src/common/os/posix/SyncSignals.cpp
@@ -54,9 +54,6 @@
 #include <errno.h>
 #include <unistd.h>
 
-#if defined FREEBSD || defined NETBSD || defined DARWIN || defined HPUX
-#define sigset      signal
-#endif
 
 namespace {
 


[FILE:655:patches/patch-src_remote_SockAddr.h]
--- src/remote/SockAddr.h.orig	2020-06-26 08:30:29 UTC
+++ src/remote/SockAddr.h
@@ -112,11 +112,13 @@ public:
 
 #define AF_INET6_POSIX		10
 #define AF_INET6_WINDOWS	23
+#define AF_INET6_BSD		28
 #define AF_INET6_DARWIN		30
 
 #if AF_INET6 == AF_INET6_POSIX
 #elif AF_INET6 == AF_INET6_WINDOWS
 #elif AF_INET6 == AF_INET6_DARWIN
+#elif AF_INET6 == AF_INET6_BSD
 #else
 #error Unknown value of AF_INET6 !
 #endif
@@ -132,6 +134,7 @@ inline void SockAddr::checkAndFixFamily(
 	case AF_INET6_POSIX:
 	case AF_INET6_WINDOWS:
 	case AF_INET6_DARWIN:
+	case AF_INET6_BSD:
 		data.sock.sa_family = AF_INET6;
 		fb_assert(len == sizeof(sockaddr_in6));
 		break;


[FILE:785:patches/patch-src_remote_inet.cpp]
--- src/remote/inet.cpp.orig	2020-06-26 08:30:29 UTC
+++ src/remote/inet.cpp
@@ -918,7 +918,7 @@ rem_port* INET_connect(const TEXT* name,
 		gai_hints.ai_family = ((host.hasData() || !ipv6) ? AF_UNSPEC : AF_INET6);
 	gai_hints.ai_socktype = SOCK_STREAM;
 
-#if !defined(WIN_NT) && !defined(__clang__)
+#if !defined(WIN_NT) && !defined(__FreeBSD__) && !defined(__DragonFly__)
 	gai_hints.ai_protocol = SOL_TCP;
 #else
 	gai_hints.ai_protocol = IPPROTO_TCP;
@@ -1133,6 +1133,12 @@ static rem_port* listener_socket(rem_por
 
 	inet_ports->registerPort(port);
 
+	char *parent_pid;
+	if (parent_pid = getenv("FB_SIGNAL_PROCESS"))
+	{
+		kill(atoi(parent_pid), SIGUSR1);
+	}
+
 	if (flag & SRVR_multi_client)
 	{
 		// Prevent the generation of dummy keepalive packets on the connect port.


[FILE:1896:files/firebird.in]
#!/bin/sh
#
# PROVIDE: firebird
# REQUIRE: LOGIN
# KEYWORD: shutdown
#
# Add the following line to /etc/rc.conf to enable Firebird Database:
#
#
# firebird_enable:	Set it to "YES" to enable firebird.
#			Default is "NO".
# firebird_mode:	Set it to "superclassic" or "superserver" to enable firebird.
#			Default is "superclassic".
# firebird_flags:	Set options to run fbserver or fb_smp_server.
# 			Default is "-el /var/db/firebird".
# firebird_pidfile:	Set full path to pid file.
#			Default is "/var/run/firebird.pid".
#

. /etc/rc.subr

name=firebird
rcvar=firebird_enable

load_rc_config $name

firebird_enable=${firebird_enable:-"NO"}
firebird_mode=${firebird_mode:-"superclassic"}
firebird_flags=${firebird_flags:-"-el /var/db/firebird"}
firebird_pidfile=${firebird_pidfile:-"/var/run/${name}.pid"}
firebird_user=firebird

command=%%PREFIX%%/sbin/fb_smp_server
command_args="${firebird_flags} &"
pidfile=${firebird_pidfile}
start_precmd="start_precmd"
start_postcmd="start_postcmd"
stop_postcmd="stop_postcmd"
reload_postcmd="reload_postcmd"

start_precmd()
{
	touch ${firebird_pidfile}
	chown "${firebird_user}:wheel" ${firebird_pidfile} ||
		err 1 "Cannot chown ${firebird_pidfile}"
}

start_postcmd()
{
	pgrep -u ${firebird_user} ${command_app} > ${firebird_pidfile}
	echo "Current firebird mode is $firebird_mode"
}

stop_postcmd()
{
        rm -f ${pidfile}
}

reload_postcmd()
{
        rm -f ${pidfile}
        run_rc_command start
}

case "${firebird_mode}" in
        superclassic)
                command=%%PREFIX%%/sbin/fb_smp_server
                command_app=fb_smp_server
                ;;
        superserver)
                command=%%PREFIX%%/sbin/fbserver
                command_app=fbserver
                ;;
        *)
                warn "$firebird_mode is an invalid value for firebird_mode"
                return 1
                ;;
esac

run_rc_command "$1"


[FILE:838:files/pkg-install-server]
#!/bin/sh

PATH=/bin:/usr/bin:/usr/sbin

buildwarning() {
cat <<EOF
###############################################################################

                             ** IMPORTANT **

Keep in mind that if you build firebird server as 'root', this may cause
conflicts with SysV semaphores of running services.

If you want to cancel it, press ctrl-C now if you need check some things
before of build it.

###############################################################################
EOF
        sleep 5
}

case $2 in
PRE-INSTALL)
	buildwarning
;;
POST-INSTALL)
	cd /var/db/firebird

# Lock files

for i in isc_init1 isc_lock1 isc_event1
do
	FileName=$i.`hostname`
	touch $FileName
	chmod uga=rw $FileName
	chown firebird:firebird $FileName
done

touch firebird.log
chown firebird:firebird firebird.log security2.fdb

;;

esac


[FILE:1468:files/pkg-message-server.in]
###############################################################################

Firebird was installed.

1) Support for Super Server has been added
2) Before start the server ensure that the following line exists in /etc/services:

gds_db		3050/tcp  #InterBase Database Remote Protocol

3) If you use inetd (Classic Server) then add the following line to /etc/inetd.conf

gds_db	stream	tcp	nowait	firebird	%%PREFIX%%/sbin/fb_inet_server  fb_inet_server

And finally restart inetd.

4) If you want to use SuperClassic Server then you must add the following lines
   to /etc/rc.conf file.

 firebird_enable="YES"
 firebird_mode="superclassic"

5) If you want to use Super Server then you must add the following lines to
   /etc/rc.conf file.

 firebird_enable="YES"
 firebird_mode="superserver"

 Note: Keep in mind that you only can add one of them but never both modes on
       the same time

6) Bedore doing anything serious with Firebird, it is STRONGLY recommended
   that you change the SYSDBA password with:

 # gsec -user SYSDBA -pass masterkey
 GSEC> modify SYSDBA -pw newpassword
 GSEC> quit

7) See documentation in %%DOCDIR%%/ for more information.
8) Some firebird tools were renamed for avoid conflicts with some other ports

	%%PREFIX%%/bin/isql   -> %%PREFIX%%/bin/isql-fb
	%%PREFIX%%/bin/gstat  -> %%PREFIX%%/bin/fbstat
	%%PREFIX%%/bin/gsplit -> %%PREFIX%%/bin/fbsplit

################################################################################


[FILE:192:dragonfly/patch-builds_posix_empty.vers]
--- builds/posix/empty.vers.orig	2020-06-26 08:30:29 UTC
+++ builds/posix/empty.vers
@@ -21,3 +21,5 @@
 #  Contributor(s): ______________________________________.
 
 main
+__progname
+environ


[FILE:192:freebsd/patch-builds_posix_empty.vers]
--- builds/posix/empty.vers.orig	2020-06-26 08:30:29 UTC
+++ builds/posix/empty.vers
@@ -21,3 +21,5 @@
 #  Contributor(s): ______________________________________.
 
 main
+__progname
+environ

