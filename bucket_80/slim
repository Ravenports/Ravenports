# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		slim
VERSION=		1.3.6
REVISION=		1
KEYWORDS=		x11
VARIANTS=		standard
SDESC[standard]=	Simple desktop-independent login manager for X11
HOMEPAGE=		https://sourceforge.net/projects/slim.berlios/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/slim.berlios/
DISTFILE[1]=		slim-1.3.6.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		dbus:dev:standard
BUILDRUN_DEPENDS=	consolekit:primary:standard
			freetype:primary:standard

USES=			c++:single cmake jpeg fontconfig pkgconfig png zlib
XORG_COMPONENTS=	x11 xft xmu xrandr

LICENSE=		GPLv2+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"ifndef _APP_H_"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/app.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11/slim

RC_SUBR=		slim:single

CMAKE_ARGS=		-DBUILD_SLIMLOCK=no
			-DBUILD_SHARED_LIBS=yes
			-DUSE_CONSOLEKIT=yes

post-patch:
	${CP} ${WRKSRC}/slim.conf ${WRKSRC}/slim.conf.sample
	${REINPLACE_CMD} -e 's|%%LOCALBASE%%|${LOCALBASE}|g' \
		${WRKSRC}/slim.conf.sample
	${REINPLACE_CMD} -e 's|%%PREFIX%%|${PREFIX}|g' \
		${WRKSRC}/slim.conf.sample

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/slim
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libslim.so.1.3.6

[FILE:622:descriptions/desc.single]
SLiM or the "Simple Login Manager" is a desktop-independent graphical 
login manager for X11, derived from Login.app.

It is meant to be light-weight and thus just provides basic display 
manager functionality necessary for graphical user login. SLiM does 
however include the feature to choose which desktop environment to start 
on a per-login basis. Use the F1 key to cycle through the available 
options (the login manager uses the xdg-style .desktop files that come
with most DEs).

SLiM also supports themes and features like autologin, but that's about 
it. Notably there's no support for foreign keyboard layouts.


[FILE:96:distinfo]
21defeed175418c46d71af71fd493cd0cbffd693f9d43c2151529125859810df       232547 slim-1.3.6.tar.gz


[FILE:210:manifests/plist.single]
%%ONLY-LINUX%%lib/systemd/system/slim.service
@sample etc/slim.conf.sample
bin/slim
lib/
 libslim.so
 libslim.so.1.3.6
share/man/man1/slim.1.gz
share/slim/themes/default/
 background.jpg
 panel.png
 slim.theme


[FILE:2773:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2013-10-01 22:38:05 UTC
+++ CMakeLists.txt
@@ -14,6 +14,7 @@ INCLUDE(CheckIncludeFile)
 INCLUDE(CheckCCompilerFlag)
 INCLUDE(CheckCXXCompilerFlag)
 INCLUDE(CheckTypeSize)
+INCLUDE(GNUInstallDirs)
 
 # Version
 set(SLIM_VERSION_MAJOR "1")
@@ -23,14 +24,15 @@ set(SLIM_VERSION "${SLIM_VERSION_MAJOR}.
 
 set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Installation Directory")
 set(PKGDATADIR "${CMAKE_INSTALL_PREFIX}/share/slim")
-set(SYSCONFDIR "/etc")
-set(LIBDIR "/lib")
+set(SYSCONFDIR "${CMAKE_INSTALL_FULL_SYSCONFDIR}")
+set(LIBDIR "${CMAKE_INSTALL_FULL_LIBDIR}")
 set(MANDIR "${CMAKE_INSTALL_PREFIX}/share/man")
 
 set(SLIM_DEFINITIONS)
 if(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD" OR
 		${CMAKE_SYSTEM_NAME} MATCHES "NetBSD" OR
-		${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD"
+		${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD" OR
+		${CMAKE_SYSTEM_NAME} MATCHES "DragonFly"
 		)
 	set(SLIM_DEFINITIONS ${SLIM_DEFINITIONS} "-DNEEDS_BASENAME")
 else()
@@ -70,8 +72,10 @@ set(common_srcs
 )
 if(USE_PAM)
 	set(common_srcs ${common_srcs} PAM.cpp)
-    # for now, only build slimlock if we are using PAM.
-    set(BUILD_SLIMLOCK 1)
+        # for now, only build slimlock if we are using PAM.
+        if(BUILD_SLIMLOCK)
+                set(BUILD_SLIMLOCK 1)
+        endif(BUILD_SLIMLOCK)
 endif(USE_PAM)
 
 # Build common library
@@ -120,7 +124,9 @@ if(USE_PAM)
 		message("\tPAM Found")
 		set(SLIM_DEFINITIONS ${SLIM_DEFINITIONS} "-DUSE_PAM")
 		target_link_libraries(${PROJECT_NAME} ${PAM_LIBRARY})
-		target_link_libraries(slimlock ${PAM_LIBRARY})
+		if(BUILD_SLIMLOCK)
+		        target_link_libraries(slimlock ${PAM_LIBRARY})
+		endif(BUILD_SLIMLOCK)
 		include_directories(${PAM_INCLUDE_DIR})
 	else(PAM_FOUND)
 		message("\tPAM Not Found")
@@ -195,6 +201,7 @@ target_link_libraries(${PROJECT_NAME}
 	${FREETYPE_LIBRARY}
 	${JPEG_LIBRARIES}
 	${PNG_LIBRARIES}
+	util
     libslim
 )
 
@@ -221,7 +228,9 @@ endif(BUILD_SLIMLOCK)
 ####### install
 # slim
 install(TARGETS slim RUNTIME DESTINATION bin)
-install(TARGETS slimlock RUNTIME DESTINATION bin)
+if(BUILD_SLIMLOCK)
+        install(TARGETS slimlock RUNTIME DESTINATION bin)
+endif(BUILD_SLIMLOCK)
 
 if (BUILD_SHARED_LIBS)
 	set_target_properties(libslim PROPERTIES
@@ -236,9 +245,11 @@ endif (BUILD_SHARED_LIBS)
 
 # man file
 install(FILES slim.1 DESTINATION ${MANDIR}/man1/)
-install(FILES slimlock.1 DESTINATION ${MANDIR}/man1/)
+if(BUILD_SLIMLOCK)
+        install(FILES slimlock.1 DESTINATION ${MANDIR}/man1/)
+endif(BUILD_SLIMLOCK)
 # configure
-install(FILES slim.conf DESTINATION ${SYSCONFDIR})
+install(FILES slim.conf.sample DESTINATION ${SYSCONFDIR})
 # systemd service file
 if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
 	install(FILES slim.service DESTINATION ${LIBDIR}/systemd/system)


[FILE:348:patches/patch-panel.cpp]
--- panel.cpp.orig	2013-10-01 22:38:05 UTC
+++ panel.cpp
@@ -48,7 +48,7 @@ Panel::Panel(Display* dpy, int scr, Wind
 		gcm = GCGraphicsExposures;
 		gcv.graphics_exposures = False;
 		WinGC = XCreateGC(Dpy, Win, gcm, &gcv);
-		if (WinGC < 0) {
+		if (WinGC == NULL) {
 			cerr << APPNAME
 				<< ": failed to create pixmap\n.";
 			exit(ERR_EXIT);


[FILE:1200:files/slim.in]
#!/bin/sh

# $FreeBSD: head/x11/slim/files/slim.in 319487 2013-05-31 11:54:01Z crees $
#
# PROVIDE: slim
# REQUIRE: LOGIN dbus hald
# KEYWORD: shutdown
#
# Add the following line to /etc/rc.conf to enable slim:
# slim_enable="YES"
#
# Alternatively, edit /etc/ttys and change the line below
#   ttyv8   "/usr/X11R6/bin/xdm -nodaemon"  xterm   off secure
# to this:
#   ttyv8   "%%PREFIX%%/bin/slim"   xterm   on secure

. /etc/rc.subr

name="slim"
rcvar=slim_enable

load_rc_config slim

: ${slim_enable:="NO"}

command=%%PREFIX%%/bin/slim
command_args="-d"
start_precmd=${name}_rmfile
stop_precmd=${name}_prestop
stop_postcmd=${name}_rmfile

find_pidfile()
{
	if get_pidfile_from_conf lockfile %%PREFIX%%/etc/${name}.conf; then
		pidfile="$_pidfile_from_conf"
	else
		pidfile="/var/run/${name}.pid"
	fi
}

slim_rmfile()
{
	local file

	[ -z "$pidfile" ] && find_pidfile

	for file in $pidfile /var/run/slim.auth; do
		[ -e "$file" ] && unlink $file
	done
	
	# Needed if neither file exists
	return 0
}

slim_prestop()
{
	local xpid

	find_pidfile

	xpid=`ps -axww | grep '/bin/[X] .* -auth /var/run/slim.auth' | grep -v grep | awk '{print $1};'`
	[ -n "$xpid" ] && kill $xpid
}

run_rc_command "$1"


[FILE:3421:freebsd/patch-slim.conf]
--- slim.conf.orig	2013-10-01 22:38:05 UTC
+++ slim.conf
@@ -1,17 +1,20 @@
 # Path, X server and arguments (if needed)
 # Note: -xauth $authfile is automatically appended
-default_path        /bin:/usr/bin:/usr/local/bin
-default_xserver     /usr/bin/X
-#xserver_arguments   -dpi 75
+# Use default path from /etc/login.conf
+default_path        /sbin:/bin:/usr/sbin:/usr/bin:/usr/games:%%LOCALBASE%%/sbin:%%LOCALBASE%%/bin:%%PREFIX%%/sbin:%%PREFIX%%/bin
+default_xserver     %%PREFIX%%/bin/X
+# The X server needs to be started on an unused virtual terminal,
+# for FreeBSD in a default configuration, the first one of those is #09
+xserver_arguments   -nolisten tcp vt09
 
 # Commands for halt, login, etc.
-halt_cmd            /sbin/shutdown -h now
+halt_cmd            /sbin/shutdown -p now
 reboot_cmd          /sbin/shutdown -r now
-console_cmd         /usr/bin/xterm -C -fg white -bg black +sb -T "Console login" -e /bin/sh -c "/bin/cat /etc/issue; exec /bin/login"
-#suspend_cmd        /usr/sbin/suspend
+console_cmd         %%PREFIX%%/bin/xterm -C -fg white -bg black +sb -T "Console login" -e /bin/sh -c "/bin/cat /etc/motd; exec /usr/bin/login"
+suspend_cmd        /usr/sbin/acpiconf -s 3
 
 # Full path to the xauth binary
-xauth_path         /usr/bin/xauth 
+xauth_path         %%PREFIX%%/bin/xauth
 
 # Xauth file for server
 authfile           /var/run/slim.auth
@@ -32,8 +35,8 @@ authfile           /var/run/slim.auth
 # NOTE: if your system does not have bash you need
 # to adjust the command according to your preferred shell,
 # i.e. for freebsd use:
-# login_cmd           exec /bin/sh - ~/.xinitrc %session
-login_cmd           exec /bin/bash -login ~/.xinitrc %session
+login_cmd           exec /bin/sh - ~/.xinitrc %session
+#login_cmd           exec /bin/bash -login ~/.xinitrc %session
 
 # Commands executed when starting and exiting a session.
 # They can be used for registering a X11 session with
@@ -47,11 +50,16 @@ login_cmd           exec /bin/bash -logi
 # options "-d" and "-nodaemon"
 # daemon	yes
 
-# Available sessions (first one is the default).
-# The current chosen session name is replaced in the login_cmd
-# above, so your login command can handle different sessions.
-# see the xinitrc.sample file shipped with slim sources
-sessions            xfce4,icewm-session,wmaker,blackbox
+# Option "sessions" is no longer supported.
+# Now you need to put session files in the directory specified
+# by option "sessiondir".
+# sessions            xfce4,icewm-session,wmaker,blackbox
+
+# Directory of session files.
+# They should be xdg-style .desktop files.
+# The "Name" entry in the session file would be used as session name.
+# The "Exec" entry would replace %session in login_cmd.
+sessiondir		%%PREFIX%%/share/xsessions
 
 # Executed when pressing F11 (requires imagemagick)
 screenshot_cmd      import -window root /slim.png
@@ -63,7 +71,7 @@ welcome_msg         Welcome to %host
 # session_msg         Session: 
 
 # shutdown / reboot messages
-shutdown_msg       The system is halting...
+shutdown_msg       The system is powering down...
 reboot_msg         The system is rebooting...
 
 # default user, leave blank or remove this line
@@ -84,7 +92,7 @@ reboot_msg         The system is rebooti
 current_theme       default
 
 # Lock file
-lockfile            /var/run/slim.lock
+lockfile            /var/run/slim.pid
 
 # Log file
 logfile             /var/log/slim.log

