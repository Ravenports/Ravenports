# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		slim
VERSION=		1.4.0
KEYWORDS=		x11
VARIANTS=		standard
SDESC[standard]=	Simple desktop-independent login manager for X11
HOMEPAGE=		https://sourceforge.net/projects/slim.berlios/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/slim-fork
DISTFILE[1]=		slim-1.4.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		dbus:dev:standard
			consolekit:dev:standard
BUILDRUN_DEPENDS=	consolekit:primary:standard

USES=			c++:primary cmake jpeg fontconfig pkgconfig png zlib
XORG_COMPONENTS=	x11 xft xmu xrandr

LICENSE=		GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"ifndef _APP_H_"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/app.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11/slim

SOVERSION=		1.4.0
RC_SUBR=		slim:primary

CMAKE_ARGS=		-DBUILD_SLIMLOCK=no
			-DBUILD_SHARED_LIBS=yes
			-DUSE_CONSOLEKIT=yes

post-patch:
	${MV} ${WRKSRC}/slim.conf ${WRKSRC}/slim.conf.sample
	${REINPLACE_CMD} \
		-e 's|%%LOCALBASE%%|${LOCALBASE}|g' \
		-e 's|%%PREFIX%%|${PREFIX}|g' \
		${WRKSRC}/slim.conf.sample

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/slim
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libslim.so

[FILE:807:descriptions/desc.primary]
SLiM or the "Simple Login Manager" is a desktop-independent graphical 
login manager for X11, derived from Login.app.

It is meant to be light-weight and thus just provides basic display 
manager functionality necessary for graphical user login. SLiM does 
however include the feature to choose which desktop environment to start 
on a per-login basis. Use the F1 key to cycle through the available 
options (the login manager uses the xdg-style .desktop files that come
with most DEs).

SLiM also supports themes and features like autologin, but that's about 
it. Notably there's no support for foreign keyboard layouts.

The original project has not been maintained since 2013. This project
was forked from the last release, V1.3.6, incorporating fixes to bring
it up to date with developments in Linux. 


[FILE:96:distinfo]
350b31d5070002e9729ea63e1d62f97596ba0062151c0f3ee16f02af67753204       530318 slim-1.4.0.tar.gz


[FILE:214:manifests/plist.primary]
@sample etc/slim.conf.sample
bin/slim
lib/
 libslim.so
 libslim.so.%%SOVERSION%%
share/slim/themes/default/
 background.jpg
 panel.png
 slim.theme
share/slim/themes/original/
 background.jpg
 panel.png
 slim.theme


[FILE:25:manifests/plist.man]
share/man/man1/slim.1.gz


[FILE:1231:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2023-01-21 19:54:32 UTC
+++ CMakeLists.txt
@@ -23,11 +23,12 @@ set(SLIM_VERSION_PATCH "0")
 set(SLIM_VERSION "${SLIM_VERSION_MAJOR}.${SLIM_VERSION_MINOR}.${SLIM_VERSION_PATCH}")
 
 set(PKGDATADIR "${CMAKE_INSTALL_FULL_DATADIR}/slim")
-set(SYSCONFDIR "/etc")
+set(SYSCONFDIR "${CMAKE_INSTALL_FULL_SYSCONFDIR}")
 
 set(SLIM_DEFINITIONS)
 if(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD" OR
 		${CMAKE_SYSTEM_NAME} MATCHES "NetBSD" OR
+		${CMAKE_SYSTEM_NAME} MATCHES "DragonFly|MidnightBSD" OR
 		${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD"
 		)
 	set(SLIM_DEFINITIONS ${SLIM_DEFINITIONS} "-DNEEDS_BASENAME")
@@ -178,6 +179,7 @@ target_link_libraries(libslim
 	${X11_Xrandr_LIB}
 	${JPEG_LIBRARIES}
 	${PNG_LIBRARIES}
+        util
 )
 
 #Set up library with all found packages for slim
@@ -235,7 +237,7 @@ endif (BUILD_SHARED_LIBS)
 install(FILES slim.1 DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)
 
 # configure - in theory we should use CMAKE_INSTALL_SYSCONFDIR but that doesn't work
-install(FILES slim.conf DESTINATION ${SYSCONFDIR})
+install(FILES slim.conf.sample DESTINATION ${SYSCONFDIR})
 
 # systemd service file - commented out as broken - not all Linux uses systemd!
 #if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")


[FILE:2747:patches/patch-slim.conf]
--- slim.conf.orig	2023-01-14 11:47:23 UTC
+++ slim.conf
@@ -1,22 +1,21 @@
 # Path, X server and arguments (if needed)
 # Note: -xauth $authfile is automatically appended, vt07 appended if no
 # vtxx argument given.
-default_path        /bin:/usr/bin:/usr/local/bin
-default_xserver     /usr/bin/X
-#xserver_arguments   -dpi 75
+default_path        /bin:/usr/bin:%%LOCALBASE%%/bin
+default_xserver     %%LOCALBASE%%/bin/X
 xserver_arguments   -nolisten tcp -deferglyphs 16
 
 # Full path to the xauth binary
-xauth_path         /usr/bin/xauth 
+xauth_path         %%LOCALBASE%%/bin/xauth 
 
 # Xauth file for server
 authfile           /var/run/slim.auth
 
 
 # Commands for halt, login, etc.
-halt_cmd            /sbin/shutdown -h now
+halt_cmd            /sbin/shutdown -p now
 reboot_cmd          /sbin/shutdown -r now
-console_cmd         /usr/bin/xterm -C -fg white -bg black +sb -T "Console login" -e /bin/sh -c "/bin/cat /etc/issue; exec /bin/login"
+console_cmd         %%LOCALBASE%%/bin/xterm -C -fg white -bg black +sb -T "Console login" -e /bin/sh -c "/bin/cat /etc/issue; exec /bin/login"
 #suspend_cmd        /usr/sbin/suspend
 
 # Activate numlock when slim starts. Valid values: on|off
@@ -35,7 +34,7 @@ console_cmd         /usr/bin/xterm -C -f
 # NOTE: if your system does not have bash you need to adjust the command
 # according to your preferred shell, e.g. for freebsd use:
 # login_cmd           exec /bin/sh - ~/.xinitrc %session
-login_cmd           exec /bin/bash -login ~/.xinitrc %session
+login_cmd           exec /bin/sh -login ~/.xinitrc %session
 
 # Commands executed when starting and exiting a session.
 # They can be used for registering a X11 session with
@@ -43,8 +42,8 @@ login_cmd           exec /bin/bash -logi
 #
 # sessionstart_cmd	some command
 # sessionstop_cmd	some command
-sessionstart_cmd	/usr/bin/sessreg -a -l "$DISPLAY" %user
-sessionstop_cmd     /usr/bin/sessreg -d -l "$DISPLAY" %user
+sessionstart_cmd	%%LOCALBASE%%/bin/sessreg -a -l "$DISPLAY" %user
+sessionstop_cmd     %%LOCALBASE%%/bin/sessreg -d -l "$DISPLAY" %user
 
 # Start in daemon mode. Valid values: yes | no
 # Note that this can be overridden by the command line options "-d" and "-n"
@@ -103,7 +102,7 @@ wrong_passwd_timeout            0
 current_theme       default
 
 # Lock file
-lockfile            /run/slim.pid
+lockfile            /var/run/slim.pid
 
 # Log file - full path for a file, or just stderr (or /dev/stderr) to send
 # all log messages to stderr.
@@ -120,5 +119,5 @@ welcome_msg         Welcome to %host
 #session_msg         Session: 
 
 # shutdown / reboot messages
-shutdown_msg       The system is halting...
+shutdown_msg       The system is powering down...
 reboot_msg         The system is rebooting...


[FILE:1200:files/slim.in]
#!/bin/sh

# $FreeBSD: head/x11/slim/files/slim.in 319487 2013-05-31 11:54:01Z crees $
#
# PROVIDE: slim
# REQUIRE: LOGIN dbus hald
# KEYWORD: shutdown
#
# Add the following line to /etc/rc.conf to enable slim:
# slim_enable="YES"
#
# Alternatively, edit /etc/ttys and change the line below
#   ttyv8   "/usr/X11R6/bin/xdm -nodaemon"  xterm   off secure
# to this:
#   ttyv8   "%%PREFIX%%/bin/slim"   xterm   on secure

. /etc/rc.subr

name="slim"
rcvar=slim_enable

load_rc_config slim

: ${slim_enable:="NO"}

command=%%PREFIX%%/bin/slim
command_args="-d"
start_precmd=${name}_rmfile
stop_precmd=${name}_prestop
stop_postcmd=${name}_rmfile

find_pidfile()
{
	if get_pidfile_from_conf lockfile %%PREFIX%%/etc/${name}.conf; then
		pidfile="$_pidfile_from_conf"
	else
		pidfile="/var/run/${name}.pid"
	fi
}

slim_rmfile()
{
	local file

	[ -z "$pidfile" ] && find_pidfile

	for file in $pidfile /var/run/slim.auth; do
		[ -e "$file" ] && unlink $file
	done
	
	# Needed if neither file exists
	return 0
}

slim_prestop()
{
	local xpid

	find_pidfile

	xpid=`ps -axww | grep '/bin/[X] .* -auth /var/run/slim.auth' | grep -v grep | awk '{print $1};'`
	[ -n "$xpid" ] && kill $xpid
}

run_rc_command "$1"

