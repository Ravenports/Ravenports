# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-uritemplate
VERSION=		3.0.1
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		URI templates (PY37)
SDESC[py38]=		URI templates (PY38)
HOMEPAGE=		https://uritemplate.readthedocs.org
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/bf/0c/60d82c077998feb631608dca3cc1fe19ac074e772bf0c24cf409b977b815
DISTFILE[1]=		uritemplate-3.0.1-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		uritemplate-3.0.1.dist-info

GENERATED=		yes

[PY37].BUILD_DEPENDS_ON=		python-pip:single:py37
[PY37].USES_ON=				python:py37,wheel

[PY38].BUILD_DEPENDS_ON=		python-pip:single:py38
[PY38].USES_ON=				python:py38,wheel

[FILE:2495:descriptions/desc.single]
uritemplate
===========

Documentation_ -- GitHub_ -- Travis-CI_

Simple python library to deal with `URI Templates`_. The API looks like

.. code-block:: python

    from uritemplate import URITemplate, expand

    # NOTE: URI params must be strings not integers

    gist_uri = 'https://api.github.com/users/sigmavirus24/gists{/gist_id}'
    t = URITemplate(gist_uri)
    print(t.expand(gist_id='123456'))
    # => https://api.github.com/users/sigmavirus24/gists/123456

    # or
    print(expand(gist_uri, gist_id='123456'))

    # also
    t.expand({'gist_id': '123456'})
    print(expand(gist_uri, {'gist_id': '123456'}))

Where it might be useful to have a class

.. code-block:: python

    import requests

    class GitHubUser(object):
        url = URITemplate('https://api.github.com/user{/login}')
        def __init__(self, name):
            self.api_url = url.expand(login=name)
            response = requests.get(self.api_url)
            if response.status_code == 200:
                self.__dict__.update(response.json())

When the module containing this class is loaded, ``GitHubUser.url`` is 
evaluated and so the template is created once. It's often hard to notice in

Python, but object creation can consume a great deal of time and so can the

re module which uritemplate relies on. Constructing the object once should 
reduce the amount of time your code takes to run.

Installing
----------

::

    pip install uritemplate

License
-------

Modified BSD license_

.. _Documentation: https://uritemplate.readthedocs.io/
.. _GitHub: https://github.com/python-hyper/uritemplate
.. _Travis-CI: https://travis-ci.org/python-hyper/uritemplate
.. _URI Templates: http://tools.ietf.org/html/rfc6570
.. _license:
https://github.com/python-hyper/uritemplate/blob/master/LICENSE

Changelog - uritemplate
=======================

3.0.1 - 2019-12-19
------------------

- Update to Python 3.6, 3.7, and 3.8
- Drop support for Python 2.6, 3.2, and 3.3
- Ignore None in list argument expansion
- Handle a list with an empty string appropriately

3.0.0 - 2016-08-29
------------------

- Match major version number of uritemplate.py

2.0.0 - 2016-08-29
------------------

- Merge uritemplate.py into uritemplate

Changelog - uritemplate.py
==========================

3.0.2 - 2015-08-30
------------------

- Fix meta-package requirements.

3.0.1 - 2015-08-29
------------------

- Deprecate in favor of uritemplate. This package is now a metapackage that
  depends on uritemplate.


[FILE:117:distinfo]
07620c3f3f8eed1f12600845892b0e036a2420acf513c53f7de0abd911a5894f        15615 uritemplate-3.0.1-py2.py3-none-any.whl

