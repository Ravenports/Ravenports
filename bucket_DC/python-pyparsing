# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pyparsing
VERSION=		3.1.1
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Defines and executes parsing grammers (3.11)
SDESC[v12]=		Defines and executes parsing grammers (3.12)
HOMEPAGE=		https://github.com/pyparsing/pyparsing/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/39/92/8486ede85fcc088f1b3dba4ce92dd29d126fd96b0008ea213167940a2475
DISTFILE[1]=		pyparsing-3.1.1-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		pyparsing-3.1.1.dist-info

GENERATED=		yes

[PY311].USES_ON=			python:v11,wheel

[PY312].USES_ON=			python:v12,wheel

[FILE:887:descriptions/desc.single]
PyParsing -- A Python Parsing Module
====================================

|Version| |Build Status| |Coverage| |License| |Python Versions| |Snyk
Score|

Introduction
============

The pyparsing module is an alternative approach to creating and
executing simple grammars, vs. the traditional lex/yacc approach, or the
use of regular expressions. The pyparsing module provides a library of
classes that client code uses to construct the grammar directly in
Python code.

*[Since first writing this description of pyparsing in late 2003, this
technique for developing parsers has become more widespread, under the
name Parsing Expression Grammars - PEGs. See more information on PEGs*
[here]
*.]*

Here is a program to parse ``"Hello, World!"`` (or any greeting of the form
``"salutation, addressee!"``):

    :alt: Version

    :alt: License

    :alt: Python versions

   :alt: pyparsing


[FILE:111:distinfo]
32c7c0b711493c72ff18a981d24f28aaf9c1fb7ed5e9667c9e84e3db623bdbfb       103139 pyparsing-3.1.1-py3-none-any.whl

