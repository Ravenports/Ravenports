# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pyparsing
VERSION=		3.0.3
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Python parsing module (PY38)
SDESC[py39]=		Python parsing module (PY39)
HOMEPAGE=		https://github.com/pyparsing/pyparsing/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/1b/19/8d24092f75e3bc7b4b2a78c9c63664bdeb00298acd15fad5d614da2a25b1
DISTFILE[1]=		pyparsing-3.0.3-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		pyparsing-3.0.3.dist-info

GENERATED=		yes

[PY38].USES_ON=				python:py38,wheel

[PY39].USES_ON=				python:py39,wheel

[FILE:751:descriptions/desc.single]
PyParsing -- A Python Parsing Module
====================================

|Build Status| |Coverage|

Introduction
============

The pyparsing module is an alternative approach to creating and
executing simple grammars, vs. the traditional lex/yacc approach, or the
use of regular expressions. The pyparsing module provides a library of
classes that client code uses to construct the grammar directly in
Python code.

*[Since first writing this description of pyparsing in late 2003, this
technique for developing parsers has become more widespread, under the
name Parsing Expression Grammars - PEGs. See more information on PEGs*
[here]
*.]*

Here is a program to parse ``"Hello, World!"`` (or any greeting of the form
``"salutation, addressee!"``):


[FILE:111:distinfo]
f8d3fe9fc404576c5164f0f0c4e382c96b85265e023c409c43d48f65da9d60d0        96772 pyparsing-3.0.3-py3-none-any.whl

