# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pyparsing
VERSION=		3.0.7
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Python parsing module (3.10)
SDESC[py39]=		Python parsing module (3.9)
HOMEPAGE=		https://github.com/pyparsing/pyparsing/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/80/c1/23fd82ad3121656b585351aba6c19761926bb0db2ebed9e4ff09a43a3fcc
DISTFILE[1]=		pyparsing-3.0.7-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

DISTNAME=		pyparsing-3.0.7.dist-info

GENERATED=		yes

[PY39].USES_ON=				python:py39,wheel

[PY310].USES_ON=			python:py310,wheel

[FILE:751:descriptions/desc.single]
PyParsing -- A Python Parsing Module
====================================

|Build Status| |Coverage|

Introduction
============

The pyparsing module is an alternative approach to creating and
executing simple grammars, vs. the traditional lex/yacc approach, or the
use of regular expressions. The pyparsing module provides a library of
classes that client code uses to construct the grammar directly in
Python code.

*[Since first writing this description of pyparsing in late 2003, this
technique for developing parsers has become more widespread, under the
name Parsing Expression Grammars - PEGs. See more information on PEGs*
[here]
*.]*

Here is a program to parse ``"Hello, World!"`` (or any greeting of the form
``"salutation, addressee!"``):


[FILE:111:distinfo]
a6c06a88f252e6c322f65faf8f418b16213b51bdfaece0524c1c1bc30c63c484        98049 pyparsing-3.0.7-py3-none-any.whl

