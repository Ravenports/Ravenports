# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gcc6
VERSION=		6.4.0
KEYWORDS=		lang raven
VARIANTS=		standard
SDESC[standard]=	GNU Compiler collection (GCC), Series 6
HOMEPAGE=		https://gcc.gnu.org/
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		GCC/releases/gcc-6.4.0
DISTFILE[1]=		gcc-6.4.0.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			compilers
			ada_run
			cxx_run
			fortran_run
			libs
			infopages

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gmp:static:standard
			mpfr:static:standard
			mpc:static:standard
			zlib:static:standard
BUILDRUN_DEPENDS=	binutils:single:ravensys
EXRUN[fortran_run]=	gcc6:libs:standard
EXRUN[cxx_run]=		gcc6:libs:standard
EXRUN[compilers]=	gcc6:cxx_run:standard
EXRUN[ada_run]=		gcc6:libs:standard

USES=			cpe gmake iconv:build libtool makeinfo perl:build

DISTNAME=		gcc-6.4.0

LICENSE=		GPLv2+:compilers LGPL21:compilers GPLv3+:compilers
			LGPL3:compilers GPLv3RLE:compilers
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
			LGPL21:{{WRKSRC}}/COPYING.LIB
			GPLv3+:{{WRKSRC}}/COPYING3
			LGPL3:{{WRKSRC}}/COPYING3.LIB
			GPLv3RLE:{{WRKSRC}}/COPYING.RUNTIME
LICENSE_SCHEME=		multi

PREFIX=			{{LOCALBASE}}/toolchain/{{NAMEBASE}}
INFO=			infopages:cpp
			infopages:cppinternals
			infopages:gcc
			infopages:gccinstall
			infopages:gccint
			infopages:gfortran
			infopages:gnat-style
			infopages:gnat_rm
			infopages:gnat_ugn
			infopages:libquadmath
			infopages:libitm
			infopages:libgomp
CPE_VENDOR=		gnu
FPC_EQUIVALENT=		lang/gcc6
INFO_SUBDIR=		.

MUST_CONFIGURE=		gnu
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ARGS=		--enable-languages="c,c++,ada,fortran"
			--with-local-prefix={{LOCALBASE}}
			--with-system-zlib
			--with-gmp={{LOCALBASE}}
			--with-mpc={{LOCALBASE}}
			--with-mpfr={{LOCALBASE}}
			{{ICONV_CONFIGURE_ARG}}
			--enable-shared
			--enable-threads=posix
			--enable-checking=release
			--enable-libquadmath
			--disable-nls
			--disable-multilib
			--disable-libsanitizer
			--disable-libvtv
			--disable-libmpx
			--with-ld={{LOCALBASE}}/toolchain/bin/ld
			--with-as={{LOCALBASE}}/toolchain/bin/as
			--with-pkgversion="Ravenports"
			--disable-bootstrap

INSTALL_TARGET=		install-strip
PLIST_SUB=		GCCVER=6.4.0
			TARGET={{CONFIGURE_TARGET}}

post-patch:
	# Update LINK_SPEC to add gcc-aux lib runpath in every binary
	@${ECHO} "Configuring LINK_SPEC runpath"
	${REINPLACE_CMD} -e 's;\@PREFIX\@;${PREFIX:H};' \
		-e 's;\@GCCAUX\@;${NAMEBASE};' \
		${WRKSRC}/gcc/config/dragonfly.h \
		${WRKSRC}/gcc/config/i386/freebsd64.h \
		${WRKSRC}/gcc/config/i386/freebsd.h \
		${WRKSRC}/gcc/config/i386/gnu-user64.h \
		${WRKSRC}/gcc/config/aarch64/aarch64-freebsd.h
	# Ensure dwarf4-compatible addr2line
	${REINPLACE_CMD} -e 's|/usr/bin/addr2line|${PREFIX:H}/bin/addr2line|g'\
		${WRKSRC}/gcc/ada/traceback_symbolic.c
	${REINPLACE_CMD} -e 's|static:crtbeginT.o%s;||' \
		${WRKSRC}/gcc/config/freebsd-spec.h

post-install-freebsd:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${CONFIGURE_TARGET}/6.4.0/include-fixed

post-install-dragonfly:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${CONFIGURE_TARGET}/6.4.0/include-fixed

post-install:
	cp ${STAGEDIR}${PREFIX}/bin/gcc ${STAGEDIR}${PREFIX}/bin/cc
	cp ${STAGEDIR}${PREFIX}/bin/g++ ${STAGEDIR}${PREFIX}/bin/CC
	${RM} ${STAGEDIR}${MANPREFIX}/man/man7/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/gcc/${CONFIGURE_TARGET}/6.4.0/adalib/libgnarl.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/gcc/${CONFIGURE_TARGET}/6.4.0/adalib/libgnat.so

[FILE:329:descriptions/desc.compilers]
This is series 6 of the GNU Compiler Collection (GCC)

This compiler supports the following languages: C, C++, Fortran and Ada.
The GNAT front-end implements the full Ada-83, Ada-95, Ada-2005 and
Ada-2012 standards.  The C++ front-end defaults to the gnu++14 standard.

This package contains the compilers, drivers, and headers.


[FILE:104:descriptions/desc.ada_run]
This is series 6 of the GNU Compiler Collection (GCC)

This package contains the Ada runtime libraries.


[FILE:104:descriptions/desc.cxx_run]
This is series 6 of the GNU Compiler Collection (GCC)

This package contains the C++ runtime libraries.


[FILE:108:descriptions/desc.fortran_run]
This is series 6 of the GNU Compiler Collection (GCC)

This package contains the Fortran runtime libraries.


[FILE:162:descriptions/desc.libs]
This is series 6 of the GNU Compiler Collection (GCC)

This package contains the remaining runtime libraries after excluding
the Ada, C++, and Fortran libraries.


[FILE:126:descriptions/desc.infopages]
This is series 6 of the GNU Compiler Collection (GCC)

This package contains the man pages and info pages that come with GCC.


[FILE:95:distinfo]
850bf21eafdfe5cd5f6827148184c08c4a0852a37ccf36ce69855334d2c914d4     76156220 gcc-6.4.0.tar.xz


[FILE:23525:manifests/plist.compilers]
%%ONLY-DRAGONFLY%%lib/gcc/%%TARGET%%/%%GCCVER%%/include/tgmath.h
%%ONLY-DRAGONFLY%%lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/config/
 dragonfly-stdint.h
 dragonfly.h
%%ONLY-DRAGONFLY%%lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/config/i386/dragonfly.h
%%ONLY-FREEBSD%%lib/gcc/%%TARGET%%/%%GCCVER%%/include/tgmath.h
%%ONLY-FREEBSD%%lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/config/
 freebsd-spec.h
 freebsd-stdint.h
 freebsd.h
%%ONLY-FREEBSD%%lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/config/i386/
 freebsd.h
 freebsd64.h
%%ONLY-LINUX%%lib/gcc/%%TARGET%%/%%GCCVER%%/
 crtbeginT.o
 crtfastmath.o
 crtprec32.o
 crtprec64.o
 crtprec80.o
%%ONLY-LINUX%%lib/gcc/%%TARGET%%/%%GCCVER%%/include-fixed/
 README
 limits.h
 syslimits.h
%%ONLY-LINUX%%lib/gcc/%%TARGET%%/%%GCCVER%%/include-fixed/linux/a.out.h
%%ONLY-LINUX%%lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/config/
 glibc-stdint.h
 gnu-user.h
 linux-android.h
 linux-protos.h
 linux.h
%%ONLY-LINUX%%lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/config/i386/
 gnu-user-common.h
 gnu-user64.h
 linux-common.h
 linux64.h
bin/
 %%TARGET%%-c++
 %%TARGET%%-g++
 %%TARGET%%-gcc
 %%TARGET%%-gcc-%%GCCVER%%
 %%TARGET%%-gcc-ar
 %%TARGET%%-gcc-nm
 %%TARGET%%-gcc-ranlib
 %%TARGET%%-gfortran
 CC
 ada
 c++
 cc
 cpp
 g++
 gcc
 gcc-ar
 gcc-nm
 gcc-ranlib
 gcov
 gcov-dump
 gcov-tool
 gfortran
 gnat
 gnatbind
 gnatchop
 gnatclean
 gnatfind
 gnatkr
 gnatlink
 gnatls
 gnatmake
 gnatname
 gnatprep
 gnatxref
include/c++/%%GCCVER%%/
 algorithm
 array
 atomic
 bitset
 cassert
 ccomplex
 cctype
 cerrno
 cfenv
 cfloat
 chrono
 cinttypes
 ciso646
 climits
 clocale
 cmath
 codecvt
 complex
 complex.h
 condition_variable
 csetjmp
 csignal
 cstdalign
 cstdarg
 cstdbool
 cstddef
 cstdint
 cstdio
 cstdlib
 cstring
 ctgmath
 ctime
 cuchar
 cwchar
 cwctype
 cxxabi.h
 deque
 exception
 fenv.h
 forward_list
 fstream
 functional
 future
 initializer_list
 iomanip
 ios
 iosfwd
 iostream
 istream
 iterator
 limits
 list
 locale
 map
 math.h
 memory
 mutex
 new
 numeric
 ostream
 queue
 random
 ratio
 regex
 scoped_allocator
 set
 shared_mutex
 sstream
 stack
 stdexcept
 stdlib.h
 streambuf
 string
 system_error
 tgmath.h
 thread
 tuple
 type_traits
 typeindex
 typeinfo
 unordered_map
 unordered_set
 utility
 valarray
 vector
include/c++/%%GCCVER%%/%%TARGET%%/bits/
 atomic_word.h
 basic_file.h
 c++allocator.h
 c++config.h
 c++io.h
 c++locale.h
 cpu_defines.h
 ctype_base.h
 ctype_inline.h
 cxxabi_tweaks.h
 error_constants.h
 extc++.h
 gthr-default.h
 gthr-posix.h
 gthr-single.h
 gthr.h
 messages_members.h
 opt_random.h
 os_defines.h
 stdc++.h
 stdtr1c++.h
 time_members.h
include/c++/%%GCCVER%%/%%TARGET%%/ext/opt_random.h
include/c++/%%GCCVER%%/backward/
 auto_ptr.h
 backward_warning.h
 binders.h
 hash_fun.h
 hash_map
 hash_set
 hashtable.h
 strstream
include/c++/%%GCCVER%%/bits/
 algorithmfwd.h
 alloc_traits.h
 allocated_ptr.h
 allocator.h
 atomic_base.h
 atomic_futex.h
 atomic_lockfree_defines.h
 basic_ios.h
 basic_ios.tcc
 basic_string.h
 basic_string.tcc
 boost_concept_check.h
 c++0x_warning.h
 c++14_warning.h
 char_traits.h
 codecvt.h
 concept_check.h
 cpp_type_traits.h
 cxxabi_forced.h
 deque.tcc
 enable_special_members.h
 exception_defines.h
 exception_ptr.h
 forward_list.h
 forward_list.tcc
 fstream.tcc
 functexcept.h
 functional_hash.h
 gslice.h
 gslice_array.h
 hash_bytes.h
 hashtable.h
 hashtable_policy.h
 indirect_array.h
 ios_base.h
 istream.tcc
 list.tcc
 locale_classes.h
 locale_classes.tcc
 locale_conv.h
 locale_facets.h
 locale_facets.tcc
 locale_facets_nonio.h
 locale_facets_nonio.tcc
 localefwd.h
 mask_array.h
 memoryfwd.h
 move.h
 nested_exception.h
 ostream.tcc
 ostream_insert.h
 parse_numbers.h
 postypes.h
 predefined_ops.h
 ptr_traits.h
 quoted_string.h
 random.h
 random.tcc
 range_access.h
 regex.h
 regex.tcc
 regex_automaton.h
 regex_automaton.tcc
 regex_compiler.h
 regex_compiler.tcc
 regex_constants.h
 regex_error.h
 regex_executor.h
 regex_executor.tcc
 regex_scanner.h
 regex_scanner.tcc
 shared_ptr.h
 shared_ptr_atomic.h
 shared_ptr_base.h
 slice_array.h
 specfun.h
 sstream.tcc
 std_mutex.h
 stl_algo.h
 stl_algobase.h
 stl_bvector.h
 stl_construct.h
 stl_deque.h
 stl_function.h
 stl_heap.h
 stl_iterator.h
 stl_iterator_base_funcs.h
 stl_iterator_base_types.h
 stl_list.h
 stl_map.h
 stl_multimap.h
 stl_multiset.h
 stl_numeric.h
 stl_pair.h
 stl_queue.h
 stl_raw_storage_iter.h
 stl_relops.h
 stl_set.h
 stl_stack.h
 stl_tempbuf.h
 stl_tree.h
 stl_uninitialized.h
 stl_vector.h
 stream_iterator.h
 streambuf.tcc
 streambuf_iterator.h
 stringfwd.h
 uniform_int_dist.h
 unique_ptr.h
 unordered_map.h
 unordered_set.h
 uses_allocator.h
 valarray_after.h
 valarray_array.h
 valarray_array.tcc
 valarray_before.h
 vector.tcc
include/c++/%%GCCVER%%/debug/
 array
 assertions.h
 bitset
 debug.h
 deque
 formatter.h
 forward_list
 functions.h
 helper_functions.h
 list
 macros.h
 map
 map.h
 multimap.h
 multiset.h
 safe_base.h
 safe_container.h
 safe_iterator.h
 safe_iterator.tcc
 safe_local_iterator.h
 safe_local_iterator.tcc
 safe_sequence.h
 safe_sequence.tcc
 safe_unordered_base.h
 safe_unordered_container.h
 safe_unordered_container.tcc
 set
 set.h
 stl_iterator.h
 string
 unordered_map
 unordered_set
 vector
include/c++/%%GCCVER%%/decimal/
 decimal
 decimal.h
include/c++/%%GCCVER%%/experimental/
 algorithm
 any
 array
 chrono
 deque
 filesystem
 forward_list
 functional
 iterator
 list
 map
 memory
 memory_resource
 numeric
 optional
 propagate_const
 random
 ratio
 regex
 set
 string
 string_view
 system_error
 tuple
 type_traits
 unordered_map
 unordered_set
 utility
 vector
include/c++/%%GCCVER%%/experimental/bits/
 erase_if.h
 fs_dir.h
 fs_fwd.h
 fs_ops.h
 fs_path.h
 lfts_config.h
 shared_ptr.h
 string_view.tcc
include/c++/%%GCCVER%%/ext/
 algorithm
 aligned_buffer.h
 alloc_traits.h
 array_allocator.h
 atomicity.h
 bitmap_allocator.h
 cast.h
 cmath
 codecvt_specializations.h
 concurrence.h
 debug_allocator.h
 enc_filebuf.h
 extptr_allocator.h
 functional
 hash_map
 hash_set
 iterator
 malloc_allocator.h
 memory
 mt_allocator.h
 new_allocator.h
 numeric
 numeric_traits.h
 pod_char_traits.h
 pointer.h
 pool_allocator.h
 random
 random.tcc
 rb_tree
 rc_string_base.h
 rope
 ropeimpl.h
 slist
 sso_string_base.h
 stdio_filebuf.h
 stdio_sync_filebuf.h
 string_conversions.h
 throw_allocator.h
 type_traits.h
 typelist.h
 vstring.h
 vstring.tcc
 vstring_fwd.h
 vstring_util.h
include/c++/%%GCCVER%%/ext/pb_ds/
 assoc_container.hpp
 exception.hpp
 hash_policy.hpp
 list_update_policy.hpp
 priority_queue.hpp
 tag_and_trait.hpp
 tree_policy.hpp
 trie_policy.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/
 cond_dealtor.hpp
 container_base_dispatch.hpp
 debug_map_base.hpp
 priority_queue_base_dispatch.hpp
 standard_policies.hpp
 tree_trace_base.hpp
 type_utils.hpp
 types_traits.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/bin_search_tree_/
 bin_search_tree_.hpp
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 iterators_fn_imps.hpp
 node_iterators.hpp
 point_iterators.hpp
 policy_access_fn_imps.hpp
 r_erase_fn_imps.hpp
 rotate_fn_imps.hpp
 split_join_fn_imps.hpp
 traits.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/binary_heap_/
 binary_heap_.hpp
 const_iterator.hpp
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 entry_cmp.hpp
 entry_pred.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 iterators_fn_imps.hpp
 point_const_iterator.hpp
 policy_access_fn_imps.hpp
 resize_policy.hpp
 split_join_fn_imps.hpp
 trace_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/binomial_heap_/
 binomial_heap_.hpp
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/binomial_heap_base_/
 binomial_heap_base_.hpp
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 insert_fn_imps.hpp
 split_join_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/branch_policy/
 branch_policy.hpp
 null_node_metadata.hpp
 traits.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/cc_hash_table_map_/
 cc_ht_map_.hpp
 cmp_fn_imps.hpp
 cond_key_dtor_entry_dealtor.hpp
 constructor_destructor_fn_imps.hpp
 constructor_destructor_no_store_hash_fn_imps.hpp
 constructor_destructor_store_hash_fn_imps.hpp
 debug_fn_imps.hpp
 debug_no_store_hash_fn_imps.hpp
 debug_store_hash_fn_imps.hpp
 entry_list_fn_imps.hpp
 erase_fn_imps.hpp
 erase_no_store_hash_fn_imps.hpp
 erase_store_hash_fn_imps.hpp
 find_fn_imps.hpp
 find_store_hash_fn_imps.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 insert_no_store_hash_fn_imps.hpp
 insert_store_hash_fn_imps.hpp
 iterators_fn_imps.hpp
 policy_access_fn_imps.hpp
 resize_fn_imps.hpp
 resize_no_store_hash_fn_imps.hpp
 resize_store_hash_fn_imps.hpp
 size_fn_imps.hpp
 trace_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/eq_fn/
 eq_by_less.hpp
 hash_eq_fn.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/gp_hash_table_map_/
 constructor_destructor_fn_imps.hpp
 constructor_destructor_no_store_hash_fn_imps.hpp
 constructor_destructor_store_hash_fn_imps.hpp
 debug_fn_imps.hpp
 debug_no_store_hash_fn_imps.hpp
 debug_store_hash_fn_imps.hpp
 erase_fn_imps.hpp
 erase_no_store_hash_fn_imps.hpp
 erase_store_hash_fn_imps.hpp
 find_fn_imps.hpp
 find_no_store_hash_fn_imps.hpp
 find_store_hash_fn_imps.hpp
 gp_ht_map_.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 insert_no_store_hash_fn_imps.hpp
 insert_store_hash_fn_imps.hpp
 iterator_fn_imps.hpp
 policy_access_fn_imps.hpp
 resize_fn_imps.hpp
 resize_no_store_hash_fn_imps.hpp
 resize_store_hash_fn_imps.hpp
 trace_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/hash_fn/
 direct_mask_range_hashing_imp.hpp
 direct_mod_range_hashing_imp.hpp
 linear_probe_fn_imp.hpp
 mask_based_range_hashing.hpp
 mod_based_range_hashing.hpp
 probe_fn_base.hpp
 quadratic_probe_fn_imp.hpp
 ranged_hash_fn.hpp
 ranged_probe_fn.hpp
 sample_probe_fn.hpp
 sample_range_hashing.hpp
 sample_ranged_hash_fn.hpp
 sample_ranged_probe_fn.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/left_child_next_sibling_heap_/
 const_iterator.hpp
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 iterators_fn_imps.hpp
 left_child_next_sibling_heap_.hpp
 node.hpp
 point_const_iterator.hpp
 policy_access_fn_imps.hpp
 trace_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/list_update_map_/
 constructor_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 entry_metadata_base.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 iterators_fn_imps.hpp
 lu_map_.hpp
 trace_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/list_update_policy/
 lu_counter_metadata.hpp
 sample_update_policy.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/ov_tree_map_/
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 iterators_fn_imps.hpp
 node_iterators.hpp
 ov_tree_map_.hpp
 policy_access_fn_imps.hpp
 split_join_fn_imps.hpp
 traits.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/pairing_heap_/
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 insert_fn_imps.hpp
 pairing_heap_.hpp
 split_join_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/pat_trie_/
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 info_fn_imps.hpp
 insert_join_fn_imps.hpp
 iterators_fn_imps.hpp
 pat_trie_.hpp
 pat_trie_base.hpp
 policy_access_fn_imps.hpp
 r_erase_fn_imps.hpp
 rotate_fn_imps.hpp
 split_fn_imps.hpp
 synth_access_traits.hpp
 trace_fn_imps.hpp
 traits.hpp
 update_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/rb_tree_map_/
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 node.hpp
 rb_tree_.hpp
 split_join_fn_imps.hpp
 traits.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/rc_binomial_heap_/
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 insert_fn_imps.hpp
 rc.hpp
 rc_binomial_heap_.hpp
 split_join_fn_imps.hpp
 trace_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/resize_policy/
 cc_hash_max_collision_check_resize_trigger_imp.hpp
 hash_exponential_size_policy_imp.hpp
 hash_load_check_resize_trigger_imp.hpp
 hash_load_check_resize_trigger_size_base.hpp
 hash_prime_size_policy_imp.hpp
 hash_standard_resize_policy_imp.hpp
 sample_resize_policy.hpp
 sample_resize_trigger.hpp
 sample_size_policy.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/splay_tree_/
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 info_fn_imps.hpp
 insert_fn_imps.hpp
 node.hpp
 splay_fn_imps.hpp
 splay_tree_.hpp
 split_join_fn_imps.hpp
 traits.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/thin_heap_/
 constructors_destructor_fn_imps.hpp
 debug_fn_imps.hpp
 erase_fn_imps.hpp
 find_fn_imps.hpp
 insert_fn_imps.hpp
 split_join_fn_imps.hpp
 thin_heap_.hpp
 trace_fn_imps.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/tree_policy/
 node_metadata_selector.hpp
 order_statistics_imp.hpp
 sample_tree_node_update.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/trie_policy/
 node_metadata_selector.hpp
 order_statistics_imp.hpp
 prefix_search_node_update_imp.hpp
 sample_trie_access_traits.hpp
 sample_trie_node_update.hpp
 trie_policy_base.hpp
 trie_string_access_traits_imp.hpp
include/c++/%%GCCVER%%/ext/pb_ds/detail/unordered_iterator/
 const_iterator.hpp
 iterator.hpp
 point_const_iterator.hpp
 point_iterator.hpp
include/c++/%%GCCVER%%/parallel/
 algo.h
 algobase.h
 algorithm
 algorithmfwd.h
 balanced_quicksort.h
 base.h
 basic_iterator.h
 checkers.h
 compatibility.h
 compiletime_settings.h
 equally_split.h
 features.h
 find.h
 find_selectors.h
 for_each.h
 for_each_selectors.h
 iterator.h
 list_partition.h
 losertree.h
 merge.h
 multiseq_selection.h
 multiway_merge.h
 multiway_mergesort.h
 numeric
 numericfwd.h
 omp_loop.h
 omp_loop_static.h
 par_loop.h
 parallel.h
 partial_sum.h
 partition.h
 queue.h
 quicksort.h
 random_number.h
 random_shuffle.h
 search.h
 set_operations.h
 settings.h
 sort.h
 tags.h
 types.h
 unique_copy.h
 workstealing.h
include/c++/%%GCCVER%%/profile/
 array
 base.h
 bitset
 deque
 forward_list
 iterator_tracker.h
 list
 map
 map.h
 multimap.h
 multiset.h
 ordered_base.h
 set
 set.h
 unordered_base.h
 unordered_map
 unordered_set
 vector
include/c++/%%GCCVER%%/profile/impl/
 profiler.h
 profiler_algos.h
 profiler_container_size.h
 profiler_hash_func.h
 profiler_hashtable_size.h
 profiler_list_to_slist.h
 profiler_list_to_vector.h
 profiler_map_to_unordered_map.h
 profiler_node.h
 profiler_state.h
 profiler_trace.h
 profiler_vector_size.h
 profiler_vector_to_list.h
include/c++/%%GCCVER%%/tr1/
 array
 bessel_function.tcc
 beta_function.tcc
 ccomplex
 cctype
 cfenv
 cfloat
 cinttypes
 climits
 cmath
 complex
 complex.h
 cstdarg
 cstdbool
 cstdint
 cstdio
 cstdlib
 ctgmath
 ctime
 ctype.h
 cwchar
 cwctype
 ell_integral.tcc
 exp_integral.tcc
 fenv.h
 float.h
 functional
 functional_hash.h
 gamma.tcc
 hashtable.h
 hashtable_policy.h
 hypergeometric.tcc
 inttypes.h
 legendre_function.tcc
 limits.h
 math.h
 memory
 modified_bessel_func.tcc
 poly_hermite.tcc
 poly_laguerre.tcc
 random
 random.h
 random.tcc
 regex
 riemann_zeta.tcc
 shared_ptr.h
 special_function_util.h
 stdarg.h
 stdbool.h
 stdint.h
 stdio.h
 stdlib.h
 tgmath.h
 tuple
 type_traits
 unordered_map
 unordered_map.h
 unordered_set
 unordered_set.h
 utility
 wchar.h
 wctype.h
include/c++/%%GCCVER%%/tr2/
 bool_set
 bool_set.tcc
 dynamic_bitset
 dynamic_bitset.tcc
 ratio
 type_traits
lib/gcc/%%TARGET%%/%%GCCVER%%/
 crtbegin.o
 crtbeginS.o
 crtend.o
 crtendS.o
 libcaf_single.a
 libgcc.a
 libgcc_eh.a
 libgcov.a
lib/gcc/%%TARGET%%/%%GCCVER%%/finclude/
 ieee_arithmetic.mod
 ieee_exceptions.mod
 ieee_features.mod
 omp_lib.f90
 omp_lib.h
 omp_lib.mod
 omp_lib_kinds.mod
 openacc.f90
 openacc.mod
 openacc_kinds.mod
 openacc_lib.h
lib/gcc/%%TARGET%%/%%GCCVER%%/include/
 adxintrin.h
 ammintrin.h
 avx2intrin.h
 avx512bwintrin.h
 avx512cdintrin.h
 avx512dqintrin.h
 avx512erintrin.h
 avx512fintrin.h
 avx512ifmaintrin.h
 avx512ifmavlintrin.h
 avx512pfintrin.h
 avx512vbmiintrin.h
 avx512vbmivlintrin.h
 avx512vlbwintrin.h
 avx512vldqintrin.h
 avx512vlintrin.h
 avxintrin.h
 bmi2intrin.h
 bmiintrin.h
 bmmintrin.h
 clflushoptintrin.h
 clwbintrin.h
 clzerointrin.h
 cpuid.h
 cross-stdarg.h
 emmintrin.h
 f16cintrin.h
 float.h
 fma4intrin.h
 fmaintrin.h
 fxsrintrin.h
 ia32intrin.h
 immintrin.h
 iso646.h
 lwpintrin.h
 lzcntintrin.h
 mm3dnow.h
 mm_malloc.h
 mmintrin.h
 mwaitxintrin.h
 nmmintrin.h
 omp.h
 openacc.h
 pkuintrin.h
 pmmintrin.h
 popcntintrin.h
 prfchwintrin.h
 quadmath.h
 quadmath_weak.h
 rdseedintrin.h
 rtmintrin.h
 shaintrin.h
 smmintrin.h
 stdalign.h
 stdarg.h
 stdatomic.h
 stdbool.h
 stddef.h
 stdfix.h
 stdint-gcc.h
 stdint.h
 stdnoreturn.h
 tbmintrin.h
 tmmintrin.h
 unwind.h
 varargs.h
 wmmintrin.h
 x86intrin.h
 xmmintrin.h
 xopintrin.h
 xsavecintrin.h
 xsaveintrin.h
 xsaveoptintrin.h
 xsavesintrin.h
 xtestintrin.h
lib/gcc/%%TARGET%%/%%GCCVER%%/include/cilk/
 cilk.h
 cilk_api.h
 cilk_api_linux.h
 cilk_stub.h
 cilk_undocumented.h
 common.h
 holder.h
 hyperobject_base.h
 metaprogramming.h
 reducer.h
 reducer_file.h
 reducer_list.h
 reducer_max.h
 reducer_min.h
 reducer_min_max.h
 reducer_opadd.h
 reducer_opand.h
 reducer_opmul.h
 reducer_opor.h
 reducer_opxor.h
 reducer_ostream.h
 reducer_string.h
lib/gcc/%%TARGET%%/%%GCCVER%%/include/ssp/
 ssp.h
 stdio.h
 string.h
 unistd.h
lib/gcc/%%TARGET%%/%%GCCVER%%/install-tools/
 fixinc_list
 gsyslimits.h
 macro_list
 mkheaders.conf
lib/gcc/%%TARGET%%/%%GCCVER%%/install-tools/include/
 README
 limits.h
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/
 gtype.state
 libcc1plugin.so
 libcc1plugin.so.0
 libcc1plugin.so.0.0.0
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/
 addresses.h
 alias.h
 all-tree.def
 alloc-pool.h
 ansidecl.h
 asan.h
 attribs.h
 auto-host.h
 auto-profile.h
 b-header-vars
 backend.h
 basic-block.h
 bb-reorder.h
 bitmap.h
 builtin-attrs.def
 builtin-types.def
 builtins.def
 builtins.h
 bversion.h
 c-tree.h
 calls.h
 ccmp.h
 cfg-flags.def
 cfg.h
 cfganal.h
 cfgbuild.h
 cfgcleanup.h
 cfgexpand.h
 cfghooks.h
 cfgloop.h
 cfgloopmanip.h
 cfgrtl.h
 cgraph.h
 chkp-builtins.def
 cif-code.def
 cilk-builtins.def
 cilk.h
 cilkplus.def
 collect-utils.h
 collect2-aix.h
 collect2.h
 conditions.h
 config.h
 configargs.h
 context.h
 convert.h
 coretypes.h
 coverage.h
 cppbuiltin.h
 cppdefault.h
 cpplib.h
 cselib.h
 data-streamer.h
 dbgcnt.def
 dbgcnt.h
 dbxout.h
 dce.h
 ddg.h
 debug.h
 defaults.h
 df.h
 dfp.h
 diagnostic-color.h
 diagnostic-core.h
 diagnostic.def
 diagnostic.h
 dojump.h
 dominance.h
 domwalk.h
 double-int.h
 dumpfile.h
 dwarf2asm.h
 dwarf2out.h
 emit-rtl.h
 errors.h
 et-forest.h
 except.h
 explow.h
 expmed.h
 expr.h
 fibonacci_heap.h
 file-find.h
 filenames.h
 fixed-value.h
 flag-types.h
 flags.h
 fold-const-call.h
 fold-const.h
 function.h
 gcc-plugin.h
 gcc-rich-location.h
 gcc-symtab.h
 gcc.h
 gcov-counter.def
 gcov-io.h
 gcse-common.h
 gcse.h
 generic-match.h
 gengtype.h
 genrtl.h
 gensupport.h
 ggc-internal.h
 ggc.h
 gimple-builder.h
 gimple-expr.h
 gimple-fold.h
 gimple-iterator.h
 gimple-low.h
 gimple-match.h
 gimple-predict.h
 gimple-pretty-print.h
 gimple-ssa.h
 gimple-streamer.h
 gimple-walk.h
 gimple.def
 gimple.h
 gimplify-me.h
 gimplify.h
 glimits.h
 graph.h
 graphds.h
 graphite.h
 gsstruct.def
 gstab.h
 gsyms.h
 gsyslimits.h
 gtm-builtins.def
 gtype-desc.h
 hard-reg-set.h
 hash-map-traits.h
 hash-map.h
 hash-set.h
 hash-table.h
 hash-traits.h
 hashtab.h
 highlev-plugin-common.h
 hooks.h
 hosthooks-def.h
 hosthooks.h
 hsa-brig-format.h
 hsa.h
 hw-doloop.h
 hwint.h
 ifcvt.h
 inchash.h
 incpath.h
 input.h
 insn-addr.h
 insn-codes.h
 insn-constants.h
 insn-flags.h
 insn-modes.h
 insn-notes.def
 internal-fn.def
 internal-fn.h
 intl.h
 ipa-chkp.h
 ipa-icf-gimple.h
 ipa-icf.h
 ipa-inline.h
 ipa-prop.h
 ipa-ref.h
 ipa-reference.h
 ipa-utils.h
 ira-int.h
 ira.h
 is-a.h
 langhooks-def.h
 langhooks.h
 lcm.h
 libfuncs.h
 libiberty.h
 limitx.h
 limity.h
 line-map.h
 loop-unroll.h
 lower-subreg.h
 lra-int.h
 lra.h
 lto-compress.h
 lto-section-names.h
 lto-streamer.h
 machmode.def
 machmode.h
 md5.h
 mem-stats-traits.h
 mem-stats.h
 memory-block.h
 mode-classes.def
 obstack.h
 omp-builtins.def
 omp-low.h
 optabs-libfuncs.h
 optabs-query.h
 optabs-tree.h
 optabs.def
 optabs.h
 options.h
 opts-diagnostic.h
 opts.h
 output.h
 params-enum.h
 params-list.h
 params.def
 params.h
 params.list
 pass-instances.def
 pass_manager.h
 passes.def
 plugin-api.h
 plugin-version.h
 plugin.def
 plugin.h
 predict.def
 predict.h
 prefix.h
 pretty-print.h
 print-rtl.h
 print-tree.h
 profile.h
 read-md.h
 real.h
 realmpfr.h
 recog.h
 reg-notes.def
 regcprop.h
 regrename.h
 regs.h
 regset.h
 reload.h
 resource.h
 rtl-chkp.h
 rtl-error.h
 rtl-iter.h
 rtl.def
 rtl.h
 rtlhash.h
 rtlhooks-def.h
 safe-ctype.h
 sanitizer.def
 sbitmap.h
 sched-int.h
 sdbout.h
 sel-sched-dump.h
 sel-sched-ir.h
 sel-sched.h
 sese.h
 shrink-wrap.h
 signop.h
 sparseset.h
 spellcheck.h
 splay-tree.h
 sreal.h
 ssa-iterators.h
 ssa.h
 stab.def
 statistics.h
 stmt.h
 stor-layout.h
 streamer-hooks.h
 stringpool.h
 symbol-summary.h
 symtab.h
 sync-builtins.def
 system.h
 target-def.h
 target-globals.h
 target-hooks-macros.h
 target-insns.def
 target.def
 target.h
 targhooks.h
 timevar.def
 timevar.h
 tm-preds.h
 tm.h
 tm_p.h
 toplev.h
 tracer.h
 trans-mem.h
 tree-affine.h
 tree-cfg.h
 tree-cfgcleanup.h
 tree-check.h
 tree-chkp.h
 tree-chrec.h
 tree-core.h
 tree-data-ref.h
 tree-dfa.h
 tree-diagnostic.h
 tree-dump.h
 tree-eh.h
 tree-hash-traits.h
 tree-hasher.h
 tree-inline.h
 tree-into-ssa.h
 tree-iterator.h
 tree-nested.h
 tree-object-size.h
 tree-outof-ssa.h
 tree-parloops.h
 tree-pass.h
 tree-phinodes.h
 tree-pretty-print.h
 tree-scalar-evolution.h
 tree-ssa-address.h
 tree-ssa-alias.h
 tree-ssa-coalesce.h
 tree-ssa-dom.h
 tree-ssa-live.h
 tree-ssa-loop-ivopts.h
 tree-ssa-loop-manip.h
 tree-ssa-loop-niter.h
 tree-ssa-loop.h
 tree-ssa-operands.h
 tree-ssa-propagate.h
 tree-ssa-sccvn.h
 tree-ssa-scopedtables.h
 tree-ssa-ter.h
 tree-ssa-threadbackward.h
 tree-ssa-threadedge.h
 tree-ssa-threadupdate.h
 tree-ssa.h
 tree-ssanames.h
 tree-stdarg.h
 tree-streamer.h
 tree-vectorizer.h
 tree.def
 tree.h
 treestruct.def
 tsan.h
 tsystem.h
 typeclass.h
 typed-splay-tree.h
 ubsan.h
 valtrack.h
 value-prof.h
 varasm.h
 vec.h
 version.h
 vmsdbg.h
 vtable-verify.h
 wide-int-print.h
 wide-int.h
 xcoff.h
 xcoffout.h
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/ada/gcc-interface/ada-tree.def
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/c-family/
 c-common.def
 c-common.h
 c-objc.h
 c-pragma.h
 c-pretty-print.h
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/config/
 dbxelf.h
 elfos.h
 initfini-array.h
 vxworks-dummy.h
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/config/i386/
 att.h
 biarch64.h
 i386-opts.h
 i386-protos.h
 i386.h
 stringop.def
 unix.h
 x86-64.h
 x86-tune.def
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/cp/
 cp-tree.def
 cp-tree.h
 cxx-pretty-print.h
 name-lookup.h
 type-utils.h
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/java/java-tree.def
lib/gcc/%%TARGET%%/%%GCCVER%%/plugin/include/objc/objc-tree.def
libexec/gcc/%%TARGET%%/%%GCCVER%%/
 cc1
 cc1plus
 collect2
 f951
 gnat1
 liblto_plugin.so
 liblto_plugin.so.0
 liblto_plugin.so.0.0.0
 lto-wrapper
 lto1
libexec/gcc/%%TARGET%%/%%GCCVER%%/install-tools/
 fixinc.sh
 fixincl
 mkheaders
 mkinstalldirs
libexec/gcc/%%TARGET%%/%%GCCVER%%/plugin/gengtype


[FILE:27186:manifests/plist.ada_run]
%%ONLY-LINUX%%lib/gcc/%%TARGET%%/%%GCCVER%%/adainclude/
 a-exetim.adb
 s-linux.ads
%%ONLY-LINUX%%lib/gcc/%%TARGET%%/%%GCCVER%%/adalib/
 a-exetim.ali
 s-linux.ali
lib/gcc/%%TARGET%%/%%GCCVER%%/adainclude/
 a-assert.adb
 a-assert.ads
 a-astaco.adb
 a-astaco.ads
 a-btgbso.adb
 a-btgbso.ads
 a-calari.adb
 a-calari.ads
 a-calcon.adb
 a-calcon.ads
 a-caldel.adb
 a-caldel.ads
 a-calend.adb
 a-calend.ads
 a-calfor.adb
 a-calfor.ads
 a-catizo.adb
 a-catizo.ads
 a-cbdlli.adb
 a-cbdlli.ads
 a-cbhama.adb
 a-cbhama.ads
 a-cbhase.adb
 a-cbhase.ads
 a-cbmutr.adb
 a-cbmutr.ads
 a-cborma.adb
 a-cborma.ads
 a-cborse.adb
 a-cborse.ads
 a-cbprqu.adb
 a-cbprqu.ads
 a-cbsyqu.adb
 a-cbsyqu.ads
 a-cdlili.adb
 a-cdlili.ads
 a-cfdlli.adb
 a-cfdlli.ads
 a-cfhama.adb
 a-cfhama.ads
 a-cfhase.adb
 a-cfhase.ads
 a-cfinve.adb
 a-cfinve.ads
 a-cforma.adb
 a-cforma.ads
 a-cforse.adb
 a-cforse.ads
 a-cgaaso.adb
 a-cgaaso.ads
 a-cgarso.adb
 a-cgarso.ads
 a-cgcaso.adb
 a-cgcaso.ads
 a-chacon.adb
 a-chacon.ads
 a-chahan.adb
 a-chahan.ads
 a-charac.ads
 a-chlat1.ads
 a-chlat9.ads
 a-chtgbk.adb
 a-chtgbk.ads
 a-chtgbo.adb
 a-chtgbo.ads
 a-chtgke.adb
 a-chtgke.ads
 a-chtgop.adb
 a-chtgop.ads
 a-chzla1.ads
 a-chzla9.ads
 a-cidlli.adb
 a-cidlli.ads
 a-cihama.adb
 a-cihama.ads
 a-cihase.adb
 a-cihase.ads
 a-cimutr.adb
 a-cimutr.ads
 a-ciorma.adb
 a-ciorma.ads
 a-ciormu.adb
 a-ciormu.ads
 a-ciorse.adb
 a-ciorse.ads
 a-clrefi.adb
 a-clrefi.ads
 a-coboho.adb
 a-coboho.ads
 a-cobove.adb
 a-cobove.ads
 a-cofove.adb
 a-cofove.ads
 a-cogeso.adb
 a-cogeso.ads
 a-cohama.adb
 a-cohama.ads
 a-cohase.adb
 a-cohase.ads
 a-cohata.ads
 a-coinho.adb
 a-coinho.ads
 a-coinve.adb
 a-coinve.ads
 a-colien.adb
 a-colien.ads
 a-colire.adb
 a-colire.ads
 a-comlin.adb
 a-comlin.ads
 a-comutr.adb
 a-comutr.ads
 a-conhel.adb
 a-conhel.ads
 a-contai.ads
 a-convec.adb
 a-convec.ads
 a-coorma.adb
 a-coorma.ads
 a-coormu.adb
 a-coormu.ads
 a-coorse.adb
 a-coorse.ads
 a-coprnu.adb
 a-coprnu.ads
 a-coteio.ads
 a-crbltr.ads
 a-crbtgk.adb
 a-crbtgk.ads
 a-crbtgo.adb
 a-crbtgo.ads
 a-crdlli.adb
 a-crdlli.ads
 a-csquin.ads
 a-cuprqu.adb
 a-cuprqu.ads
 a-cusyqu.adb
 a-cusyqu.ads
 a-cwila1.ads
 a-cwila9.ads
 a-decima.adb
 a-decima.ads
 a-dhfina.ads
 a-dinopr.ads
 a-diocst.adb
 a-diocst.ads
 a-direct.adb
 a-direct.ads
 a-direio.adb
 a-direio.ads
 a-diroro.ads
 a-dirval.adb
 a-dirval.ads
 a-disedf.ads
 a-dispat.adb
 a-dispat.ads
 a-dynpri.adb
 a-dynpri.ads
 a-einuoc.adb
 a-einuoc.ads
 a-elchha.adb
 a-elchha.ads
 a-envvar.adb
 a-envvar.ads
 a-etgrbu.ads
 a-excach.adb
 a-except.adb
 a-except.ads
 a-excpol.adb
 a-exctra.adb
 a-exctra.ads
 a-exetim.ads
 a-exexda.adb
 a-exexpr.adb
 a-exextr.adb
 a-exstat.adb
 a-extiin.ads
 a-extiti.ads
 a-finali.adb
 a-finali.ads
 a-flteio.ads
 a-fwteio.ads
 a-fzteio.ads
 a-inteio.ads
 a-interr.adb
 a-interr.ads
 a-intnam.ads
 a-intsig.adb
 a-intsig.ads
 a-ioexce.ads
 a-iteint.ads
 a-iwteio.ads
 a-izteio.ads
 a-lcteio.ads
 a-lfteio.ads
 a-lfwtio.ads
 a-lfztio.ads
 a-liteio.ads
 a-liwtio.ads
 a-liztio.ads
 a-llctio.ads
 a-llftio.ads
 a-llfwti.ads
 a-llfzti.ads
 a-llitio.ads
 a-lliwti.ads
 a-llizti.ads
 a-locale.adb
 a-locale.ads
 a-ncelfu.ads
 a-ngcefu.adb
 a-ngcefu.ads
 a-ngcoar.adb
 a-ngcoar.ads
 a-ngcoty.adb
 a-ngcoty.ads
 a-ngelfu.adb
 a-ngelfu.ads
 a-ngrear.adb
 a-ngrear.ads
 a-nlcefu.ads
 a-nlcoar.ads
 a-nlcoty.ads
 a-nlelfu.ads
 a-nllcar.ads
 a-nllcef.ads
 a-nllcty.ads
 a-nllefu.ads
 a-nllrar.ads
 a-nlrear.ads
 a-nscefu.ads
 a-nscoty.ads
 a-nselfu.ads
 a-nucoar.ads
 a-nucoty.ads
 a-nudira.adb
 a-nudira.ads
 a-nuelfu.ads
 a-nuflra.adb
 a-nuflra.ads
 a-numaux.adb
 a-numaux.ads
 a-numeri.ads
 a-nurear.ads
 a-rbtgbk.adb
 a-rbtgbk.ads
 a-rbtgbo.adb
 a-rbtgbo.ads
 a-rbtgso.adb
 a-rbtgso.ads
 a-reatim.adb
 a-reatim.ads
 a-retide.adb
 a-retide.ads
 a-rttiev.adb
 a-rttiev.ads
 a-sbecin.adb
 a-sbecin.ads
 a-sbhcin.adb
 a-sbhcin.ads
 a-sblcin.adb
 a-sblcin.ads
 a-scteio.ads
 a-secain.adb
 a-secain.ads
 a-sequio.adb
 a-sequio.ads
 a-sfecin.ads
 a-sfhcin.ads
 a-sflcin.ads
 a-sfteio.ads
 a-sfwtio.ads
 a-sfztio.ads
 a-shcain.adb
 a-shcain.ads
 a-siocst.adb
 a-siocst.ads
 a-siteio.ads
 a-siwtio.ads
 a-siztio.ads
 a-slcain.adb
 a-slcain.ads
 a-ssicst.adb
 a-ssicst.ads
 a-ssitio.ads
 a-ssiwti.ads
 a-ssizti.ads
 a-stboha.adb
 a-stboha.ads
 a-stcoed.ads
 a-stfiha.ads
 a-stmaco.ads
 a-storio.adb
 a-storio.ads
 a-strbou.adb
 a-strbou.ads
 a-stream.adb
 a-stream.ads
 a-strfix.adb
 a-strfix.ads
 a-strhas.adb
 a-strhas.ads
 a-string.ads
 a-strmap.adb
 a-strmap.ads
 a-strsea.adb
 a-strsea.ads
 a-strsup.adb
 a-strsup.ads
 a-strunb.adb
 a-strunb.ads
 a-ststio.adb
 a-ststio.ads
 a-stunau.adb
 a-stunau.ads
 a-stunha.adb
 a-stunha.ads
 a-stuten.adb
 a-stuten.ads
 a-stwibo.adb
 a-stwibo.ads
 a-stwifi.adb
 a-stwifi.ads
 a-stwiha.adb
 a-stwiha.ads
 a-stwima.adb
 a-stwima.ads
 a-stwise.adb
 a-stwise.ads
 a-stwisu.adb
 a-stwisu.ads
 a-stwiun.adb
 a-stwiun.ads
 a-stzbou.adb
 a-stzbou.ads
 a-stzfix.adb
 a-stzfix.ads
 a-stzhas.adb
 a-stzhas.ads
 a-stzmap.adb
 a-stzmap.ads
 a-stzsea.adb
 a-stzsea.ads
 a-stzsup.adb
 a-stzsup.ads
 a-stzunb.adb
 a-stzunb.ads
 a-suecin.adb
 a-suecin.ads
 a-suenco.adb
 a-suenco.ads
 a-suenst.adb
 a-suenst.ads
 a-suewst.adb
 a-suewst.ads
 a-suezst.adb
 a-suezst.ads
 a-suhcin.adb
 a-suhcin.ads
 a-sulcin.adb
 a-sulcin.ads
 a-suteio.adb
 a-suteio.ads
 a-swbwha.adb
 a-swbwha.ads
 a-swfwha.ads
 a-swmwco.ads
 a-swunau.adb
 a-swunau.ads
 a-swuwha.adb
 a-swuwha.ads
 a-swuwti.adb
 a-swuwti.ads
 a-synbar.adb
 a-synbar.ads
 a-sytaco.adb
 a-sytaco.ads
 a-szbzha.adb
 a-szbzha.ads
 a-szfzha.ads
 a-szmzco.ads
 a-szunau.adb
 a-szunau.ads
 a-szuzha.adb
 a-szuzha.ads
 a-szuzti.adb
 a-szuzti.ads
 a-tags.adb
 a-tags.ads
 a-tasatt.adb
 a-tasatt.ads
 a-taside.adb
 a-taside.ads
 a-taster.adb
 a-taster.ads
 a-teioed.adb
 a-teioed.ads
 a-textio.adb
 a-textio.ads
 a-tgdico.ads
 a-tiboio.adb
 a-tiboio.ads
 a-ticoau.adb
 a-ticoau.ads
 a-ticoio.adb
 a-ticoio.ads
 a-tideau.adb
 a-tideau.ads
 a-tideio.adb
 a-tideio.ads
 a-tienau.adb
 a-tienau.ads
 a-tienio.adb
 a-tienio.ads
 a-tifiio.adb
 a-tifiio.ads
 a-tiflau.adb
 a-tiflau.ads
 a-tiflio.adb
 a-tiflio.ads
 a-tigeau.adb
 a-tigeau.ads
 a-tigeli.adb
 a-tiinau.adb
 a-tiinau.ads
 a-tiinio.adb
 a-tiinio.ads
 a-timoau.adb
 a-timoau.ads
 a-timoio.adb
 a-timoio.ads
 a-tiocst.adb
 a-tiocst.ads
 a-tirsfi.adb
 a-tirsfi.ads
 a-titest.adb
 a-titest.ads
 a-tiunio.ads
 a-unccon.ads
 a-uncdea.ads
 a-undesu.adb
 a-undesu.ads
 a-wichha.adb
 a-wichha.ads
 a-wichun.adb
 a-wichun.ads
 a-widcha.ads
 a-witeio.adb
 a-witeio.ads
 a-wrstfi.adb
 a-wrstfi.ads
 a-wtcoau.adb
 a-wtcoau.ads
 a-wtcoio.adb
 a-wtcoio.ads
 a-wtcstr.adb
 a-wtcstr.ads
 a-wtdeau.adb
 a-wtdeau.ads
 a-wtdeio.adb
 a-wtdeio.ads
 a-wtedit.adb
 a-wtedit.ads
 a-wtenau.adb
 a-wtenau.ads
 a-wtenio.adb
 a-wtenio.ads
 a-wtfiio.adb
 a-wtfiio.ads
 a-wtflau.adb
 a-wtflau.ads
 a-wtflio.adb
 a-wtflio.ads
 a-wtgeau.adb
 a-wtgeau.ads
 a-wtinau.adb
 a-wtinau.ads
 a-wtinio.adb
 a-wtinio.ads
 a-wtmoau.adb
 a-wtmoau.ads
 a-wtmoio.adb
 a-wtmoio.ads
 a-wttest.adb
 a-wttest.ads
 a-wwboio.adb
 a-wwboio.ads
 a-wwunio.ads
 a-zchara.ads
 a-zchhan.adb
 a-zchhan.ads
 a-zchuni.adb
 a-zchuni.ads
 a-zrstfi.adb
 a-zrstfi.ads
 a-ztcoau.adb
 a-ztcoau.ads
 a-ztcoio.adb
 a-ztcoio.ads
 a-ztcstr.adb
 a-ztcstr.ads
 a-ztdeau.adb
 a-ztdeau.ads
 a-ztdeio.adb
 a-ztdeio.ads
 a-ztedit.adb
 a-ztedit.ads
 a-ztenau.adb
 a-ztenau.ads
 a-ztenio.adb
 a-ztenio.ads
 a-ztexio.adb
 a-ztexio.ads
 a-ztfiio.adb
 a-ztfiio.ads
 a-ztflau.adb
 a-ztflau.ads
 a-ztflio.adb
 a-ztflio.ads
 a-ztgeau.adb
 a-ztgeau.ads
 a-ztinau.adb
 a-ztinau.ads
 a-ztinio.adb
 a-ztinio.ads
 a-ztmoau.adb
 a-ztmoau.ads
 a-ztmoio.adb
 a-ztmoio.ads
 a-zttest.adb
 a-zttest.ads
 a-zzboio.adb
 a-zzboio.ads
 a-zzunio.ads
 ada.ads
 calendar.ads
 directio.ads
 g-allein.ads
 g-alleve.adb
 g-alleve.ads
 g-altcon.adb
 g-altcon.ads
 g-altive.ads
 g-alveop.adb
 g-alveop.ads
 g-alvety.ads
 g-alvevi.ads
 g-arrspl.adb
 g-arrspl.ads
 g-awk.adb
 g-awk.ads
 g-binenv.adb
 g-binenv.ads
 g-boubuf.adb
 g-boubuf.ads
 g-boumai.ads
 g-bubsor.adb
 g-bubsor.ads
 g-busora.adb
 g-busora.ads
 g-busorg.adb
 g-busorg.ads
 g-byorma.adb
 g-byorma.ads
 g-bytswa.adb
 g-bytswa.ads
 g-calend.adb
 g-calend.ads
 g-casuti.adb
 g-casuti.ads
 g-catiio.adb
 g-catiio.ads
 g-cgi.adb
 g-cgi.ads
 g-cgicoo.adb
 g-cgicoo.ads
 g-cgideb.adb
 g-cgideb.ads
 g-comlin.adb
 g-comlin.ads
 g-comver.adb
 g-comver.ads
 g-cppexc.adb
 g-cppexc.ads
 g-crc32.adb
 g-crc32.ads
 g-ctrl_c.adb
 g-ctrl_c.ads
 g-curexc.ads
 g-debpoo.adb
 g-debpoo.ads
 g-debuti.adb
 g-debuti.ads
 g-decstr.adb
 g-decstr.ads
 g-deutst.ads
 g-diopit.adb
 g-diopit.ads
 g-dirope.adb
 g-dirope.ads
 g-dynhta.adb
 g-dynhta.ads
 g-dyntab.adb
 g-dyntab.ads
 g-eacodu.adb
 g-encstr.adb
 g-encstr.ads
 g-enutst.ads
 g-excact.adb
 g-excact.ads
 g-except.ads
 g-exctra.adb
 g-exctra.ads
 g-expect.adb
 g-expect.ads
 g-exptty.adb
 g-exptty.ads
 g-flocon.ads
 g-forstr.adb
 g-forstr.ads
 g-heasor.adb
 g-heasor.ads
 g-hesora.adb
 g-hesora.ads
 g-hesorg.adb
 g-hesorg.ads
 g-htable.adb
 g-htable.ads
 g-io.adb
 g-io.ads
 g-io_aux.adb
 g-io_aux.ads
 g-locfil.adb
 g-locfil.ads
 g-mbdira.adb
 g-mbdira.ads
 g-mbflra.adb
 g-mbflra.ads
 g-md5.adb
 g-md5.ads
 g-memdum.adb
 g-memdum.ads
 g-moreex.adb
 g-moreex.ads
 g-os_lib.adb
 g-os_lib.ads
 g-pehage.adb
 g-pehage.ads
 g-rannum.adb
 g-rannum.ads
 g-regexp.adb
 g-regexp.ads
 g-regpat.adb
 g-regpat.ads
 g-rewdat.adb
 g-rewdat.ads
 g-sechas.adb
 g-sechas.ads
 g-sehamd.adb
 g-sehamd.ads
 g-sehash.adb
 g-sehash.ads
 g-semaph.adb
 g-semaph.ads
 g-sercom.adb
 g-sercom.ads
 g-sestin.ads
 g-sha1.adb
 g-sha1.ads
 g-sha224.ads
 g-sha256.ads
 g-sha384.ads
 g-sha512.ads
 g-shsh32.adb
 g-shsh32.ads
 g-shsh64.adb
 g-shsh64.ads
 g-shshco.adb
 g-shshco.ads
 g-signal.adb
 g-signal.ads
 g-soccon.ads
 g-socket.adb
 g-socket.ads
 g-socthi.adb
 g-socthi.ads
 g-soliop.ads
 g-sothco.adb
 g-sothco.ads
 g-souinf.ads
 g-spchge.adb
 g-spchge.ads
 g-speche.adb
 g-speche.ads
 g-spipat.adb
 g-spipat.ads
 g-spitbo.adb
 g-spitbo.ads
 g-sptabo.ads
 g-sptain.ads
 g-sptavs.ads
 g-sse.ads
 g-ssvety.ads
 g-stheme.adb
 g-strhas.ads
 g-string.adb
 g-string.ads
 g-strspl.ads
 g-stseme.adb
 g-table.adb
 g-table.ads
 g-tasloc.adb
 g-tasloc.ads
 g-tastus.ads
 g-thread.adb
 g-thread.ads
 g-timsta.adb
 g-timsta.ads
 g-traceb.adb
 g-traceb.ads
 g-trasym.adb
 g-trasym.ads
 g-tty.adb
 g-tty.ads
 g-u3spch.adb
 g-u3spch.ads
 g-utf_32.adb
 g-utf_32.ads
 g-wispch.adb
 g-wispch.ads
 g-wistsp.ads
 g-zspche.adb
 g-zspche.ads
 g-zstspl.ads
 gnat.ads
 i-c.adb
 i-c.ads
 i-cexten.ads
 i-cobol.adb
 i-cobol.ads
 i-cpoint.adb
 i-cpoint.ads
 i-cstrea.adb
 i-cstrea.ads
 i-cstrin.adb
 i-cstrin.ads
 i-fortra.adb
 i-fortra.ads
 i-pacdec.adb
 i-pacdec.ads
 interfac.ads
 ioexcept.ads
 machcode.ads
 memtrack.adb
 s-addima.adb
 s-addima.ads
 s-addope.adb
 s-addope.ads
 s-arit64.adb
 s-arit64.ads
 s-assert.adb
 s-assert.ads
 s-atacco.adb
 s-atacco.ads
 s-atocou.adb
 s-atocou.ads
 s-atopri.adb
 s-atopri.ads
 s-auxdec.adb
 s-auxdec.ads
 s-bignum.adb
 s-bignum.ads
 s-bitops.adb
 s-bitops.ads
 s-boarop.ads
 s-bytswa.ads
 s-carsi8.adb
 s-carsi8.ads
 s-carun8.adb
 s-carun8.ads
 s-casi16.adb
 s-casi16.ads
 s-casi32.adb
 s-casi32.ads
 s-casi64.adb
 s-casi64.ads
 s-casuti.adb
 s-casuti.ads
 s-caun16.adb
 s-caun16.ads
 s-caun32.adb
 s-caun32.ads
 s-caun64.adb
 s-caun64.ads
 s-chepoo.ads
 s-commun.adb
 s-commun.ads
 s-conca2.adb
 s-conca2.ads
 s-conca3.adb
 s-conca3.ads
 s-conca4.adb
 s-conca4.ads
 s-conca5.adb
 s-conca5.ads
 s-conca6.adb
 s-conca6.ads
 s-conca7.adb
 s-conca7.ads
 s-conca8.adb
 s-conca8.ads
 s-conca9.adb
 s-conca9.ads
 s-crc32.adb
 s-crc32.ads
 s-crtl.ads
 s-diflio.adb
 s-diflio.ads
 s-diinio.adb
 s-diinio.ads
 s-dim.ads
 s-dimkio.ads
 s-dimmks.ads
 s-direio.adb
 s-direio.ads
 s-dmotpr.ads
 s-dsaser.ads
 s-elaall.adb
 s-elaall.ads
 s-excdeb.adb
 s-excdeb.ads
 s-except.adb
 s-except.ads
 s-excmac.ads
 s-exctab.adb
 s-exctab.ads
 s-exctra.adb
 s-exctra.ads
 s-exnint.adb
 s-exnint.ads
 s-exnllf.adb
 s-exnllf.ads
 s-exnlli.adb
 s-exnlli.ads
 s-expint.adb
 s-expint.ads
 s-explli.adb
 s-explli.ads
 s-expllu.adb
 s-expllu.ads
 s-expmod.adb
 s-expmod.ads
 s-expuns.adb
 s-expuns.ads
 s-fatflt.ads
 s-fatgen.adb
 s-fatgen.ads
 s-fatlfl.ads
 s-fatllf.ads
 s-fatsfl.ads
 s-ficobl.ads
 s-filatt.ads
 s-fileio.adb
 s-fileio.ads
 s-finmas.adb
 s-finmas.ads
 s-finroo.adb
 s-finroo.ads
 s-flocon.adb
 s-flocon.ads
 s-fore.adb
 s-fore.ads
 s-gearop.adb
 s-gearop.ads
 s-geveop.adb
 s-geveop.ads
 s-gloloc.adb
 s-gloloc.ads
 s-hibaen.ads
 s-htable.adb
 s-htable.ads
 s-imenne.adb
 s-imenne.ads
 s-imgbiu.adb
 s-imgbiu.ads
 s-imgboo.adb
 s-imgboo.ads
 s-imgcha.adb
 s-imgcha.ads
 s-imgdec.adb
 s-imgdec.ads
 s-imgenu.adb
 s-imgenu.ads
 s-imgint.adb
 s-imgint.ads
 s-imgllb.adb
 s-imgllb.ads
 s-imglld.adb
 s-imglld.ads
 s-imglli.adb
 s-imglli.ads
 s-imgllu.adb
 s-imgllu.ads
 s-imgllw.adb
 s-imgllw.ads
 s-imgrea.adb
 s-imgrea.ads
 s-imguns.adb
 s-imguns.ads
 s-imgwch.adb
 s-imgwch.ads
 s-imgwiu.adb
 s-imgwiu.ads
 s-inmaop.adb
 s-inmaop.ads
 s-interr.adb
 s-interr.ads
 s-intman.adb
 s-intman.ads
 s-io.adb
 s-io.ads
 s-llflex.ads
 s-maccod.ads
 s-mantis.adb
 s-mantis.ads
 s-mastop.adb
 s-mastop.ads
 s-memcop.ads
 s-memory.adb
 s-memory.ads
 s-mudido.adb
 s-mudido.ads
 s-multip.adb
 s-multip.ads
 s-os_lib.adb
 s-os_lib.ads
 s-oscons.ads
 s-osinte.adb
 s-osinte.ads
 s-osprim.adb
 s-osprim.ads
 s-pack03.adb
 s-pack03.ads
 s-pack05.adb
 s-pack05.ads
 s-pack06.adb
 s-pack06.ads
 s-pack07.adb
 s-pack07.ads
 s-pack09.adb
 s-pack09.ads
 s-pack10.adb
 s-pack10.ads
 s-pack11.adb
 s-pack11.ads
 s-pack12.adb
 s-pack12.ads
 s-pack13.adb
 s-pack13.ads
 s-pack14.adb
 s-pack14.ads
 s-pack15.adb
 s-pack15.ads
 s-pack17.adb
 s-pack17.ads
 s-pack18.adb
 s-pack18.ads
 s-pack19.adb
 s-pack19.ads
 s-pack20.adb
 s-pack20.ads
 s-pack21.adb
 s-pack21.ads
 s-pack22.adb
 s-pack22.ads
 s-pack23.adb
 s-pack23.ads
 s-pack24.adb
 s-pack24.ads
 s-pack25.adb
 s-pack25.ads
 s-pack26.adb
 s-pack26.ads
 s-pack27.adb
 s-pack27.ads
 s-pack28.adb
 s-pack28.ads
 s-pack29.adb
 s-pack29.ads
 s-pack30.adb
 s-pack30.ads
 s-pack31.adb
 s-pack31.ads
 s-pack33.adb
 s-pack33.ads
 s-pack34.adb
 s-pack34.ads
 s-pack35.adb
 s-pack35.ads
 s-pack36.adb
 s-pack36.ads
 s-pack37.adb
 s-pack37.ads
 s-pack38.adb
 s-pack38.ads
 s-pack39.adb
 s-pack39.ads
 s-pack40.adb
 s-pack40.ads
 s-pack41.adb
 s-pack41.ads
 s-pack42.adb
 s-pack42.ads
 s-pack43.adb
 s-pack43.ads
 s-pack44.adb
 s-pack44.ads
 s-pack45.adb
 s-pack45.ads
 s-pack46.adb
 s-pack46.ads
 s-pack47.adb
 s-pack47.ads
 s-pack48.adb
 s-pack48.ads
 s-pack49.adb
 s-pack49.ads
 s-pack50.adb
 s-pack50.ads
 s-pack51.adb
 s-pack51.ads
 s-pack52.adb
 s-pack52.ads
 s-pack53.adb
 s-pack53.ads
 s-pack54.adb
 s-pack54.ads
 s-pack55.adb
 s-pack55.ads
 s-pack56.adb
 s-pack56.ads
 s-pack57.adb
 s-pack57.ads
 s-pack58.adb
 s-pack58.ads
 s-pack59.adb
 s-pack59.ads
 s-pack60.adb
 s-pack60.ads
 s-pack61.adb
 s-pack61.ads
 s-pack62.adb
 s-pack62.ads
 s-pack63.adb
 s-pack63.ads
 s-parame.adb
 s-parame.ads
 s-parint.adb
 s-parint.ads
 s-pooglo.adb
 s-pooglo.ads
 s-pooloc.adb
 s-pooloc.ads
 s-poosiz.adb
 s-poosiz.ads
 s-powtab.ads
 s-proinf.adb
 s-proinf.ads
 s-purexc.ads
 s-rannum.adb
 s-rannum.ads
 s-ransee.adb
 s-ransee.ads
 s-regexp.adb
 s-regexp.ads
 s-regpat.adb
 s-regpat.ads
 s-restri.adb
 s-restri.ads
 s-rident.ads
 s-rpc.adb
 s-rpc.ads
 s-scaval.adb
 s-scaval.ads
 s-secsta.adb
 s-secsta.ads
 s-sequio.adb
 s-sequio.ads
 s-shasto.adb
 s-shasto.ads
 s-soflin.adb
 s-soflin.ads
 s-solita.adb
 s-solita.ads
 s-spsufi.adb
 s-spsufi.ads
 s-stache.adb
 s-stache.ads
 s-stalib.adb
 s-stalib.ads
 s-stausa.adb
 s-stausa.ads
 s-stchop.adb
 s-stchop.ads
 s-stoele.adb
 s-stoele.ads
 s-stopoo.adb
 s-stopoo.ads
 s-stposu.adb
 s-stposu.ads
 s-stratt-xdr.adb
 s-stratt.adb
 s-stratt.ads
 s-strhas.adb
 s-strhas.ads
 s-string.adb
 s-string.ads
 s-strops.adb
 s-strops.ads
 s-ststop.adb
 s-ststop.ads
 s-stusta.adb
 s-stusta.ads
 s-taasde.adb
 s-taasde.ads
 s-tadeca.adb
 s-tadeca.ads
 s-tadert.adb
 s-tadert.ads
 s-taenca.adb
 s-taenca.ads
 s-taprob.adb
 s-taprob.ads
 s-taprop.adb
 s-taprop.ads
 s-tarest.adb
 s-tarest.ads
 s-tasdeb.adb
 s-tasdeb.ads
 s-tasinf.adb
 s-tasinf.ads
 s-tasini.adb
 s-tasini.ads
 s-taskin.adb
 s-taskin.ads
 s-tasloc.adb
 s-tasloc.ads
 s-taspri.ads
 s-tasque.adb
 s-tasque.ads
 s-tasren.adb
 s-tasren.ads
 s-tasres.ads
 s-tassta.adb
 s-tassta.ads
 s-tasuti.adb
 s-tasuti.ads
 s-tataat.adb
 s-tataat.ads
 s-tpinop.adb
 s-tpinop.ads
 s-tpoaal.adb
 s-tpoben.adb
 s-tpoben.ads
 s-tpobop.adb
 s-tpobop.ads
 s-tpopsp.adb
 s-tporft.adb
 s-tposen.adb
 s-tposen.ads
 s-traceb.adb
 s-traceb.ads
 s-traces.adb
 s-traces.ads
 s-traent.adb
 s-traent.ads
 s-trasym.adb
 s-trasym.ads
 s-tratas.adb
 s-tratas.ads
 s-unstyp.ads
 s-utf_32.adb
 s-utf_32.ads
 s-valboo.adb
 s-valboo.ads
 s-valcha.adb
 s-valcha.ads
 s-valdec.adb
 s-valdec.ads
 s-valenu.adb
 s-valenu.ads
 s-valint.adb
 s-valint.ads
 s-vallld.adb
 s-vallld.ads
 s-vallli.adb
 s-vallli.ads
 s-valllu.adb
 s-valllu.ads
 s-valrea.adb
 s-valrea.ads
 s-valuns.adb
 s-valuns.ads
 s-valuti.adb
 s-valuti.ads
 s-valwch.adb
 s-valwch.ads
 s-veboop.adb
 s-veboop.ads
 s-vector.ads
 s-vercon.adb
 s-vercon.ads
 s-wchcnv.adb
 s-wchcnv.ads
 s-wchcon.adb
 s-wchcon.ads
 s-wchjis.adb
 s-wchjis.ads
 s-wchstw.adb
 s-wchstw.ads
 s-wchwts.adb
 s-wchwts.ads
 s-widboo.adb
 s-widboo.ads
 s-widcha.adb
 s-widcha.ads
 s-widenu.adb
 s-widenu.ads
 s-widlli.adb
 s-widlli.ads
 s-widllu.adb
 s-widllu.ads
 s-widwch.adb
 s-widwch.ads
 s-wwdcha.adb
 s-wwdcha.ads
 s-wwdenu.adb
 s-wwdenu.ads
 s-wwdwch.adb
 s-wwdwch.ads
 sequenio.ads
 system.ads
 text_io.ads
 unchconv.ads
 unchdeal.ads
lib/gcc/%%TARGET%%/%%GCCVER%%/adalib/
 a-assert.ali
 a-btgbso.ali
 a-calari.ali
 a-calcon.ali
 a-caldel.ali
 a-calend.ali
 a-calfor.ali
 a-catizo.ali
 a-cbdlli.ali
 a-cbhama.ali
 a-cbhase.ali
 a-cbmutr.ali
 a-cborma.ali
 a-cborse.ali
 a-cbprqu.ali
 a-cbsyqu.ali
 a-cdlili.ali
 a-cfdlli.ali
 a-cfhama.ali
 a-cfhase.ali
 a-cfinve.ali
 a-cforma.ali
 a-cforse.ali
 a-cgaaso.ali
 a-cgarso.ali
 a-cgcaso.ali
 a-chacon.ali
 a-chahan.ali
 a-charac.ali
 a-chlat1.ali
 a-chlat9.ali
 a-chtgbk.ali
 a-chtgbo.ali
 a-chtgke.ali
 a-chtgop.ali
 a-chzla1.ali
 a-chzla9.ali
 a-cidlli.ali
 a-cihama.ali
 a-cihase.ali
 a-cimutr.ali
 a-ciorma.ali
 a-ciormu.ali
 a-ciorse.ali
 a-clrefi.ali
 a-coboho.ali
 a-cobove.ali
 a-cofove.ali
 a-cogeso.ali
 a-cohama.ali
 a-cohase.ali
 a-cohata.ali
 a-coinho.ali
 a-coinve.ali
 a-colien.ali
 a-colire.ali
 a-comlin.ali
 a-comutr.ali
 a-conhel.ali
 a-contai.ali
 a-convec.ali
 a-coorma.ali
 a-coormu.ali
 a-coorse.ali
 a-coprnu.ali
 a-coteio.ali
 a-crbltr.ali
 a-crbtgk.ali
 a-crbtgo.ali
 a-crdlli.ali
 a-csquin.ali
 a-cuprqu.ali
 a-cusyqu.ali
 a-cwila1.ali
 a-cwila9.ali
 a-decima.ali
 a-diocst.ali
 a-direct.ali
 a-direio.ali
 a-dirval.ali
 a-dispat.ali
 a-dynpri.ali
 a-einuoc.ali
 a-elchha.ali
 a-envvar.ali
 a-except.ali
 a-exctra.ali
 a-finali.ali
 a-flteio.ali
 a-fwteio.ali
 a-fzteio.ali
 a-inteio.ali
 a-interr.ali
 a-intnam.ali
 a-intsig.ali
 a-ioexce.ali
 a-iteint.ali
 a-iwteio.ali
 a-izteio.ali
 a-lcteio.ali
 a-lfteio.ali
 a-lfwtio.ali
 a-lfztio.ali
 a-liteio.ali
 a-liwtio.ali
 a-liztio.ali
 a-llctio.ali
 a-llftio.ali
 a-llfwti.ali
 a-llfzti.ali
 a-llitio.ali
 a-lliwti.ali
 a-llizti.ali
 a-locale.ali
 a-ncelfu.ali
 a-ngcefu.ali
 a-ngcoar.ali
 a-ngcoty.ali
 a-ngelfu.ali
 a-ngrear.ali
 a-nlcefu.ali
 a-nlcoar.ali
 a-nlcoty.ali
 a-nlelfu.ali
 a-nllcar.ali
 a-nllcef.ali
 a-nllcty.ali
 a-nllefu.ali
 a-nllrar.ali
 a-nlrear.ali
 a-nscefu.ali
 a-nscoty.ali
 a-nselfu.ali
 a-nucoar.ali
 a-nucoty.ali
 a-nudira.ali
 a-nuelfu.ali
 a-nuflra.ali
 a-numaux.ali
 a-numeri.ali
 a-nurear.ali
 a-rbtgbk.ali
 a-rbtgbo.ali
 a-rbtgso.ali
 a-reatim.ali
 a-retide.ali
 a-rttiev.ali
 a-sbecin.ali
 a-sbhcin.ali
 a-sblcin.ali
 a-scteio.ali
 a-secain.ali
 a-sequio.ali
 a-sfecin.ali
 a-sfhcin.ali
 a-sflcin.ali
 a-sfteio.ali
 a-sfwtio.ali
 a-sfztio.ali
 a-shcain.ali
 a-siocst.ali
 a-siteio.ali
 a-siwtio.ali
 a-siztio.ali
 a-slcain.ali
 a-ssicst.ali
 a-ssitio.ali
 a-ssiwti.ali
 a-ssizti.ali
 a-stboha.ali
 a-stfiha.ali
 a-stmaco.ali
 a-storio.ali
 a-strbou.ali
 a-stream.ali
 a-strfix.ali
 a-strhas.ali
 a-string.ali
 a-strmap.ali
 a-strsea.ali
 a-strsup.ali
 a-strunb.ali
 a-ststio.ali
 a-stunau.ali
 a-stunha.ali
 a-stuten.ali
 a-stwibo.ali
 a-stwifi.ali
 a-stwiha.ali
 a-stwima.ali
 a-stwise.ali
 a-stwisu.ali
 a-stwiun.ali
 a-stzbou.ali
 a-stzfix.ali
 a-stzhas.ali
 a-stzmap.ali
 a-stzsea.ali
 a-stzsup.ali
 a-stzunb.ali
 a-suecin.ali
 a-suenco.ali
 a-suenst.ali
 a-suewst.ali
 a-suezst.ali
 a-suhcin.ali
 a-sulcin.ali
 a-suteio.ali
 a-swbwha.ali
 a-swfwha.ali
 a-swmwco.ali
 a-swunau.ali
 a-swuwha.ali
 a-swuwti.ali
 a-synbar.ali
 a-sytaco.ali
 a-szbzha.ali
 a-szfzha.ali
 a-szmzco.ali
 a-szunau.ali
 a-szuzha.ali
 a-szuzti.ali
 a-tags.ali
 a-tasatt.ali
 a-taside.ali
 a-taster.ali
 a-teioed.ali
 a-textio.ali
 a-tgdico.ali
 a-tiboio.ali
 a-ticoau.ali
 a-ticoio.ali
 a-tideau.ali
 a-tideio.ali
 a-tienau.ali
 a-tienio.ali
 a-tifiio.ali
 a-tiflau.ali
 a-tiflio.ali
 a-tigeau.ali
 a-tiinau.ali
 a-tiinio.ali
 a-timoau.ali
 a-timoio.ali
 a-tiocst.ali
 a-tirsfi.ali
 a-titest.ali
 a-tiunio.ali
 a-unccon.ali
 a-uncdea.ali
 a-undesu.ali
 a-wichha.ali
 a-wichun.ali
 a-widcha.ali
 a-witeio.ali
 a-wrstfi.ali
 a-wtcoau.ali
 a-wtcoio.ali
 a-wtcstr.ali
 a-wtdeau.ali
 a-wtdeio.ali
 a-wtedit.ali
 a-wtenau.ali
 a-wtenio.ali
 a-wtfiio.ali
 a-wtflau.ali
 a-wtflio.ali
 a-wtgeau.ali
 a-wtinau.ali
 a-wtinio.ali
 a-wtmoau.ali
 a-wtmoio.ali
 a-wttest.ali
 a-wwboio.ali
 a-wwunio.ali
 a-zchara.ali
 a-zchhan.ali
 a-zchuni.ali
 a-zrstfi.ali
 a-ztcoau.ali
 a-ztcoio.ali
 a-ztcstr.ali
 a-ztdeau.ali
 a-ztdeio.ali
 a-ztedit.ali
 a-ztenau.ali
 a-ztenio.ali
 a-ztexio.ali
 a-ztfiio.ali
 a-ztflau.ali
 a-ztflio.ali
 a-ztgeau.ali
 a-ztinau.ali
 a-ztinio.ali
 a-ztmoau.ali
 a-ztmoio.ali
 a-zttest.ali
 a-zzboio.ali
 a-zzunio.ali
 ada.ali
 calendar.ali
 directio.ali
 g-allein.ali
 g-alleve.ali
 g-altcon.ali
 g-altive.ali
 g-alveop.ali
 g-alvety.ali
 g-alvevi.ali
 g-arrspl.ali
 g-awk.ali
 g-binenv.ali
 g-boubuf.ali
 g-boumai.ali
 g-bubsor.ali
 g-busora.ali
 g-busorg.ali
 g-byorma.ali
 g-bytswa.ali
 g-calend.ali
 g-casuti.ali
 g-catiio.ali
 g-cgi.ali
 g-cgicoo.ali
 g-cgideb.ali
 g-comlin.ali
 g-comver.ali
 g-cppexc.ali
 g-crc32.ali
 g-ctrl_c.ali
 g-curexc.ali
 g-debpoo.ali
 g-debuti.ali
 g-decstr.ali
 g-deutst.ali
 g-diopit.ali
 g-dirope.ali
 g-dynhta.ali
 g-dyntab.ali
 g-encstr.ali
 g-enutst.ali
 g-excact.ali
 g-except.ali
 g-exctra.ali
 g-expect.ali
 g-exptty.ali
 g-flocon.ali
 g-forstr.ali
 g-heasor.ali
 g-hesora.ali
 g-hesorg.ali
 g-htable.ali
 g-io.ali
 g-io_aux.ali
 g-locfil.ali
 g-mbdira.ali
 g-mbflra.ali
 g-md5.ali
 g-memdum.ali
 g-moreex.ali
 g-os_lib.ali
 g-pehage.ali
 g-rannum.ali
 g-regexp.ali
 g-regpat.ali
 g-rewdat.ali
 g-sechas.ali
 g-sehamd.ali
 g-sehash.ali
 g-semaph.ali
 g-sercom.ali
 g-sestin.ali
 g-sha1.ali
 g-sha224.ali
 g-sha256.ali
 g-sha384.ali
 g-sha512.ali
 g-shsh32.ali
 g-shsh64.ali
 g-shshco.ali
 g-signal.ali
 g-soccon.ali
 g-socket.ali
 g-socthi.ali
 g-soliop.ali
 g-sothco.ali
 g-souinf.ali
 g-spchge.ali
 g-speche.ali
 g-spipat.ali
 g-spitbo.ali
 g-sptabo.ali
 g-sptain.ali
 g-sptavs.ali
 g-sse.ali
 g-ssvety.ali
 g-strhas.ali
 g-string.ali
 g-strspl.ali
 g-table.ali
 g-tasloc.ali
 g-tastus.ali
 g-thread.ali
 g-timsta.ali
 g-traceb.ali
 g-trasym.ali
 g-tty.ali
 g-u3spch.ali
 g-utf_32.ali
 g-wispch.ali
 g-wistsp.ali
 g-zspche.ali
 g-zstspl.ali
 gnat.ali
 i-c.ali
 i-cexten.ali
 i-cobol.ali
 i-cpoint.ali
 i-cstrea.ali
 i-cstrin.ali
 i-fortra.ali
 i-pacdec.ali
 interfac.ali
 ioexcept.ali
 libgmem.a
 libgnarl-6.so
 libgnarl.a
 libgnarl.so
 libgnat-6.so
 libgnat.a
 libgnat.so
 machcode.ali
 memtrack.ali
 s-addima.ali
 s-addope.ali
 s-arit64.ali
 s-assert.ali
 s-atacco.ali
 s-atocou.ali
 s-atopri.ali
 s-auxdec.ali
 s-bignum.ali
 s-bitops.ali
 s-boarop.ali
 s-bytswa.ali
 s-carsi8.ali
 s-carun8.ali
 s-casi16.ali
 s-casi32.ali
 s-casi64.ali
 s-casuti.ali
 s-caun16.ali
 s-caun32.ali
 s-caun64.ali
 s-chepoo.ali
 s-commun.ali
 s-conca2.ali
 s-conca3.ali
 s-conca4.ali
 s-conca5.ali
 s-conca6.ali
 s-conca7.ali
 s-conca8.ali
 s-conca9.ali
 s-crc32.ali
 s-crtl.ali
 s-diflio.ali
 s-diinio.ali
 s-dim.ali
 s-dimkio.ali
 s-dimmks.ali
 s-direio.ali
 s-dmotpr.ali
 s-dsaser.ali
 s-elaall.ali
 s-excdeb.ali
 s-except.ali
 s-excmac.ali
 s-exctab.ali
 s-exctra.ali
 s-exnint.ali
 s-exnllf.ali
 s-exnlli.ali
 s-expint.ali
 s-explli.ali
 s-expllu.ali
 s-expmod.ali
 s-expuns.ali
 s-fatflt.ali
 s-fatgen.ali
 s-fatlfl.ali
 s-fatllf.ali
 s-fatsfl.ali
 s-ficobl.ali
 s-filatt.ali
 s-fileio.ali
 s-finmas.ali
 s-finroo.ali
 s-flocon.ali
 s-fore.ali
 s-gearop.ali
 s-geveop.ali
 s-gloloc.ali
 s-htable.ali
 s-imenne.ali
 s-imgbiu.ali
 s-imgboo.ali
 s-imgcha.ali
 s-imgdec.ali
 s-imgenu.ali
 s-imgint.ali
 s-imgllb.ali
 s-imglld.ali
 s-imglli.ali
 s-imgllu.ali
 s-imgllw.ali
 s-imgrea.ali
 s-imguns.ali
 s-imgwch.ali
 s-imgwiu.ali
 s-inmaop.ali
 s-interr.ali
 s-intman.ali
 s-io.ali
 s-llflex.ali
 s-maccod.ali
 s-mantis.ali
 s-mastop.ali
 s-memcop.ali
 s-memory.ali
 s-mudido.ali
 s-multip.ali
 s-os_lib.ali
 s-oscons.ali
 s-osinte.ali
 s-osprim.ali
 s-pack03.ali
 s-pack05.ali
 s-pack06.ali
 s-pack07.ali
 s-pack09.ali
 s-pack10.ali
 s-pack11.ali
 s-pack12.ali
 s-pack13.ali
 s-pack14.ali
 s-pack15.ali
 s-pack17.ali
 s-pack18.ali
 s-pack19.ali
 s-pack20.ali
 s-pack21.ali
 s-pack22.ali
 s-pack23.ali
 s-pack24.ali
 s-pack25.ali
 s-pack26.ali
 s-pack27.ali
 s-pack28.ali
 s-pack29.ali
 s-pack30.ali
 s-pack31.ali
 s-pack33.ali
 s-pack34.ali
 s-pack35.ali
 s-pack36.ali
 s-pack37.ali
 s-pack38.ali
 s-pack39.ali
 s-pack40.ali
 s-pack41.ali
 s-pack42.ali
 s-pack43.ali
 s-pack44.ali
 s-pack45.ali
 s-pack46.ali
 s-pack47.ali
 s-pack48.ali
 s-pack49.ali
 s-pack50.ali
 s-pack51.ali
 s-pack52.ali
 s-pack53.ali
 s-pack54.ali
 s-pack55.ali
 s-pack56.ali
 s-pack57.ali
 s-pack58.ali
 s-pack59.ali
 s-pack60.ali
 s-pack61.ali
 s-pack62.ali
 s-pack63.ali
 s-parame.ali
 s-parint.ali
 s-pooglo.ali
 s-pooloc.ali
 s-poosiz.ali
 s-powtab.ali
 s-proinf.ali
 s-purexc.ali
 s-rannum.ali
 s-ransee.ali
 s-regexp.ali
 s-regpat.ali
 s-restri.ali
 s-rident.ali
 s-rpc.ali
 s-scaval.ali
 s-secsta.ali
 s-sequio.ali
 s-shasto.ali
 s-soflin.ali
 s-solita.ali
 s-spsufi.ali
 s-stache.ali
 s-stalib.ali
 s-stausa.ali
 s-stchop.ali
 s-stoele.ali
 s-stopoo.ali
 s-stposu.ali
 s-stratt.ali
 s-strhas.ali
 s-string.ali
 s-ststop.ali
 s-stusta.ali
 s-taasde.ali
 s-tadeca.ali
 s-tadert.ali
 s-taenca.ali
 s-taprob.ali
 s-taprop.ali
 s-tarest.ali
 s-tasdeb.ali
 s-tasinf.ali
 s-tasini.ali
 s-taskin.ali
 s-tasloc.ali
 s-taspri.ali
 s-tasque.ali
 s-tasren.ali
 s-tasres.ali
 s-tassta.ali
 s-tasuti.ali
 s-tataat.ali
 s-tpinop.ali
 s-tpoben.ali
 s-tpobop.ali
 s-tposen.ali
 s-traceb.ali
 s-traces.ali
 s-traent.ali
 s-trasym.ali
 s-tratas.ali
 s-unstyp.ali
 s-utf_32.ali
 s-valboo.ali
 s-valcha.ali
 s-valdec.ali
 s-valenu.ali
 s-valint.ali
 s-vallld.ali
 s-vallli.ali
 s-valllu.ali
 s-valrea.ali
 s-valuns.ali
 s-valuti.ali
 s-valwch.ali
 s-veboop.ali
 s-vector.ali
 s-vercon.ali
 s-wchcnv.ali
 s-wchcon.ali
 s-wchjis.ali
 s-wchstw.ali
 s-wchwts.ali
 s-widboo.ali
 s-widcha.ali
 s-widenu.ali
 s-widlli.ali
 s-widllu.ali
 s-widwch.ali
 s-wwdcha.ali
 s-wwdenu.ali
 s-wwdwch.ali
 sequenio.ali
 system.ali
 text_io.ali
 unchconv.ali
 unchdeal.ali


[FILE:262:manifests/plist.cxx_run]
%%ASLIB%%/
 libstdc++.a
 libstdc++.so
 libstdc++.so.6
 libstdc++.so.6.0.22
 libstdc++.so.6.0.22-gdb.py
 libstdc++fs.a
 libsupc++.a
share/gcc-%%GCCVER%%/python/libstdcxx/__init__.py
share/gcc-%%GCCVER%%/python/libstdcxx/v6/
 __init__.py
 printers.py
 xmethods.py


[FILE:240:manifests/plist.fortran_run]
%%ASLIB%%/
 libgfortran.a
 libgfortran.so
 libgfortran.so.3
 libgfortran.so.3.0.0
 libgfortran.spec
 libgomp.a
 libgomp.so
 libgomp.so.1
 libgomp.so.1.0.0
 libgomp.spec
 libquadmath.a
 libquadmath.so
 libquadmath.so.0
 libquadmath.so.0.0.0


[FILE:362:manifests/plist.libs]
%%ASLIB%%/
 libatomic.a
 libatomic.so
 libatomic.so.1
 libatomic.so.1.2.0
 libcc1.so
 libcc1.so.0
 libcc1.so.0.0.0
 libcilkrts.a
 libcilkrts.so
 libcilkrts.so.5
 libcilkrts.so.5.0.0
 libcilkrts.spec
 libgcc_s.so
 libgcc_s.so.1
 libitm.a
 libitm.so
 libitm.so.1
 libitm.so.1.0.0
 libitm.spec
 libssp.a
 libssp.so
 libssp.so.0
 libssp.so.0.0.0
 libssp_nonshared.a


[FILE:104:manifests/plist.infopages]
share/man/man1/
 cpp.1.gz
 g++.1.gz
 gcc.1.gz
 gcov-dump.1.gz
 gcov-tool.1.gz
 gcov.1.gz
 gfortran.1.gz


[FILE:42436:patches/patch-diff-ada]
--- gcc/ada/adaint.c.orig
+++ gcc/ada/adaint.c
@@ -1157,6 +1157,47 @@
     free (pname);
   }
 
+#elif defined (__ANDROID__)
+
+  /*
+   * ext2 /ext3/ext4/fat16/fat32 have no path limits
+   * /data/local/tmp normally requires rooted devices, if it even exists
+   * /sdcard is the standard location for external storage.  Nativeactivity
+   * manifest needs to authorize its use, otherwise it might not have the
+   * proper permissions.
+   */
+
+  int testfd;
+  char *datadir = getenv ("ANDROID_DATA");
+
+  if (datadir == NULL)
+    strncpy (tmp_filename, "/data/local/tmp/gnat-XXXXXX", L_tmpnam);
+  else
+    snprintf (tmp_filename, L_tmpnam, "%s/local/tmp/gnat-XXXXXX", datadir);
+
+  testfd = mkstemp (tmp_filename);
+  if (testfd != -1)
+    {
+      close (testfd);
+      return;
+    }
+
+  char *sdcard = getenv ("EXTERNAL_STORAGE");
+
+  if (sdcard == NULL)
+    strncpy (tmp_filename, "/sdcard/gnat-XXXXXX", L_tmpnam);
+  else
+    snprintf (tmp_filename, L_tmpnam, "%s/gnat-XXXXXX", sdcard);
+
+  testfd = mkstemp (tmp_filename);
+  if (testfd != -1)
+    {
+      close (testfd);
+      return;
+    }
+
+  tmpnam (tmp_filename);
+
 #elif defined (__linux__) || defined (__FreeBSD__) || defined (__NetBSD__) \
   || defined (__OpenBSD__) || defined (__GLIBC__) || defined (__ANDROID__) \
   || defined (__DragonFly__)
@@ -1443,7 +1484,7 @@
   utimbuf.modtime = time_stamp;
 
   /* Set access time to now in local time.  */
-  t = time ((time_t) 0);
+  t = time (NULL);
   utimbuf.actime = mktime (localtime (&t));
 
   utime (name, &utimbuf);
--- gcc/ada/cio.c.orig
+++ gcc/ada/cio.c
@@ -49,7 +49,7 @@
 
 /* Don't use macros on GNU/Linux since they cause incompatible changes between
    glibc 2.0 and 2.1 */
-#ifdef __linux__
+#if defined __linux__ && !defined __ANDROID__
 #undef putchar
 #undef getchar
 #undef fputc
--- gcc/ada/cstreams.c.orig
+++ gcc/ada/cstreams.c
@@ -69,7 +69,7 @@
 #include <unixlib.h>
 #endif
 
-#ifdef __linux__
+#if defined __linux__ && !defined __ANDROID__
 /* Don't use macros on GNU/Linux since they cause incompatible changes between
    glibc 2.0 and 2.1 */
 
--- /dev/null
+++ gcc/ada/g-socthi-bsd.adb
@@ -0,0 +1,356 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                         GNAT COMPILER COMPONENTS                         --
+--                                                                          --
+--                    G N A T . S O C K E T S . T H I N                     --
+--                                                                          --
+--                                 B o d y                                  --
+--                                                                          --
+--                     Copyright (C) 2001-2013, AdaCore                     --
+--                                                                          --
+-- GNAT is free software;  you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+-- GNAT was originally developed  by the GNAT team at  New York University. --
+-- Extensive contributions were provided by Ada Core Technologies Inc.      --
+--                                                                          --
+------------------------------------------------------------------------------
+
+--  This package provides a target dependent thin interface to the sockets
+--  layer for use by the GNAT.Sockets package (g-socket.ads). This package
+--  should not be directly with'ed by an applications program.
+
+--  This is the *BSD version which uses fcntl rather than ioctl
+--  The constant SCON.Thread_Blocking_IO is always true (for all platforms, not
+--  just *BSD), so this binding is significantly simpler than the standard
+--  one it replaces.
+
+with GNAT.OS_Lib; use GNAT.OS_Lib;
+
+with Interfaces.C; use Interfaces.C;
+
+package body GNAT.Sockets.Thin is
+
+   function Syscall_Accept
+     (S       : C.int;
+      Addr    : System.Address;
+      Addrlen : not null access C.int) return C.int;
+   pragma Import (C, Syscall_Accept, "accept");
+   --  The accept() function accepts a connection on a socket.  An incoming
+   --  connection is acknowledged and associated with an immediately created
+   --  socket.  The original socket is returned to the listening state.
+
+   function Syscall_Connect
+     (S       : C.int;
+      Name    : System.Address;
+      Namelen : C.int) return C.int;
+   pragma Import (C, Syscall_Connect, "connect");
+   --  The connect() system call initiates a connection on a socket.  If the
+   --  parameter S is of type SOCK_DGRAM then connect() permanently specifies
+   --  the peer to which datagrams are to be sent.  If S is type SOCK_STREAM
+   --  then connect() attempts to make a connection with another socket, which
+   --  is identified by the parameter Name.
+
+   function Syscall_Recv
+     (S     : C.int;
+      Msg   : System.Address;
+      Len   : C.int;
+      Flags : C.int) return C.int;
+   pragma Import (C, Syscall_Recv, "recv");
+   --  The recv() function receives a message from a socket.  The call can be
+   --  used on a connection mode socket or a bound, connectionless socket.  If
+   --  no messages are available at the socket, the recv() call waits for a
+   --  message to arrive unless the socket is non-blocking.  If a socket is
+   --  non-blocking, the call returns a -1 and ERRNO is set to EWOULDBLOCK.
+
+   function Syscall_Recvfrom
+     (S       : C.int;
+      Msg     : System.Address;
+      Len     : C.int;
+      Flags   : C.int;
+      From    : System.Address;
+      Fromlen : not null access C.int) return C.int;
+   pragma Import (C, Syscall_Recvfrom, "recvfrom");
+   --  The recvfrom() system call receives a message from a socket and captures
+   --  the address from which the data was sent.  It can be used to receive
+   --  data on an unconnected socket as well.  If no messages are available,
+   --  the call waits for a message to arrive on blocking sockets.  For
+   --  non-blocking sockets without messages, -1 is returned and ERRNO is set
+   --  to EAGAIN or EWOULDBLOCK.
+
+   function Syscall_Recvmsg
+     (S     : C.int;
+      Msg   : System.Address;
+      Flags : C.int) return System.CRTL.ssize_t;
+   pragma Import (C, Syscall_Recvmsg, "recvmsg");
+   --  The recvmsg call receives a message from a socket, and can be used to
+   --  receive data on an unconnected socket as well.  If no messages are
+   --  available, the call waits for a message to arrive on blocking sockets.
+   --  For non-blocking sockets without messages, -1 is returned and ERRNO is
+   --  set to EAGAIN or EWOULDBLOCK.
+
+   function Syscall_Sendmsg
+     (S     : C.int;
+      Msg   : System.Address;
+      Flags : C.int) return System.CRTL.ssize_t;
+   pragma Import (C, Syscall_Sendmsg, "sendmsg");
+   --  The sendmsg() function sends a message to a socket, and can be used with
+   --  unconnected sockets as well (the msg is ignored in this case).  The
+   --  function returns the number of bytes sent when successful, otherwise it
+   --  returns -1 and ERRNO is set (many possible values).
+
+   function Syscall_Sendto
+     (S     : C.int;
+      Msg   : System.Address;
+      Len   : C.int;
+      Flags : C.int;
+      To    : System.Address;
+      Tolen : C.int) return C.int;
+   pragma Import (C, Syscall_Sendto, "sendto");
+   --  The sendto() function only works for connected sockets and it initiates
+   --  the transmission of a message.  A successful call returns the numbers of
+   --  bytes sent, and a failure returns a -1 and ERRNO is set.
+
+   function Syscall_Socket
+     (Domain   : C.int;
+      Typ      : C.int;
+      Protocol : C.int) return C.int;
+   pragma Import (C, Syscall_Socket, "socket");
+   --  The socket() function is used to create an unbound socket and returns a
+   --  file descriptor that can be used with other socket functions.  Upon
+   --  failure, a -1 is returned and ERRNO is set.
+
+   procedure Disable_SIGPIPE (S : C.int);
+   pragma Import (C, Disable_SIGPIPE, "__gnat_disable_sigpipe");
+
+   procedure Disable_All_SIGPIPEs;
+   pragma Import (C, Disable_All_SIGPIPEs, "__gnat_disable_all_sigpipes");
+   --  Sets the process to ignore all SIGPIPE signals on platforms that
+   --  don't support Disable_SIGPIPE for particular streams.
+
+   function C_Fcntl
+     (Fd  : C.int;
+      Cmd : C.int;
+      Val : C.int) return C.int;
+   pragma Import (C, C_Fcntl, "fcntl");
+   --  The ioctl of 64-bit DragonFlyBSD, OpenBSD, and NetBSD does not support
+   --  setting a socket in non-blocking mode.  fcntl must be used instead.
+
+   --------------
+   -- C_Accept --
+   --------------
+
+   function C_Accept
+     (S       : C.int;
+      Addr    : System.Address;
+      Addrlen : not null access C.int) return C.int
+   is
+      R : constant C.int := Syscall_Accept (S, Addr, Addrlen);
+   begin
+
+      Disable_SIGPIPE (R);
+      return R;
+   end C_Accept;
+
+   ---------------
+   -- C_Connect --
+   ---------------
+
+   function C_Connect
+     (S       : C.int;
+      Name    : System.Address;
+      Namelen : C.int) return C.int
+   is
+   begin
+      return Syscall_Connect (S, Name, Namelen);
+   end C_Connect;
+
+   ------------------
+   -- Socket_Ioctl --
+   ------------------
+
+   function Socket_Ioctl
+     (S   : C.int;
+      Req : SOSC.IOCTL_Req_T;
+      Arg : access C.int) return C.int
+   is
+   begin
+      if Req = SOSC.FIONBIO then
+         declare
+            use Interfaces;
+            flags    : constant Unsigned_32 :=
+                                Unsigned_32 (C_Fcntl (S, SOSC.F_GETFL, 0));
+            nonblock : constant Unsigned_32 := Unsigned_32 (SOSC.O_NDELAY);
+            enabled  : constant Boolean := Arg.all = 1;
+            newval   : C.int := C.int (flags);
+         begin
+            if enabled then
+               newval := C.int (flags or nonblock);
+            elsif (flags and nonblock) > 0 then
+               newval := C.int (flags - nonblock);
+            end if;
+            return C_Fcntl (Fd => S, Cmd => SOSC.F_SETFL, Val => newval);
+         end;
+      end if;
+
+      return C_Ioctl (S, Req, Arg);
+   end Socket_Ioctl;
+
+   ------------
+   -- C_Recv --
+   ------------
+
+   function C_Recv
+     (S     : C.int;
+      Msg   : System.Address;
+      Len   : C.int;
+      Flags : C.int) return C.int
+   is
+   begin
+      return Syscall_Recv (S, Msg, Len, Flags);
+   end C_Recv;
+
+   ----------------
+   -- C_Recvfrom --
+   ----------------
+
+   function C_Recvfrom
+     (S       : C.int;
+      Msg     : System.Address;
+      Len     : C.int;
+      Flags   : C.int;
+      From    : System.Address;
+      Fromlen : not null access C.int) return C.int
+   is
+   begin
+      return Syscall_Recvfrom (S, Msg, Len, Flags, From, Fromlen);
+   end C_Recvfrom;
+
+   ---------------
+   -- C_Recvmsg --
+   ---------------
+
+   function C_Recvmsg
+     (S     : C.int;
+      Msg   : System.Address;
+      Flags : C.int) return System.CRTL.ssize_t
+   is
+   begin
+      return  Syscall_Recvmsg (S, Msg, Flags);
+   end C_Recvmsg;
+
+   ---------------
+   -- C_Sendmsg --
+   ---------------
+
+   function C_Sendmsg
+     (S     : C.int;
+      Msg   : System.Address;
+      Flags : C.int) return System.CRTL.ssize_t
+   is
+   begin
+      return Syscall_Sendmsg (S, Msg, Flags);
+   end C_Sendmsg;
+
+   --------------
+   -- C_Sendto --
+   --------------
+
+   function C_Sendto
+     (S     : C.int;
+      Msg   : System.Address;
+      Len   : C.int;
+      Flags : C.int;
+      To    : System.Address;
+      Tolen : C.int) return C.int
+   is
+   begin
+      return Syscall_Sendto (S, Msg, Len, Flags, To, Tolen);
+   end C_Sendto;
+
+   --------------
+   -- C_Socket --
+   --------------
+
+   function C_Socket
+     (Domain   : C.int;
+      Typ      : C.int;
+      Protocol : C.int) return C.int
+   is
+      R : constant C.int := Syscall_Socket (Domain, Typ, Protocol);
+   begin
+      Disable_SIGPIPE (R);
+      return R;
+   end C_Socket;
+
+   --------------
+   -- Finalize --
+   --------------
+
+   procedure Finalize is
+   begin
+      null;
+   end Finalize;
+
+   -------------------------
+   -- Host_Error_Messages --
+   -------------------------
+
+   package body Host_Error_Messages is separate;
+
+   ----------------
+   -- Initialize --
+   ----------------
+
+   procedure Initialize is
+   begin
+      Disable_All_SIGPIPEs;
+   end Initialize;
+
+   --------------------
+   -- Signalling_Fds --
+   --------------------
+
+   package body Signalling_Fds is
+
+      --  In this default implementation, we use a C version of these
+      --  subprograms provided by socket.c.
+
+      function C_Create (Fds : not null access Fd_Pair) return C.int;
+      function C_Read (Rsig : C.int) return C.int;
+      function C_Write (Wsig : C.int) return C.int;
+      procedure C_Close (Sig : C.int);
+
+      pragma Import (C, C_Create, "__gnat_create_signalling_fds");
+      pragma Import (C, C_Read,   "__gnat_read_signalling_fd");
+      pragma Import (C, C_Write,  "__gnat_write_signalling_fd");
+      pragma Import (C, C_Close,  "__gnat_close_signalling_fd");
+
+      function Create
+        (Fds : not null access Fd_Pair) return C.int renames C_Create;
+      function Read (Rsig : C.int) return C.int renames C_Read;
+      function Write (Wsig : C.int) return C.int renames C_Write;
+      procedure Close (Sig : C.int) renames C_Close;
+
+   end Signalling_Fds;
+
+   --------------------------
+   -- Socket_Error_Message --
+   --------------------------
+
+   function Socket_Error_Message (Errno : Integer) return String is separate;
+
+end GNAT.Sockets.Thin;
--- gcc/ada/gnatchop.adb.orig
+++ gcc/ada/gnatchop.adb
@@ -44,7 +44,7 @@
    Config_File_Name : constant String_Access := new String'("gnat.adc");
    --  The name of the file holding the GNAT configuration pragmas
 
-   Gcc : String_Access := new String'("gcc");
+   Gcc : String_Access := new String'("ada");
    --  May be modified by switch --GCC=
 
    Gcc_Set : Boolean := False;
--- gcc/ada/gnatlink.adb.orig
+++ gcc/ada/gnatlink.adb
@@ -136,7 +136,7 @@
    --  This table collects the arguments to be passed to compile the binder
    --  generated file.
 
-   Gcc : String_Access := Program_Name ("gcc", "gnatlink");
+   Gcc : String_Access := Program_Name ("ada", "gnatlink");
 
    Read_Mode : constant String := "r" & ASCII.NUL;
 
--- gcc/ada/make.adb.orig
+++ gcc/ada/make.adb
@@ -667,7 +667,7 @@
    -- Compiler, Binder & Linker Data and Subprograms --
    ----------------------------------------------------
 
-   Gcc      : String_Access := Program_Name ("gcc", "gnatmake");
+   Gcc      : String_Access := Program_Name ("ada", "gnatmake");
    Gnatbind : String_Access := Program_Name ("gnatbind", "gnatmake");
    Gnatlink : String_Access := Program_Name ("gnatlink", "gnatmake");
    --  Default compiler, binder, linker programs
--- gcc/ada/mlib-prj.adb.orig
+++ gcc/ada/mlib-prj.adb
@@ -335,6 +335,11 @@
 
       Foreign_Sources : Boolean;
 
+      Rpath_Disabled : Boolean := False;
+      --  If -R is passed through the library options for the linker, it will
+      --  prevent the implemented libraries portion of the rpath switch from
+      --  being built, even if the linker is capable of supporting rpath.
+
       Rpath : String_Access := null;
       --  Allocated only if Path Option is supported
 
@@ -768,7 +773,7 @@
             Opts.Table (Opts.Last) :=
               new String'("-L" & Name_Buffer (1 .. Name_Len));
 
-            if Path_Option /= null then
+            if not Rpath_Disabled and then Path_Option /= null then
                Add_Rpath (Name_Buffer (1 .. Name_Len));
             end if;
 
@@ -1299,9 +1304,13 @@
                   Get_Name_String (Element.Value);
 
                   if Name_Len /= 0 then
-                     Opts.Increment_Last;
-                     Opts.Table (Opts.Last) :=
-                       new String'(Name_Buffer (1 .. Name_Len));
+                     if Name_Buffer (1 .. Name_Len) = "-R" then
+                        Rpath_Disabled := True;
+                     else
+                        Opts.Increment_Last;
+                        Opts.Table (Opts.Last) :=
+                          new String'(Name_Buffer (1 .. Name_Len));
+                     end if;
                   end if;
 
                   Current := Element.Next;
--- gcc/ada/mlib-utl.adb.orig
+++ gcc/ada/mlib-utl.adb
@@ -446,7 +446,7 @@
       if Driver_Name = No_Name then
          if Gcc_Exec = null then
             if Gcc_Name = null then
-               Gcc_Name := Osint.Program_Name ("gcc", "gnatmake");
+               Gcc_Name := Osint.Program_Name ("ada", "gnatmake");
             end if;
 
             Gcc_Exec := Locate_Exec_On_Path (Gcc_Name.all);
--- gcc/ada/prj-makr.adb.orig
+++ gcc/ada/prj-makr.adb
@@ -115,7 +115,7 @@
 
    procedure Dup2 (Old_Fd, New_Fd : File_Descriptor);
 
-   Gcc      : constant String := "gcc";
+   Gcc      : constant String := "ada";
    Gcc_Path : String_Access := null;
 
    Non_Empty_Node : constant Project_Node_Id := 1;
--- /dev/null
+++ gcc/ada/s-trasym-bsd.adb
@@ -0,0 +1,151 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                         GNAT RUN-TIME COMPONENTS                         --
+--                                                                          --
+--           S Y S T E M . T R A C E B A C K . S Y M B O L I C              --
+--                                                                          --
+--                                 B o d y                                  --
+--                                                                          --
+--                     Copyright (C) 1999-2009, AdaCore                     --
+--                                                                          --
+-- GNAT is free software;  you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --
+-- for  more details.  You should have  received  a copy of the GNU General --
+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --
+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --
+-- Boston, MA 02110-1301, USA.                                              --
+--                                                                          --
+-- As a special exception,  if other files  instantiate  generics from this --
+-- unit, or you link  this unit with other files  to produce an executable, --
+-- this  unit  does not  by itself cause  the resulting  executable  to  be --
+-- covered  by the  GNU  General  Public  License.  This exception does not --
+-- however invalidate  any other reasons why  the executable file  might be --
+-- covered by the  GNU Public License.                                      --
+--                                                                          --
+-- GNAT was originally developed  by the GNAT team at  New York University. --
+-- Extensive contributions were provided by Ada Core Technologies Inc.      --
+--                                                                          --
+------------------------------------------------------------------------------
+
+--  Run-time symbolic traceback support
+--  This file is based on the work by Juergen Pfiefer which is still used
+--  today to provide symbolic traceback support for gnu/kFreeBSD.
+--  Incorporated in GNAT-AUX by John Marino <http://www.dragonlace.net>
+
+with System.Soft_Links;
+with Ada.Exceptions.Traceback; use Ada.Exceptions.Traceback;
+
+package body System.Traceback.Symbolic is
+
+   package TSL renames System.Soft_Links;
+
+   --  To perform the raw addresses to symbolic form translation we rely on a
+   --  libaddr2line symbolizer which examines debug info from a provided
+   --  executable file name, and an absolute path is needed to ensure the file
+   --  is always found. This is "__gnat_locate_exec_on_path (gnat_argv [0])"
+   --  for our executable file, a fairly heavy operation so we cache the
+   --  result.
+
+   Exename : System.Address;
+   --  Pointer to the name of the executable file to be used on all
+   --  invocations of the libaddr2line symbolization service.
+
+   Exename_Resolved : Boolean := False;
+   --  Flag to indicate whether we have performed the executable file name
+   --  resolution already. Relying on a not null Exename for this purpose
+   --  would be potentially inefficient as this is what we will get if the
+   --  resolution attempt fails.
+
+   ------------------------
+   -- Symbolic_Traceback --
+   ------------------------
+
+   function Symbolic_Traceback (Traceback : Tracebacks_Array) return String is
+
+      procedure convert_addresses
+        (filename : System.Address;
+         addrs    : System.Address;
+         n_addrs  : Integer;
+         buf      : System.Address;
+         len      : System.Address);
+      pragma Import (C, convert_addresses, "convert_addresses");
+      --  This is the procedure version of the Ada-aware addr2line. It places
+      --  in BUF a string representing the symbolic translation of the N_ADDRS
+      --  raw addresses provided in ADDRS, looked up in debug information from
+      --  FILENAME. LEN points to an integer which contains the size of the
+      --  BUF buffer at input and the result length at output.
+      --
+      --  Note that this procedure is *not* thread-safe.
+
+      type Argv_Array is array (0 .. 0) of System.Address;
+      gnat_argv : access Argv_Array;
+      pragma Import (C, gnat_argv, "gnat_argv");
+
+      function locate_exec_on_path
+        (c_exename : System.Address) return System.Address;
+      pragma Import (C, locate_exec_on_path, "__gnat_locate_exec_on_path");
+
+      B_Size : constant Integer := 256 * Traceback'Length;
+      Len    : Integer := B_Size;
+      Res    : String (1 .. B_Size);
+
+      use type System.Address;
+
+   begin
+      --  The symbolic translation of an empty set of addresses is an empty
+      --  string.
+
+      if Traceback'Length = 0 then
+         return "";
+      end if;
+
+      --  If our input set of raw addresses is not empty, resort to the
+      --  libaddr2line service to symbolize it all.
+
+      --  Compute, cache and provide the absolute path to our executable file
+      --  name as the binary file where the relevant debug information is to be
+      --  found. If the executable file name resolution fails, we have no
+      --  sensible basis to invoke the symbolizer at all.
+
+      --  Protect all this against concurrent accesses explicitly, as the
+      --  underlying services are potentially thread unsafe.
+
+      TSL.Lock_Task.all;
+
+      if not Exename_Resolved then
+         Exename := locate_exec_on_path (gnat_argv (0));
+         Exename_Resolved := True;
+      end if;
+
+      if Exename /= System.Null_Address then
+         Len := Res'Length;
+         convert_addresses
+           (Exename, Traceback'Address, Traceback'Length,
+            Res (1)'Address, Len'Address);
+      end if;
+
+      TSL.Unlock_Task.all;
+
+      --  Return what the addr2line symbolizer has produced if we have called
+      --  it (the executable name resolution succeeded), or an empty string
+      --  otherwise.
+
+      if Exename /= System.Null_Address then
+         return Res (1 .. Len);
+      else
+         return "";
+      end if;
+
+   end Symbolic_Traceback;
+
+   function Symbolic_Traceback
+     (E : Ada.Exceptions.Exception_Occurrence) return String is
+   begin
+      return Symbolic_Traceback (Tracebacks (E));
+   end Symbolic_Traceback;
+
+end System.Traceback.Symbolic;
--- gcc/ada/terminals.c.orig
+++ gcc/ada/terminals.c
@@ -32,7 +32,7 @@
 /* First all usupported platforms. Add stubs for exported routines. */
 
 #if defined (VMS) || defined (__vxworks) || defined (__Lynx__) \
-  || defined (__ANDROID__) || defined (__PikeOS__)
+  || defined (__PikeOS__)
 
 #define ATTRIBUTE_UNUSED __attribute__((unused))
 
@@ -1059,7 +1059,7 @@
  || defined (__OpenBSD__) \
  || defined (__NetBSD__)  \
  || defined (__DragonFly__)
-#   define BSD
+#   define FREEBSD
 #endif
 
 /* Include every system header we need */
@@ -1070,8 +1070,8 @@
 
 /* On some system termio is either absent or including it will disable termios
    (HP-UX) */
-#if !defined (__hpux__) && !defined (BSD) && !defined (__APPLE__) \
-  && !defined (__rtems__)
+#if ! defined (__hpux__) && ! defined (FREEBSD) && \
+    ! defined (__APPLE__) && ! defined(__rtems__)
 #   include <termio.h>
 #endif
 
@@ -1083,10 +1083,10 @@
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <unistd.h>
-#if defined (__sun__)
+#if defined (sun)
 #   include <sys/stropts.h>
 #endif
-#if defined (BSD) || defined (__sun__)
+#if defined (FREEBSD) || defined (sun)
 #   include <sys/signal.h>
 #endif
 #if defined (__hpux__)
@@ -1094,11 +1094,15 @@
 #   include <sys/stropts.h>
 #endif
 
+#ifdef __ANDROID__
+#define CDISABLE _PC_VDISABLE
+#else
 #define CDISABLE _POSIX_VDISABLE
+#endif
 
 /* On HP-UX and Sun system, there is a bzero function but with a different
    signature. Use memset instead */
-#if defined (__hpux__) || defined (__sun__) || defined (_AIX)
+#if defined (__hpux__) || defined (sun) || defined (_AIX)
 #   define bzero(s,n) memset (s,0,n)
 #endif
 
@@ -1116,11 +1120,11 @@
 */
 
 /* Configurable part */
-#if defined (__APPLE__) || defined (BSD)
+#if defined (__APPLE__) || defined (FREEBSD)
 #define USE_OPENPTY
-#elif defined (__linux__)
+#elif defined (linux)
 #define USE_GETPT
-#elif defined (__sun__)
+#elif defined (sun)
 #define USE_CLONE_DEVICE "/dev/ptmx"
 #elif defined (_AIX)
 #define USE_CLONE_DEVICE "/dev/ptc"
@@ -1406,7 +1410,7 @@
     desc->slave_fd = open (desc->slave_name, O_RDWR, 0);
 #endif
 
-#if defined (__sun__) || defined (__hpux__)
+#if defined (sun) || defined (__hpux__)
   /* On systems such as Solaris we are using stream. We need to push the right
      "modules" in order to get the expected terminal behaviors. Otherwise
      functionalities such as termios are not available.  */
--- /dev/null
+++ gcc/ada/traceback_symbolic.c
@@ -0,0 +1,201 @@
+/*
+  Copyright (C) 1999 by Juergen Pfeifer <juergen.pfeifer@gmx.net>
+  Ada for Linux Team (ALT)
+  Heavily modified by John Marino <http://www.dragonlace.net>
+
+  Permission is hereby granted, free of charge, to any person obtaining a
+  copy of this software and associated documentation files (the
+  "Software"), to deal in the Software without restriction, including
+  without limitation the rights to use, copy, modify, merge, publish,
+  distribute, distribute with modifications, sublicense, and/or sell
+  copies of the Software, and to permit persons to whom the Software is
+  furnished to do so, subject to the following conditions:
+
+  The above copyright notice and this permission notice shall be included
+  in all copies or substantial portions of the Software.
+
+  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+  IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
+  OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
+  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+  Except as contained in this notice, the name(s) of the above copyright
+  holders shall not be used in advertising or otherwise to promote the
+  sale, use or other dealings in this Software without prior written
+  authorization.
+*/
+
+#ifdef IS_CROSS
+
+
+/*
+ * Running addr2line doesn't make sense for cross-compiled objects.
+ * Create a dummy function to satisfy g-trasym.o
+ */
+
+void
+convert_addresses (const char *file_name ATTRIBUTE_UNUSED,
+                   void *addrs ATTRIBUTE_UNUSED,
+                   int n_addr ATTRIBUTE_UNUSED,
+                   void *buf ATTRIBUTE_UNUSED,
+                   int *len ATTRIBUTE_UNUSED)
+{
+  *len = 0;
+}
+
+#else
+
+
+/*
+ * use the external program /usr/bin/addr2line to convert addresses
+ * into file names and line numbers
+ */
+
+#include <sys/types.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <string.h>
+#include <signal.h>
+
+#define CLOSE_SENDPIPE close(sendpipe[0]); close(sendpipe[1])
+#define CLOSE_READPIPE close(readpipe[0]); close(readpipe[1])
+#define DUP2CLOSE(oldfd, newfd) dup2(oldfd, newfd); close(oldfd);
+#define RESTSIG sigaction(SIGPIPE,&oact,NULL)
+
+#define MAX_LINE     1024
+#define PARENT_READ  readpipe[0]
+#define CHILD_WRITE  readpipe[1]
+#define CHILD_READ   sendpipe[0]
+#define PARENT_WRITE sendpipe[1]
+
+#if defined (__sun__)
+#define ADDR2LINE_PROG        "/usr/gnu/bin/addr2line"
+#else
+#define ADDR2LINE_PROG        "/usr/bin/addr2line"
+#endif
+
+void
+convert_addresses (const char *file_name,
+                   void *addrs,
+                   int   n_addr,
+                   void *buf,
+                   int  *len)
+{
+  int max_len = *len;
+  pid_t childpid;
+
+  struct sigaction act, oact;
+
+  int sendpipe[2] = {-1,-1},        /* parent -> child */
+      readpipe[2] = {-1,-1};        /* parent <- child */
+
+  *len = 0;
+  act.sa_handler = SIG_IGN;
+  sigemptyset(&act.sa_mask);
+  act.sa_flags = 0;
+  if (sigaction(SIGPIPE,&act,&oact) < 0)
+    return;
+
+  if (pipe(sendpipe) < 0) { RESTSIG; return; }
+  if (pipe(readpipe) < 0) { CLOSE_SENDPIPE; RESTSIG; return; }
+  if ((childpid = fork()) < 0) {
+    CLOSE_READPIPE;
+    CLOSE_SENDPIPE;
+    RESTSIG;
+    return;
+  }
+
+  if (childpid == 0) {    /* child process */
+    close(PARENT_WRITE);
+    close(PARENT_READ);
+    if ((CHILD_READ != STDIN_FILENO) && (CHILD_WRITE != STDOUT_FILENO)) {
+      if ((CHILD_READ == STDOUT_FILENO) && (CHILD_WRITE == STDIN_FILENO)) {
+        const int temp_fd = dup(CHILD_WRITE);
+        close (CHILD_WRITE);
+        DUP2CLOSE (CHILD_READ, STDIN_FILENO);
+        DUP2CLOSE (temp_fd,    STDOUT_FILENO);
+      }
+      else if ((CHILD_READ == STDIN_FILENO) && (CHILD_WRITE > 1)) {
+        DUP2CLOSE (CHILD_WRITE, STDOUT_FILENO);
+      }
+      else if ((CHILD_READ > 1) && (CHILD_WRITE == STDOUT_FILENO)) {
+        DUP2CLOSE (CHILD_READ, STDIN_FILENO);
+      }
+      else if ((CHILD_READ > 1) && (CHILD_WRITE == STDIN_FILENO)) {
+        DUP2CLOSE (CHILD_WRITE, STDOUT_FILENO);
+        DUP2CLOSE (CHILD_READ,  STDIN_FILENO);
+      }
+      else {
+        /* CHILD_READ >= 1 and CHILD_WRITE > 1 */
+        DUP2CLOSE (CHILD_READ,  STDIN_FILENO);
+        DUP2CLOSE (CHILD_WRITE, STDOUT_FILENO);
+      }
+    }
+    /* As pointed out by Florian Weimer to JP, it is a security threat to call
+       the script with a user defined environment and using the path. That
+       would be Trojans pleasure.  Therefore the absolute path to addr2line
+       and an empty environment is used. That should be safe.
+    */
+    char *const argv[] = { "addr2line",
+                           "-e", file_name,
+                           "--demangle=gnat",
+                           "--functions",
+                           "--basenames",
+                           NULL };
+    char *const envp[] = { NULL };
+    if (execve(ADDR2LINE_PROG, argv, envp) < 0) {
+      close (CHILD_WRITE);
+      close (CHILD_READ);
+      RESTSIG;
+      exit (1);
+    }
+  }
+
+  /* Below this line is parent process */
+  int i, n;
+  char hex[16];
+  char line[MAX_LINE + 1];
+  char *p;
+  char *s = buf;
+  long *trace_address = addrs;
+
+  close(CHILD_WRITE);
+  close(CHILD_READ);
+
+  for(i=0; i < n_addr; i++) {
+    snprintf(hex,sizeof(hex),"%#lx\n",*trace_address);
+    write(PARENT_WRITE,hex,strlen(hex));
+    n = read(PARENT_READ,line,MAX_LINE);
+    if (n<=0)
+      break;
+
+    line[n]=0;
+    /* We have approx. 16 additional chars for "%#lx in " clause.
+       We use this info to prevent a buffer overrun. */
+    if (n + 16 + (*len) > max_len)
+      break;
+
+    p = strchr(line,'\n');
+    if (p) {
+      if (*(p+1)) {
+        *p = 0;
+        *len += snprintf(s, (max_len - (*len)), "%#lx in %s at %s",
+                         *trace_address, line, p+1);
+      }
+      else {
+        *len += snprintf(s, (max_len - (*len)), "%#lx at %s",
+                         *trace_address, line);
+      }
+      s = buf + (*len);
+    }
+    trace_address += 1;
+  }
+  close (PARENT_WRITE);
+  close (PARENT_READ);
+  RESTSIG;
+}
+
+#endif
--- gcc/ada/gcc-interface/Makefile.in.orig
+++ gcc/ada/gcc-interface/Makefile.in
@@ -1170,6 +1170,7 @@
 ifeq ($(strip $(filter-out arm% linux-androideabi,$(target_cpu) $(target_os))),)
   LIBGNAT_TARGET_PAIRS = \
   a-intnam.ads<a-intnam-linux.ads \
+  g-socthi.adb<g-socthi-bsd.adb \
   s-inmaop.adb<s-inmaop-posix.adb \
   s-intman.adb<s-intman-android.adb \
   s-linux.ads<s-linux-android.ads \
@@ -1277,6 +1278,7 @@
   a-intnam.ads<a-intnam-solaris.ads \
   s-inmaop.adb<s-inmaop-posix.adb \
   s-intman.adb<s-intman-solaris.adb \
+  s-trasym.adb<s-trasym-bsd.adb \
   s-mudido.adb<s-mudido-affinity.adb \
   s-osinte.adb<s-osinte-solaris.adb \
   s-osinte.ads<s-osinte-solaris.ads \
@@ -1320,6 +1322,8 @@
   EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o
 
   EH_MECHANISM=-gcc
+  EXTRA_LIBGNAT_SRCS+= traceback_symbolic.c
+  EXTRA_LIBGNAT_OBJS+= traceback_symbolic.o
   THREADSLIB = -lposix4 -lthread
   MISCLIB = -lposix4 -lnsl -lsocket
   SO_OPTS = -Wl,-h,
@@ -1475,10 +1479,45 @@
   LIBRARY_VERSION := $(LIB_VERSION)
 endif
 
+# x86 android
+ifeq ($(strip $(filter-out %86 linux-android,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-linux.ads \
+  g-socthi.adb<g-socthi-bsd.adb \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-linux.ads<s-linux-android.ads \
+  s-osinte.adb<s-osinte-android.adb \
+  s-osinte.ads<s-osinte-android.ads \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(X86_TARGET_PAIRS) \
+  system.ads<system-linux-x86.ads
+
+  TOOLS_TARGET_PAIRS =  \
+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \
+    indepsw.adb<indepsw-gnu.adb
+
+  EXTRA_LIBGNAT_OBJS=
+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o
+  EXTRA_GNATRTL_NONTASKING_OBJS=
+  EH_MECHANISM=-gcc
+  THREADSLIB=
+  MISCLIB=
+  GMEM_LIB=
+  GNATLIB_SHARED = gnatlib-shared-dual
+  LIBRARY_VERSION := $(LIB_VERSION)
+endif
+
 # x86 FreeBSD
 ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) $(target_os))),)
   LIBGNAT_TARGET_PAIRS = \
   a-intnam.ads<a-intnam-freebsd.ads \
+  g-socthi.adb<g-socthi-bsd.adb \
+  s-trasym.adb<s-trasym-bsd.adb \
   s-inmaop.adb<s-inmaop-posix.adb \
   s-intman.adb<s-intman-posix.adb \
   s-mudido.adb<s-mudido-affinity.adb \
@@ -1496,6 +1535,8 @@
   mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
   GNATLIB_SHARED = gnatlib-shared-dual
 
+  EXTRA_LIBGNAT_SRCS+= traceback_symbolic.c
+  EXTRA_LIBGNAT_OBJS+= traceback_symbolic.o
   EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o
 
   EH_MECHANISM=-gcc
@@ -1509,6 +1550,8 @@
 ifeq ($(strip $(filter-out %86_64 freebsd%,$(target_cpu) $(target_os))),)
   LIBGNAT_TARGET_PAIRS = \
   a-intnam.ads<a-intnam-freebsd.ads \
+  g-socthi.adb<g-socthi-bsd.adb \
+  s-trasym.adb<s-trasym-bsd.adb \
   s-inmaop.adb<s-inmaop-posix.adb \
   s-intman.adb<s-intman-posix.adb \
   s-mudido.adb<s-mudido-affinity.adb \
@@ -1526,6 +1569,8 @@
   mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
   GNATLIB_SHARED = gnatlib-shared-dual
 
+  EXTRA_LIBGNAT_SRCS+= traceback_symbolic.c
+  EXTRA_LIBGNAT_OBJS+= traceback_symbolic.o
   EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o
 
   EH_MECHANISM=-gcc
@@ -1535,10 +1580,45 @@
   MISCLIB = -lutil
 endif
 
+# aarch64 FreeBSD
+ifeq ($(strip $(filter-out %aarch64 freebsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  g-socthi.adb<g-socthi-bsd.adb \
+  s-trasym.adb<s-trasym-bsd.adb \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-mudido.adb<s-mudido-affinity.adb \
+  s-osinte.adb<s-osinte-freebsd.adb \
+  s-osinte.ads<s-osinte-freebsd.ads \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \
+  system.ads<system-freebsd-x86_64.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  EXTRA_LIBGNAT_SRCS+= traceback_symbolic.c
+  EXTRA_LIBGNAT_OBJS+= traceback_symbolic.o
+
+  EH_MECHANISM=-gcc
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
 # x86-64 DragonFly
 ifeq ($(strip $(filter-out %86_64 dragonfly%,$(target_cpu) $(target_os))),)
   LIBGNAT_TARGET_PAIRS = \
   a-intnam.ads<a-intnam-dragonfly.ads \
+  g-socthi.adb<g-socthi-bsd.adb \
+  s-trasym.adb<s-trasym-bsd.adb \
   s-inmaop.adb<s-inmaop-posix.adb \
   s-intman.adb<s-intman-posix.adb \
   s-mudido.adb<s-mudido-affinity.adb \
@@ -1556,6 +1636,76 @@
   mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
   GNATLIB_SHARED = gnatlib-shared-dual
 
+  EXTRA_LIBGNAT_SRCS+= traceback_symbolic.c
+  EXTRA_LIBGNAT_OBJS+= traceback_symbolic.o
+  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o
+
+  EH_MECHANISM=-gcc
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+# x86 NetBSD
+ifeq ($(strip $(filter-out %86 netbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  g-socthi.adb<g-socthi-bsd.adb \
+  s-trasym.adb<s-trasym-bsd.adb \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-mudido.adb<s-mudido-affinity.adb \
+  s-osinte.adb<s-osinte-netbsd.adb \
+  s-osinte.ads<s-osinte-netbsd.ads \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(X86_TARGET_PAIRS) \
+  system.ads<system-freebsd-x86.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  EXTRA_LIBGNAT_SRCS+= traceback_symbolic.c
+  EXTRA_LIBGNAT_OBJS+= traceback_symbolic.o
+  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o
+
+  EH_MECHANISM=-gcc
+  THREADSLIB= -lpthread
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+  MISCLIB = -lutil
+endif
+
+# x86-64 NetBSD (must succeed x86 because %86 matches x86_64)
+ifeq ($(strip $(filter-out x86_64 netbsd%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-freebsd.ads \
+  g-socthi.adb<g-socthi-bsd.adb \
+  s-trasym.adb<s-trasym-bsd.adb \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-mudido.adb<s-mudido-affinity.adb \
+  s-osinte.adb<s-osinte-netbsd.adb \
+  s-osinte.ads<s-osinte-netbsd.ads \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-posix.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix.adb \
+  $(ATOMICS_TARGET_PAIRS) \
+  $(X86_64_TARGET_PAIRS) \
+  system.ads<system-freebsd-x86_64.ads
+
+  TOOLS_TARGET_PAIRS = \
+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb
+  GNATLIB_SHARED = gnatlib-shared-dual
+
+  EXTRA_LIBGNAT_SRCS+= traceback_symbolic.c
+  EXTRA_LIBGNAT_OBJS+= traceback_symbolic.o
   EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o
 
   EH_MECHANISM=-gcc
--- gcc/ada/gcc-interface/Make-lang.in.orig
+++ gcc/ada/gcc-interface/Make-lang.in
@@ -589,7 +589,7 @@
  ada/widechar.o
 
 # Language-independent object files.
-ADA_BACKEND = $(BACKEND) attribs.o
+ADA_BACKEND = $(BACKEND2) attribs.o
 
 # List of target dependent sources, overridden below as necessary
 TARGET_ADA_SRCS =
--- gcc/ada/init.c.orig
+++ gcc/ada/init.c
@@ -2510,8 +2510,15 @@
 {
   mcontext_t *mcontext = &((ucontext_t *) ucontext)->uc_mcontext;
 
+#if defined (__i386__)
+  unsigned long *pc = (unsigned long *)mcontext->gregs[REG_EIP];
+  /* The pattern is "orl $0x0,(%esp)" for a probe in 32-bit mode.  */
+  if (signo == SIGSEGV && pc && *pc == 0x00240c83)
+    mcontext->gregs[REG_ESP] += 4096 + 4 * sizeof (unsigned long);
+#elif defined (__ARMEL__)
   /* ARM Bump has to be an even number because of odd/even architecture.  */
-  ((mcontext_t *) mcontext)->arm_pc += 2;
+  mcontext->arm_pc += 2;
+#endif
 }
 
 static void


[FILE:19387:patches/patch-diff-ada-testsuite]
--- gcc/testsuite/ada/acats/run_acats.orig
+++ gcc/testsuite/ada/acats/run_acats
@@ -5,20 +5,6 @@
    exit 1
 fi
 
-# Provide which replacement.
-#
-# type -p is missing from Solaris 2 /bin/sh and /bin/ksh (ksh88), but both
-# ksh93 and bash have it.
-# type output format differs between ksh88 and ksh93, so avoid it if
-# type -p is present.  Unfortunately, HP-UX /bin/sh ignores -p with type.
-# Fall back to whence which ksh88 and ksh93 provide, but bash does not.
-
-which () {
-    path=`type -p $* 2>/dev/null` && { echo $path | awk '{print $NF}'; return 0; }
-    path=`type $* 2>/dev/null` && { echo $path | awk '{print $NF}'; return 0; }
-    path=`whence $* 2>/dev/null` && { echo $path; return 0; }
-    return 1
-}
 
 # Set up environment to use the Ada compiler from the object tree
 
--- gcc/testsuite/ada/acats/run_all.sh.orig
+++ gcc/testsuite/ada/acats/run_all.sh
@@ -18,21 +18,6 @@
 
 # End of customization section.
 
-# Perform arithmetic evaluation on the ARGs, and store the result in the
-# global $as_val. Take advantage of shells that can avoid forks. The arguments
-# must be portable across $(()) and expr.
-if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
-  eval 'as_fn_arith ()
-  {
-    as_val=$(( $* ))
-  }'
-else
-  as_fn_arith ()
-  {
-    as_val=`expr "$@" || test $? -eq 1`
-  }
-fi # as_fn_arith
-
 display_noeol () {
   printf "$@"
   printf "$@" >> $dir/acats.sum
@@ -50,6 +35,14 @@
   echo "$@" >> $dir/acats.log
 }
 
+inform () {
+  printf "%04d    %7s" $1 $2
+}
+
+disinform () {
+  printf "\r"
+}
+
 dir=`${PWDCMD-pwd}`
 
 if [ "$testdir" = "" ]; then
@@ -105,18 +98,6 @@
 gnatls -v >> $dir/acats.log
 display ""
 
-if [ -n "$GCC_RUNTEST_PARALLELIZE_DIR" ]; then
-  dir_support=$dir/../acats/support
-
-  rm -rf $dir/run
-  mv $dir/tests $dir/tests.$$ 2> /dev/null
-  rm -rf $dir/tests.$$ &
-  mkdir -p $dir/run
-
-  cp -pr $dir/../acats/tests $dir/
-else
-  dir_support=$dir/support
-
 display "		=== acats support ==="
 display_noeol "Generating support files..."
 
@@ -213,9 +194,6 @@
 
 display " done."
 display ""
-
-fi
-
 display "		=== acats tests ==="
 
 if [ $# -eq 0 ]; then
@@ -227,14 +205,20 @@
 glob_countn=0
 glob_countok=0
 glob_countu=0
-par_count=0
-par_countm=0
-par_last=
+countdown=0
 
 for chapter in $chapters; do
-   # Used to generate support once and finish after that.
-   [ "$chapter" = "NONE" ] && continue
+   if [ -d $dir/tests/$chapter ]; then
+      cd $dir/tests/$chapter
+      ls *.a *.ada *.adt *.am *.dep 2> /dev/null | sed -e 's/\(.*\)\..*/\1/g' | \
+      cut -c1-7 | sort | uniq | comm -23 - $dir/support/norun.lst \
+        > $dir/tests/$chapter/${chapter}.lst
+      countn=`wc -l < $dir/tests/$chapter/${chapter}.lst`
+      countdown=`expr $countdown + $countn`
+   fi
+done
 
+for chapter in $chapters; do
    display Running chapter $chapter ...
 
    if [ ! -d $dir/tests/$chapter ]; then
@@ -243,45 +227,11 @@
       continue
    fi
 
-   cd $dir/tests/$chapter
-   ls *.a *.ada *.adt *.am *.dep 2> /dev/null | sed -e 's/\(.*\)\..*/\1/g' | \
-   cut -c1-7 | sort | uniq | comm -23 - $dir_support/norun.lst \
-     > $dir/tests/$chapter/${chapter}.lst 
    countn=`wc -l < $dir/tests/$chapter/${chapter}.lst`
-   as_fn_arith $glob_countn + $countn
-   glob_countn=$as_val
+   glob_countn=`expr $glob_countn + $countn`
+   counti=0
    for i in `cat $dir/tests/$chapter/${chapter}.lst`; do 
-
-      # If running multiple run_all.sh jobs in parallel, decide
-      # if we should run this test in the current instance.
-      if [ -n "$GCC_RUNTEST_PARALLELIZE_DIR" ]; then
-	 case "$i" in
-	    # Ugh, some tests have inter-test dependencies, those
-	    # tests have to be scheduled on the same parallel instance
-	    # as previous test.
-	    ce2108f | ce2108h | ce3112d) ;;
-	    # All others can be hopefully scheduled freely.
-	    *)
-	       as_fn_arith $par_countm + 1
-	       par_countm=$as_val
-	       [ $par_countm -eq 10 ] && par_countm=0
-	       if [ $par_countm -eq 1 ]; then
-		  as_fn_arith $par_count + 1
-		  par_count=$as_val
-		  if mkdir $GCC_RUNTEST_PARALLELIZE_DIR/$par_count 2>/dev/null; then
-		     par_last=1
-		  else
-		     par_last=
-		  fi
-	       fi;;
-	 esac
-	 if [ -z "$par_last" ]; then
-	    as_fn_arith $glob_countn - 1
-	    glob_countn=$as_val
-	    continue
-	 fi
-      fi
-
+      counti=`expr $counti + 1`
       extraflags="-gnat95"
       grep $i $testdir/overflow.lst > /dev/null 2>&1
       if [ $? -eq 0 ]; then
@@ -299,10 +249,13 @@
       if [ $? -eq 0 ]; then
          extraflags="$extraflags -fstack-check"
       fi
+      inform $countdown $i
+      countdown=`expr $countdown - 1`
       test=$dir/tests/$chapter/$i
       mkdir $test && cd $test >> $dir/acats.log 2>&1
 
       if [ $? -ne 0 ]; then
+         disinform
          display "FAIL:	$i"
          failed="${failed}${i} "
          clean_dir
@@ -320,19 +273,22 @@
       echo "BUILD $main" >> $dir/acats.log
       EXTERNAL_OBJECTS=""
       case $i in
-        cxb30*) EXTERNAL_OBJECTS="$dir_support/cxb30040.o $dir_support/cxb30060.o $dir_support/cxb30130.o $dir_support/cxb30131.o";;
+        cxb30*) EXTERNAL_OBJECTS="$dir/support/cxb30040.o $dir/support/cxb30060.o $dir/support/cxb30130.o $dir/support/cxb30131.o";;
         ca1020e) rm -f ca1020e_func1.adb ca1020e_func2.adb ca1020e_proc1.adb ca1020e_proc2.adb > /dev/null 2>&1;;
         ca14028) rm -f ca14028_func2.ads ca14028_func3.ads ca14028_proc1.ads ca14028_proc3.ads > /dev/null 2>&1;;
+        cxh1001) extraflags="-a -f"; echo "pragma Normalize_Scalars;" > gnat.adc
       esac
       if [ "$main" = "" ]; then
+         disinform
          display "FAIL:	$i"
          failed="${failed}${i} "
          clean_dir
          continue
       fi
 
-      target_gnatmake $extraflags -I$dir_support $main >> $dir/acats.log 2>&1
+      target_gnatmake $extraflags -I$dir/support $main >> $dir/acats.log 2>&1
       if [ $? -ne 0 ]; then
+         disinform
          display "FAIL:	$i"
          failed="${failed}${i} "
          clean_dir
@@ -347,6 +303,7 @@
       target_run $dir/tests/$chapter/$i/$binmain > $dir/tests/$chapter/$i/${i}.log 2>&1
       cd $dir/tests/$chapter/$i
       cat ${i}.log >> $dir/acats.log
+      disinform
       egrep -e '(==== |\+\+\+\+ |\!\!\!\! )' ${i}.log > /dev/null 2>&1
       if [ $? -ne 0 ]; then
          grep 'tasking not implemented' ${i}.log > /dev/null 2>&1
@@ -356,15 +313,12 @@
             failed="${failed}${i} "
          else
             log "UNSUPPORTED:	$i"
-            as_fn_arith $glob_countn - 1
-            glob_countn=$as_val
-            as_fn_arith $glob_countu + 1
-            glob_countu=$as_val
+            glob_countn=`expr $glob_countn - 1`
+            glob_countu=`expr $glob_countu + 1`
          fi
       else
          log "PASS:	$i"
-         as_fn_arith $glob_countok + 1
-         glob_countok=$as_val
+         glob_countok=`expr $glob_countok + 1`
       fi
       clean_dir
    done
--- /dev/null
+++ gcc/testsuite/ada/acats/run_remote.sh
@@ -0,0 +1,412 @@
+#!/bin/sh
+# Run ACATS with the GNU Ada compiler
+
+# The following functions are to be customized if you run in cross
+# environment or want to change compilation flags.  Note that for
+# tests requiring checks not turned on by default, this script
+# automatically adds the needed flags to pass (ie: -gnato or -gnatE).
+
+# gccflags="-O3 -fomit-frame-pointer -funroll-all-loops -finline-functions"
+# gnatflags="-gnatN"
+
+gccflags="-O2"
+gnatflags="-gnatws"
+tabtarget="/data/local/testsuite"
+STRIP="@REMOTE_TARGET@-strip"
+
+target_run () {
+  # Run on rooted tablet (port 22 vs port 2222)
+  BN=`basename $*`
+  $STRIP_FOR_TARGET $*
+  /usr/bin/scp -qp $* root@tablet:$tabtarget/
+  /usr/bin/ssh -q tablet $tabtarget/$BN
+}
+
+target_cmd () {
+  /usr/bin/ssh -q tablet "$1"
+}
+
+# End of customization section.
+
+display_noeol () {
+  printf "$@"
+  printf "$@" >> $dir/acats.sum
+  printf "$@" >> $dir/acats.log
+}
+
+display () {
+  echo "$@"
+  echo "$@" >> $dir/acats.sum
+  echo "$@" >> $dir/acats.log
+}
+
+log () {
+  echo "$@" >> $dir/acats.sum
+  echo "$@" >> $dir/acats.log
+}
+
+inform () {
+  printf "%04d    %7s" $1 $2
+}
+
+disinform () {
+  printf "\r"
+}
+
+dir=`${PWDCMD-pwd}`
+
+if [ "$testdir" = "" ]; then
+   echo You must use make check or make check-ada
+   exit 1
+fi
+
+if [ "$dir" = "$testdir" ]; then
+  echo "error: srcdir must be different than objdir, exiting."
+  exit 1
+fi
+
+target_gnatmake () {
+  echo gnatmake-cross --GCC=\"$GCC\" $gnatflags $gccflags $* -largs $EXTERNAL_OBJECTS --GCC=\"$GCC\" -fPIE -pie
+  gnatmake-cross --GCC="$GCC" $gnatflags $gccflags $* -largs $EXTERNAL_OBJECTS --GCC="$GCC" -fPIE -pie
+}
+
+target_gcc () {
+  $GCC $gccflags $*
+}
+
+clean_dir () {
+  rm -f "$binmain" *.o *.ali > /dev/null 2>&1
+}
+
+find_main () {
+  ls ${i}?.adb > ${i}.lst 2> /dev/null
+  ls ${i}*m.adb >> ${i}.lst 2> /dev/null
+  ls ${i}.adb >> ${i}.lst 2> /dev/null
+  main=`tail -1 ${i}.lst`
+}
+
+split_testid () {
+  local mysplit=`echo $1 | awk -F/ '{print "section=" $1 "; TN=" $2 "; prog=" $3 ";"}'`
+  eval ${mysplit}
+}
+
+EXTERNAL_OBJECTS=""
+# Global variable to communicate external objects to link with.
+
+rm -f $dir/acats.sum $dir/acats.log $dir/transfer.lst
+
+display "Test Run By $USER on `date`"
+
+display "		=== acats configuration ==="
+
+target=`$GCC -dumpmachine`
+
+display target gcc is $GCC
+display `$GCC -v 2>&1`
+display host=`gcc -dumpmachine`
+display target=$target
+display `type gnatmake-cross`
+gnatls-cross -v >> $dir/acats.log
+display ""
+
+# Let's be tidy and clear off the remote device first
+target_cmd "cd ${tabtarget}; rm logs/*; rmdir logs; rm *"
+
+display "		=== acats support ==="
+display_noeol "Generating support files..."
+
+rm -rf $dir/support
+mkdir -p $dir/support
+cd $dir/support
+
+cp $testdir/support/*.ada $testdir/support/*.a $testdir/support/*.tst $dir/support
+
+# Find out the size in bit of an address on the target
+target_gnatmake $testdir/support/impbit.adb >> $dir/acats.log 2>&1
+target_run $dir/support/impbit > $dir/support/impbit.out 2>&1
+target_bit=`cat $dir/support/impbit.out`
+echo target_bit="$target_bit" >> $dir/acats.log
+
+# Find out a suitable asm statement
+# Adapted from configure.ac gcc_cv_as_dwarf2_debug_line
+case "$target" in
+  ia64*-*-* | s390*-*-*)
+    target_insn="nop 0"
+    ;;
+  mmix-*-*)
+    target_insn="swym 0"
+    ;;
+  *)
+    target_insn="nop"
+    ;;
+esac
+echo target_insn="$target_insn" >> $dir/acats.log
+
+sed -e "s,ACATS4GNATDIR,$dir,g" \
+  < $testdir/support/impdef.a > $dir/support/impdef.a
+sed -e "s,ACATS4GNATDIR,$dir,g" \
+  -e "s,ACATS4GNATBIT,$target_bit,g" \
+  -e "s,ACATS4GNATINSN,$target_insn,g" \
+  < $testdir/support/macro.dfs > $dir/support/MACRO.DFS
+sed -e "s,ACATS4GNATDIR,$dir,g" \
+  < $testdir/support/tsttests.dat > $dir/support/TSTTESTS.DAT
+
+cp $testdir/tests/cd/*.c $dir/support
+cp $testdir/tests/cxb/*.c $dir/support
+grep -v '^#' $testdir/norun.lst | sort > $dir/support/norun.lst
+
+rm -rf $dir/run
+mv $dir/tests $dir/tests.$$ 2> /dev/null
+rm -rf $dir/tests.$$ &
+mkdir -p $dir/run
+
+cp -pr $testdir/tests $dir/
+
+for i in $dir/support/*.ada $dir/support/*.a; do
+   host_gnatchop $i >> $dir/acats.log 2>&1
+done
+
+# These tools are used to preprocess some ACATS sources
+# they need to be compiled native on the host.
+
+host_gnatmake -q -gnatws macrosub.adb
+if [ $? -ne 0 ]; then
+   display "**** Failed to compile macrosub"
+   exit 1
+fi
+./macrosub > macrosub.out 2>&1
+
+gcc -c cd300051.c
+host_gnatmake -q -gnatws widechr.adb
+if [ $? -ne 0 ]; then
+   display "**** Failed to compile widechr"
+   exit 1
+fi
+./widechr > widechr.out 2>&1
+
+rm -f $dir/support/macrosub
+rm -f $dir/support/widechr
+rm -f $dir/support/*.ali
+rm -f $dir/support/*.o
+
+display " done."
+
+# From here, all compilations will be made by the target compiler
+
+display_noeol "Compiling support files..."
+
+target_gcc -c *.c
+if [ $? -ne 0 ]; then
+   display "**** Failed to compile C code"
+   exit 1
+fi
+
+host_gnatchop *.adt >> $dir/acats.log 2>&1
+
+target_gnatmake -c -gnato -gnatE *.ads >> $dir/acats.log 2>&1
+target_gnatmake -c -gnato -gnatE *.adb >> $dir/acats.log 2>&1
+
+display " done."
+display ""
+display "		=== acats tests ==="
+
+if [ $# -eq 0 ]; then
+   chapters=`cd $dir/tests; echo [a-z]*`
+else
+   chapters=$*
+fi
+
+glob_countn=0
+glob_countok=0
+glob_countu=0
+countdown=0
+
+for chapter in $chapters; do
+   if [ -d $dir/tests/$chapter ]; then
+      cd $dir/tests/$chapter
+      ls *.a *.ada *.adt *.am *.dep 2> /dev/null | sed -e 's/\(.*\)\..*/\1/g' | \
+      cut -c1-7 | sort | uniq | comm -23 - $dir/support/norun.lst \
+        > $dir/tests/$chapter/${chapter}.lst
+      countn=`wc -l < $dir/tests/$chapter/${chapter}.lst`
+      countdown=`expr $countdown + $countn`
+   fi
+done
+
+cat > $dir/execute.sh << EOF
+inform () {
+  printf "left: %04d" \$1
+}
+disinform () {
+  printf "\r"
+}
+cycle () {
+  local countx=0
+  local total=\$(echo \$testlist | awk '{print NF}')
+  mkdir -p logs
+  echo "Executing \$total tests on remote device"
+  inform \$total
+  for x in \$testlist; do
+    timeout -t 30 ./\${x} > logs/\${x}.log 2>&1
+    countx=\$(expr \$countx + 1)
+    if [ \$countx -eq 25 ]; then
+      total=\$(expr \$total - 25)
+      countx=0
+      disinform
+      inform \$total
+    fi
+  done
+  disinform
+  tar -czf remote.logs.tar.gz logs
+}
+testlist=" \\
+EOF
+
+display "All tests are being cross-compiled without execution first."
+
+for chapter in $chapters; do
+   if [ ! -d $dir/tests/$chapter ]; then
+      continue
+   fi
+
+   countn=`wc -l < $dir/tests/$chapter/${chapter}.lst`
+   glob_countn=`expr $glob_countn + $countn`
+   counti=0
+   for i in `cat $dir/tests/$chapter/${chapter}.lst`; do
+      counti=`expr $counti + 1`
+      extraflags="-gnat95"
+      grep $i $testdir/overflow.lst > /dev/null 2>&1
+      if [ $? -eq 0 ]; then
+         extraflags="$extraflags -gnato"
+      fi
+      grep $i $testdir/elabd.lst > /dev/null 2>&1
+      if [ $? -eq 0 ]; then
+         extraflags="$extraflags -gnatE"
+      fi
+      grep $i $testdir/floatstore.lst > /dev/null 2>&1
+      if [ $? -eq 0 ]; then
+         extraflags="$extraflags -ffloat-store"
+      fi
+      grep $i $testdir/stackcheck.lst > /dev/null 2>&1
+      if [ $? -eq 0 ]; then
+         extraflags="$extraflags -fstack-check"
+      fi
+      inform $countdown $i
+      countdown=`expr $countdown - 1`
+      test=$dir/tests/$chapter/$i
+      mkdir $test && cd $test >> $dir/acats.log 2>&1
+
+      if [ $? -ne 0 ]; then
+         disinform
+         display "FAIL:	$i"
+         failed="${failed}${i} "
+         clean_dir
+         continue
+      fi
+
+      host_gnatchop -c -w `ls ${test}*.a ${test}*.ada ${test}*.adt ${test}*.am ${test}*.dep 2> /dev/null` >> $dir/acats.log 2>&1
+      find_main
+      if [ -z "$main" ]; then
+         sync
+         find_main
+      fi
+      binmain=`echo $main | sed -e 's/\(.*\)\..*/\1/g'`
+      echo "BUILD $main" >> $dir/acats.log
+      EXTERNAL_OBJECTS=""
+      case $i in
+        cxb30*) EXTERNAL_OBJECTS="$dir/support/cxb30040.o $dir/support/cxb30060.o $dir/support/cxb30130.o $dir/support/cxb30131.o";;
+        ca1020e) rm -f ca1020e_func1.adb ca1020e_func2.adb ca1020e_proc1.adb ca1020e_proc2.adb > /dev/null 2>&1;;
+        ca14028) rm -f ca14028_func2.ads ca14028_func3.ads ca14028_proc1.ads ca14028_proc3.ads > /dev/null 2>&1;;
+        cxh1001) extraflags="-a -f"; echo "pragma Normalize_Scalars;" > gnat.adc
+      esac
+      if [ "$main" = "" ]; then
+         disinform
+         display "FAIL:	$i"
+         failed="${failed}${i} "
+         clean_dir
+         continue
+      fi
+
+      target_gnatmake $extraflags -I$dir/support $main >> $dir/acats.log 2>&1
+      if [ $? -ne 0 ]; then
+         disinform
+         display "FAIL:	$i"
+         failed="${failed}${i} "
+         clean_dir
+         continue
+      fi
+      echo $chapter/$i/$binmain >> $dir/transfer.lst
+      echo "$binmain \\" >> $dir/execute.sh
+      $STRIP $binmain
+      disinform
+   done
+done
+echo '"' >> $dir/execute.sh
+echo "cycle" >> $dir/execute.sh
+
+sync
+display "Transfer files to remote device: root@tablet:$tabtarget/"
+cd $dir/tests
+cat $dir/transfer.lst | xargs tar --strip-components=2 -czf - |  \
+  target_cmd "tar -C $tabtarget -xzf -"
+cd $dir
+tar -czf - execute.sh | target_cmd "tar -C $tabtarget -xzf -"
+target_cmd "cd $tabtarget; sh execute.sh"
+rm -rf $dir/logs $dir/remote.logs.tar.gz
+/usr/bin/scp -q root@tablet:$tabtarget/remote.logs.tar.gz $dir/
+tar -xzf $dir/remote.logs.tar.gz
+
+countdown=`wc -l < $dir/transfer.lst`
+glob_countn=${countdown}
+for i in `cat $dir/transfer.lst`; do
+  split_testid $i
+  if [ "$section" != "$savedsect" ]; then
+   display Running chapter $section ...
+  fi
+  savedsect=$section
+
+  #inform $countdown $TN
+  countdown=`expr $countdown - 1`
+  proglog="$dir/logs/${prog}.log"
+  echo "RUN $prog" >> $dir/acats.log
+  if [ ! -f $proglog ]; then
+    echo "LOG NOT FOUND!" >> $proglog
+  fi
+
+  cat $proglog >> $dir/acats.log
+
+  egrep -e '(==== |\+\+\+\+ |\!\!\!\! )' $proglog > /dev/null 2>&1
+  if [ $? -ne 0 ]; then
+     grep 'tasking not implemented' $proglog > /dev/null 2>&1
+
+     if [ $? -ne 0 ]; then
+        display "FAIL:	${TN}"
+        failed="${failed}${TN} "
+     else
+        log "UNSUPPORTED:	${TN}"
+        glob_countn=`expr $glob_countn - 1`
+        glob_countu=`expr $glob_countu + 1`
+     fi
+  else
+     log "PASS:	${TN}"
+     glob_countok=`expr $glob_countok + 1`
+  fi
+  cd $dir/tests/$section/$TN
+  clean_dir
+  #disinform
+done
+
+display "		=== acats Summary ==="
+display "# of expected passes		$glob_countok"
+display "# of unexpected failures	`expr $glob_countn - $glob_countok`"
+
+if [ $glob_countu -ne 0 ]; then
+   display "# of unsupported tests		$glob_countu"
+fi
+
+if [ $glob_countok -ne $glob_countn ]; then
+   display "*** FAILURES: $failed"
+fi
+
+display "$0 completed at `date`"
+
+exit 0
--- gcc/testsuite/gnat.dg/test_raise_from_pure.adb.orig
+++ gcc/testsuite/gnat.dg/test_raise_from_pure.adb
@@ -1,4 +1,4 @@
--- { dg-do run }
+-- { dg-do run { xfail *-*-openbsd* } }
 -- { dg-options "-O2" }
 
 -- This is an optimization test and its failure is only a missed optimization.
--- gcc/testsuite/gnat.dg/unchecked_convert5.adb.orig
+++ gcc/testsuite/gnat.dg/unchecked_convert5.adb
@@ -1,22 +0,0 @@
--- { dg-do run { target hppa*-*-* sparc*-*-* powerpc*-*-* } }
-
-with Unchecked_Conversion;
-
-procedure Unchecked_Convert5 is
-
-  subtype c_1 is string(1..1);
-
-  function int2c1 is  -- { dg-warning "different sizes" }
-    new unchecked_conversion (source => integer, target => c_1);
-
-  c1 : c_1;
-
-begin
-
-  c1 := int2c1(16#12#);
-
-  if c1 (1) /= ASCII.Nul then
-    raise Program_Error;
-  end if;
-
-end;
--- gcc/testsuite/gnat.dg/unchecked_convert6.adb.orig
+++ gcc/testsuite/gnat.dg/unchecked_convert6.adb
@@ -1,22 +0,0 @@
--- { dg-do run { target hppa*-*-* sparc*-*-* powerpc*-*-* } }
-
-with Unchecked_Conversion;
-
-procedure Unchecked_Convert6 is
-
-  subtype c_5 is string(1..5);
-
-  function int2c5 is  -- { dg-warning "different sizes" }
-    new unchecked_conversion (source => integer, target => c_5);
-
-  c5 : c_5;
-
-begin
-
-  c5 := int2c5(16#12#);
-
-  if c5 (4) /= ASCII.DC2 then
-    raise Program_Error;
-  end if;
-
-end;


[FILE:13624:patches/patch-diff-core]
--- gcc/config/dragonfly.h.orig
+++ gcc/config/dragonfly.h
@@ -84,13 +84,13 @@
    } \
    %{static:-Bstatic} \
   } \
-  %{!static:--hash-style=gnu} \
+  %{!static:--hash-style=gnu --enable-new-dtags -rpath @PREFIX@/@GCCAUX@/lib} \
   %{symbolic:-Bsymbolic}"
 
 #undef  LINK_SPEC
 #define LINK_SPEC DFBSD_LINK_SPEC
 
-#define DFBSD_DYNAMIC_LINKER "/usr/libexec/ld-elf.so.2"
+#define DFBSD_DYNAMIC_LINKER "/libexec/ld-elf.so.2"
 
 
 /* Use --as-needed -lgcc_s for eh support.  */
--- gcc/config/aarch64/aarch64-freebsd.h.orig
+++ gcc/config/aarch64/aarch64-freebsd.h
@@ -41,6 +41,7 @@
     %{symbolic:-Bsymbolic}                                      \
     %{static:-Bstatic}                                          \
     %{!static:                                                  \
+    %{!static:--hash-style=gnu --enable-new-dtags -rpath @PREFIX@/@GCCAUX@/lib}   \
       %{rdynamic:-export-dynamic}                               \
       %{!shared:-dynamic-linker " FBSD_DYNAMIC_LINKER " }}      \
     -X" SUBTARGET_EXTRA_LINK_SPEC "                             \
@@ -91,4 +92,6 @@
 #undef TARGET_BINDS_LOCAL_P
 #define TARGET_BINDS_LOCAL_P default_binds_local_p_2
 
+/* Static stack checking is supported by means of probes.  */
+#define STACK_CHECK_STATIC_BUILTIN 1
 #endif  /* GCC_AARCH64_FREEBSD_H */
--- gcc/config/i386/freebsd.h.orig
+++ gcc/config/i386/freebsd.h
@@ -88,6 +88,7 @@
         %{rdynamic:-export-dynamic} \
         -dynamic-linker %(fbsd_dynamic_linker) } \
     %{static:-Bstatic}} \
+  %{!static:--hash-style=gnu --enable-new-dtags -rpath @PREFIX@/@GCCAUX@/lib} \
   %{symbolic:-Bsymbolic}"
 
 /* A C statement to output to the stdio stream FILE an assembler
--- gcc/config/i386/freebsd64.h.orig
+++ gcc/config/i386/freebsd64.h
@@ -41,4 +41,5 @@
         %{rdynamic:-export-dynamic} \
 	-dynamic-linker %(fbsd_dynamic_linker) } \
     %{static:-Bstatic}} \
+  %{!static:--hash-style=gnu -rpath @PREFIX@/@GCCAUX@/lib} \
   %{symbolic:-Bsymbolic}"
--- /dev/null
+++ libgcc/config/aarch64/freebsd-unwind.h
@@ -0,0 +1,105 @@
+/* DWARF2 EH unwinding support for FreeBSD/ARM64 (aarch64).
+   Copyright (C) 2017 Free Software Foundation, Inc.
+   Contributed by John Marino <gnugcc@marino.st>
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+Under Section 7 of GPL version 3, you are granted additional
+permissions described in the GCC Runtime Library Exception, version
+3.1, as published by the Free Software Foundation.
+
+You should have received a copy of the GNU General Public License and
+a copy of the GCC Runtime Library Exception along with this program;
+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+<http://www.gnu.org/licenses/>.  */
+
+/* Do code reading to identify a signal frame, and set the frame
+   state data appropriately.  See unwind-dw2.c for the structs. */
+
+#include <sys/types.h>
+#include <signal.h>
+#include <unistd.h>
+#include <sys/ucontext.h>
+#include <machine/frame.h>
+#include <sys/user.h>
+#include <sys/sysctl.h>
+
+#define REG_NAME(reg)	mc_gpregs.gp_## reg
+#define XREG(num)	mc_gpregs.gp_x[num]
+#define DARC		__LIBGCC_DWARF_ALT_FRAME_RETURN_COLUMN__
+
+#define MD_FALLBACK_FRAME_STATE_FOR aarch64_freebsd_fallback_frame_state
+
+static int
+aarch64_outside_sigtramp_range (unsigned char *pc)
+{
+  static int sigtramp_range_determined = 0;
+  static unsigned char *sigtramp_start, *sigtramp_end;
+  
+  if (sigtramp_range_determined == 0)
+    {
+      struct kinfo_sigtramp kst = {0};
+      size_t len = sizeof (kst);
+      int mib[4] = { CTL_KERN, KERN_PROC, KERN_PROC_SIGTRAMP, getpid() };
+
+      sigtramp_range_determined = 1;
+      if (sysctl (mib, 4, &kst, &len, NULL, 0) == 0)
+      {
+        sigtramp_range_determined = 2;
+        sigtramp_start = kst.ksigtramp_start;
+        sigtramp_end   = kst.ksigtramp_end;
+      }
+    }
+  if (sigtramp_range_determined < 2)  /* sysctl failed if < 2 */
+    return 1;
+
+  return (pc < sigtramp_start || pc >= sigtramp_end );
+}
+
+static _Unwind_Reason_Code
+aarch64_freebsd_fallback_frame_state
+(struct _Unwind_Context *context, _Unwind_FrameState *fs)
+{
+  int n;
+  struct sigframe *sf;
+  mcontext_t *sc;
+  _Unwind_Ptr new_cfa;
+
+  if (aarch64_outside_sigtramp_range(context->ra))
+    return _URC_END_OF_STACK;
+
+  sf = (struct sigframe *) context->cfa;
+  sc = &sf->sf_uc.uc_mcontext;
+
+  new_cfa = (_Unwind_Ptr) sc;
+  fs->regs.cfa_how = CFA_REG_OFFSET;
+  fs->regs.cfa_reg = __LIBGCC_STACK_POINTER_REGNUM__;
+  fs->regs.cfa_offset = new_cfa - (_Unwind_Ptr) context->cfa;
+
+  for (n = 0; n < 32; n++)
+    fs->regs.reg[n].how = REG_SAVED_OFFSET;
+  
+  for (n = 0; n < 30; n++)
+    fs->regs.reg[n].loc.offset = (_Unwind_Ptr) &(sc->XREG(n)) - new_cfa;
+
+  fs->regs.reg[30].loc.offset = (_Unwind_Ptr) &(sc->REG_NAME(lr)) - new_cfa;
+  fs->regs.reg[31].loc.offset = (_Unwind_Ptr) &(sc->REG_NAME(sp)) - new_cfa;
+  
+  fs->regs.reg[DARC].how = REG_SAVED_OFFSET;
+  fs->regs.reg[DARC].loc.offset = (_Unwind_Ptr) &(sc->REG_NAME(elr)) - new_cfa;
+  
+  fs->retaddr_column = DARC;
+  fs->signal_frame = 1;
+
+  return _URC_NO_REASON;
+}
--- libgcc/config/i386/dragonfly-unwind.h.orig
+++ libgcc/config/i386/dragonfly-unwind.h
@@ -28,9 +28,13 @@
 
 #include <sys/types.h>
 #include <sys/sysctl.h>
+#include <sys/param.h>
 #include <signal.h>
 #include <sys/ucontext.h>
 #include <machine/sigframe.h>
+#if __DragonFly_version > 400900
+#include <sys/kinfo.h>
+#endif
 
 
 #define REG_NAME(reg)	sf_uc.uc_mcontext.mc_## reg
@@ -39,20 +43,44 @@
 #define MD_FALLBACK_FRAME_STATE_FOR x86_64_dragonfly_fallback_frame_state
 
 
-static void
-x86_64_sigtramp_range (unsigned char **start, unsigned char **end)
+static int
+x86_64_outside_sigtramp_range (unsigned char *pc)
 {
-  unsigned long ps_strings;
-  int mib[2];
-  size_t len;
-
-  mib[0] = CTL_KERN;
-  mib[1] = KERN_PS_STRINGS;
-  len = sizeof (ps_strings);
-  sysctl (mib, 2, &ps_strings, &len, NULL, 0);
+  static int sigtramp_range_determined = 0;
+  static unsigned char *sigtramp_start, *sigtramp_end;
 
-  *start = (unsigned char *)ps_strings - 32;
-  *end   = (unsigned char *)ps_strings;
+  if (sigtramp_range_determined == 0)
+    {
+#if __DragonFly_version > 400900
+      struct kinfo_sigtramp kst = {0};
+      size_t len = sizeof (kst);
+      int mib[3] = { CTL_KERN, KERN_PROC, KERN_PROC_SIGTRAMP };
+
+      sigtramp_range_determined = 1;
+      if (sysctl (mib, 3, &kst, &len, NULL, 0) == 0)
+      {
+        sigtramp_range_determined = 2;
+        sigtramp_start = kst.ksigtramp_start;
+        sigtramp_end   = kst.ksigtramp_end;
+      }
+#else
+      unsigned long ps_strings;
+      size_t len = sizeof (ps_strings);
+      int mib[2] = { CTL_KERN, KERN_PS_STRINGS };
+  
+      sigtramp_range_determined = 1;
+      if (sysctl (mib, 2, &ps_strings, &len, NULL, 0) == 0)
+      {
+        sigtramp_range_determined = 2;
+        sigtramp_start = (unsigned char *)ps_strings - 32;
+        sigtramp_end   = (unsigned char *)ps_strings;
+      }
+#endif
+    }
+  if (sigtramp_range_determined < 2)  /* sysctl failed if < 2 */
+    return 1;
+
+  return (pc < sigtramp_start || pc >= sigtramp_end );
 }
 
 
@@ -60,13 +88,10 @@
 x86_64_dragonfly_fallback_frame_state
 (struct _Unwind_Context *context, _Unwind_FrameState *fs)
 {
-  unsigned char *pc = context->ra;
-  unsigned char *sigtramp_start, *sigtramp_end;
   struct sigframe *sf;
   long new_cfa;
 
-  x86_64_sigtramp_range(&sigtramp_start, &sigtramp_end);
-  if (pc >= sigtramp_end || pc < sigtramp_start)
+  if (x86_64_outside_sigtramp_range(context->ra))
     return _URC_END_OF_STACK;
 
   sf = (struct sigframe *) context->cfa;
--- gcc/Makefile.in.orig
+++ gcc/Makefile.in
@@ -1185,7 +1185,6 @@
 	insn-emit.o \
 	insn-extract.o \
 	insn-latencytab.o \
-	insn-modes.o \
 	insn-opinit.o \
 	insn-output.o \
 	insn-peep.o \
@@ -1557,6 +1556,7 @@
   $(OBJS-libcommon-target) main.o c-family/cppspec.o \
   $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) $(GCOV_OBJS) $(GCOV_DUMP_OBJS) \
   $(GCOV_TOOL_OBJS) $(GENGTYPE_OBJS) gcc-ar.o gcc-nm.o gcc-ranlib.o \
+  insn-modes.o insn-modes-ada.o \
   lto-wrapper.o collect-utils.o
 
 # This lists all host object files, whether they are included in this
@@ -1564,6 +1564,11 @@
 ALL_HOST_OBJS = $(ALL_HOST_FRONTEND_OBJS) $(ALL_HOST_BACKEND_OBJS)
 
 BACKEND = libbackend.a main.o libcommon-target.a libcommon.a \
+	insn-modes.o \
+	$(CPPLIB) $(LIBDECNUMBER)
+
+BACKEND2 = libbackend.a main.o libcommon-target.a libcommon.a \
+	insn-modes-ada.o \
 	$(CPPLIB) $(LIBDECNUMBER)
 
 # This is defined to "yes" if Tree checking is enabled, which roughly means
@@ -2218,6 +2223,7 @@
 
 insn-modes.c: s-modes; @true
 insn-modes.h: s-modes-h; @true
+insn-modes-ada.c: s-modes-ada; @true
 min-insn-modes.c: s-modes-m; @true
 
 s-modes: build/genmodes$(build_exeext)
@@ -2235,6 +2241,12 @@
 	$(SHELL) $(srcdir)/../move-if-change tmp-min-modes.c min-insn-modes.c
 	$(STAMP) s-modes-m
 
+s-modes-ada: s-modes
+	$(shell sed -e 's/: TARGET_96_ROUND_53_LONG_DOUBLE \? &ieee_extended_intel_96_round_53_format //'  \
+		< insn-modes.c > tmp-modes-ada.c)
+	$(SHELL) $(srcdir)/../move-if-change tmp-modes-ada.c insn-modes-ada.c
+	$(STAMP) s-modes-ada
+
 insn-preds.c: s-preds; @true
 tm-preds.h: s-preds-h; @true
 tm-constrs.h: s-constrs-h; @true
@@ -3420,6 +3432,9 @@
 	    ( cd $(DESTDIR)$(bindir) && \
 	      $(LN) $(GCC_INSTALL_NAME)$(exeext) $(FULL_DRIVER_NAME) ); \
 	  fi; \
+	  if [ -f gnat1$(exeext) ] ; then \
+	    ( cd $(DESTDIR)$(bindir) && $(LN) $(GCC_INSTALL_NAME)$(exeext) ada$(exeext) ) \
+	  fi; \
 	  if [ ! -f gcc-cross$(exeext) ] \
 	      && [ "$(GCC_INSTALL_NAME)" != "$(GCC_TARGET_INSTALL_NAME)" ]; then \
 	    rm -f $(DESTDIR)$(bindir)/$(target_noncanonical)-gcc-tmp$(exeext); \
--- gcc/expmed.c.orig
+++ gcc/expmed.c
@@ -2286,11 +2286,13 @@
    and AMOUNT the rtx for the amount to shift by.
    Store the result in the rtx TARGET, if that is convenient.
    If UNSIGNEDP is nonzero, do a logical shift; otherwise, arithmetic.
-   Return the rtx for where the value is.  */
+   Return the rtx for where the value is.
+   If that cannot be done, abort the compilation unless MAY_FAIL is true,
+   in which case 0 is returned.  */
 
 static rtx
 expand_shift_1 (enum tree_code code, machine_mode mode, rtx shifted,
-		rtx amount, rtx target, int unsignedp)
+		rtx amount, rtx target, int unsignedp, bool may_fail = false)
 {
   rtx op1, temp = 0;
   int left = (code == LSHIFT_EXPR || code == LROTATE_EXPR);
@@ -2487,7 +2489,7 @@
 	 define_expand for lshrsi3 was added to vax.md.  */
     }
 
-  gcc_assert (temp);
+  gcc_assert (temp != NULL_RTX || may_fail);
   return temp;
 }
 
@@ -2506,6 +2508,16 @@
 			 shifted, GEN_INT (amount), target, unsignedp);
 }
 
+/* Likewise, but return 0 if that cannot be done.  */
+
+static rtx
+maybe_expand_shift (enum tree_code code, machine_mode mode, rtx shifted,
+		    int amount, rtx target, int unsignedp)
+{
+  return expand_shift_1 (code, mode,
+			 shifted, GEN_INT (amount), target, unsignedp, true);
+}
+
 /* Output a shift instruction for expression code CODE,
    with SHIFTED being the rtx for the value to shift,
    and AMOUNT the tree for the amount to shift by.
@@ -5811,11 +5823,12 @@
       if (rtx_equal_p (subtarget, op0))
 	subtarget = 0;
 
-      tem = expand_shift (RSHIFT_EXPR, mode, op0,
-			  GET_MODE_BITSIZE (mode) - 1,
-			  subtarget, 0);
-      tem = expand_binop (mode, sub_optab, tem, op0, subtarget, 0,
-			  OPTAB_WIDEN);
+      tem = maybe_expand_shift (RSHIFT_EXPR, mode, op0,
+				GET_MODE_BITSIZE (mode) - 1,
+				subtarget, 0);
+      if (tem)
+	tem = expand_binop (mode, sub_optab, tem, op0, subtarget, 0,
+			    OPTAB_WIDEN);
     }
 
   if (code == EQ || code == NE)
@@ -5877,9 +5890,9 @@
     }
 
   if (tem && normalizep)
-    tem = expand_shift (RSHIFT_EXPR, mode, tem,
-			GET_MODE_BITSIZE (mode) - 1,
-			subtarget, normalizep == 1);
+    tem = maybe_expand_shift (RSHIFT_EXPR, mode, tem,
+			      GET_MODE_BITSIZE (mode) - 1,
+			      subtarget, normalizep == 1);
 
   if (tem)
     {
--- libgcc/config.host.orig
+++ libgcc/config.host
@@ -242,7 +242,8 @@
   extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o"
   ;;
 *-*-netbsd*)
-  tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver"
+  tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-eh-dw2-dip"
+  tmake_file="$tmake_file t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver"
   # NetBSD 1.7 and later are set up to use GCC's crtstuff for
   # ELF configurations.  We will clear extra_parts in the
   # a.out configurations.
@@ -337,6 +338,7 @@
 	extra_parts="$extra_parts crtfastmath.o"
 	tmake_file="${tmake_file} ${cpu_type}/t-aarch64"
 	tmake_file="${tmake_file} ${cpu_type}/t-softfp t-softfp t-crtfm"
+	md_unwind_header=aarch64/freebsd-unwind.h
 	;;
 aarch64*-*-linux*)
 	extra_parts="$extra_parts crtfastmath.o"
@@ -609,9 +611,12 @@
 	md_unwind_header=i386/freebsd-unwind.h
 	;;
 i[34567]86-*-netbsdelf*)
+	tmake_file="${tmake_file} i386/t-crtstuff"
+	#md_unwind_header=i386/netbsd-unwind.h
 	;;
 x86_64-*-netbsd*)
 	tmake_file="${tmake_file} i386/t-crtstuff"
+	#md_unwind_header=i386/netbsd-unwind.h
 	;;
 i[34567]86-*-openbsd2.*|i[34567]86-*openbsd3.[0123])
 	;;


[FILE:1498:patches/patch-diff-cxx]
--- libstdc++-v3/configure.host.orig
+++ libstdc++-v3/configure.host
@@ -262,6 +262,9 @@
   freebsd*)
     os_include_dir="os/bsd/freebsd"
     ;;
+  linux-android*)
+    os_include_dir="os/bionic"
+    ;;
   linux-musl*)
     os_include_dir="os/generic"
     ;;
--- libstdc++-v3/config/os/bionic/ctype_base.h.orig
+++ libstdc++-v3/config/os/bionic/ctype_base.h
@@ -38,6 +38,18 @@
     // Non-standard typedefs.
     typedef const int* 		__to_type;
 
+#ifdef _CTYPE_U
+#define _U _CTYPE_U
+#define _L _CTYPE_L
+#define _D _CTYPE_D
+#define _S _CTYPE_S
+#define _P _CTYPE_P
+#define _C _CTYPE_C
+#define _X _CTYPE_X
+#define _B _CTYPE_B
+#define _N _CTYPE_D
+#endif
+
     // NB: Offsets into ctype<char>::_M_table force a particular size
     // on the mask type. Because of this, we don't use an enum.
     typedef char 		mask;
--- libstdc++-v3/src/c++11/futex.cc.orig
+++ libstdc++-v3/src/c++11/futex.cc
@@ -27,7 +27,11 @@
 #if defined(_GLIBCXX_HAVE_LINUX_FUTEX) && ATOMIC_INT_LOCK_FREE > 1
 #include <chrono>
 #include <climits>
+#ifdef __ANDROID__
+#include <sys/syscall.h>
+#else
 #include <syscall.h>
+#endif
 #include <unistd.h>
 #include <sys/time.h>
 #include <errno.h>
--- libstdc++-v3/src/filesystem/dir.cc.orig
+++ libstdc++-v3/src/filesystem/dir.cc
@@ -146,7 +146,13 @@
 
   int err = std::exchange(errno, 0);
   const auto entp = readdir(dirp);
+#ifdef __ANDROID__
+  int tmperr = errno;
+  errno = err;
+  err = tmperr;
+#else
   std::swap(errno, err);
+#endif
 
   if (entp)
     {


[FILE:1612:patches/patch-diff-gcc-testsuite]
--- gcc/testsuite/gcc.dg/format/ext-1.c.orig
+++ gcc/testsuite/gcc.dg/format/ext-1.c
@@ -8,7 +8,7 @@
 #include "format.h"
 
 void
-foo (quad_t q, u_quad_t uq, quad_t *qn, size_t z, size_t *zn, long long int ll,
+foo (quad2_t q, u_quad2_t uq, quad2_t *qn, size_t z, size_t *zn, long long int ll,
      unsigned long long int ull, int i, unsigned int u, double d,
      char *s, void *p, wchar_t *ls, wint_t lc, int *n, long int l)
 {
--- gcc/testsuite/gcc.dg/format/ext-2.c.orig
+++ gcc/testsuite/gcc.dg/format/ext-2.c
@@ -8,7 +8,7 @@
 #include "format.h"
 
 void
-foo (quad_t *qp, u_quad_t *uqp, quad_t *qn, long long int *llp,
+foo (quad2_t *qp, u_quad2_t *uqp, quad2_t *qn, long long int *llp,
      unsigned long long int *ullp, float *fp, char *s, void **pp, wchar_t *ls,
      int *ip, unsigned int *up)
 {
--- gcc/testsuite/gcc.dg/format/format.h.orig
+++ gcc/testsuite/gcc.dg/format/format.h
@@ -71,8 +71,8 @@
 #endif
 
 /* %q formats want a "quad"; GCC considers this to be a long long.  */
-typedef llong quad_t;
-typedef ullong u_quad_t;
+typedef llong quad2_t;
+typedef ullong u_quad2_t;
 
 __extension__ typedef __INTMAX_TYPE__ intmax_t;
 __extension__ typedef __UINTMAX_TYPE__ uintmax_t;
--- gcc/testsuite/gcc.dg/pch/pch.exp.orig
+++ gcc/testsuite/gcc.dg/pch/pch.exp
@@ -44,6 +44,8 @@
 set test "largefile.c"
 set testh "largefile.hs"
 set f [open $test w]
+puts $f "/* { dg-do run { target *-*-solaris* } } */"
+puts $f "/* { dg-error \"dummy\" \"fool dejagnu\" { target { ! *-*-solaris* } 20 } } */"
 puts $f "/* { dg-timeout-factor 4.0 } */"
 set v 0
 for { set v 0 } { $v < 10000 } { incr v } {


[FILE:463:patches/patch-gcc_config_i386_gnu-user64.h]
--- gcc/config/i386/gnu-user64.h.orig	2016-01-04 08:30:50.000000000 -0600
+++ gcc/config/i386/gnu-user64.h	2017-05-19 15:55:41.756608223 -0500
@@ -57,6 +57,7 @@
                    %{" SPEC_32 ":-m " GNU_USER_LINK_EMULATION32 "} \
                    %{" SPEC_X32 ":-m " GNU_USER_LINK_EMULATIONX32 "} \
   %{shared:-shared} \
+  %{!static:--enable-new-dtags -rpath @PREFIX@/@GCCAUX@/lib64} \
   %{!shared: \
     %{!static: \
       %{rdynamic:-export-dynamic} \

