# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		sqlitebrowser
VERSION=		3.10.1
REVISION=		1
KEYWORDS=		databases
VARIANTS=		standard
SDESC[standard]=	Visual tool to manage SQLite databases
HOMEPAGE=		http://sqlitebrowser.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/sqlitebrowser:sqlitebrowser:v3.10.1
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		qt5-qttools:single:standard
BUILDRUN_DEPENDS=	qscintilla:primary:standard

USES=			cmake sqlite desktop-utils:single gnome-icons:single

LICENSE=		MPL:single GPLv3+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		MPL:stock
			GPLv3+:stock
LICENSE_AWK=		TERMS:"^----"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		dual

FPC_EQUIVALENT=		databases/sqlitebrowser

CMAKE_ARGS=		-DFORCE_INTERNAL_ANTLR:BOOL=ON
			-DQT_INCLUDE_DIR:PATH="{{PREFIX}}/include/qt5"
			-DQT_LIBRARY_DIR:PATH="{{PREFIX}}/lib/qt5"
			-DCMAKE_PREFIX_PATH:PATH="{{PREFIX}}/lib/qt5/cmake/"

post-patch:
	${REINPLACE_CMD} -e 's|%%DATADIR%%|${PREFIX}/share/${NAMEBASE}|' \
		${WRKSRC}/src/PreferencesDialog.cpp \
		${WRKSRC}/src/Application.cpp

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/sqlitebrowser

[FILE:911:descriptions/desc.single]
DB Browser for SQLite is a high quality, visual, open source tool to create,
design, and edit database files compatible with SQLite.

It is for users and developers wanting to create databases, search, and edit
data. It uses a familiar spreadsheet-like interface, and you don't need to
learn complicated SQL commands.

Controls and wizards are available for users to:
 * Create and compact database files
 * Create, define, modify and delete tables
 * Create, define and delete indexes
 * Browse, edit, add and delete records
 * Search records
 * Import and export records as text
 * Import and export tables from/to CSV files
 * Import and export databases from/to SQL dump files
 * Issue SQL queries and inspect the results
 * Examine a log of all SQL commands issued by the application

This program is not a visual shell for the sqlite command line tool. It
does not require familiarity with SQL commands.



[FILE:120:distinfo]
36eb53bc75192c687dce298c79f1532c410ce4ecbeeacfb07b9d02a307f16bef      1992186 sqlitebrowser-sqlitebrowser-3.10.1.tar.gz


[FILE:158:manifests/plist.single]
bin/sqlitebrowser
share/appdata/sqlitebrowser.desktop.appdata.xml
share/applications/sqlitebrowser.desktop
share/icons/hicolor/256x256/apps/sqlitebrowser.png


[FILE:770:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2017-09-20 13:59:51 UTC
+++ CMakeLists.txt
@@ -67,9 +67,7 @@ endif()
 add_subdirectory(${QHEXEDIT_DIR})
 add_subdirectory(${QCUSTOMPLOT_DIR})
 
-find_package(Qt5Widgets REQUIRED)
-find_package(Qt5LinguistTools REQUIRED)
-find_package(Qt5Network REQUIRED)
+find_package(Qt5 REQUIRED COMPONENTS Gui Widgets LinguistTools Network Test PrintSupport)
 set(CMAKE_AUTOMOC ON)
 set(CMAKE_INCLUDE_CURRENT_DIR ON)
 
@@ -291,7 +289,7 @@ add_executable(${PROJECT_NAME}
 		${SQLB_RESOURCES_RCC}
 		${SQLB_MISC})
 
-qt5_use_modules(${PROJECT_NAME} Gui Widgets Network Test PrintSupport)
+target_link_libraries(${PROJECT_NAME} Qt5::Gui Qt5::Widgets Qt5::Network Qt5::PrintSupport)
 set(QT_LIBRARIES "")
 
 add_dependencies(${PROJECT_NAME} qhexedit qcustomplot)


[FILE:299:patches/patch-cmake_FindQScintilla.cmake]
--- cmake/FindQScintilla.cmake.orig	2017-09-20 13:59:51 UTC
+++ cmake/FindQScintilla.cmake
@@ -80,7 +80,7 @@ endif ()
 
 
 find_library ( QSCINTILLA_LIBRARY
-  NAMES qscintilla qscintilla2 libqscintilla2
+  NAMES qscintilla qscintilla2 qscintilla2_qt5 libqscintilla2
   HINTS ${QT_LIBRARY_DIR}
 )
 


[FILE:344:patches/patch-libs_qcustomplot-source_CMakeLists.txt]
--- libs/qcustomplot-source/CMakeLists.txt.orig	2017-09-20 13:59:51 UTC
+++ libs/qcustomplot-source/CMakeLists.txt
@@ -17,4 +17,4 @@ set(QCUSTOMPLOT_MOC_HDR
 
 add_library(qcustomplot ${QCUSTOMPLOT_SRC} ${QCUSTOMPLOT_HDR} ${QCUSTOMPLOT_MOC})
 
-qt5_use_modules(qcustomplot Widgets PrintSupport)
+target_link_libraries(qcustomplot Qt5::Widgets)


[FILE:290:patches/patch-libs_qhexedit_CMakeLists.txt]
--- libs/qhexedit/CMakeLists.txt.orig	2017-09-20 13:59:51 UTC
+++ libs/qhexedit/CMakeLists.txt
@@ -22,4 +22,4 @@ set(QHEXEDIT_MOC_HDR
 
 add_library(qhexedit ${QHEXEDIT_SRC} ${QHEXEDIT_HDR} ${QHEXEDIT_MOC})
 
-qt5_use_modules(qhexedit Widgets)
+target_link_libraries(qhexedit Qt5::Widgets)


[FILE:657:patches/patch-src_Application.cpp]
--- src/Application.cpp.orig	2017-09-20 13:59:51 UTC
+++ src/Application.cpp
@@ -27,8 +27,8 @@ Application::Application(int& argc, char
 
     // First of all try to load the application translation file.
     m_translatorApp = new QTranslator(this);
-    ok = m_translatorApp->load("sqlb_" + name,
-                               QCoreApplication::applicationDirPath() + "/translations");
+    QString trans_dir = "%%DATADIR%%/translations";
+    ok = m_translatorApp->load("sqlb_" + name, trans_dir);
     // If failed then try to load .qm file from resources
     if (ok == false) {
         ok = m_translatorApp->load("sqlb_" + name, ":/translations");


[FILE:441:patches/patch-src_PreferencesDialog.cpp]
--- src/PreferencesDialog.cpp.orig	2017-09-20 13:59:51 UTC
+++ src/PreferencesDialog.cpp
@@ -346,8 +346,7 @@ void PreferencesDialog::removeExtension(
 
 void PreferencesDialog::fillLanguageBox()
 {
-    QDir translationsDir(QCoreApplication::applicationDirPath() + "/translations",
-                         "sqlb_*.qm");
+    QDir translationsDir("%%DATADIR%%/translations", "sqlb_*.qm");
 
     QLocale systemLocale = QLocale::system();
 

