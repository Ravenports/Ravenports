# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		video4linux
VERSION=		1.18.0
KEYWORDS=		multimedia
VARIANTS=		standard
SDESC[standard]=	Video device drivers
HOMEPAGE=		http://freshmeat.net/projects/libv4l
CONTACT=		nobody

DOWNLOAD_GROUPS=	main dvb
SITES[main]=		http://linuxtv.org/downloads/v4l-utils/
DISTFILE[1]=		v4l-utils-1.18.0.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		evdev-proto:single:standard
BR_DEPS[freebsd]=	argp-standalone:single:standard
BR_DEPS[sunos]=		argp-standalone:single:standard
BR_DEPS[dragonfly]=	argp-standalone:single:standard

USES=			gmake jpeg libtool pkgconfig

DISTNAME=		v4l-utils-1.18.0

FPC_EQUIVALENT=		multimedia/libv4l

INVALID_RPATH=		yes
MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-doxygen-doc

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes

post-patch-dragonfly:
	${REINPLACE_CMD} -e 's| -lrt||' \
		${WRKSRC}/lib/libv4lconvert/Makefile.in \
		${WRKSRC}/lib/libv4lconvert/libv4lconvert.pc.in
	${TOUCH} ${WRKSRC}/lib/include/sys/sysmacros.h

post-extract:
	${REINPLACE_CMD} -e '/CPPFLAGS=.*freebsd/d' ${WRKSRC}/configure
	${MKDIR} ${WRKSRC}/lib/include/sys

post-patch-freebsd:
	${REINPLACE_CMD} -e 's| -lrt||' \
		${WRKSRC}/lib/libv4lconvert/Makefile.in \
		${WRKSRC}/lib/libv4lconvert/libv4lconvert.pc.in
	${TOUCH} ${WRKSRC}/lib/include/sys/sysmacros.h

[FILE:241:descriptions/desc.single]
The Video4Linux library is a wrapper library for accessing Video4Linux
compliant video devices. It allows for transcoding of capture streams
in user space instead of kernel space and creates a standard interface
mechanism for video devices.


[FILE:103:distinfo]
6cb60d822eeed20486a03cc23e0fc65956fbc1e85e0c1a7477f68bbd9802880d      1995506 v4l-utils-1.18.0.tar.bz2


[FILE:570:manifests/plist.single]
include/
 libv4l-plugin.h
 libv4l1-videodev.h
 libv4l1.h
 libv4l2.h
 libv4l2rds.h
 libv4lconvert.h
lib/
 libv4l1.a
 libv4l1.so
 libv4l1.so.0
 libv4l1.so.0.0.0
 libv4l2.a
 libv4l2.so
 libv4l2.so.0
 libv4l2.so.0.0.0
 libv4l2rds.a
 libv4l2rds.so
 libv4l2rds.so.0
 libv4l2rds.so.0.0.0
 libv4lconvert.a
 libv4lconvert.so
 libv4lconvert.so.0
 libv4lconvert.so.0.0.0
 v4l1compat.so
 v4l2convert.so
lib/libv4l/
 ov511-decomp
 ov518-decomp
 v4l1compat.so
 v4l2convert.so
lib/libv4l/plugins/libv4l-mplane.so
lib/pkgconfig/
 libv4l1.pc
 libv4l2.pc
 libv4l2rds.pc
 libv4lconvert.pc


[FILE:1676:patches/patch-lib_libv4lconvert_libv4lsyscall-priv.h]
--- lib/libv4lconvert/libv4lsyscall-priv.h.orig	2017-01-22 17:33:34 UTC
+++ lib/libv4lconvert/libv4lsyscall-priv.h
@@ -51,7 +51,7 @@
 #endif
 #endif
 
-#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__DragonFly__)
 #include <sys/time.h>
 #include <sys/syscall.h>
 #include <sys/types.h>
@@ -59,10 +59,27 @@
 #define	_IOC_NR(cmd) ((cmd) & 0xFF)
 #define	_IOC_TYPE(cmd) IOCGROUP(cmd)
 #define	_IOC_SIZE(cmd) IOCPARM_LEN(cmd)
+# ifndef MAP_ANONYMOUS
 #define	MAP_ANONYMOUS MAP_ANON
+# endif
 #define	MMAP2_PAGE_SHIFT 0
 #endif
 
+#ifdef __sun__
+#include <sys/time.h>
+#include <sys/syscall.h>
+#include <sys/types.h>
+#include <sys/ioctl.h>
+# ifndef MAP_ANONYMOUS
+#define	MAP_ANONYMOUS MAP_ANON
+# endif
+#define	MMAP2_PAGE_SHIFT 0
+#define	_IOC_NR(cmd) ((cmd) & 0x1FFF)
+#define	_IOC_SIZE(cmd) (((cmd) >> 16) & 0x1FFF)
+#define	_IOC_TYPE(cmd) (((cmd) >> 8) & 0xFF)
+typedef off_t __off_t;
+#endif
+
 #if defined(__OpenBSD__)
 #include <sys/syscall.h>
 #include <sys/types.h>
@@ -98,11 +115,11 @@
 #define SYS_WRITE(fd, buf, len) \
 	syscall(SYS_write, (int)(fd), (const void *)(buf), (size_t)(len));
 
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined (__DragonFly__)
 #define SYS_MMAP(addr, len, prot, flags, fd, off) \
 	__syscall(SYS_mmap, (void *)(addr), (size_t)(len), \
 			(int)(prot), (int)(flags), (int)(fd), (off_t)(off))
-#elif defined(__FreeBSD_kernel__)
+#elif defined(__FreeBSD_kernel__) || defined (__sun__)
 #define SYS_MMAP(addr, len, prot, flags, fd, off) \
 	syscall(SYS_mmap, (void *)(addr), (size_t)(len), \
 			(int)(prot), (int)(flags), (int)(fd), (off_t)(off))

