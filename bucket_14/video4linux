# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		video4linux
VERSION=		1.6.3
REVISION=		2
KEYWORDS=		multimedia
VARIANTS=		standard
SDESC[standard]=	Video device drivers
HOMEPAGE=		http://freshmeat.net/projects/libv4l
CONTACT=		nobody

DOWNLOAD_GROUPS=	main dvb
SITES[main]=		http://linuxtv.org/downloads/v4l-utils/
SITES[dvb]=		FREELOCAL/kwm
DISTFILE[1]=		v4l-utils-1.6.3.tar.bz2:main
DISTFILE[2]=		linux-3.16.7-dvb-headers.tar.xz:dvb
DF_INDEX=		1 2
SPKGS[standard]=	complete
			primary
			headers
			utils

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

B_DEPS[sunos]=		libbsd4sol:single:standard
BR_DEPS[freebsd]=	argp-standalone:single:standard
BR_DEPS[sunos]=		argp-standalone:single:standard
BR_DEPS[dragonfly]=	argp-standalone:single:standard
EXRUN[utils]=		video4linux:primary:standard

USES=			gmake iconv jpeg libtool pkgconfig c++:utils

DISTNAME=		v4l-utils-1.6.3

FPC_EQUIVALENT=		multimedia/libv4l

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-libdvbv5
			--enable-v4l-utils
			--enable-libv4l
			--disable-qv4l2
			--without-libudev

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes

post-patch-dragonfly:
	# fix weird types, except a few headers which have compat code for these types.
	${FIND} ${WRKDIR} -type f \( -iname "*.h" ! -iname "input.h" ! -iname "videodev2.h" \) | \
		${XARGS} -n 10 ${REINPLACE_CMD} \
		-e 's|linux/types.h|sys/types.h|g; s|__user||g; \
		s|__u8|uint8_t|g; s|__s8|int8_t|g; \
		s|__u16|uint16_t|g; s|__s16|int16_t|g; \
		s|__u32|uint32_t|g; s|__s32|int32_t|g; \
		s|__u64|uint64_t|g; s|__s64|int64_t|g'

post-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/include/linux/dvb/
.for i in ivtv.h v4l2-controls.h v4l2-common.h videodev2.h
	${INSTALL_DATA} ${WRKSRC}/contrib/freebsd/include/linux/${i} \
		${STAGEDIR}${PREFIX}/include/linux/
.endfor
.for i in audio.h dmx.h frontend.h video.h
	${INSTALL_DATA} ${WRKSRC}/include/linux/dvb/${i} \
		${STAGEDIR}${PREFIX}/include/linux/dvb
.endfor
	# V4L1 is dead in linux, however webcamd still supports it.
	${INSTALL_DATA} ${FILESDIR}/videodev.h \
		${STAGEDIR}${PREFIX}/include/linux/
	# Extra dvb headers supplied taken from the linux kernel distfile.
	# vdr and the gst dvb plugin need them at least
.for i in ca.h osd.h version.h
	${INSTALL_DATA} ${WRKSRC}/linux/dvb/${i} \
		${STAGEDIR}${PREFIX}/include/linux/dvb/
.endfor
	${RM} -r ${STAGEDIR}/lib

post-extract:
	${MV} ${WRKDIR}/linux ${WRKSRC}/

post-patch-freebsd:
	# fix weird types, except a few headers which have compat code for these types.
	${FIND} ${WRKDIR} -type f \( -iname "*.h" ! -iname "input.h" ! -iname "videodev2.h" \) | \
		${XARGS} -n 10 ${REINPLACE_CMD} \
		-e 's|linux/types.h|sys/types.h|g; s|__user||g; \
		s|__u8|uint8_t|g; s|__s8|int8_t|g; \
		s|__u16|uint16_t|g; s|__s16|int16_t|g; \
		s|__u32|uint32_t|g; s|__s32|int32_t|g; \
		s|__u64|uint64_t|g; s|__s64|int64_t|g'

post-configure-sunos:
	${FIND} ${WRKDIR} -type f \( -iname "*.h" ! -iname "input.h" ! -iname "videodev2.h" \) | \
		${XARGS} -n 10 ${REINPLACE_CMD} \
		-e 's|linux/types.h|sys/types.h|g; s|__user||g; \
		s|sys/fcntl.h|fcntl.h|g; \
		s|__u8|uint8_t|g; s|__s8|int8_t|g; \
		s|__u16|uint16_t|g; s|__s16|int16_t|g; \
		s|__u32|uint32_t|g; s|__s32|int32_t|g; \
		s|__u64|uint64_t|g; s|__s64|int64_t|g'
	${REINPLACE_CMD} \
		-e 's|u_int8_t|uint8_t|g' \
		-e 's|u_int16_t|uint16_t|g' \
		-e 's|u_int32_t|uint32_t|g' \
		${WRKSRC}/utils/keytable/keytable.c

[FILE:284:descriptions/desc.primary]
The Video4Linux library is a wrapper library for accessing Video4Linux
compliant video devices. It allows for transcoding of capture streams
in user space instead of kernel space and creates a standard interface
mechanism for video devices.

This package contains the main libraries.


[FILE:61:descriptions/desc.headers]
This package contains the Video4Linux compatibility headers.


[FILE:49:descriptions/desc.utils]
This package contains the Video4Linux utilities.


[FILE:212:distinfo]
164abf5c1befcd27e8e6ef824a82d4015bdfb5d99ae82daa00e77d895ff9864c      1151081 v4l-utils-1.6.3.tar.bz2
0ee217b243d52b8104e6b61bbf009bf84155573317720f41930af0a9ef50cdaa        11712 linux-3.16.7-dvb-headers.tar.xz


[FILE:1302:manifests/plist.primary]
include/
 libv4l-plugin.h
 libv4l1-videodev.h
 libv4l1.h
 libv4l2.h
 libv4l2rds.h
 libv4lconvert.h
include/libdvbv5/
 atsc_eit.h
 atsc_header.h
 cat.h
 crc32.h
 desc_atsc_service_location.h
 desc_ca.h
 desc_ca_identifier.h
 desc_cable_delivery.h
 desc_event_extended.h
 desc_event_short.h
 desc_extension.h
 desc_frequency_list.h
 desc_hierarchy.h
 desc_isdbt_delivery.h
 desc_language.h
 desc_logical_channel.h
 desc_network_name.h
 desc_partial_reception.h
 desc_sat.h
 desc_service.h
 desc_t2_delivery.h
 desc_terrestrial_delivery.h
 desc_ts_info.h
 descriptors.h
 dvb-demux.h
 dvb-fe.h
 dvb-file.h
 dvb-frontend.h
 dvb-log.h
 dvb-sat.h
 dvb-scan.h
 dvb-v5-std.h
 eit.h
 header.h
 mgt.h
 mpeg_es.h
 mpeg_pes.h
 mpeg_ts.h
 nit.h
 pat.h
 pmt.h
 sdt.h
 vct.h
lib/
 libdvbv5.a
 libdvbv5.so
 libdvbv5.so.0
 libdvbv5.so.0.0.0
 libv4l1.a
 libv4l1.so
 libv4l1.so.0
 libv4l1.so.0.0.0
 libv4l2.a
 libv4l2.so
 libv4l2.so.0
 libv4l2.so.0.0.0
 libv4l2rds.a
 libv4l2rds.so
 libv4l2rds.so.0
 libv4l2rds.so.0.0.0
 libv4lconvert.a
 libv4lconvert.so
 libv4lconvert.so.0
 libv4lconvert.so.0.0.0
 v4l1compat.so
 v4l2convert.so
lib/libv4l/
 ov511-decomp
 ov518-decomp
 v4l1compat.so
 v4l2convert.so
lib/libv4l/plugins/libv4l-mplane.so
lib/pkgconfig/
 libdvbv5.pc
 libv4l1.pc
 libv4l2.pc
 libv4l2rds.pc
 libv4lconvert.pc


[FILE:160:manifests/plist.headers]
include/linux/
 ivtv.h
 v4l2-common.h
 v4l2-controls.h
 videodev.h
 videodev2.h
include/linux/dvb/
 audio.h
 ca.h
 dmx.h
 frontend.h
 osd.h
 version.h
 video.h


[FILE:292:manifests/plist.utils]
bin/
 decode_tm6000
 dvb-fe-tool
 dvb-format-convert
 dvbv5-scan
 dvbv5-zap
 ir-keytable
 rds-ctl
 v4l2-compliance
 v4l2-sysfs-path
etc/rc_maps.cfg
sbin/v4l2-dbg
share/man/man1/
 dvb-fe-tool.1.gz
 dvb-format-convert.1.gz
 dvbv5-scan.1.gz
 dvbv5-zap.1.gz
 ir-keytable.1.gz
@dir etc/rc_keymaps


[FILE:318:patches/patch-configure]
--- configure.orig	2015-01-25 19:42:02.248041140 +0100
+++ configure	2015-01-25 19:42:14.503036421 +0100
@@ -19876,7 +19876,7 @@
   WITH_LIBV4L_FALSE=
 fi
 
- if test x$enable_v4l_utils != xno -a x$linux_os = xyes; then
+ if test x$enable_v4l_utils != xno; then
   WITH_V4LUTILS_TRUE=
   WITH_V4LUTILS_FALSE='#'
 else


[FILE:904:patches/patch-contrib_freebsd_include_linux_input.h]
--- contrib/freebsd/include/linux/input.h.orig	2015-05-06 19:24:59 UTC
+++ contrib/freebsd/include/linux/input.h
@@ -13,6 +13,9 @@
 #include <sys/ioctl.h>
 #include <sys/types.h>
 
+#ifdef __linux__
+#define HAVE_LINUX_INTEGER_TYPES
+#endif
 #ifndef HAVE_LINUX_INTEGER_TYPES
 /* XXX remove when depending software has been updated */
 #ifndef __u64
@@ -42,10 +45,16 @@ typedef int8_t __s8;
 #endif
 #endif
 
-#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__DragonFly__)
+#define __user
+#define	_IOC_READ   IOC_OUT
+#define	_IOC_WRITE  IOC_IN
+#elif defined __sun__
 #define __user
+#include <sys/ioccom.h>
 #define	_IOC_READ   IOC_OUT
 #define	_IOC_WRITE  IOC_IN
+#define	_IOC(inout,group,num,len)	((unsigned long) ((inout) | (((len) & IOCPARM_MASK) << 16) | ((group) << 8) | (num)))
 #else
 #include <linux/types.h>
 #endif


[FILE:354:patches/patch-contrib_freebsd_include_linux_videodev2.h]
--- contrib/freebsd/include/linux/videodev2.h.orig	2015-05-06 19:24:59 UTC
+++ contrib/freebsd/include/linux/videodev2.h
@@ -60,6 +60,9 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <sys/ioctl.h>
+#ifdef __sun__
+#include <sys/ioccom.h>
+#endif
 
 #ifndef HAVE_LINUX_INTEGER_TYPES
 /* XXX remove when depending software has been updated */


[FILE:789:patches/patch-include_linux_dvb_frontend.h]
--- include/linux/dvb/frontend.h.orig	2014-09-07 17:18:12 UTC
+++ include/linux/dvb/frontend.h
@@ -26,6 +26,9 @@
 #ifndef _DVBFRONTEND_H_
 #define _DVBFRONTEND_H_
 
+#ifdef __sun__
+#include <sys/ioccom.h>
+#endif
 #include <linux/types.h>
 
 typedef enum fe_type {
@@ -549,7 +552,13 @@ struct dtv_properties {
 };
 
 #define FE_SET_PROPERTY		   _IOW('o', 82, struct dtv_properties)
-#define FE_GET_PROPERTY		   _IOR('o', 83, struct dtv_properties)
+/* 
+ * This is broken on linux as well but they workaround it in the driver.
+ * Since this is impossible to do on FreeBSD fix the header instead.
+ * Detailed and discussion :
+ * http://lists.freebsd.org/pipermail/freebsd-multimedia/2010-April/010958.html
+ */
+#define FE_GET_PROPERTY		   _IOW('o', 83, struct dtv_properties)
 
 
 /**


[FILE:416:patches/patch-include_linux_dvb_video.h]
--- include/linux/dvb/video.h.orig	2015-01-10 15:05:58.438363362 +0100
+++ include/linux/dvb/video.h	2015-01-10 15:06:25.350361374 +0100
@@ -133,7 +133,7 @@
 #define VIDEO_EVENT_FRAME_RATE_CHANGED	2
 #define VIDEO_EVENT_DECODER_STOPPED 	3
 #define VIDEO_EVENT_VSYNC 		4
-	__kernel_time_t timestamp;
+	struct timespec timestamp;
 	union {
 		video_size_t size;
 		unsigned int frame_rate;	/* in frames per 1000sec */


[FILE:366:patches/patch-lib_Makefile.in]
--- lib/Makefile.in.orig	2015-01-12 10:51:50.193906738 +0100
+++ lib/Makefile.in	2015-01-12 10:52:04.848018891 +0100
@@ -77,8 +77,8 @@
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-@LINUX_OS_TRUE@am__append_1 = \
-@LINUX_OS_TRUE@	libdvbv5
+am__append_1 = \
+	libdvbv5
 
 subdir = lib
 DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am


[FILE:789:patches/patch-lib_include_libdvbv5_dvb-frontend.h]
--- lib/include/libdvbv5/dvb-frontend.h.orig	2014-04-23 06:40:08 UTC
+++ lib/include/libdvbv5/dvb-frontend.h
@@ -27,6 +27,9 @@
 #define _DVBFRONTEND_H_
 
 #include <linux/types.h>
+#ifdef __sun__
+#include <sys/ioccom.h>
+#endif
 
 typedef enum fe_type {
 	FE_QPSK,
@@ -553,7 +556,13 @@ struct dtv_properties {
 };
 
 #define FE_SET_PROPERTY		   _IOW('o', 82, struct dtv_properties)
-#define FE_GET_PROPERTY		   _IOR('o', 83, struct dtv_properties)
+/* 
+ * This is broken on linux as well but they workaround it in the driver.
+ * Since this is impossible to do on FreeBSD fix the header instead.
+ * Detailed and discussion :
+ * http://lists.freebsd.org/pipermail/freebsd-multimedia/2010-April/010958.html
+ */
+#define FE_GET_PROPERTY		   _IOW('o', 83, struct dtv_properties)
 
 
 /**


[FILE:403:patches/patch-lib_include_libv4l1-videodev.h]
--- lib/include/libv4l1-videodev.h.orig	2013-06-28 20:10:56 UTC
+++ lib/include/libv4l1-videodev.h
@@ -6,9 +6,12 @@
 #include <linux/ioctl.h>
 #endif
 
-#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__DragonFly__)
 #include <sys/ioctl.h>
 #endif
+#if defined __sun__
+#include <sys/ioccom.h>
+#endif
 
 #include <stdint.h>
 


[FILE:255:patches/patch-lib_include_libv4l1.h]
--- lib/include/libv4l1.h.orig	2013-06-28 20:10:56 UTC
+++ lib/include/libv4l1.h
@@ -25,7 +25,9 @@ extern "C" {
 
 #include <stdio.h>
 #include <stdint.h>
+#ifndef __sun__
 #include <unistd.h>
+#endif
 #include <libv4l1-videodev.h>
 
 #if HAVE_VISIBILITY


[FILE:231:patches/patch-lib_include_libv4l2.h]
--- lib/include/libv4l2.h.orig	2013-06-28 20:10:56 UTC
+++ lib/include/libv4l2.h
@@ -20,7 +20,9 @@
 #define __LIBV4L2_H
 
 #include <stdio.h>
+#ifndef __sun__
 #include <unistd.h>
+#endif
 #include <stdint.h>
 
 #ifdef __cplusplus


[FILE:358:patches/patch-lib_include_libv4lconvert.h]
--- lib/include/libv4lconvert.h.orig	2015-06-16 09:34:09 UTC
+++ lib/include/libv4lconvert.h
@@ -28,7 +28,7 @@
 #include <linux/ioctl.h>
 #endif
 
-#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__DragonFly__)
 #include <sys/time.h>
 #include <sys/types.h>
 #include <sys/ioctl.h>


[FILE:266:patches/patch-lib_libdvbv5_dvb-demux.c]
--- lib/libdvbv5/dvb-demux.c.orig	2014-09-07 16:37:14 UTC
+++ lib/libdvbv5/dvb-demux.c
@@ -37,6 +37,9 @@
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <stdlib.h> /* free */
+#ifdef __sun__
+#include <sys/ioccom.h>
+#endif
 
 #include <libdvbv5/dvb-demux.h>
 


[FILE:348:patches/patch-lib_libv4l1_v4l1compat.c]
--- lib/libv4l1/v4l1compat.c.orig	2013-06-28 20:10:56 UTC
+++ lib/libv4l1/v4l1compat.c
@@ -29,7 +29,9 @@
 #include "../libv4lconvert/libv4lsyscall-priv.h" /* for __off_t */
 
 #include <sys/ioctl.h>
+#ifndef __sun__
 #include <sys/mman.h>
+#endif
 
 /* Check that open/read/mmap is not a define */
 #if defined open || defined read || defined mmap


[FILE:322:patches/patch-lib_libv4l2_v4l2convert.c]
--- lib/libv4l2/v4l2convert.c.orig	2015-05-06 19:24:59 UTC
+++ lib/libv4l2/v4l2convert.c
@@ -31,7 +31,9 @@
 #include <fcntl.h>
 #include <string.h>
 #include <sys/ioctl.h>
+#ifndef __sun__
 #include <sys/mman.h>
+#endif
 #include "../libv4lconvert/libv4lsyscall-priv.h"
 #include <linux/videodev2.h>
 #include <libv4l2.h>


[FILE:605:patches/patch-lib_libv4l2rds_libv4l2rds.c]
--- lib/libv4l2rds/libv4l2rds.c.orig	2014-08-22 14:59:47 UTC
+++ lib/libv4l2rds/libv4l2rds.c
@@ -1046,12 +1046,14 @@ static time_t rds_decode_mjd(const struc
 	new_time.tm_mday = d;
 	new_time.tm_mon = m - 1;
 	new_time.tm_year = y;
+#ifndef __sun__
 	/* offset (submitted by RDS) that was used to compute the local time,
 	 * expressed in multiples of half hours, bit 5 indicates -/+ */
 	if (priv_state->utc_offset & 0x20)
 		new_time.tm_gmtoff = -offset * 1800;
 	else
 		new_time.tm_gmtoff = offset * 1800;
+#endif
 
 	/* convert tm struct to time_t value and return it */
 	return mktime(&new_time);


[FILE:2165:patches/patch-lib_libv4lconvert_control_libv4lcontrol.c]
--- lib/libv4lconvert/control/libv4lcontrol.c.orig	2015-05-06 19:24:59 UTC
+++ lib/libv4lconvert/control/libv4lcontrol.c
@@ -37,6 +37,32 @@
 #include "../libv4lsyscall-priv.h"
 #include <linux/videodev2.h>
 
+#ifdef __sun__
+
+
+static size_t
+strnlen(const char *s, size_t maxlen)
+{
+	size_t len;
+	for (len = 0; len < maxlen; len++, s++) {
+		if (!*s) break;
+	}
+	return (len);
+}
+
+static char *strndup (const char *str, size_t max)
+{
+    size_t len = strnlen (str, max);
+    char *res = malloc (len + 1);
+    if (res)
+    {
+        memcpy (res, str, len);
+        res[len] = '\0';
+    }
+    return res;
+}
+#endif
+
 #define ARRAY_SIZE(x) ((int)sizeof(x) / (int)sizeof((x)[0]))
 
 /* List of cams which need special flags */
@@ -361,6 +387,19 @@ static int v4lcontrol_get_usb_info(struc
 		unsigned short *vendor_id, unsigned short *product_id,
 		int *speed)
 {
+#ifdef __FreeBSD__
+#define WEBCAMD_IOCTL_GET_USB_VENDOR_ID _IOR('q', 250, unsigned short)
+#define WEBCAMD_IOCTL_GET_USB_PRODUCT_ID _IOR('q', 251, unsigned short)
+#define WEBCAMD_IOCTL_GET_USB_SPEED _IOR('q', 252, unsigned int)
+	if (ioctl(data->fd, WEBCAMD_IOCTL_GET_USB_VENDOR_ID, vendor_id) == 0 &&
+	    ioctl(data->fd, WEBCAMD_IOCTL_GET_USB_PRODUCT_ID, product_id) == 0 &&
+	    ioctl(data->fd, WEBCAMD_IOCTL_GET_USB_SPEED, speed) == 0)
+		return (1);
+	return (0);
+#elif defined __sun__
+	/* implement later? */
+	return (0);
+#else
 	FILE *f;
 	int i, minor;
 	struct stat st;
@@ -457,6 +496,7 @@ static int v4lcontrol_get_usb_info(struc
 		return 0; /* Should never happen */
 
 	return 1;
+#endif
 }
 
 /*
@@ -570,6 +610,10 @@ static void v4lcontrol_get_flags_from_db
 struct v4lcontrol_data *v4lcontrol_create(int fd, void *dev_ops_priv,
 	const struct libv4l_dev_ops *dev_ops, int always_needs_conversion)
 {
+#ifdef __sun__
+	printf("libv4lcontrol: not implemented on sunos yet\n");
+	return NULL;
+#else
 	int shm_fd;
 	int i, rc, got_usb_info, speed, init = 0;
 	char *s, shm_name[256], pwd_buf[1024];
@@ -771,6 +815,7 @@ struct v4lcontrol_data *v4lcontrol_creat
 error:
 	free(data);
 	return NULL;
+#endif
 }
 
 void v4lcontrol_destroy(struct v4lcontrol_data *data)


[FILE:440:patches/patch-lib_libv4lconvert_jpeg__memsrcdest.h]
--- lib/libv4lconvert/jpeg_memsrcdest.h.orig	2012-05-10 18:10:34 UTC
+++ lib/libv4lconvert/jpeg_memsrcdest.h
@@ -1,5 +1,7 @@
 #include <jpeglib.h>
 
+#if JPEG_LIB_VERSION < 80
+
 void
 jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
 	unsigned long bufsize);
@@ -7,3 +9,5 @@ jpeg_mem_src (j_decompress_ptr cinfo, un
 void
 jpeg_mem_dest (j_compress_ptr cinfo, unsigned char ** outbuffer,
 	unsigned long * outsize);
+
+#endif


[FILE:1698:patches/patch-lib_libv4lconvert_libv4lsyscall-priv.h]
--- lib/libv4lconvert/libv4lsyscall-priv.h.orig	2015-05-06 19:24:59 UTC
+++ lib/libv4lconvert/libv4lsyscall-priv.h
@@ -49,7 +49,7 @@
 #endif
 #endif
 
-#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__DragonFly__)
 #include <sys/time.h>
 #include <sys/syscall.h>
 #include <sys/types.h>
@@ -57,11 +57,28 @@
 #define	_IOC_NR(cmd) ((cmd) & 0xFF)
 #define	_IOC_TYPE(cmd) IOCGROUP(cmd)
 #define	_IOC_SIZE(cmd) IOCPARM_LEN(cmd)
+# ifndef MAP_ANONYMOUS
 #define	MAP_ANONYMOUS MAP_ANON
+# endif
 #define	MMAP2_PAGE_SHIFT 0
 typedef off_t __off_t;
 #endif
 
+#ifdef __sun__
+#include <sys/time.h>
+#include <sys/syscall.h>
+#include <sys/types.h>
+#include <sys/ioctl.h>
+# ifndef MAP_ANONYMOUS
+#define	MAP_ANONYMOUS MAP_ANON
+# endif
+#define	MMAP2_PAGE_SHIFT 0
+#define	_IOC_NR(cmd) ((cmd) & 0x1FFF)
+#define	_IOC_SIZE(cmd) (((cmd) >> 16) & 0x1FFF)
+#define	_IOC_TYPE(cmd) (((cmd) >> 8) & 0xFF)
+typedef off_t __off_t;
+#endif
+
 #undef SYS_OPEN
 #undef SYS_CLOSE
 #undef SYS_IOCTL
@@ -88,11 +105,11 @@ typedef off_t __off_t;
 #define SYS_WRITE(fd, buf, len) \
 	syscall(SYS_write, (int)(fd), (const void *)(buf), (size_t)(len));
 
-#if defined(__FreeBSD__)
+#if defined __FreeBSD__ || defined __DragonFly__
 #define SYS_MMAP(addr, len, prot, flags, fd, off) \
 	__syscall(SYS_mmap, (void *)(addr), (size_t)(len), \
 			(int)(prot), (int)(flags), (int)(fd), (__off_t)(off))
-#elif defined(__FreeBSD_kernel__)
+#elif defined __FreeBSD_kernel__ || defined __sun__
 #define SYS_MMAP(addr, len, prot, flags, fd, off) \
 	syscall(SYS_mmap, (void *)(addr), (size_t)(len), \
 			(int)(prot), (int)(flags), (int)(fd), (__off_t)(off))


[FILE:1033:patches/patch-linux_dvb_ca.h]
--- linux/dvb/ca.h.orig	2014-12-01 09:58:18 UTC
+++ linux/dvb/ca.h
@@ -24,6 +24,10 @@
 #ifndef _DVBCA_H_
 #define _DVBCA_H_
 
+#ifdef __sun__
+#include <sys/ioccom.h>
+#endif
+
 /* slot interface types and info */
 
 typedef struct ca_slot_info {
@@ -80,9 +84,17 @@ typedef struct ca_pid {
 
 #define CA_RESET          _IO('o', 128)
 #define CA_GET_CAP        _IOR('o', 129, ca_caps_t)
+
+/* At least CA_GET_SLOT_INFO and CA_GET_MSG need to be _IOWR not _IOR.
+ * This is wrong on Linux too but there the driver doesn't care.
+ *
 #define CA_GET_SLOT_INFO  _IOR('o', 130, ca_slot_info_t)
 #define CA_GET_DESCR_INFO _IOR('o', 131, ca_descr_info_t)
 #define CA_GET_MSG        _IOR('o', 132, ca_msg_t)
+ */
+#define CA_GET_SLOT_INFO  _IOWR('o', 130, ca_slot_info_t)
+#define CA_GET_DESCR_INFO _IOR('o', 131, ca_descr_info_t)
+#define CA_GET_MSG        _IOWR('o', 132, ca_msg_t)
 #define CA_SEND_MSG       _IOW('o', 133, ca_msg_t)
 #define CA_SET_DESCR      _IOW('o', 134, ca_descr_t)
 #define CA_SET_PID        _IOW('o', 135, ca_pid_t)


[FILE:250:patches/patch-linux_dvb_frontend.h]
--- linux/dvb/frontend.h.orig	2014-12-01 09:58:18 UTC
+++ linux/dvb/frontend.h
@@ -26,6 +26,9 @@
 #ifndef _DVBFRONTEND_H_
 #define _DVBFRONTEND_H_
 
+#ifdef __sun__
+#include <sys/ioccom.h>
+#endif
 #include <linux/types.h>
 
 typedef enum fe_type {


[FILE:256:patches/patch-linux_dvb_osd.h]
--- linux/dvb/osd.h.orig	2014-12-01 10:58:18.000000000 +0100
+++ linux/dvb/osd.h
@@ -24,7 +24,7 @@
 #ifndef _DVBOSD_H_
 #define _DVBOSD_H_
 
-#include <linux/compiler.h>
+#include <sys/types.h>
 
 typedef enum {
   // All functions return -2 on "not open"


[FILE:453:patches/patch-utils_Makefile.in]
--- utils/Makefile.in.orig	2015-01-25 19:52:31.619994565 +0100
+++ utils/Makefile.in	2015-01-25 19:53:34.975249497 +0100
@@ -374,7 +374,7 @@
 top_srcdir = @top_srcdir@
 udevrulesdir = @udevrulesdir@
 SUBDIRS = dvb libv4l2util libmedia_dev decode_tm6000 keytable \
-	media-ctl v4l2-compliance v4l2-ctl v4l2-dbg v4l2-sysfs-path \
+	v4l2-compliance v4l2-dbg v4l2-sysfs-path \
 	rds-ctl $(am__append_1) $(am__append_2) $(am__append_3)
 all: all-recursive
 


[FILE:321:patches/patch-utils_libmedia__dev_get__media__devices.c]
--- utils/libmedia_dev/get_media_devices.c.orig	2014-03-02 09:11:40 UTC
+++ utils/libmedia_dev/get_media_devices.c
@@ -26,6 +26,9 @@
 #include <dirent.h>
 #include <limits.h>
 #include "get_media_devices.h"
+#ifdef __sun__
+#include <sys/sysmacros.h>
+#endif
 
 #define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]))
 


[FILE:447:patches/patch-utils_v4l2-compliance_v4l2-compliance.cpp]
--- utils/v4l2-compliance/v4l2-compliance.cpp.orig	2015-05-06 19:24:59 UTC
+++ utils/v4l2-compliance/v4l2-compliance.cpp
@@ -236,6 +236,18 @@ const char *ok(int res)
 	return buf;
 }
 
+#ifdef __sun__
+static size_t
+strnlen(const char *s, size_t maxlen)
+{
+	size_t len;
+	for (len = 0; len < maxlen; len++, s++) {
+		if (!*s) break;
+	}
+	return (len);
+}
+#endif
+
 int check_string(const char *s, size_t len)
 {
 	size_t sz = strnlen(s, len);


[FILE:417:patches/patch-utils_v4l2-compliance_v4l2-compliance.h]
--- utils/v4l2-compliance/v4l2-compliance.h.orig	2015-09-22 16:55:50.000000000 +0300
+++ utils/v4l2-compliance/v4l2-compliance.h
@@ -34,7 +34,7 @@
 
 #include <cv4l-helpers.h>
 
-#if !defined(ENODATA) && (defined(__FreeBSD__) || defined(__FreeBSD_kernel__))
+#if !defined(ENODATA) && (defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined __DragonFly__ || defined __sun__)
 #define ENODATA ENOTSUP
 #endif
 


[FILE:491:patches/patch-utils_v4l2-compliance_v4l2-test-controls.cpp]
--- utils/v4l2-compliance/v4l2-test-controls.cpp.orig	2015-05-06 19:24:59 UTC
+++ utils/v4l2-compliance/v4l2-test-controls.cpp
@@ -32,6 +32,18 @@
 #include <vector>
 #include "v4l2-compliance.h"
 
+#ifdef __sun__
+static size_t
+strnlen(const char *s, size_t maxlen)
+{
+	size_t len;
+	for (len = 0; len < maxlen; len++, s++) {
+		if (!*s) break;
+	}
+	return (len);
+}
+#endif
+
 static int checkQCtrl(struct node *node, struct test_query_ext_ctrl &qctrl)
 {
 	struct v4l2_querymenu qmenu;


[FILE:11162:files/videodev.h]
/*
 *	Video for Linux version 1 - OBSOLETE
 *
 *	Header file for v4l1 drivers and applications, for
 *	Linux kernels 2.2.x or 2.4.x.
 *
 *	Provides header for legacy drivers and applications
 *
 *	See http://linuxtv.org for more info
 *
 */
#ifndef __LINUX_VIDEODEV_H
#define __LINUX_VIDEODEV_H

#include <sys/types.h>
#include <sys/ioctl.h>
#include <linux/videodev2.h>

#if defined(__MIN_V4L1) && defined (__KERNEL__)

/*
 * Used by those V4L2 core functions that need a minimum V4L1 support,
 * in order to allow V4L1 Compatibilty code compilation.
 */

struct video_mbuf
{
	int	size;		/* Total memory to map */
	int	frames;		/* Frames */
	int	offsets[VIDEO_MAX_FRAME];
};

#define VIDIOCGMBUF		_IOR('v',20, struct video_mbuf)		/* Memory map buffer info */

#else
#if defined(CONFIG_VIDEO_V4L1_COMPAT) || !defined (__KERNEL__)

#define VID_TYPE_CAPTURE	1	/* Can capture */
#define VID_TYPE_TUNER		2	/* Can tune */
#define VID_TYPE_TELETEXT	4	/* Does teletext */
#define VID_TYPE_OVERLAY	8	/* Overlay onto frame buffer */
#define VID_TYPE_CHROMAKEY	16	/* Overlay by chromakey */
#define VID_TYPE_CLIPPING	32	/* Can clip */
#define VID_TYPE_FRAMERAM	64	/* Uses the frame buffer memory */
#define VID_TYPE_SCALES		128	/* Scalable */
#define VID_TYPE_MONOCHROME	256	/* Monochrome only */
#define VID_TYPE_SUBCAPTURE	512	/* Can capture subareas of the image */
#define VID_TYPE_MPEG_DECODER	1024	/* Can decode MPEG streams */
#define VID_TYPE_MPEG_ENCODER	2048	/* Can encode MPEG streams */
#define VID_TYPE_MJPEG_DECODER	4096	/* Can decode MJPEG streams */
#define VID_TYPE_MJPEG_ENCODER	8192	/* Can encode MJPEG streams */

struct video_capability
{
	char name[32];
	int type;
	int channels;	/* Num channels */
	int audios;	/* Num audio devices */
	int maxwidth;	/* Supported width */
	int maxheight;	/* And height */
	int minwidth;	/* Supported width */
	int minheight;	/* And height */
};


struct video_channel
{
	int channel;
	char name[32];
	int tuners;
	uint32_t  flags;
#define VIDEO_VC_TUNER		1	/* Channel has a tuner */
#define VIDEO_VC_AUDIO		2	/* Channel has audio */
	uint16_t  type;
#define VIDEO_TYPE_TV		1
#define VIDEO_TYPE_CAMERA	2
	uint16_t norm;			/* Norm set by channel */
};

struct video_tuner
{
	int tuner;
	char name[32];
	unsigned long rangelow, rangehigh;	/* Tuner range */
	uint32_t flags;
#define VIDEO_TUNER_PAL		1
#define VIDEO_TUNER_NTSC	2
#define VIDEO_TUNER_SECAM	4
#define VIDEO_TUNER_LOW		8	/* Uses KHz not MHz */
#define VIDEO_TUNER_NORM	16	/* Tuner can set norm */
#define VIDEO_TUNER_STEREO_ON	128	/* Tuner is seeing stereo */
#define VIDEO_TUNER_RDS_ON      256     /* Tuner is seeing an RDS datastream */
#define VIDEO_TUNER_MBS_ON      512     /* Tuner is seeing an MBS datastream */
	uint16_t mode;			/* PAL/NTSC/SECAM/OTHER */
#define VIDEO_MODE_PAL		0
#define VIDEO_MODE_NTSC		1
#define VIDEO_MODE_SECAM	2
#define VIDEO_MODE_AUTO		3
	uint16_t signal;			/* Signal strength 16bit scale */
};

struct video_picture
{
	uint16_t	brightness;
	uint16_t	hue;
	uint16_t	colour;
	uint16_t	contrast;
	uint16_t	whiteness;	/* Black and white only */
	uint16_t	depth;		/* Capture depth */
	uint16_t   palette;	/* Palette in use */
#define VIDEO_PALETTE_GREY	1	/* Linear greyscale */
#define VIDEO_PALETTE_HI240	2	/* High 240 cube (BT848) */
#define VIDEO_PALETTE_RGB565	3	/* 565 16 bit RGB */
#define VIDEO_PALETTE_RGB24	4	/* 24bit RGB */
#define VIDEO_PALETTE_RGB32	5	/* 32bit RGB */
#define VIDEO_PALETTE_RGB555	6	/* 555 15bit RGB */
#define VIDEO_PALETTE_YUV422	7	/* YUV422 capture */
#define VIDEO_PALETTE_YUYV	8
#define VIDEO_PALETTE_UYVY	9	/* The great thing about standards is ... */
#define VIDEO_PALETTE_YUV420	10
#define VIDEO_PALETTE_YUV411	11	/* YUV411 capture */
#define VIDEO_PALETTE_RAW	12	/* RAW capture (BT848) */
#define VIDEO_PALETTE_YUV422P	13	/* YUV 4:2:2 Planar */
#define VIDEO_PALETTE_YUV411P	14	/* YUV 4:1:1 Planar */
#define VIDEO_PALETTE_YUV420P	15	/* YUV 4:2:0 Planar */
#define VIDEO_PALETTE_YUV410P	16	/* YUV 4:1:0 Planar */
#define VIDEO_PALETTE_PLANAR	13	/* start of planar entries */
#define VIDEO_PALETTE_COMPONENT 7	/* start of component entries */
};

struct video_audio
{
	int	audio;		/* Audio channel */
	uint16_t	volume;		/* If settable */
	uint16_t	bass, treble;
	uint32_t	flags;
#define VIDEO_AUDIO_MUTE	1
#define VIDEO_AUDIO_MUTABLE	2
#define VIDEO_AUDIO_VOLUME	4
#define VIDEO_AUDIO_BASS	8
#define VIDEO_AUDIO_TREBLE	16
#define VIDEO_AUDIO_BALANCE	32
	char    name[16];
#define VIDEO_SOUND_MONO	1
#define VIDEO_SOUND_STEREO	2
#define VIDEO_SOUND_LANG1	4
#define VIDEO_SOUND_LANG2	8
	uint16_t   mode;
	uint16_t	balance;	/* Stereo balance */
	uint16_t	step;		/* Step actual volume uses */
};

struct video_clip
{
	int32_t	x,y;
	int32_t	width, height;
	struct	video_clip *next;	/* For user use/driver use only */
};

struct video_window
{
	uint32_t	x,y;			/* Position of window */
	uint32_t	width,height;		/* Its size */
	uint32_t	chromakey;
	uint32_t	flags;
	struct	video_clip  *clips;	/* Set only */
	int	clipcount;
#define VIDEO_WINDOW_INTERLACE	1
#define VIDEO_WINDOW_CHROMAKEY	16	/* Overlay by chromakey */
#define VIDEO_CLIP_BITMAP	-1
/* bitmap is 1024x625, a '1' bit represents a clipped pixel */
#define VIDEO_CLIPMAP_SIZE	(128 * 625)
};

struct video_capture
{
	uint32_t 	x,y;			/* Offsets into image */
	uint32_t	width, height;		/* Area to capture */
	uint16_t	decimation;		/* Decimation divider */
	uint16_t	flags;			/* Flags for capture */
#define VIDEO_CAPTURE_ODD		0	/* Temporal */
#define VIDEO_CAPTURE_EVEN		1
};

struct video_buffer
{
	void	*base;
	int	height,width;
	int	depth;
	int	bytesperline;
};

struct video_mmap
{
	unsigned	int frame;		/* Frame (0 - n) for double buffer */
	int		height,width;
	unsigned	int format;		/* should be VIDEO_PALETTE_* */
};

struct video_key
{
	uint8_t	key[8];
	uint32_t	flags;
};

struct video_mbuf
{
	int	size;		/* Total memory to map */
	int	frames;		/* Frames */
	int	offsets[VIDEO_MAX_FRAME];
};

#define 	VIDEO_NO_UNIT	(-1)

struct video_unit
{
	int 	video;		/* Video minor */
	int	vbi;		/* VBI minor */
	int	radio;		/* Radio minor */
	int	audio;		/* Audio minor */
	int	teletext;	/* Teletext minor */
};

struct vbi_format {
	uint32_t	sampling_rate;	/* in Hz */
	uint32_t	samples_per_line;
	uint32_t	sample_format;	/* VIDEO_PALETTE_RAW only (1 byte) */
	int32_t	start[2];	/* starting line for each frame */
	uint32_t	count[2];	/* count of lines for each frame */
	uint32_t	flags;
#define	VBI_UNSYNC	1	/* can distingues between top/bottom field */
#define	VBI_INTERLACED	2	/* lines are interlaced */
};

/* video_info is biased towards hardware mpeg encode/decode */
/* but it could apply generically to any hardware compressor/decompressor */
struct video_info
{
	uint32_t	frame_count;	/* frames output since decode/encode began */
	uint32_t	h_size;		/* current unscaled horizontal size */
	uint32_t	v_size;		/* current unscaled veritcal size */
	uint32_t	smpte_timecode;	/* current SMPTE timecode (for current GOP) */
	uint32_t	picture_type;	/* current picture type */
	uint32_t	temporal_reference;	/* current temporal reference */
	uint8_t	user_data[256];	/* user data last found in compressed stream */
	/* user_data[0] contains user data flags, user_data[1] has count */
};

/* generic structure for setting playback modes */
struct video_play_mode
{
	int	mode;
	int	p1;
	int	p2;
};

/* for loading microcode / fpga programming */
struct video_code
{
	char	loadwhat[16];	/* name or tag of file being passed */
	int	datasize;
	uint8_t	*data;
};

#define VIDIOCGCAP		_IOR('v',1,struct video_capability)	/* Get capabilities */
#define VIDIOCGCHAN		_IOWR('v',2,struct video_channel)	/* Get channel info (sources) */
#define VIDIOCSCHAN		_IOW('v',3,struct video_channel)	/* Set channel 	*/
#define VIDIOCGTUNER		_IOWR('v',4,struct video_tuner)		/* Get tuner abilities */
#define VIDIOCSTUNER		_IOW('v',5,struct video_tuner)		/* Tune the tuner for the current channel */
#define VIDIOCGPICT		_IOR('v',6,struct video_picture)	/* Get picture properties */
#define VIDIOCSPICT		_IOW('v',7,struct video_picture)	/* Set picture properties */
#define VIDIOCCAPTURE		_IOW('v',8,int)				/* Start, end capture */
#define VIDIOCGWIN		_IOR('v',9, struct video_window)	/* Get the video overlay window */
#define VIDIOCSWIN		_IOW('v',10, struct video_window)	/* Set the video overlay window - passes clip list for hardware smarts , chromakey etc */
#define VIDIOCGFBUF		_IOR('v',11, struct video_buffer)	/* Get frame buffer */
#define VIDIOCSFBUF		_IOW('v',12, struct video_buffer)	/* Set frame buffer - root only */
#define VIDIOCKEY		_IOR('v',13, struct video_key)		/* Video key event - to dev 255 is to all - cuts capture on all DMA windows with this key (0xFFFFFFFF == all) */
#define VIDIOCGFREQ		_IOR('v',14, unsigned long)		/* Set tuner */
#define VIDIOCSFREQ		_IOW('v',15, unsigned long)		/* Set tuner */
#define VIDIOCGAUDIO		_IOR('v',16, struct video_audio)	/* Get audio info */
#define VIDIOCSAUDIO		_IOW('v',17, struct video_audio)	/* Audio source, mute etc */
#define VIDIOCSYNC		_IOW('v',18, int)			/* Sync with mmap grabbing */
#define VIDIOCMCAPTURE		_IOW('v',19, struct video_mmap)		/* Grab frames */
#define VIDIOCGMBUF		_IOR('v',20, struct video_mbuf)		/* Memory map buffer info */
#define VIDIOCGUNIT		_IOR('v',21, struct video_unit)		/* Get attached units */
#define VIDIOCGCAPTURE		_IOR('v',22, struct video_capture)	/* Get subcapture */
#define VIDIOCSCAPTURE		_IOW('v',23, struct video_capture)	/* Set subcapture */
#define VIDIOCSPLAYMODE		_IOW('v',24, struct video_play_mode)	/* Set output video mode/feature */
#define VIDIOCSWRITEMODE	_IOW('v',25, int)			/* Set write mode */
#define VIDIOCGPLAYINFO		_IOR('v',26, struct video_info)		/* Get current playback info from hardware */
#define VIDIOCSMICROCODE	_IOW('v',27, struct video_code)		/* Load microcode into hardware */
#define	VIDIOCGVBIFMT		_IOR('v',28, struct vbi_format)		/* Get VBI information */
#define	VIDIOCSVBIFMT		_IOW('v',29, struct vbi_format)		/* Set VBI information */


#define BASE_VIDIOCPRIVATE	192		/* 192-255 are private */

/* VIDIOCSWRITEMODE */
#define VID_WRITE_MPEG_AUD		0
#define VID_WRITE_MPEG_VID		1
#define VID_WRITE_OSD			2
#define VID_WRITE_TTX			3
#define VID_WRITE_CC			4
#define VID_WRITE_MJPEG			5

/* VIDIOCSPLAYMODE */
#define VID_PLAY_VID_OUT_MODE		0
	/* p1: = VIDEO_MODE_PAL, VIDEO_MODE_NTSC, etc ... */
#define VID_PLAY_GENLOCK		1
	/* p1: 0 = OFF, 1 = ON */
	/* p2: GENLOCK FINE DELAY value */
#define VID_PLAY_NORMAL			2
#define VID_PLAY_PAUSE			3
#define VID_PLAY_SINGLE_FRAME		4
#define VID_PLAY_FAST_FORWARD		5
#define VID_PLAY_SLOW_MOTION		6
#define VID_PLAY_IMMEDIATE_NORMAL	7
#define VID_PLAY_SWITCH_CHANNELS	8
#define VID_PLAY_FREEZE_FRAME		9
#define VID_PLAY_STILL_MODE		10
#define VID_PLAY_MASTER_MODE		11
	/* p1: see below */
#define		VID_PLAY_MASTER_NONE	1
#define		VID_PLAY_MASTER_VIDEO	2
#define		VID_PLAY_MASTER_AUDIO	3
#define VID_PLAY_ACTIVE_SCANLINES	12
	/* p1 = first active; p2 = last active */
#define VID_PLAY_RESET			13
#define VID_PLAY_END_MARK		14

#endif /* CONFIG_VIDEO_V4L1_COMPAT */
#endif /* __MIN_V4L1 */

#endif /* __LINUX_VIDEODEV_H */

/*
 * Local variables:
 * c-basic-offset: 8
 * End:
 */


[FILE:533:sunos/patch-lib_libdvbv5_Makefile.in]
--- lib/libdvbv5/Makefile.in.orig	2015-05-06 19:29:45 UTC
+++ lib/libdvbv5/Makefile.in
@@ -283,7 +283,7 @@ AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
-CFLAGS = @CFLAGS@
+CFLAGS = @CFLAGS@ -I$(prefix)/include/bsd
 CFLAG_VISIBILITY = @CFLAG_VISIBILITY@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
@@ -348,7 +348,7 @@ LD = @LD@
 LDFLAGS = @LDFLAGS@
 LIBICONV = @LIBICONV@
 LIBOBJS = @LIBOBJS@
-LIBS = @LIBS@
+LIBS = @LIBS@ -lbsd
 LIBTOOL = @LIBTOOL@
 LIBUDEV_CFLAGS = @LIBUDEV_CFLAGS@
 LIBUDEV_LIBS = @LIBUDEV_LIBS@


[FILE:527:sunos/patch-utils_dvb_Makefile.in]
--- utils/dvb/Makefile.in.orig	2015-05-06 19:29:46 UTC
+++ utils/dvb/Makefile.in
@@ -236,7 +236,7 @@ AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
-CFLAGS = @CFLAGS@
+CFLAGS = @CFLAGS@ -I$(prefix)/include/bsd
 CFLAG_VISIBILITY = @CFLAG_VISIBILITY@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
@@ -301,7 +301,7 @@ LD = @LD@
 LDFLAGS = @LDFLAGS@
 LIBICONV = @LIBICONV@
 LIBOBJS = @LIBOBJS@
-LIBS = @LIBS@
+LIBS = @LIBS@ -lbsd
 LIBTOOL = @LIBTOOL@
 LIBUDEV_CFLAGS = @LIBUDEV_CFLAGS@
 LIBUDEV_LIBS = @LIBUDEV_LIBS@


[FILE:740:linux/patch-contrib_freebsd_include_linux_videodev2.h]
--- contrib/freebsd/include/linux/videodev2.h.orig	2015-05-06 19:24:59 UTC
+++ contrib/freebsd/include/linux/videodev2.h
@@ -61,35 +61,6 @@
 #include <sys/types.h>
 #include <sys/ioctl.h>
 
-#ifndef HAVE_LINUX_INTEGER_TYPES
-/* XXX remove when depending software has been updated */
-#ifndef __u64
-typedef uint64_t __u64;
-#endif
-#ifndef __u32
-typedef uint32_t __u32;
-#endif
-#ifndef __u16
-typedef uint16_t __u16;
-#endif
-#ifndef __u8
-typedef uint8_t __u8;
-#endif
-
-#ifndef __s64
-typedef int64_t __s64;
-#endif
-#ifndef __s32
-typedef int32_t __s32;
-#endif
-#ifndef __s16
-typedef int16_t __s16;
-#endif
-#ifndef __s8
-typedef int8_t __s8;
-#endif
-#endif
-
 #ifdef __KERNEL__
 #include <linux/ioctl.h>
 #include <linux/types.h>

