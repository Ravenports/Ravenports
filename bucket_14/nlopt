# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		nlopt
VERSION=		2.7.1
REVISION=		2
KEYWORDS=		math
VARIANTS=		std
SDESC[std]=		Nonlinear optimization library
HOMEPAGE=		none
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/stevengj:nlopt:v2.7.1
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		swig:primary:std
			gmp:dev:std
			guile:dev:std
BUILDRUN_DEPENDS=	gmp:primary:std
			guile:primary:std
			python-numpy:single:python_used

USES=			cmake pkgconfig python

LICENSE=		MIT:primary LGPL21:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/COPYING
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYRIGHT
			LGPL21:stock
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		math/nlopt

SOVERSION=		0.11.1
PLIST_SUB=		GVER=3.0

CMAKE_ARGS=		-DNLOPT_OCTAVE:BOOL=OFF
			-DNLOPT_MATLAB:BOOL=OFF

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libnlopt.so
	${STRIP_CMD} ${STAGEDIR}${PYTHON_SITELIBDIR}/_nlopt.so

[FILE:1018:descriptions/desc.primary]
NLopt is a free/open-source library for nonlinear optimization,
providing a common interface for a number of different free optimization
outines available online as well as original implementations of various
other algorithms. Its features include:

  - Callable from C, C++, Fortran, Matlab or GNU Octave, Python,
    GNU Guile, Julia, GNU R, Lua, and OCaml.
  - A common interface for many different algorithms -- try a different
    algorithm just by changing one parameter.
  - Support for large-scale optimization (some algorithms scalable to
    millions of parameters and thousands of constraints).
  - Both global and local optimization algorithms.
  - Algorithms using function values only (derivative-free) and also
    algorithms exploiting user-supplied gradients.
  - Algorithms for unconstrained optimization, bound-constrained
    optimization, and general nonlinear inequality/equality constraints.
  - Free/open-source software under the GNU LGPL
    (and looser licenses for some portions of NLopt).


[FILE:106:distinfo]
db88232fa5cef0ff6e39943fc63ab6074208831dc0031cf1545f6ecd31ae2a1a      2044180 stevengj-nlopt-2.7.1.tar.gz


[FILE:182:manifests/plist.primary]
%%PYTHON_SITELIBDIR%%/
 _nlopt.so
 nlopt.py
lib/
 libnlopt.so.%%SOMAJOR%%
 libnlopt.so.%%SOVERSION%%
lib/guile/%%GVER%%/extensions/nlopt_guile.so
share/guile/site/%%GVER%%/nlopt.scm


[FILE:214:manifests/plist.dev]
include/
 nlopt.f
 nlopt.h
 nlopt.hpp
lib/libnlopt.so
lib/cmake/nlopt/
 NLoptConfig.cmake
 NLoptConfigVersion.cmake
 NLoptLibraryDepends-%%CMAKE_BUILD_TYPE%%.cmake
 NLoptLibraryDepends.cmake
lib/pkgconfig/nlopt.pc


[FILE:73:manifests/plist.man]
share/man/man3/
 nlopt.3
 nlopt_minimize.3
 nlopt_minimize_constrained.3


[FILE:1103:patches/patch-cmake_FindGuile.cmake]
--- cmake/FindGuile.cmake.orig	2021-12-03 18:38:01 UTC
+++ cmake/FindGuile.cmake
@@ -68,20 +68,20 @@ find_program(GUILE_EXECUTABLE
            )
 
 find_program(GUILE_CONFIG_EXECUTABLE
-              NAMES guile-config
+              NAMES pkg-config
            )
 
 
 if (GUILE_CONFIG_EXECUTABLE)
-  execute_process (COMMAND ${GUILE_CONFIG_EXECUTABLE} info prefix
+  execute_process (COMMAND ${GUILE_CONFIG_EXECUTABLE} --variable=prefix guile-3.0
                     OUTPUT_VARIABLE GUILE_ROOT_DIR
                     OUTPUT_STRIP_TRAILING_WHITESPACE)
 
-  execute_process (COMMAND ${GUILE_CONFIG_EXECUTABLE} info sitedir
+  execute_process (COMMAND ${GUILE_CONFIG_EXECUTABLE} --variable=sitedir guile-3.0
                     OUTPUT_VARIABLE GUILE_SITE_DIR
                     OUTPUT_STRIP_TRAILING_WHITESPACE)
 
-  execute_process (COMMAND ${GUILE_CONFIG_EXECUTABLE} info extensiondir
+  execute_process (COMMAND ${GUILE_CONFIG_EXECUTABLE} --variable=extensiondir guile-3.0
                     OUTPUT_VARIABLE GUILE_EXTENSION_DIR
                     OUTPUT_STRIP_TRAILING_WHITESPACE)
 endif ()

