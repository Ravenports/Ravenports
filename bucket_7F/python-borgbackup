# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-borgbackup
VERSION=		1.2.4
KEYWORDS=		python
VARIANTS=		v11 py310
SDESC[py310]=		Deduplicated, encrypted, compressed backups (3.10)
SDESC[v11]=		Deduplicated, encrypted, compressed backups (3.11)
HOMEPAGE=		https://borgbackup.readthedocs.io/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/b/borgbackup
DISTFILE[1]=		borgbackup-1.2.4.tar.gz:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY311 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY311=OFF PY310=ON
VOPTS[v11]=		PY311=ON PY310=OFF

BUILDRUN_DEPENDS=	xxhash:single:standard

USES=			ssl lz4 zstd

DISTNAME=		borgbackup-1.2.4

GENERATED=		yes

MAKE_ENV=		BORG_OPENSSL_PREFIX={{OPENSSLBASE}}

[PY310].BUILDRUN_DEPENDS_ON=		python-msgpack:single:py310
					python-packaging:single:py310
					python-setuptools-scm:single:py310
[PY310].BUILD_DEPENDS_ON=		python-pkgconfig:single:py310
[PY310].USES_ON=			python:py310,sutools

[PY311].BUILDRUN_DEPENDS_ON=		python-msgpack:single:v11
					python-packaging:single:v11
					python-setuptools-scm:single:v11
[PY311].BUILD_DEPENDS_ON=		python-pkgconfig:single:v11
[PY311].USES_ON=			python:v11,sutools

post-patch:
	${SED} -i'' -e 's|msgpack-python|msgpack|' \
	${WRKSRC}/setup.py ${WRKSRC}/src/borgbackup.egg-info/requires.txt

[FILE:3430:descriptions/desc.single]

What is BorgBackup?
-------------------

BorgBackup (short: Borg) is a deduplicating backup program.
Optionally, it supports compression and authenticated encryption.

The main goal of Borg is to provide an efficient and secure way to backup
data.
The data deduplication technique used makes Borg suitable for daily backups
since only changes are stored.
The authenticated encryption technique makes it suitable for backups to not
fully trusted targets.

See the `installation manual`_ or, if you have already
downloaded Borg, ``docs/installation.rst`` to get started with Borg.
There is also an `offline documentation`_ available, in multiple formats.

.. _installation manual:
https://borgbackup.readthedocs.org/en/stable/installation.html
.. _offline documentation:
https://readthedocs.org/projects/borgbackup/downloads

Main features
~~~~~~~~~~~~~

**Space efficient storage**
  Deduplication based on content-defined chunking is used to reduce the
number
  of bytes stored: each file is split into a number of variable length
chunks
  and only chunks that have never been seen before are added to the
repository.

  A chunk is considered duplicate if its id_hash value is identical.
  A cryptographically strong hash or MAC function is used as id_hash, e.g.
  (hmac-)sha256.

  To deduplicate, all the chunks in the same repository are considered, no
  matter whether they come from different machines, from previous backups,
  from the same backup or even from the same single file.

  Compared to other deduplication approaches, this method does NOT depend
on:

  * file/directory names staying the same: So you can move your stuff
around
    without killing the deduplication, even between machines sharing a
repo.

  * complete files or time stamps staying the same: If a big file changes a
    little, only a few new chunks need to be stored - this is great for VMs
or
    raw disks.

  * The absolute position of a data chunk inside a file: Stuff may get
shifted
    and will still be found by the deduplication algorithm.

**Speed**
  * performance-critical code (chunking, compression, encryption) is
    implemented in C/Cython
  * local caching of files/chunks index data
  * quick detection of unmodified files

**Data encryption**
    All data can be protected using 256-bit AES encryption, data integrity
and
    authenticity is verified using HMAC-SHA256. Data is encrypted
clientside.

**Obfuscation**
    Optionally, borg can actively obfuscate e.g. the size of files / chunks
to
    make fingerprinting attacks more difficult.

**Compression**
    All data can be optionally compressed:

    * lz4 (super fast, low compression)
    * zstd (wide range from high speed and low compression to high
compression
      and lower speed)
    * zlib (medium speed and compression)
    * lzma (low speed, high compression)

**Off-site backups**
    Borg can store data on any remote host accessible over SSH.  If Borg is
    installed on the remote host, big performance gains can be achieved
    compared to using a network filesystem (sshfs, nfs, ...).

**Backups mountable as filesystems**
    Backup archives are mountable as userspace filesystems for easy
interactive
    backup examination and restores (e.g. by using a regular file manager).

**Easy installation on multiple platforms**
    We offer single-file binaries that do not require installing anything -
    you can just run them on these platforms:



[FILE:102:distinfo]
a4bd54e9469e81b7a30a6711423115abc818d9cd844ecb1ca0e6104bc5374da8      4056513 borgbackup-1.2.4.tar.gz

