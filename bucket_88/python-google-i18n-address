# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-google-i18n-address
VERSION=		3.1.0
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Address validation for Google's i18n DB (3.10)
SDESC[v11]=		Address validation for Google's i18n DB (3.11)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/79/27/9a9685e0821cc2745c6b20aef18c43395574c7501e70bfa6b0e81e5cd8cf
DISTFILE[1]=		google_i18n_address-3.1.0-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		google_i18n_address-3.1.0.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-requests:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-requests:single:v11
[PY311].USES_ON=			python:v11,wheel

[FILE:1731:descriptions/desc.single]
Google i18n address
===========================================================================================

|codecov.io| |GH Actions| |PyPi downloads| |PyPi version| |PyPi pythons|

This package contains a copy of [Google's i18n
address] metadata repository
that contains great data but comes with no uptime guarantees.

Contents of this package will allow you to programatically build address
forms that adhere to rules of a particular region or country, validate
local addresses and format them to produce a valid address label for
delivery.

The package also contains a Python interface for address validation.

Addresses validation
--------------------

The normalize_address function checks the address and either returns its
canonical form (suitable for storage and use in addressing envelopes) or
raises an InvalidAddressError exception that contains a list of errors.

Address fields
~~~~~~~~~~~~~~

Here is the list of recognized fields:

* country_code is a two-letter ISO 3166-1 country code
* country_area is a designation of a region, province or state,
  recognized values include official names, designated abbreviations,
  official translations and latin transliterations
* city is a city or town name, recognized values include official names,
  official translations and latin transliterations
* city_area is a sublocality like a district, recognized values include
  official names, official translations and latin transliterations
* street_address is the (possibly multiline) street address
* postal_code is a postal code or zip code
* sorting_code is a sorting code
* name is a person's name
* company_name is a name of a company or organization

Errors
~~~~~~

Address validation with only country code:


[FILE:125:distinfo]
86ce6f07eb8471b7e034de56c424602d2b4323ec0d6f0b27e69adceaf62fca47       772138 google_i18n_address-3.1.0-py2.py3-none-any.whl

