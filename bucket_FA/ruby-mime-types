# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		ruby-mime-types
VERSION=		3.4.1
KEYWORDS=		ruby
VARIANTS=		v30 v31 v32
SDESC[v30]=		MIME content type and registry library (v30)
SDESC[v31]=		MIME content type and registry library (v31)
SDESC[v32]=		MIME content type and registry library (v32)
HOMEPAGE=		https://github.com/mime-types/ruby-mime-types/
CONTACT=		Ruby_Automaton[ruby@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		RUBYGEMS/
DISTFILE[1]=		mime-types-3.4.1.gem:main
DIST_SUBDIR=		ruby
DF_INDEX=		1
SPKGS[v30]=		single
SPKGS[v31]=		single
SPKGS[v32]=		single

OPTIONS_AVAILABLE=	RUBY30 RUBY31 RUBY32
OPTIONS_STANDARD=	none
VOPTS[v30]=		RUBY30=ON RUBY31=OFF RUBY32=OFF
VOPTS[v31]=		RUBY30=OFF RUBY31=ON RUBY32=OFF
VOPTS[v32]=		RUBY30=OFF RUBY31=OFF RUBY32=ON

DISTNAME=		mime-types-3.4.1

GENERATED=		yes

[RUBY30].BUILDRUN_DEPENDS_ON=		ruby-mime-types-data:single:v30
[RUBY30].USES_ON=			gem:v30

[RUBY31].BUILDRUN_DEPENDS_ON=		ruby-mime-types-data:single:v31
[RUBY31].USES_ON=			gem:v31

[RUBY32].BUILDRUN_DEPENDS_ON=		ruby-mime-types-data:single:v32
[RUBY32].USES_ON=			gem:v32

[FILE:765:descriptions/desc.single]
The mime-types library provides a library and registry for information
about
MIME content type definitions. It can be used to determine defined filename
extensions for MIME types, or to use filename extensions to look up the
likely
MIME type definitions.

Version 3.0 is a major release that requires Ruby 2.0 compatibility and
removes
deprecated functions. The columnar registry format introduced in 2.6 has
been
made the primary format; the registry data has been extracted from this
library
and put into
{mime-types-data}[https://github.com/mime-types/mime-types-data].
Additionally, mime-types is now licensed exclusively under the MIT licence
and
there is a code of conduct in effect. There are a number of other smaller
changes described in the History file.


[FILE:104:distinfo]
6bcf8b0e656b6ae9977bdc1351ef211d0383252d2f759a59ef4bcf254542fc46        36864 ruby/mime-types-3.4.1.gem

