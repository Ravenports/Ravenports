# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gdal
VERSION=		2.4.1
KEYWORDS=		graphics geography
VARIANTS=		standard
SDESC[standard]=	Geospatial Data Abstraction Library
HOMEPAGE=		https://www.gdal.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://download.osgeo.org/gdal/2.4.1/
DISTFILE[1]=		gdal-2.4.1.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	libgeotiff:single:standard
			gif:single:standard
			cfitsio:primary:standard
			jasper:primary:standard
			WebP:single:standard
			openjpeg:single:standard

USES=			gmake png jpeg iconv sqlite pkgconfig

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE.TXT
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/gdal

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--datadir={{LOCALBASE}}/share/gdal
			--enable-static=yes
			--with-geotiff={{LOCALBASE}}
			--with-gif={{LOCALBASE}}
			--with-gnm=yes
			--with-jpeg=yes
			--with-openjpeg={{LOCALBASE}}
			--with-libjson-c=internal
			--with-liblzma=yes
			--with-libtiff={{LOCALBASE}}
			--with-libz={{LOCALBASE}}
			--with-png={{LOCALBASE}}
			--with-cfitsio={{LOCALBASE}}
			--with-jasper={{LOCALBASE}}
			--with-webp={{LOCALBASE}}
			--with-sqlite3={{LOCALBASE}}
			--with-threads=yes
			--with-static-proj4=no
			--with-curl=no
			--with-geos=no
			--with-xml2=no
			--with-pg=no
			--with-mysql=no
			--with-sfcgal=no
			--without-libtool
			--without-armadillo
			--without-ecw
			--without-expat
			--without-freexl
			--without-gta
			--without-hdf5
			--without-libkml
			--without-netcdf
			--without-odbc
			--without-pcre
			--without-podofo
			--without-spatialite
			--without-xerces
			{{ICONV_CONFIGURE_ARG}}

MAKEFILE=		GNUmakefile
SINGLE_JOB=		yes

SOVERSION=		2.4.1

CFLAGS=			-fPIC

post-patch:
	${REINPLACE_CMD} -e '/^#GDAL_SLIB_SONAME/ s|^#||' ${WRKSRC}/GDALmake.opt.in
	${REINPLACE_CMD} -e 's| LICENSE.TXT||' ${WRKSRC}/GNUmakefile
	${REINPLACE_CMD} -e 's|-lminizip|-lkmlminizip|' ${WRKSRC}/configure
	# Clean up bundled libraries
	${RM} -r ${WRKSRC}/frmts/gif/giflib/
	${RM} -r ${WRKSRC}/frmts/gtiff/libgeotiff/
	${RM} -r ${WRKSRC}/frmts/gtiff/libtiff/
	${RM} -r ${WRKSRC}/frmts/jpeg/libjpeg/
	${RM} -r ${WRKSRC}/frmts/jpeg/libjpeg12/
	${RM} -r ${WRKSRC}/frmts/png/libpng/
	${RM} -r ${WRKSRC}/frmts/zlib/
	# ${RM} -r ${WRKSRC}/ogr/ogrsf_frmts/geojson/libjson/

post-install:
	(cd ${WRKSRC}/gnm/ && \
		${INSTALL_DATA} gnm.h gnm_api.h gnm_priv.h gnmgraph.h \
		${STAGEDIR}${PREFIX}/include/)
	${INSTALL_DATA} ${WRKSRC}/libgdal.a ${STAGEDIR}${PREFIX}/lib/
	${INSTALL_DATA} ${WRKSRC}/GDALmake.opt ${STAGEDIR}${PREFIX}/share/gdal/
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libgdal.so

[FILE:644:descriptions/desc.single]
GDAL - Geospatial Data Abstraction Library

GDAL/OGR is a translator library for raster and vector geospatial data
formats that is released under an Open Source license. As a library, it
presents a single abstract data model to the calling application for all
supported formats.

Current translators provide read (and sometimes write) access to a
variety of formats including ESRI Shapefiles, S-57, SDTS, PostGIS,
Oracle Spatial, Mapinfo mid/mif and TAB, GeoTIFF, Erdas Imagine,
ESRI .BIL, .aux labelled raw, DTED, SDTS DEM, JPEG, PNG and Arc/Info
Binary/ASCII Grid.

A full list of supported data formats is available on the official
website.


[FILE:96:distinfo]
fd51b4900b2fc49b98d8714f55fc8a78ebfd07218357f93fb796791115a5a1ad      8887164 gdal-2.4.1.tar.xz


[FILE:3184:manifests/plist.single]
bin/
 gdal-config
 gdal_contour
 gdal_grid
 gdal_rasterize
 gdal_translate
 gdaladdo
 gdalbuildvrt
 gdaldem
 gdalenhance
 gdalinfo
 gdallocationinfo
 gdalmanage
 gdalserver
 gdalsrsinfo
 gdaltindex
 gdaltransform
 gdalwarp
 gnmanalyse
 gnmmanage
 nearblack
 ogr2ogr
 ogrinfo
 ogrlineref
 ogrtindex
 testepsg
etc/bash_completion.d/gdal-bash-completion.sh
include/
 cpl_atomic_ops.h
 cpl_auto_close.h
 cpl_config.h
 cpl_config_extras.h
 cpl_conv.h
 cpl_csv.h
 cpl_error.h
 cpl_hash_set.h
 cpl_http.h
 cpl_json.h
 cpl_list.h
 cpl_minixml.h
 cpl_minizip_ioapi.h
 cpl_minizip_unzip.h
 cpl_minizip_zip.h
 cpl_multiproc.h
 cpl_odbc.h
 cpl_port.h
 cpl_progress.h
 cpl_quad_tree.h
 cpl_spawn.h
 cpl_string.h
 cpl_time.h
 cpl_virtualmem.h
 cpl_vsi.h
 cpl_vsi_error.h
 cpl_vsi_virtual.h
 cplkeywordparser.h
 gdal.h
 gdal_alg.h
 gdal_alg_priv.h
 gdal_csv.h
 gdal_frmts.h
 gdal_mdreader.h
 gdal_pam.h
 gdal_priv.h
 gdal_proxy.h
 gdal_rat.h
 gdal_simplesurf.h
 gdal_utils.h
 gdal_version.h
 gdal_vrt.h
 gdalgeorefpamdataset.h
 gdalgrid.h
 gdalgrid_priv.h
 gdaljp2abstractdataset.h
 gdaljp2metadata.h
 gdalpansharpen.h
 gdalwarper.h
 gnm.h
 gnm_api.h
 gnm_priv.h
 gnmgraph.h
 memdataset.h
 ogr_api.h
 ogr_core.h
 ogr_feature.h
 ogr_featurestyle.h
 ogr_geocoding.h
 ogr_geometry.h
 ogr_p.h
 ogr_spatialref.h
 ogr_srs_api.h
 ogrsf_frmts.h
 rawdataset.h
 vrtdataset.h
lib/
 libgdal.a
 libgdal.so
 libgdal.so.%%SOMAJOR%%
 libgdal.so.%%SOVERSION%%
lib/pkgconfig/gdal.pc
share/gdal/
 GDALLogoBW.svg
 GDALLogoColor.svg
 GDALLogoGS.svg
 GDALmake.opt
 bag_template.xml
 compdcs.csv
 coordinate_axis.csv
 cubewerx_extra.wkt
 datum_shift.csv
 default.rsc
 ecw_cs.wkt
 eedaconf.json
 ellipsoid.csv
 epsg.wkt
 esri_StatePlane_extra.wkt
 esri_Wisconsin_extra.wkt
 esri_epsg.wkt
 esri_extra.wkt
 gcs.csv
 gcs.override.csv
 gdal_datum.csv
 gdalicon.png
 gdalvrt.xsd
 geoccs.csv
 gml_registry.xml
 gmlasconf.xml
 gmlasconf.xsd
 gt_datum.csv
 gt_ellips.csv
 header.dxf
 inspire_cp_BasicPropertyUnit.gfs
 inspire_cp_CadastralBoundary.gfs
 inspire_cp_CadastralParcel.gfs
 inspire_cp_CadastralZoning.gfs
 jpfgdgml_AdmArea.gfs
 jpfgdgml_AdmBdry.gfs
 jpfgdgml_AdmPt.gfs
 jpfgdgml_BldA.gfs
 jpfgdgml_BldL.gfs
 jpfgdgml_Cntr.gfs
 jpfgdgml_CommBdry.gfs
 jpfgdgml_CommPt.gfs
 jpfgdgml_Cstline.gfs
 jpfgdgml_ElevPt.gfs
 jpfgdgml_GCP.gfs
 jpfgdgml_LeveeEdge.gfs
 jpfgdgml_RailCL.gfs
 jpfgdgml_RdASL.gfs
 jpfgdgml_RdArea.gfs
 jpfgdgml_RdCompt.gfs
 jpfgdgml_RdEdg.gfs
 jpfgdgml_RdMgtBdry.gfs
 jpfgdgml_RdSgmtA.gfs
 jpfgdgml_RvrMgtBdry.gfs
 jpfgdgml_SBAPt.gfs
 jpfgdgml_SBArea.gfs
 jpfgdgml_SBBdry.gfs
 jpfgdgml_WA.gfs
 jpfgdgml_WL.gfs
 jpfgdgml_WStrA.gfs
 jpfgdgml_WStrL.gfs
 netcdf_config.xsd
 nitf_spec.xml
 nitf_spec.xsd
 ogrvrt.xsd
 osmconf.ini
 ozi_datum.csv
 ozi_ellips.csv
 pci_datum.txt
 pci_ellips.txt
 pcs.csv
 pcs.override.csv
 pds4_template.xml
 plscenesconf.json
 prime_meridian.csv
 projop_wparm.csv
 ruian_vf_ob_v1.gfs
 ruian_vf_st_uvoh_v1.gfs
 ruian_vf_st_v1.gfs
 ruian_vf_v1.gfs
 s57agencies.csv
 s57attributes.csv
 s57expectedinput.csv
 s57objectclasses.csv
 seed_2d.dgn
 seed_3d.dgn
 stateplane.csv
 trailer.dxf
 unit_of_measure.csv
 vdv452.xml
 vdv452.xsd
 vertcs.csv
 vertcs.override.csv
@dir lib/gdalplugins


[FILE:569:patches/patch-apps_GNUmakefile]
--- apps/GNUmakefile.orig	2018-05-04 16:05:45 UTC
+++ apps/GNUmakefile
@@ -215,7 +215,7 @@ gdal-config-inst:	gdal-config.in ../GDAL
 
 
 install: default
-	for f in $(BIN_LIST) ; do $(INSTALL) $$f $(DESTDIR)$(INST_BIN) ; done
-	$(INSTALL_DATA) gdal_utils.h $(DESTDIR)$(INST_INCLUDE)
-	$(INSTALL) gdal-config-inst $(DESTDIR)$(INST_BIN)/gdal-config
+	for f in $(BIN_LIST) ; do $(BSD_INSTALL_PROGRAM) $$f $(DESTDIR)$(INST_BIN) ; done
+	$(BSD_INSTALL_DATA) gdal_utils.h $(DESTDIR)$(INST_INCLUDE)
+	$(BSD_INSTALL_SCRIPT) gdal-config-inst $(DESTDIR)$(INST_BIN)/gdal-config
 


[FILE:302:patches/patch-frmts-mrf-mrf_band.cpp]
--- frmts/mrf/mrf_band.cpp.orig	2018-05-04 16:07:31 UTC
+++ frmts/mrf/mrf_band.cpp
@@ -49,7 +49,7 @@
 
 #include <vector>
 #include <assert.h>
-#include "../zlib/zlib.h"
+#include <zlib.h>
 
 CPL_CVSID("$Id: mrf_band.cpp 7e07230bbff24eb333608de4dbd460b7312839d0 2017-12-11 19:08:47Z Even Rouault $")
 


[FILE:701:patches/patch-scripts-GNUmakefile]
--- scripts/GNUmakefile.orig	2018-05-04 16:05:46 UTC
+++ scripts/GNUmakefile
@@ -4,7 +4,5 @@ completion:
 	PATH=$(GDAL_ROOT)/swig/python/scripts:$(GDAL_ROOT)/apps:$(PATH) python completionFinder.py gdal-bash-completion.sh
 
 install:
-	if test "x`pkg-config --version 2>/dev/null`" != "x" -a "x`pkg-config --variable=compatdir bash-completion`" != "x"; then \
-		$(INSTALL_DIR) $(DESTDIR)${prefix}`pkg-config --variable=compatdir bash-completion` ; \
-		cp gdal-bash-completion.sh $(DESTDIR)${prefix}`pkg-config --variable=compatdir bash-completion`; \
-	fi
+	$(INSTALL_DIR) $(DESTDIR)${prefix}/etc/bash_completion.d
+	$(INSTALL_DATA) gdal-bash-completion.sh $(DESTDIR)${prefix}/etc/bash_completion.d

