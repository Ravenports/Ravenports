# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gdal
VERSION=		3.3.0
KEYWORDS=		graphics geography
VARIANTS=		standard
SDESC[standard]=	Geospatial Data Abstraction Library
HOMEPAGE=		https://www.gdal.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://download.osgeo.org/gdal/3.3.0/
DISTFILE[1]=		gdal-3.3.0.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	libgeotiff:single:standard
			cfitsio:primary:standard
			jasper:primary:standard
			WebP:single:standard
			openjpeg:single:standard

USES=			cpe gmake png jpeg gif iconv sqlite pkgconfig

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE.TXT
LICENSE_SCHEME=		solo

CPE_VENDOR=		osgeo
FPC_EQUIVALENT=		graphics/gdal

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--datadir={{LOCALBASE}}/share
			--enable-static=yes
			--with-geotiff={{LOCALBASE}}
			--with-gif={{LOCALBASE}}
			--with-gnm=yes
			--with-jpeg=yes
			--with-openjpeg={{LOCALBASE}}
			--with-libjson-c=internal
			--with-liblzma=yes
			--with-libtiff={{LOCALBASE}}
			--with-libz={{LOCALBASE}}
			--with-png={{LOCALBASE}}
			--with-cfitsio={{LOCALBASE}}
			--with-jasper={{LOCALBASE}}
			--with-webp={{LOCALBASE}}
			--with-sqlite3={{LOCALBASE}}
			--with-threads=yes
			--with-curl=no
			--with-geos=no
			--with-xml2=no
			--with-pg=no
			--with-mysql=no
			--with-sfcgal=no
			--with-ld-shared="{{CXX}} -shared"
			--without-libtool
			--without-armadillo
			--without-ecw
			--without-expat
			--without-freexl
			--without-gta
			--without-hdf5
			--without-libkml
			--without-netcdf
			--without-odbc
			--without-pcre
			--without-podofo
			--without-spatialite
			--without-xerces
			{{ICONV_CONFIGURE_ARG}}

MAKEFILE=		GNUmakefile
SINGLE_JOB=		yes

SOVERSION=		3.3.0

CFLAGS=			-fPIC

post-patch:
	${REINPLACE_CMD} -e '/^#GDAL_SLIB_SONAME/ s|^#||' ${WRKSRC}/GDALmake.opt.in
	${REINPLACE_CMD} -e 's| LICENSE.TXT||' ${WRKSRC}/GNUmakefile
	${REINPLACE_CMD} -e 's|-lminizip|-lkmlminizip|' ${WRKSRC}/configure
	# Clean up bundled libraries
	${RM} -r ${WRKSRC}/frmts/gif/giflib/
	${RM} -r ${WRKSRC}/frmts/gtiff/libgeotiff/
	${RM} -r ${WRKSRC}/frmts/gtiff/libtiff/
	${RM} -r ${WRKSRC}/frmts/jpeg/libjpeg/
	${RM} -r ${WRKSRC}/frmts/jpeg/libjpeg12/
	${RM} -r ${WRKSRC}/frmts/png/libpng/
	${RM} -r ${WRKSRC}/frmts/zlib/

post-install:
	(cd ${WRKSRC}/gnm/ && \
		${INSTALL_DATA} gnm.h gnm_api.h gnm_priv.h gnmgraph.h \
		${STAGEDIR}${PREFIX}/include/)
	${INSTALL_DATA} ${WRKSRC}/libgdal.a ${STAGEDIR}${PREFIX}/lib/
	${INSTALL_DATA} ${WRKSRC}/GDALmake.opt ${STAGEDIR}${PREFIX}/share/gdal/
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libgdal.so

[FILE:644:descriptions/desc.single]
GDAL - Geospatial Data Abstraction Library

GDAL/OGR is a translator library for raster and vector geospatial data
formats that is released under an Open Source license. As a library, it
presents a single abstract data model to the calling application for all
supported formats.

Current translators provide read (and sometimes write) access to a
variety of formats including ESRI Shapefiles, S-57, SDTS, PostGIS,
Oracle Spatial, Mapinfo mid/mif and TAB, GeoTIFF, Erdas Imagine,
ESRI .BIL, .aux labelled raw, DTED, SDTS DEM, JPEG, PNG and Arc/Info
Binary/ASCII Grid.

A full list of supported data formats is available on the official
website.


[FILE:96:distinfo]
190c8f4b56afc767f43836b2a5cd53cc52ee7fdc25eb78c6079c5a244e28efa7     12923948 gdal-3.3.0.tar.xz


[FILE:3090:manifests/plist.single]
bin/
 gdal-config
 gdal_contour
 gdal_create
 gdal_grid
 gdal_rasterize
 gdal_translate
 gdal_viewshed
 gdaladdo
 gdalbuildvrt
 gdaldem
 gdalenhance
 gdalinfo
 gdallocationinfo
 gdalmanage
 gdalmdiminfo
 gdalmdimtranslate
 gdalsrsinfo
 gdaltindex
 gdaltransform
 gdalwarp
 gnmanalyse
 gnmmanage
 nearblack
 ogr2ogr
 ogrinfo
 ogrlineref
 ogrtindex
 testepsg
include/
 cpl_atomic_ops.h
 cpl_auto_close.h
 cpl_config.h
 cpl_config_extras.h
 cpl_conv.h
 cpl_csv.h
 cpl_error.h
 cpl_hash_set.h
 cpl_http.h
 cpl_json.h
 cpl_list.h
 cpl_minixml.h
 cpl_minizip_ioapi.h
 cpl_minizip_unzip.h
 cpl_minizip_zip.h
 cpl_multiproc.h
 cpl_odbc.h
 cpl_port.h
 cpl_progress.h
 cpl_quad_tree.h
 cpl_spawn.h
 cpl_string.h
 cpl_time.h
 cpl_virtualmem.h
 cpl_vsi.h
 cpl_vsi_error.h
 cpl_vsi_virtual.h
 cplkeywordparser.h
 gdal.h
 gdal_alg.h
 gdal_alg_priv.h
 gdal_csv.h
 gdal_frmts.h
 gdal_mdreader.h
 gdal_pam.h
 gdal_priv.h
 gdal_proxy.h
 gdal_rat.h
 gdal_simplesurf.h
 gdal_utils.h
 gdal_version.h
 gdal_vrt.h
 gdalgeorefpamdataset.h
 gdalgrid.h
 gdalgrid_priv.h
 gdaljp2abstractdataset.h
 gdaljp2metadata.h
 gdalpansharpen.h
 gdalwarper.h
 gnm.h
 gnm_api.h
 gnm_priv.h
 gnmgraph.h
 memdataset.h
 ogr_api.h
 ogr_core.h
 ogr_feature.h
 ogr_featurestyle.h
 ogr_geocoding.h
 ogr_geometry.h
 ogr_p.h
 ogr_spatialref.h
 ogr_srs_api.h
 ogr_swq.h
 ogrsf_frmts.h
 rawdataset.h
 vrtdataset.h
lib/
 libgdal.a
 libgdal.so
 libgdal.so.%%SOMAJOR%%
 libgdal.so.%%SOVERSION%%
lib/pkgconfig/gdal.pc
share/gdal/
 GDALLogoBW.svg
 GDALLogoColor.svg
 GDALLogoGS.svg
 GDALmake.opt
 bag_template.xml
 cubewerx_extra.wkt
 default.rsc
 ecw_cs.wkt
 eedaconf.json
 epsg.wkt
 esri_StatePlane_extra.wkt
 gdalicon.png
 gdalmdiminfo_output.schema.json
 gdalvrt.xsd
 gml_registry.xml
 gmlasconf.xml
 gmlasconf.xsd
 gt_datum.csv
 gt_ellips.csv
 header.dxf
 inspire_cp_BasicPropertyUnit.gfs
 inspire_cp_CadastralBoundary.gfs
 inspire_cp_CadastralParcel.gfs
 inspire_cp_CadastralZoning.gfs
 jpfgdgml_AdmArea.gfs
 jpfgdgml_AdmBdry.gfs
 jpfgdgml_AdmPt.gfs
 jpfgdgml_BldA.gfs
 jpfgdgml_BldL.gfs
 jpfgdgml_Cntr.gfs
 jpfgdgml_CommBdry.gfs
 jpfgdgml_CommPt.gfs
 jpfgdgml_Cstline.gfs
 jpfgdgml_ElevPt.gfs
 jpfgdgml_GCP.gfs
 jpfgdgml_LeveeEdge.gfs
 jpfgdgml_RailCL.gfs
 jpfgdgml_RdASL.gfs
 jpfgdgml_RdArea.gfs
 jpfgdgml_RdCompt.gfs
 jpfgdgml_RdEdg.gfs
 jpfgdgml_RdMgtBdry.gfs
 jpfgdgml_RdSgmtA.gfs
 jpfgdgml_RvrMgtBdry.gfs
 jpfgdgml_SBAPt.gfs
 jpfgdgml_SBArea.gfs
 jpfgdgml_SBBdry.gfs
 jpfgdgml_WA.gfs
 jpfgdgml_WL.gfs
 jpfgdgml_WStrA.gfs
 jpfgdgml_WStrL.gfs
 netcdf_config.xsd
 nitf_spec.xml
 nitf_spec.xsd
 ogrvrt.xsd
 osmconf.ini
 ozi_datum.csv
 ozi_ellips.csv
 pci_datum.txt
 pci_ellips.txt
 pdfcomposition.xsd
 pds4_template.xml
 plscenesconf.json
 ruian_vf_ob_v1.gfs
 ruian_vf_st_uvoh_v1.gfs
 ruian_vf_st_v1.gfs
 ruian_vf_v1.gfs
 s57agencies.csv
 s57attributes.csv
 s57expectedinput.csv
 s57objectclasses.csv
 seed_2d.dgn
 seed_3d.dgn
 stateplane.csv
 template_tiles.mapml
 tms_LINZAntarticaMapTileGrid.json
 tms_MapML_APSTILE.json
 tms_MapML_CBMTILE.json
 tms_NZTM2000.json
 trailer.dxf
 vdv452.xml
 vdv452.xsd
 vicar.json
@dir lib/gdalplugins


[FILE:569:patches/patch-apps_GNUmakefile]
--- apps/GNUmakefile.orig	2021-04-26 12:29:56 UTC
+++ apps/GNUmakefile
@@ -232,7 +232,7 @@ gdal-config-inst:	gdal-config.in ../GDAL
 
 
 install: default
-	for f in $(BIN_LIST) ; do $(INSTALL) $$f $(DESTDIR)$(INST_BIN) ; done
-	$(INSTALL_DATA) gdal_utils.h $(DESTDIR)$(INST_INCLUDE)
-	$(INSTALL) gdal-config-inst $(DESTDIR)$(INST_BIN)/gdal-config
+	for f in $(BIN_LIST) ; do $(BSD_INSTALL_PROGRAM) $$f $(DESTDIR)$(INST_BIN) ; done
+	$(BSD_INSTALL_DATA) gdal_utils.h $(DESTDIR)$(INST_INCLUDE)
+	$(BSD_INSTALL_SCRIPT) gdal-config-inst $(DESTDIR)$(INST_BIN)/gdal-config
 


[FILE:6329:patches/patch-fix-disable-geos]
From b414b0a0594b3e9c175a001e8455819463039eb6 Mon Sep 17 00:00:00 2001
From: Thomas Bonfort <thomas.bonfort@airbus.com>
Date: Tue, 4 May 2021 08:13:45 +0200
Subject: [PATCH] configure: fix explicit disabling of geos/sfcgal

fixes #3782
---
 gdal/configure    | 16 ++++++----------
 gdal/configure.ac | 10 ++--------
 gdal/m4/geos.m4   |  3 ++-
 gdal/m4/sfcgal.m4 |  3 ++-
 4 files changed, 12 insertions(+), 20 deletions(-)

--- configure
+++ configure
@@ -38323,6 +38323,7 @@ fi
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: GEOS support disabled" >&5
 $as_echo "GEOS support disabled" >&6; }
     GEOS_CONFIG=no
+    HAVE_GEOS=no
 
   elif test x"$with_geos" = x"yes" -o x"$with_geos" = x"" ; then
 
@@ -38580,15 +38581,13 @@ $as_echo "$as_me: WARNING: GEOS was found on your system, but the library could
 
   else
 
-    if test $ac_geos_config_auto = "no" ; then
+    if test x"$with_geos" != x"no" -a x"$with_geos" != x ; then
       as_fn_error $? "GEOS support explicitly enabled, but geos-config could not be found" "$LINENO" 5
     fi
 
   fi
 
-HAVE_GEOS_RESULT="no"
 if test "${HAVE_GEOS}" = "yes" ; then
-
   { $as_echo "$as_me:${as_lineno-$LINENO}: Using C API from GEOS $GEOS_VERSION" >&5
 $as_echo "$as_me: Using C API from GEOS $GEOS_VERSION" >&6;}
 
@@ -38602,7 +38601,6 @@ $as_echo "$as_me: Using C API from GEOS $GEOS_VERSION" >&6;}
 
   GEOS_LIBS="$STRIPPED_LIBRARY_NAME"
   LIBS="${GEOS_LIBS} ${LIBS}"
-  HAVE_GEOS_RESULT="yes"
 fi
 
 
@@ -38625,6 +38623,7 @@ fi
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: SFCGAL support disabled" >&5
 $as_echo "SFCGAL support disabled" >&6; }
+    HAVE_SFCGAL=no
     SFCGAL_CONFIG=no
 
   elif test x"$with_sfcgal" = x"yes" -o x"$with_sfcgal" = x"" ; then
@@ -38883,15 +38882,13 @@ $as_echo "$as_me: WARNING: SFCGAL was found on your system, but the library coul
 
   else
 
-    if test $ac_sfcgal_config_auto = "no" ; then
+    if test x"$with_sfcgal" != x"no" -a x"$with_sfcgal" != x ; then
       as_fn_error $? "SFCGAL support explicitly enabled, but sfcgal-config could not be found" "$LINENO" 5
     fi
 
   fi
 
-HAVE_SFCGAL_RESULT="no"
 if test "${HAVE_SFCGAL}" = "yes" ; then
-
   { $as_echo "$as_me:${as_lineno-$LINENO}: Using C API from SFCGAL $SFCGAL_VERSION" >&5
 $as_echo "$as_me: Using C API from SFCGAL $SFCGAL_VERSION" >&6;}
 
@@ -38905,7 +38902,6 @@ $as_echo "$as_me: Using C API from SFCGAL $SFCGAL_VERSION" >&6;}
 
   SFCGAL_LIBS="$STRIPPED_LIBRARY_NAME"
   LIBS="${SFCGAL_LIBS} ${LIBS}"
-  HAVE_SFCGAL_RESULT="yes"
 fi
 
 
@@ -44998,7 +44994,7 @@ echo "  FreeXL support:            ${HAVE_FREEXL}"
 echo "  GEORASTER support:         ${HAVE_GEORASTER}"
 
 
-echo "  GEOS support:              ${HAVE_GEOS_RESULT}"
+echo "  GEOS support:              ${HAVE_GEOS}"
 
 
 echo "  Google libkml support:     ${HAVE_LIBKML}"
@@ -45162,7 +45158,7 @@ echo "  RasterLite2 support:       ${HAVE_RASTERLITE2}"
 echo "  RDB support:               ${RDB_SETTING}"
 
 
-echo "  SFCGAL support:            ${HAVE_SFCGAL_RESULT}"
+echo "  SFCGAL support:            ${HAVE_SFCGAL}"
 
 
 echo "  SOSI support:              ${SOSI_ENABLED}"
--- configure.ac
+++ configure.ac
@@ -4541,14 +4541,11 @@ dnl Check if geos library is available.
 dnl ---------------------------------------------------------------------------
 
 GEOS_INIT(3.1.0)
-HAVE_GEOS_RESULT="no"
 if test "${HAVE_GEOS}" = "yes" ; then
-
   AC_MSG_NOTICE([Using C API from GEOS $GEOS_VERSION])
   STRIP_SYSTEM_LIBRARY_PATHS("${GEOS_LIBS}")
   GEOS_LIBS="$STRIPPED_LIBRARY_NAME"
   LIBS="${GEOS_LIBS} ${LIBS}"
-  HAVE_GEOS_RESULT="yes"
 fi
 
 dnl ---------------------------------------------------------------------------
@@ -4556,14 +4553,11 @@ dnl Check if SFCGAL library is available.
 dnl ---------------------------------------------------------------------------
 
 SFCGAL_INIT(1.2.2)
-HAVE_SFCGAL_RESULT="no"
 if test "${HAVE_SFCGAL}" = "yes" ; then
-
   AC_MSG_NOTICE([Using C API from SFCGAL $SFCGAL_VERSION])
   STRIP_SYSTEM_LIBRARY_PATHS("${SFCGAL_LIBS}")
   SFCGAL_LIBS="$STRIPPED_LIBRARY_NAME"
   LIBS="${SFCGAL_LIBS} ${LIBS}"
-  HAVE_SFCGAL_RESULT="yes"
 fi
 
 dnl ---------------------------------------------------------------------------
@@ -6077,7 +6071,7 @@ LOC_MSG([  EXR support:               ${HAVE_EXR}])
 LOC_MSG([  FGDB support:              ${FGDB_ENABLED}])
 LOC_MSG([  FreeXL support:            ${HAVE_FREEXL}])
 LOC_MSG([  GEORASTER support:         ${HAVE_GEORASTER}])
-LOC_MSG([  GEOS support:              ${HAVE_GEOS_RESULT}])
+LOC_MSG([  GEOS support:              ${HAVE_GEOS}])
 LOC_MSG([  Google libkml support:     ${HAVE_LIBKML}])
 LOC_MSG([  GRASS support:             ${GRASS_SETTING}])
 LOC_MSG([  GTA support:               ${GTA_SETTING}])
@@ -6135,7 +6129,7 @@ LOC_MSG([  QHull support:             ${QHULL_SETTING}])
 LOC_MSG([  Rasdaman support:          ${RASDAMAN_ENABLED}])
 LOC_MSG([  RasterLite2 support:       ${HAVE_RASTERLITE2}])
 LOC_MSG([  RDB support:               ${RDB_SETTING}])
-LOC_MSG([  SFCGAL support:            ${HAVE_SFCGAL_RESULT}])
+LOC_MSG([  SFCGAL support:            ${HAVE_SFCGAL}])
 LOC_MSG([  SOSI support:              ${SOSI_ENABLED}])
 LOC_MSG([  SpatiaLite support:        ${HAVE_SPATIALITE}])
 if test "x$SPATIALITE_SONAME" != "x"; then
--- m4/geos.m4
+++ m4/geos.m4
@@ -55,6 +55,7 @@ AC_DEFUN([GEOS_INIT],[
 
     AC_MSG_RESULT([GEOS support disabled])
     GEOS_CONFIG=no
+    HAVE_GEOS=no
 
   elif test x"$with_geos" = x"yes" -o x"$with_geos" = x"" ; then
 
@@ -160,7 +161,7 @@ AC_DEFUN([GEOS_INIT],[
 
   else
 
-    if test $ac_geos_config_auto = "no" ; then
+    if test x"$with_geos" != x"no" -a x"$with_geos" != x ; then
       AC_MSG_ERROR([GEOS support explicitly enabled, but geos-config could not be found])
     fi
 
--- m4/sfcgal.m4
+++ m4/sfcgal.m4
@@ -53,6 +53,7 @@ AC_DEFUN([SFCGAL_INIT],[
   if test x"$with_sfcgal" = x"no" ; then
 
     AC_MSG_RESULT([SFCGAL support disabled])
+    HAVE_SFCGAL=no
     SFCGAL_CONFIG=no
 
   elif test x"$with_sfcgal" = x"yes" -o x"$with_sfcgal" = x"" ; then
@@ -159,7 +160,7 @@ AC_DEFUN([SFCGAL_INIT],[
 
   else
 
-    if test $ac_sfcgal_config_auto = "no" ; then
+    if test x"$with_sfcgal" != x"no" -a x"$with_sfcgal" != x ; then
       AC_MSG_ERROR([SFCGAL support explicitly enabled, but sfcgal-config could not be found])
     fi
 

