# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pyflakes
VERSION=		2.4.0
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Passive checker of Python programs (PY38)
SDESC[py39]=		Passive checker of Python programs (PY39)
HOMEPAGE=		https://github.com/PyCQA/pyflakes
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/43/fb/38848eb494af7df9aeb2d7673ace8b213313eb7e391691a79dbaeb6a838f
DISTFILE[1]=		pyflakes-2.4.0-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		pyflakes-2.4.0.dist-info

GENERATED=		yes

[PY38].USES_ON=				python:py38,wheel

[PY39].USES_ON=				python:py39,wheel

[FILE:2529:descriptions/desc.single]
========
Pyflakes
========

A simple program which checks Python source files for errors.

Pyflakes analyzes programs and detects various errors.  It works by
parsing the source file, not importing it, so it is safe to use on
modules with side effects.  It's also much faster.

It is [available on PyPI]
and it supports all active versions of Python: 2.7 and 3.4 to 3.8.

Installation
------------

It can be installed with::

  $ pip install --upgrade pyflakes

Useful tips:

* Be sure to install it for a version of Python which is compatible
  with your codebase: for Python 2, pip2 install pyflakes and for
  Python3, pip3 install pyflakes.

* You can also invoke Pyflakes with ``python3 -m pyflakes . or
  python2 -m pyflakes .`` if you have it installed for both versions.

* If you require more options and more flexibility, you could give a
  look to Flake8_ too.

Design Principles
-----------------
Pyflakes makes a simple promise: it will never complain about style,
and it will try very, very hard to never emit false positives.

Pyflakes is also faster than Pylint_. This is
largely because Pyflakes only examines the syntax tree of each file
individually. As a consequence, Pyflakes is more limited in the
types of things it can check.

If you like Pyflakes but also want stylistic checks, you want
flake8_, which combines
Pyflakes with style checks against
`PEP 8`_ and adds
per-project configuration ability.

Mailing-list
------------

Share your feedback and ideas: `subscribe to the mailing-list
<https://mail.python.org/mailman/listinfo/code-quality>`_

Contributing
------------

Issues are tracked on [GitHub].

Patches may be submitted via a `GitHub pull request`_ or via the mailing
list
if you prefer. If you are comfortable doing so, please `rebase your
changes`_
so they may be applied to master with a fast-forward merge, and each commit
is
a coherent unit of work with a well-written log message.  If you are not
comfortable with this rebase workflow, the project maintainers will be
happy to
rebase your commits for you.

All changes should include tests and pass flake8_.

   :alt: GitHub Actions build status

.. _Pylint: https://www.pylint.org/
.. _flake8: https://pypi.org/project/flake8/
.. _`PEP 8`: https://www.python.org/dev/peps/pep-0008/
.. _`rebase your changes`:
https://git-scm.com/book/en/v2/Git-Branching-Rebasing
.. _`GitHub pull request`: https://github.com/PyCQA/pyflakes/pulls

Changelog
---------

Please see `NEWS.rst
<https://github.com/PyCQA/pyflakes/blob/master/NEWS.rst>`_.


[FILE:114:distinfo]
3bb3a3f256f4b7968c9c788781e4ff07dce46bdf12339dcda61053375426ee2e        69704 pyflakes-2.4.0-py2.py3-none-any.whl

