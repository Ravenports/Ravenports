# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		lua-luarocks
VERSION=		3.9.2
KEYWORDS=		devel
VARIANTS=		lua52 lua53 lua54
SDESC[lua52]=		Package manager for Lua modules (Lua 5.2)
SDESC[lua53]=		Package manager for Lua modules (Lua 5.3)
SDESC[lua54]=		Package manager for Lua modules (Lua 5.4)
HOMEPAGE=		https://luarocks.org
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://luarocks.org/releases/
DISTFILE[1]=		luarocks-3.9.2.tar.gz:main
DF_INDEX=		1
SPKGS[lua52]=		single
SPKGS[lua53]=		single
SPKGS[lua54]=		single

OPTIONS_AVAILABLE=	LUA52 LUA53 LUA54
OPTIONS_STANDARD=	none
VOPTS[lua52]=		LUA52=ON LUA53=OFF LUA54=OFF
VOPTS[lua53]=		LUA52=OFF LUA53=ON LUA54=OFF
VOPTS[lua54]=		LUA52=OFF LUA53=OFF LUA54=ON

USES=			gmake

DISTNAME=		luarocks-3.9.2

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/lua-luarocks

MUST_CONFIGURE=		gnu

[LUA52].DESCRIPTION=			Build with Lua 5.2
[LUA52].BUILDRUN_DEPENDS_ON=		lua-zlib:single:lua52
[LUA52].USES_ON=			lua:5.2,tools

[LUA53].DESCRIPTION=			Build with Lua 5.3
[LUA53].BUILDRUN_DEPENDS_ON=		lua-zlib:single:lua53
[LUA53].USES_ON=			lua:5.3,tools

[LUA54].DESCRIPTION=			Build with Lua 5.4
[LUA54].BUILDRUN_DEPENDS_ON=		lua-zlib:single:lua54
[LUA54].USES_ON=			lua:5.4,tools

post-install:
	(cd ${WRKSRC} && make DESTDIR=${STAGEDIR} LUA_VERSION={{LUA_VER}} install-config)
	${MV} ${STAGEDIR}${PREFIX}/etc/luarocks/config-\{\{LUA_VER\}\}.lua \
		${STAGEDIR}${PREFIX}/etc/luarocks/config-${LUA_VER}.lua
	${MV} ${STAGEDIR}${PREFIX}/bin/luarocks \
		${STAGEDIR}${PREFIX}/bin/luarocks-${LUA_VER}
	${MV} ${STAGEDIR}${PREFIX}/bin/luarocks-admin \
		${STAGEDIR}${PREFIX}/bin/luarocks-admin-${LUA_VER}

post-build:
	(cd ${WRKSRC} && make LUA_VERSION={{LUA_VER}} \
		LUA_INTERPRETER=lua{{LUA_VER_STR}} \
		LUA_INCDIR=${PREFIX}/include/lua{{LUA_VER_STR}} \
		./build/config-${LUA_VER}.lua)

do-configure:
	(cd ${WRKSRC} && ./configure --prefix=${PREFIX})

[FILE:233:descriptions/desc.single]
LuaRocks is the package manager for Lua modules. It allows you to create 
and install Lua modules as self-contained packages called "rocks", list
and remove them, etc. It is also possible to install packages system-wide
or per user.


[FILE:100:distinfo]
bca6e4ecc02c203e070acdb5f586045d45c078896f6236eb46aa33ccd9b94edb       256117 luarocks-3.9.2.tar.gz


[FILE:1813:manifests/plist.single]
%%LUA52-ON%%etc/luarocks/config-5.2.lua
%%LUA53-ON%%etc/luarocks/config-5.3.lua
%%LUA54-ON%%etc/luarocks/config-5.4.lua
%%LUA_MODSHAREDIR%%/luarocks/
 argparse.lua
 build.lua
 cmd.lua
 deplocks.lua
 deps.lua
 dir.lua
 download.lua
 fetch.lua
 fs.lua
 fun.lua
 loader.lua
 manif.lua
 pack.lua
 path.lua
 persist.lua
 queries.lua
 remove.lua
 repos.lua
 require.lua
 results.lua
 rockspecs.lua
 search.lua
 signing.lua
 test.lua
 type_check.lua
 util.lua
%%LUA_MODSHAREDIR%%/luarocks/admin/
 cache.lua
 index.lua
%%LUA_MODSHAREDIR%%/luarocks/admin/cmd/
 add.lua
 make_manifest.lua
 refresh_cache.lua
 remove.lua
%%LUA_MODSHAREDIR%%/luarocks/build/
 builtin.lua
 cmake.lua
 command.lua
 make.lua
%%LUA_MODSHAREDIR%%/luarocks/cmd/
 build.lua
 config.lua
 doc.lua
 download.lua
 init.lua
 install.lua
 lint.lua
 list.lua
 make.lua
 new_version.lua
 pack.lua
 path.lua
 purge.lua
 remove.lua
 search.lua
 show.lua
 test.lua
 unpack.lua
 upload.lua
 which.lua
 write_rockspec.lua
%%LUA_MODSHAREDIR%%/luarocks/core/
 cfg.lua
 dir.lua
 manif.lua
 path.lua
 persist.lua
 sysdetect.lua
 util.lua
 vers.lua
%%LUA_MODSHAREDIR%%/luarocks/fetch/
 cvs.lua
 git.lua
 git_file.lua
 git_http.lua
 git_https.lua
 git_ssh.lua
 hg.lua
 hg_http.lua
 hg_https.lua
 hg_ssh.lua
 sscm.lua
 svn.lua
%%LUA_MODSHAREDIR%%/luarocks/fs/
 linux.lua
 lua.lua
 macosx.lua
 tools.lua
 unix.lua
 win32.lua
%%LUA_MODSHAREDIR%%/luarocks/fs/unix/tools.lua
%%LUA_MODSHAREDIR%%/luarocks/fs/win32/tools.lua
%%LUA_MODSHAREDIR%%/luarocks/manif/writer.lua
%%LUA_MODSHAREDIR%%/luarocks/test/
 busted.lua
 command.lua
%%LUA_MODSHAREDIR%%/luarocks/tools/
 patch.lua
 tar.lua
 zip.lua
%%LUA_MODSHAREDIR%%/luarocks/type/
 manifest.lua
 rockspec.lua
%%LUA_MODSHAREDIR%%/luarocks/upload/
 api.lua
 multipart.lua
bin/
 luarocks-%%LUA_VER%%
 luarocks-admin-%%LUA_VER%%


[FILE:543:patches/patch-spec_sysdetect__spec.lua]
--- spec/sysdetect_spec.lua.orig	2022-12-08 20:13:08 UTC
+++ spec/sysdetect_spec.lua
@@ -52,6 +52,7 @@ describe("luarocks.core.sysdetect #unix
       ["elf-OpenBSD-x86_64-sh"] = {"openbsd", "x86_64"},
       ["elf-NetBSD-x86_64-echo"] = {"netbsd", "x86_64"},
       ["elf-FreeBSD-x86_64-echo"] = {"freebsd", "x86_64"},
+      ["elf-MidnightBSD-x86_64-echo"] = {"midnightbsd", "x86_64"},
       ["elf-Haiku-GCC2-ls"] = {"haiku", "x86"},
       ["elf-Haiku-GCC7-WebPositive"] = {"haiku", "x86"},
       ["pe-cygwin-ls.exe"] = {"cygwin", "x86"},


[FILE:1065:patches/patch-src_luarocks_core_cfg.lua]
--- src/luarocks/core/cfg.lua.orig	2022-12-08 20:13:08 UTC
+++ src/luarocks/core/cfg.lua
@@ -36,6 +36,7 @@ local platform_order = {
    "openbsd",
    "freebsd",
    "dragonfly",
+   "midnightbsd",
    "linux",
    "macosx",
    "cygwin",
@@ -151,6 +152,7 @@ local platform_sets = {
    freebsd = { unix = true, bsd = true, freebsd = true },
    openbsd = { unix = true, bsd = true, openbsd = true },
    dragonfly = { unix = true, bsd = true, dragonfly = true },
+   midnightbsd = { unix = true, bsd = true, midnightbsd = true },
    solaris = { unix = true, solaris = true },
    windows = { windows = true, win32 = true },
    cygwin = { unix = true, cygwin = true },
@@ -521,6 +523,8 @@ local function make_defaults(lua_version
       defaults.arch = "openbsd-"..target_cpu
    elseif platforms.netbsd then
       defaults.arch = "netbsd-"..target_cpu
+   elseif platforms.midnightbsd then
+      defaults.arch = "midnightbsd-"..target_cpu
    elseif platforms.solaris then
       defaults.arch = "solaris-"..target_cpu
       defaults.variables.MAKE = "gmake"

