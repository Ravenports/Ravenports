# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-blinker
VERSION=		1.8.2
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Fast object/object and broadcast signaling (3.11)
SDESC[v12]=		Fast object/object and broadcast signaling (3.12)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/bb/2a/10164ed1f31196a2f7f3799368a821765c62851ead0e630ab52b8e14b4d0
DISTFILE[1]=		blinker-1.8.2-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		blinker-1.8.2.dist-info

GENERATED=		yes

[PY311].USES_ON=			python:v11,wheel

[PY312].USES_ON=			python:v12,wheel

[FILE:1019:descriptions/desc.single]
# Blinker

Blinker provides a fast dispatching system that allows any number of
interested parties to subscribe to events, or "signals".

## Pallets Community Ecosystem

> [!IMPORTANT]\
> This project is part of the Pallets Community Ecosystem. Pallets is the
open
> source organization that maintains Flask; Pallets-Eco enables community
> maintenance of related projects. If you are interested in helping
maintain
> this project, please reach out on [the Pallets Discord server][discord].
>
> [discord]: https://discord.gg/pallets

## Example

Signal receivers can subscribe to specific senders or receive signals
sent by any sender.

```pycon
>>> from blinker import signal
>>> started = signal('round-started')
>>> def each(round):
...     print(f"Round {round}")
...
>>> started.connect(each)

>>> def round_two(round):
...     print("This is round two.")
...
>>> started.connect(round_two, sender=2)

>>> for round in range(1, 4):
...     started.send(round)
...
Round 1!
Round 2!
This is round two.
Round 3!
```


[FILE:109:distinfo]
1779309f71bf239144b9399d06ae925637cf6634cf6bd131104184531bf67c01         9456 blinker-1.8.2-py3-none-any.whl

