# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		mupdf
VERSION=		1.13.0
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Lightweight PDF and XPS viewer
HOMEPAGE=		https://mupdf.com/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://mupdf.com/downloads/
			http://www.mupdf.com/downloads/archive/
DISTFILE[1]=		mupdf-1.13.0-source.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	curl:primary:standard
			freetype:primary:standard
			harfbuzz:primary:standard
			openjpeg:single:standard
			jbig2dec:single:standard
			freeglut:primary:standard

USES=			cpe gmake jpeg pkgconfig
XORG_COMPONENTS=	x11 xcursor xext xinerama xrandr

DISTNAME=		mupdf-1.13.0-source

LICENSE=		AGPLv3+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		AGPLv3+:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

CPE_VENDOR=		artifex
FPC_EQUIVALENT=		graphics/mupdf

BUILD_TARGET=		all extra
MAKE_ARGS=		build=release
			prefix={{PREFIX}}
			mandir={{MANPREFIX}}/man
			verbose=yes
			SOVERSION=1.13.0

SOVERSION=		1.13.0

CFLAGS=			`pkg-config
			--cflags
			libopenjp2`
			-I{{WRKSRC}}/include/mupdf
VAR_ARCH[x86_64]=	CFLAGS=-fPIC

post-patch:
	${REINPLACE_CMD} -e "s|%%OPSYS%%|${OPSYS}|; s/-pipe -O2 //" \
		${WRKSRC}/Makerules

post-install:
	${MV} ${STAGEDIR}${PREFIX}/bin/mupdf-x11 ${STAGEDIR}${PREFIX}/bin/mupdf
	${INSTALL_PROGRAM} \
		${WRKSRC}/build/release/mjsgen \
		${WRKSRC}/build/release/mujstest \
		${WRKSRC}/build/release/mupdf-x11-curl \
		${WRKSRC}/build/release/muraster \
		${STAGEDIR}${PREFIX}/bin
	${LN} -s libmupdf.so.1.13.0 \
		${STAGEDIR}${PREFIX}/lib/libmupdf.so
	${LN} -s libmupdfthird.so.1.13.0 \
		${STAGEDIR}${PREFIX}/lib/libmupdfthird.so
	${MKDIR ${STAGEDIR}${PREFIX}/share/examples
	${MV} ${STAGEDIR}${PREFIX}/share/doc/mupdf/examples \
		${STAGEDIR}${STD_EXAMPLESDIR}
	${RM} ${STAGEDIR}${STD_DOCDIR}/COPYING

post-extract:
	${RM} -r ${WRKSRC}/thirdparty/curl \
		${WRKSRC}/thirdparty/freetype \
		${WRKSRC}/thirdparty/freeglut \
		${WRKSRC}/thirdparty/harfbuzz \
		${WRKSRC}/thirdparty/jbig2dec \
		${WRKSRC}/thirdparty/libjpeg \
		${WRKSRC}/thirdparty/openjpeg \
		${WRKSRC}/thirdparty/zlib
	${AWK} '/^LICENSE/,/^REPORTING/' ${WRKSRC}/README > ${WRKDIR}/TERMS

[FILE:828:descriptions/desc.primary]
MuPDF is a lightweight PDF viewer and toolkit written in portable C.

The renderer in MuPDF is tailored for high quality anti-aliased graphics.
It renders text with metrics and spacing accurate to within fractions of a
pixel for the highest fidelity in reproducing the look of a printed page on
screen.

MuPDF has a small footprint. A binary that includes the standard Roman
fonts is only one megabyte. A build with full CJK support (including an
Asian font) is approximately five megabytes.

MuPDF has support for all non-interactive PDF 1.7 features, and the toolkit
provides a simple API for accessing the internal structures of the PDF
document. Example code for navigating interactive links and bookmarks,
encrypting PDF files, extracting fonts, images, and searchable text, and
rendering pages to image files is provided.


[FILE:105:distinfo]
071c6962cbee1136188da62136596a9d704b81e35fe617cd34874bbb0ae7ca09     51425034 mupdf-1.13.0-source.tar.gz


[FILE:1142:manifests/plist.primary]
bin/
 mjsgen
 mujstest
 mupdf
 mupdf-gl
 mupdf-x11-curl
 muraster
 mutool
include/mupdf/
 fitz.h
 memento.h
 pdf-tools.h
 pdf.h
 ucdn.h
include/mupdf/fitz/
 annotation.h
 archive.h
 band-writer.h
 bidi.h
 bitmap.h
 buffer.h
 color-management.h
 colorspace.h
 compress.h
 compressed-buffer.h
 config.h
 context.h
 crypt.h
 device.h
 display-list.h
 document.h
 filter.h
 font.h
 geometry.h
 getopt.h
 glyph-cache.h
 glyph.h
 hash.h
 image.h
 link.h
 outline.h
 output-pcl.h
 output-pclm.h
 output-png.h
 output-pnm.h
 output-ps.h
 output-psd.h
 output-pwg.h
 output-svg.h
 output-tga.h
 output.h
 path.h
 pixmap.h
 pool.h
 separation.h
 shade.h
 store.h
 stream.h
 string-util.h
 structured-text.h
 system.h
 text.h
 track-usage.h
 transition.h
 tree.h
 util.h
 version.h
 writer.h
 xml.h
include/mupdf/pdf/
 annot.h
 appearance.h
 clean.h
 cmap.h
 crypt.h
 document.h
 event.h
 field.h
 font.h
 interpret.h
 javascript.h
 name-table.h
 object.h
 output-pdf.h
 page.h
 parse.h
 resource.h
 widget.h
 xref.h
lib/
 libmupdf.so
 libmupdf.so.%%SOVERSION%%
 libmupdfthird.so
 libmupdfthird.so.%%SOVERSION%%
share/man/man1/
 mupdf.1.gz
 mutool.1.gz


[FILE:493:manifests/plist.docs]
share/doc/mupdf/
 CHANGES
 README
 android-sdk.html
 artifex-logo.png
 building.html
 coding-overview.html
 coding-progressive.html
 coding-style.html
 index.html
 manual-mupdf-gl.html
 manual-mutool-clean.html
 manual-mutool-convert.html
 manual-mutool-create.html
 manual-mutool-draw.html
 manual-mutool-extract.html
 manual-mutool-merge.html
 manual-mutool-portfolio.html
 manual-mutool-run.html
 manual-mutool-show.html
 manual-mutool-trace.html
 style.css
 template.html
 thirdparty.html


[FILE:191:manifests/plist.examples]
share/examples/mupdf/
 multi-threaded.c
 trace-device.js
 pdf-merge.js
 pdf-create.js
 pdf-create-lowlevel.js
 jpx-to-pdf.js
 example.c
 draw-document.js
 draw-device.js
 create-thumbnail.js


[FILE:716:patches/patch-Makefile]
$OpenBSD: patch-Makefile,v 1.12 2016/12/12 10:54:39 sthen Exp $
--- Makefile.orig	2018-04-12 13:14:06 UTC
+++ Makefile
@@ -325,8 +325,8 @@ generate: $(JAVASCRIPT_GEN)
 
 # --- Library ---
 
-MUPDF_LIB = $(OUT)/libmupdf.a
-THIRD_LIB = $(OUT)/libmupdfthird.a
+MUPDF_LIB = libmupdf.so.$(SOVERSION)
+THIRD_LIB = libmupdfthird.so.$(SOVERSION)
 THREAD_LIB = $(OUT)/libmuthreads.a
 PKCS7_LIB = $(OUT)/libmupkcs7.a
 
@@ -356,7 +356,11 @@ THIRD_OBJ := \
 	$(LCMS2_OBJ)
 
 $(MUPDF_LIB) : $(MUPDF_OBJ)
+	$(CC) $(LDFLAGS) -fPIC -shared -Wl,-soname=$@ -o $@ $^ $(LIBS)
+
 $(THIRD_LIB) : $(THIRD_OBJ)
+	$(CC) $(LDFLAGS) -fPIC -shared -Wl,-soname=$@ -o $@ $^ $(LIBS)
+
 $(THREAD_LIB) : $(THREAD_OBJ)
 $(PKCS7_LIB) : $(PKCS7_OBJ)
 


[FILE:1142:patches/patch-Makerules]
--- Makerules.orig	2018-04-12 13:14:06 UTC
+++ Makerules
@@ -87,7 +87,7 @@ LD = xcrun ld
 RANLIB_CMD = xcrun ranlib $@
 
 # Linux uses pkg-config for system libraries.
-else ifeq "$(OS)" "Linux"
+else ifeq "$(OS)" "%%OPSYS%%"
 
 HAVE_PTHREAD := yes
 SYS_PTHREAD_CFLAGS :=
@@ -97,21 +97,15 @@ HAVE_GLUT := yes
 SYS_GLUT_CFLAGS :=
 SYS_GLUT_LIBS := -lglut -lGL
 
-ifeq "$(shell pkg-config --exists 'libcrypto >= 1.1.0' && echo yes)" "yes"
-HAVE_LIBCRYPTO := yes
-SYS_LIBCRYPTO_CFLAGS := -DHAVE_LIBCRYPTO $(shell pkg-config --cflags libcrypto)
-SYS_LIBCRYPTO_LIBS := $(shell pkg-config --libs libcrypto)
-endif
+HAVE_LIBCRYPTO := no
+SYS_LIBCRYPTO_CFLAGS :=
+SYS_LIBCRYPTO_LIBS :=
 
 ifeq "$(shell pkg-config --exists libcurl && echo yes)" "yes"
 HAVE_CURL := yes
 SYS_CURL_CFLAGS := $(shell pkg-config --cflags libcurl)
 SYS_CURL_LIBS := $(shell pkg-config --libs libcurl)
-ifeq "$(shell pkg-config --exists openssl && echo yes)" "yes"
-HAVE_OPENSSL_SSL := yes
-SYS_CURL_CFLAGS += $(shell pkg-config --cflags openssl)
-SYS_CURL_DEPS += $(shell pkg-config --libs openssl)
-endif
+HAVE_OPENSSL_SSL := no
 endif
 SYS_CURL_DEPS += -lpthread -lrt
 


[FILE:1079:patches/patch-platform__x11__pdfapp.c]
--- platform/x11/pdfapp.c.orig	2018-04-12 13:14:06 UTC
+++ platform/x11/pdfapp.c
@@ -1331,6 +1331,8 @@ void pdfapp_onkey(pdfapp_t *app, int c,
 	case 'j':
 		{
 			int h = fz_pixmap_height(app->ctx, app->image);
+                        if ( (app->pany + h) <= app->winh )
+                            goto pagedown;
 			if (h <= app->winh || app->pany <= app->winh - h)
 			{
 				panto = PAN_TO_TOP;
@@ -1347,6 +1349,8 @@ void pdfapp_onkey(pdfapp_t *app, int c,
 	case 'k':
 		{
 			int h = fz_pixmap_height(app->ctx, app->image);
+                        if (app->pany >= 0)
+                            goto pageup;
 			if (h <= app->winh || app->pany == 0)
 			{
 				panto = PAN_TO_BOTTOM;
@@ -1422,6 +1426,7 @@ void pdfapp_onkey(pdfapp_t *app, int c,
 	 */
 
 	case ',':
+        pageup:
 		panto = PAN_TO_BOTTOM;
 		if (app->numberlen > 0)
 			app->pageno -= atoi(app->number);
@@ -1430,6 +1435,7 @@ void pdfapp_onkey(pdfapp_t *app, int c,
 		break;
 
 	case '.':
+        pagedown:
 		panto = PAN_TO_TOP;
 		if (app->numberlen > 0)
 			app->pageno += atoi(app->number);

