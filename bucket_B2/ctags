# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		ctags
VERSION=		20190331
REVISION=		1
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Tagfile generator for vi and emacs clones
HOMEPAGE=		https://ctags.io
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/universal-ctags:ctags:95975bd
DISTFILE[1]=		ctags-20190331.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		automake:primary:std
			python-docutils:single:python_default
BUILDRUN_DEPENDS=	libyaml:single:std
			jansson:single:std

USES=			pkgconfig gmake iconv
GNOME_COMPONENTS=	libxml2

FPC_EQUIVALENT=		devel/ctags

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-iconv
			--enable-json
			--enable-yaml
			--enable-xml

INSTALL_REQ_TOOLCHAIN=	yes

post-patch:
	${REINPLACE_CMD} -e "s/make -f/gmake -f/" ${WRKSRC}/autogen.sh

pre-configure:
	(cd ${WRKSRC} && ./autogen.sh)

[FILE:711:descriptions/desc.primary]
Universal Ctags generates an index (or tag) file of source language
objects in source files that allows these items to be quickly and
easily located by a text editor or other utility.

Alternatively, it can generate a cross reference file which lists,
in human-readable form, information about the various objects found
in a set of source code files.

Supported languages include: Assembler, ASP, AWK, BETA, C, C++, C#,
COBOL, Eiffel, Fortran, HTML, Java, Javascript, Lisp, Lua, Make,
Pascal, Perl, PHP, PL/SQL, Python, REXX, Ruby, S-Lang, Scheme, Shell
(Bourne/Korn/Z), Standard ML, Tcl, Vera, Verilog, Vim and Yacc.

The Universal Ctags project extends the development of the stalled
Exuberant Ctags project.


[FILE:100:distinfo]
9116178c2778bb695a9a690e0bdf48198aae22586f3503fe66a75b86032eeb99      1536317 ctags-20190331.tar.gz


[FILE:22:manifests/plist.primary]
bin/
 ctags
 readtags


[FILE:82:manifests/plist.man]
share/man/man1/ctags.1
share/man/man7/
 ctags-incompatibilities.7
 ctags-optlib.7


[FILE:543:sunos/patch-misc_packcc_packcc.c]
--- misc/packcc/packcc.c.orig	Thu Sep 19 00:52:42 2019
+++ misc/packcc/packcc.c	Thu Sep 19 01:33:03 2019
@@ -50,17 +50,13 @@
 #include <assert.h>
 #include <stdbool.h>
 
-#ifndef _MSC_VER
-#if ((defined USE_SYSTEM_STRNLEN) == 0) && defined __GNUC__ && defined _WIN32 /* MinGW */
+#if defined(sun) || defined(__sun)
 static size_t strnlen(const char *str, size_t maxlen) {
     size_t i;
     for (i = 0; str[i] && i < maxlen; i++);
     return i;
 }
-#else
-#include <unistd.h> /* for strnlen() */
 #endif
-#endif
 
 #define VERSION "1.2.5"
 


[FILE:347:sunos/patch-peg_varlink__pre.h]
--- peg/varlink_pre.h.orig	Thu Sep 19 01:20:45 2019
+++ peg/varlink_pre.h	Thu Sep 19 01:37:54 2019
@@ -19,6 +19,14 @@
 #include "read.h"
 
 
+#if defined(sun) || defined(__sun)
+ static size_t strnlen(const char *str, size_t maxlen) {
+     size_t i;
+     for (i = 0; str[i] && i < maxlen; i++);
+     return i;
+ }
+#endif
+
 /*
 *   MACROS
 */

