# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-textfsm
VERSION=		2.1.0
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Module for parsing semi-structured text (3.12)
SDESC[v13]=		Module for parsing semi-structured text (3.13)
HOMEPAGE=		https://github.com/google/textfsm
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/82/1a/ab772f8479adedad1bdd12dd5c2bf6facf3fad8d04f35b4f4053201d202d
DISTFILE[1]=		textfsm-2.1.0-py2.py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		textfsm-2.1.0.dist-info

GENERATED=		yes

[PY312].USES_ON=			python:v12,wheel

[PY313].USES_ON=			python:v13,wheel

[FILE:1665:descriptions/desc.single]
TextFSM
=======

Python module which implements a template based state machine for parsing
semi-formatted text. Originally developed to allow programmatic access to
information returned from the command line interface (CLI) of networking
devices.

The engine takes two inputs - a template file, and text input (such as
command
responses from the CLI of a device) and returns a list of records that
contains
the data parsed from the text.

A template file is needed for each uniquely structured text input. Some
examples
are provided with the code and users are encouraged to develop their own.

By developing a pool of template files, scripts can call TextFSM to parse
useful
information from a variety of sources. It is also possible to use different
templates on the same data in order to create different tables (or views).

TextFSM was developed internally at Google and released under the Apache
2.0
licence for the benefit of the wider community.

[**See documentation for more details.**]

Before contributing
-------------------
If you are not a Google employee, our lawyers insist that you sign a
Contributor
Licence Agreement (CLA).

If you are an individual writing original source code and you're sure you
own
the intellectual property, then you'll need to sign an
[individual CLA].
Individual CLAs can be signed electronically. If you work for a company
that
wants to allow you to contribute your work, then you'll need to sign a
[corporate CLA].
The Google CLA is based on Apache's. Note that unlike some projects
(notably GNU projects), we do not require a transfer of copyright. You
still own
the patch.

Sadly, even the smallest patch needs a CLA.


[FILE:124:distinfo]
55886490474890fa09ade0e8c9555a913fd325724842293364dc44ea705b3616        44345 python-src/textfsm-2.1.0-py2.py3-none-any.whl

