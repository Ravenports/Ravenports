# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-textfsm
VERSION=		1.1.3
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Module for parsing semi-structured text (3.10)
SDESC[v11]=		Module for parsing semi-structured text (3.11)
HOMEPAGE=		https://github.com/google/textfsm
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/f8/f2/235703136dc9f25d1498c0f0b49ed99a4d7f98c361f322a5da586eb1ee06
DISTFILE[1]=		textfsm-1.1.3-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		textfsm-1.1.3.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-six:single:py310
					python-future:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-six:single:v11
					python-future:single:v11
[PY311].USES_ON=			python:v11,wheel

[FILE:1665:descriptions/desc.single]
TextFSM
=======

Python module which implements a template based state machine for parsing
semi-formatted text. Originally developed to allow programmatic access to
information returned from the command line interface (CLI) of networking
devices.

The engine takes two inputs - a template file, and text input (such as
command
responses from the CLI of a device) and returns a list of records that
contains
the data parsed from the text.

A template file is needed for each uniquely structured text input. Some
examples
are provided with the code and users are encouraged to develop their own.

By developing a pool of template files, scripts can call TextFSM to parse
useful
information from a variety of sources. It is also possible to use different
templates on the same data in order to create different tables (or views).

TextFSM was developed internally at Google and released under the Apache
2.0
licence for the benefit of the wider community.

[**See documentation for more details.**]

Before contributing
-------------------
If you are not a Google employee, our lawyers insist that you sign a
Contributor
Licence Agreement (CLA).

If you are an individual writing original source code and you're sure you
own
the intellectual property, then you'll need to sign an
[individual CLA].
Individual CLAs can be signed electronically. If you work for a company
that
wants to allow you to contribute your work, then you'll need to sign a
[corporate CLA].
The Google CLA is based on Apache's. Note that unlike some projects
(notably GNU projects), we do not require a transfer of copyright. You
still own
the patch.

Sadly, even the smallest patch needs a CLA.


[FILE:113:distinfo]
dcbeebc6a6137bed561c71a56344d752e6dbc04ae5ea309252cb70fb97ccc9cd        44664 textfsm-1.1.3-py2.py3-none-any.whl

