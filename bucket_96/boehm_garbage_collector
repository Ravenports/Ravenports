# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		boehm_garbage_collector
VERSION=		8.0.6
KEYWORDS=		devel
VARIANTS=		standard threaded redirect
SDESC[threaded]=	Garbage collection with posix thread support
SDESC[redirect]=	Garbage collection with redirected malloc
SDESC[standard]=	Garbage collection and memory leak detection
HOMEPAGE=		https://github.com/ivmai/bdwgc/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main old
SITES[main]=		https://github.com/ivmai/bdwgc/releases/download/v8.0.6/
SITES[old]=		http://www.hboehm.info/gc/gc_source/
DISTFILE[1]=		gc-8.0.6.tar.gz:main
DF_INDEX=		1
SPKGS[threaded]=	single
SPKGS[redirect]=	single
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	THREADED REDIRECT
OPTIONS_STANDARD=	none
VOPTS[threaded]=	THREADED=ON REDIRECT=OFF
VOPTS[redirect]=	THREADED=OFF REDIRECT=ON

BUILD_DEPENDS=		libatomic_ops:single:standard

USES=			cpe libtool pkgconfig c++:single

DISTNAME=		gc-8.0.6

LICENSE=		BSD2CLAUSE:single
LICENSE_FILE=		BSD2CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

CPE_PRODUCT=		garbage_collector
CPE_VENDOR=		boehm-demers-weiser
FPC_EQUIVALENT=		devel/boehm-gc

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-cplusplus
			--disable-static
			--disable-docs

SINGLE_JOB=		yes

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		1.4.0
PLIST_SUB=		GCVERSION=1.4.4
			GCMAJOR=1
			CPPVERSION=1.4.1
			CPPMAJOR=1

[THREADED].DESCRIPTION=			Enable posix thread support
[THREADED].CONFIGURE_ARGS_OFF=		--disable-threads
[THREADED].CONFIGURE_ARGS_ON=		--enable-threads=posix
[THREADED].CONFIGURE_ENABLE_BOTH=	parallel-mark

[REDIRECT].DESCRIPTION=			Enable malloc redirection support
[REDIRECT].CONFIGURE_ENABLE_BOTH=	redirect-malloc

post-patch:
	${REINPLACE_CMD} -e "s|%%PREFIX%%|${PREFIX}|g" ${WRKSRC}/doc/gc.man
	${REINPLACE_CMD} -e "s|: install-dist_pkgdataDATA|: |" \
		${WRKSRC}/Makefile.in

post-install:
	${INSTALL_MAN} ${WRKSRC}/doc/gc.man ${STAGEDIR}${MANPREFIX}/man/man3/gc.3

[FILE:741:descriptions/desc.single]
The Boehm-Weiser garbage collection package, for C and C++ -
garbage collection and memory leak detection libraries.

A garbage collector is something which automatically frees malloc'd
memory for you by working out what parts of memory your program
no longer has pointers to.  As a result, garbage collectors can also
inform you of memory leaks (if they find memory they can free, it means
you have lost all of your pointers to it, but you didn't free it).

C programs may be linked against either of these, and should run (with
GC or leak detection) without change.  C++ programs must include a header
to use garbage collection, though leak detection should work without
such source code modifications.  See the man page and header files.


[FILE:94:distinfo]
3b4914abc9fa76593596773e4da671d7ed4d5390e3d46fbf2e5f155e121bea11      1168660 gc-8.0.6.tar.gz


[FILE:492:manifests/plist.single]
include/
 gc.h
 gc_cpp.h
include/gc/
 cord.h
 cord_pos.h
 ec.h
 gc.h
 gc_allocator.h
 gc_backptr.h
 gc_config_macros.h
 gc_cpp.h
 gc_gcj.h
 gc_inline.h
 gc_mark.h
 gc_pthread_redirects.h
 gc_tiny_fl.h
 gc_typed.h
 gc_version.h
 javaxfc.h
 leak_detector.h
lib/
 libcord.so
 libcord.so.%%SOMAJOR%%
 libcord.so.%%SOVERSION%%
 libgc.so
 libgc.so.%%GCMAJOR%%
 libgc.so.%%GCVERSION%%
 libgccpp.so
 libgccpp.so.%%CPPMAJOR%%
 libgccpp.so.%%CPPVERSION%%
lib/pkgconfig/bdw-gc.pc
share/man/man3/gc.3.gz


[FILE:705:patches/patch-configure]
--- configure.orig	2021-09-28 20:48:19 UTC
+++ configure
@@ -16198,6 +16198,9 @@ else
 fi
 
 case "${host}" in
+  *-freebsd*|*-dragonfly*|*-netbsd*)
+    gc_use_mmap=yes
+    ;;
   *-linux*)
     # FIXME: This seems to be no longer needed as configured in gcconfig.h
     #gc_use_mmap=yes
@@ -16803,7 +16806,7 @@ case "$host" in
   mips-sgi-irix6*) ;;
 # We never want libdl on darwin. It is a fake libdl that just ends up making
 # dyld calls anyway.  The same applies to Cygwin.
-  *-*-cygwin* | *-*-darwin* | *-*-msys*)
+  *-*-cygwin* | *-*-darwin* | *-*-msys* | *-*-netbsd* | *-*-dragonfly* | *-*-freebsd* )
     ;;
   *)
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5

