# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		m17n-lib
VERSION=		1.8.4
REVISION=		1
KEYWORDS=		textproc devel
VARIANTS=		standard
SDESC[standard]=	Multilingual text processing library
HOMEPAGE=		http://www.nongnu.org/m17n/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SAVANNAH/m17n
DISTFILE[1]=		m17n-lib-1.8.4.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			tools
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		bison:primary:standard
			m17n-db:dev:standard
			freetype:dev:standard
			fribidi:dev:standard
BUILDRUN_DEPENDS=	fribidi:primary:standard
			libGD:single:standard
			libotf:single:standard
			m17n-db:primary:standard
EXRUN[tools]=		m17n-lib:primary:standard

USES=			autoreconf gettext:build libtool fontconfig
			pkgconfig
GNOME_COMPONENTS=	libxml2
XORG_COMPONENTS=	ice sm x11 xaw xft xmu xrender xt

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"_M17N_H_"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/m17n.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/m17n-lib

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-nls
			--without-anthy
			--without-libthai
			HAVE_ISPELL=no

SINGLE_JOB=		yes

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		0.4.2

pre-configure-netbsd:
	${REINPLACE_CMD} -e 's/ -ldl//' ${WRKSRC}/src/Makefile.am

[FILE:730:descriptions/desc.primary]
The m17n library provides following facilities to handle multilingual
text.

  * M-text: A data structure for a multilingual text.  It is
    basically a string but with attributes called text property, and
    is designed to substitute for the C string.  It is the most
    important object of the m17n library.

  * Functions for creating and processing M-texts.

  * Functions for converting M-texts from/to strings encoded in
    various existing formats.

  * A huge character space, which contains all the Unicode
    characters and more non-Unicode characters.

  * Chartable: A data structure that contains per-character
    information efficiently.

  * Functions for inputting and displaying M-text on a window system.



[FILE:34:descriptions/desc.tools]
This package contains m17n tools.


[FILE:100:distinfo]
c6a2582c6e4f2a8c2e7a2844fa5c7eb363aad2538b052f203c710649dd421cc8      1119271 m17n-lib-1.8.4.tar.gz


[FILE:311:manifests/plist.primary]
lib/
 libm17n-core.so.%%SOMAJOR%%
 libm17n-core.so.%%SOVERSION%%
 libm17n-flt.so.%%SOMAJOR%%
 libm17n-flt.so.%%SOVERSION%%
 libm17n-gui.so.%%SOMAJOR%%
 libm17n-gui.so.%%SOVERSION%%
 libm17n.so.%%SOMAJOR%%
 libm17n.so.%%SOVERSION%%
lib/m17n/1.0/
 libm17n-X.so
 libm17n-gd.so
 libmimx-anthy.so
 libmimx-ispell.so


[FILE:60:manifests/plist.tools]
bin/
 m17n-conv
 m17n-date
 m17n-dump
 m17n-edit
 m17n-view


[FILE:346:manifests/plist.dev]
include/
 m17n-X.h
 m17n-core.h
 m17n-flt.h
 m17n-gui.h
 m17n-misc.h
 m17n.h
lib/
 libm17n-core.a
 libm17n-core.so
 libm17n-flt.a
 libm17n-flt.so
 libm17n-gui.a
 libm17n-gui.so
 libm17n.a
 libm17n.so
lib/m17n/1.0/
 libm17n-X.a
 libm17n-gd.a
 libmimx-anthy.a
 libmimx-ispell.a
lib/pkgconfig/
 m17n-core.pc
 m17n-flt.pc
 m17n-gui.pc
 m17n-shell.pc


[FILE:1636:patches/patch-configure.ac]
--- configure.ac.orig	2023-07-25 08:40:51 UTC
+++ configure.ac
@@ -331,6 +331,10 @@ LIBS="$save_LIBS"
 AC_SUBST(XML2_LD_FLAGS)
 
 dnl Check for Anthy usability.
+AC_ARG_WITH(anthy,
+            AC_HELP_STRING([--with-anthy],
+                           [with Anthy library (default is YES)]))
+if test "x$with_anthy" != "xno"; then
 
 PKG_CHECK_MODULES(ANTHY, anthy, HAVE_ANTHY=yes, HAVE_ANTHY=no)
 if test "x$HAVE_ANTHY" = "xyes"; then
@@ -340,6 +344,8 @@ if test "x$HAVE_ANTHY" = "xyes"; then
   ANTHY_LD_FLAGS="$ANTHY_LIBS"
   CONFIG_FLAGS="$CONFIG_FLAGS -DHAVE_ANTHY"
 fi
+
+fi
 AC_SUBST(ANTHY_LD_FLAGS)
 
 dnl Check for Ispell usability.
@@ -354,11 +360,15 @@ dnl Check for Thai word-segmentation lib
 dnl If we have one, define HAVE_THAI_WORDSEG and one of these:
 dnl   HAVE_LIBTHAI, HAVE_WORDCUT, or HAVE_WORDCUT_OLD
 dnl In addition, set THAI_WORDSEG_LD_FLAGS to a proper value.
+AC_ARG_WITH(libthai,
+            AC_HELP_STRING([--with-libthai],
+                           [with libThai library (default is YES)]))
+if test "x$with_libthai" != "xno"; then
 
 PKG_CHECK_MODULES(LIBTHAI, libthai, HAVE_LIBTHAI=yes, HAVE_LIBTHAI=no)
 PKG_CHECK_MODULES(WORDCUT, wordcut, HAVE_WORDCUT=yes, HAVE_WORDCUT=no)
 
-if test "x$HAVE_LIBTHAI" == "xyes"; then
+if test "x$HAVE_LIBTHAI" = "xyes"; then
 
   AC_DEFINE(HAVE_LIBTHAI, 1, [Define if you have libthai])
   THAI_WORDSEG_LD_FLAGS="$LIBTHAI_LIBS"
@@ -414,6 +424,8 @@ if test "x$HAVE_THAI_WORDSEG" = "xyes";
   AC_DEFINE(HAVE_THAI_WORDSEG, 1,
             [Define if you have some Thai word-segmentation library])
 fi
+
+fi
 AC_SUBST(THAI_WORDSEG_LD_FLAGS)
 
 AC_SUBST(CONFIG_FLAGS)


[FILE:260:files/special.mk]
# Strip -ldl from all platforms except linux

.if "${OPSYS}" != "Linux"
_USES_configure+= 452:remove_libdl
.endif

remove_libdl:
	@echo "BSD: Remove -ldl linkage"
	${REINPLACE_CMD} -e 's| -ldl||' \
		${WRKSRC}/example/Makefile.am \
		${WRKSRC}/src/Makefile.am

