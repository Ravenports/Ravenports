# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		nodejs
VERSION=		9.5.0
KEYWORDS=		www lang
VARIANTS=		standard
SDESC[standard]=	Evented I/O for V8 JavaScript
HOMEPAGE=		https://nodejs.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://nodejs.org/dist/v9.5.0/
DISTFILE[1]=		node-v9.5.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	icu:single:standard
			libuv:single:standard
			c-ares:single:standard

USES=			execinfo gmake python:build,py27 pkgconfig
			shebangfix zlib

DISTNAME=		node-v9.5.0

LICENSE=		MIT:primary
LICENSE_SCHEME=		solo
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE

FPC_EQUIVALENT=		www/node
SHEBANG_FILES=		tools/specialize_node_d.py
			tools/genv8constants.py

MUST_CONFIGURE=		yes
CONFIGURE_ARGS=		--prefix={{PREFIX}}
			--without-snapshot
			--without-npm
			--shared-cares
			--shared-libuv
			--shared-zlib
			--with-intl=system-icu
			--openssl-no-asm

MAKE_ENV=		CC.host={{CC}}
			CXX.host={{CXX}}
			LINK.host={{CXX}}
			LINK.target={{CXX}}

post-patch:
	@${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|' \
		${WRKSRC}/deps/v8/src/v8.gyp
	@${GREP} -rl "/usr/local" ${WRKSRC} | \
		${XARGS} ${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|g'
	@${FIND} ${WRKSRC} -name "*.bak" -delete
	# So many different ways to run python. Fix them all.
	@${REINPLACE_CMD} -e 's|/usr/bin/env python|${PYTHON_CMD}|' \
		${WRKSRC}/configure
	@${FIND} ${WRKSRC} -type f -name '*.gyp*' -print0 | \
		${XARGS} -0 ${REINPLACE_CMD} \
			-e "s|'python'|'${PYTHON_CMD}'|" \
			-e 's|<!(python |<!(${PYTHON_CMD} |' \
			-e 's|\&\& python |\&\& ${PYTHON_CMD} |'
	@${FIND} ${WRKSRC} -name "*.bak" -delete

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/node

post-patch-freebsd:
	@${REINPLACE_CMD} -e '/define HAVE_CRYPTODEV/d' \
		${WRKSRC}/deps/openssl/openssl/crypto/engine/eng_cryptodev.c

[FILE:263:descriptions/desc.primary]
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript
engine. Node.js uses an event-driven, non-blocking I/O model that
makes it lightweight and efficient. Node.js' package ecosystem,
npm, is the largest ecosystem of open source libraries in the world.


[FILE:97:distinfo]
039d4f6fa5b5855f44a662297c0ac515ef49047af721201e9f53c5d16fd3824c     31351190 node-v9.5.0.tar.gz


[FILE:2204:manifests/plist.primary]
bin/node
include/node/
 common.gypi
 config.gypi
include/node/libplatform/
 libplatform-export.h
 libplatform.h
 v8-tracing.h
include/node/
 node.h
 node_api.h
 node_api_types.h
 node_buffer.h
 node_object_wrap.h
 node_version.h
include/node/openssl/
 aes.h
include/node/openssl/archs/BSD-x86/opensslconf.h
include/node/openssl/archs/BSD-x86_64/opensslconf.h
include/node/openssl/archs/VC-WIN32/opensslconf.h
include/node/openssl/archs/VC-WIN64A/opensslconf.h
include/node/openssl/archs/aix-gcc/opensslconf.h
include/node/openssl/archs/aix64-gcc/opensslconf.h
include/node/openssl/archs/darwin-i386-cc/opensslconf.h
include/node/openssl/archs/darwin64-x86_64-cc/opensslconf.h
include/node/openssl/archs/linux-aarch64/opensslconf.h
include/node/openssl/archs/linux-armv4/opensslconf.h
include/node/openssl/archs/linux-elf/opensslconf.h
include/node/openssl/archs/linux-ppc/opensslconf.h
include/node/openssl/archs/linux-ppc64/opensslconf.h
include/node/openssl/archs/linux-x32/opensslconf.h
include/node/openssl/archs/linux-x86_64/opensslconf.h
include/node/openssl/archs/linux32-s390x/opensslconf.h
include/node/openssl/archs/linux64-s390x/opensslconf.h
include/node/openssl/archs/solaris-x86-gcc/opensslconf.h
include/node/openssl/archs/solaris64-x86_64-gcc/opensslconf.h
 asn1.h
 asn1_mac.h
 asn1t.h
 bio.h
 blowfish.h
 bn.h
 buffer.h
 camellia.h
 cast.h
 cmac.h
 cms.h
 comp.h
 conf.h
 conf_api.h
 crypto.h
 des.h
 des_old.h
 dh.h
 dsa.h
 dso.h
 dtls1.h
 e_os2.h
 ebcdic.h
 ec.h
 ecdh.h
 ecdsa.h
 engine.h
 err.h
 evp.h
 hmac.h
 idea.h
 krb5_asn.h
 kssl.h
 lhash.h
 md4.h
 md5.h
 mdc2.h
 modes.h
 obj_mac.h
 objects.h
 ocsp.h
 opensslconf.h
 opensslv.h
 ossl_typ.h
 pem.h
 pem2.h
 pkcs12.h
 pkcs7.h
 pqueue.h
 rand.h
 rc2.h
 rc4.h
 ripemd.h
 rsa.h
 safestack.h
 seed.h
 sha.h
 srp.h
 srtp.h
 ssl.h
 ssl2.h
 ssl23.h
 ssl3.h
 stack.h
 symhacks.h
 tls1.h
 ts.h
 txt_db.h
 ui.h
 ui_compat.h
 whrlpool.h
 x509.h
 x509_vfy.h
 x509v3.h
include/node/
 v8-debug.h
 v8-inspector-protocol.h
 v8-inspector.h
 v8-platform.h
 v8-profiler.h
 v8-testing.h
 v8-util.h
 v8-value-serializer-version.h
 v8-version-string.h
 v8-version.h
 v8.h
 v8config.h
@(,,444) share/man/man1/node.1.gz
share/systemtap/tapset/node.stp


[FILE:53:manifests/plist.docs]
share/doc/node/
 gdbinit
 lldb_commands.py
 lldbinit


[FILE:874:patches/patch-configure]
--- configure.orig	2017-12-12 10:22:19 UTC
+++ configure
@@ -58,7 +58,7 @@ from gyp_node import run_gyp
 # parse our options
 parser = optparse.OptionParser()
 
-valid_os = ('win', 'mac', 'solaris', 'freebsd', 'openbsd', 'linux',
+valid_os = ('win', 'mac', 'solaris', 'freebsd', 'openbsd', 'linux', 'dragonfly',
             'android', 'aix', 'cloudabi')
 valid_arch = ('arm', 'arm64', 'ia32', 'mips', 'mipsel', 'mips64el', 'ppc',
               'ppc64', 'x32','x64', 'x86', 's390', 's390x')
@@ -1492,9 +1492,6 @@ if options.prefix:
 config = '\n'.join(map('='.join, config.iteritems())) + '\n'
 
 # On Windows there's no reason to search for a different python binary.
-bin_override = None if sys.platform == 'win32' else make_bin_override()
-if bin_override:
-  config = 'export PATH:=' + bin_override + ':$(PATH)\n' + config
 
 write('config.mk', do_not_edit + config)
 


[FILE:379:patches/patch-deps_v8_src_base_cpu.cc]
--- deps/v8/src/base/cpu.cc.orig	2017-12-12 10:22:24 UTC
+++ deps/v8/src/base/cpu.cc
@@ -607,6 +607,7 @@ CPU::CPU()
 
 #elif V8_HOST_ARCH_ARM64
 
+#if V8_OS_LINUX
   CPUInfo cpu_info;
 
   // Extract implementor from the "CPU implementer" field.
@@ -641,6 +642,8 @@ CPU::CPU()
     delete[] part;
   }
 
+#endif  // V8_OS_LINUX
+
 #elif V8_HOST_ARCH_PPC
 
 #ifndef USE_SIMULATOR


[FILE:394:patches/patch-tools_gyp_pylib_gyp_common.py]
--- tools/gyp/pylib/gyp/common.py.orig	2017-12-12 10:22:53 UTC
+++ tools/gyp/pylib/gyp/common.py
@@ -423,6 +423,8 @@ def GetFlavor(params):
     return 'solaris'
   if sys.platform.startswith('freebsd'):
     return 'freebsd'
+  if sys.platform.startswith('dragon'):
+    return 'freebsd'
   if sys.platform.startswith('openbsd'):
     return 'openbsd'
   if sys.platform.startswith('netbsd'):


[FILE:425:patches/patch-tools_install.py]
--- tools/install.py.orig	2017-12-12 10:22:53 UTC
+++ tools/install.py
@@ -149,7 +149,7 @@ def files(action):
   action(['deps/v8/tools/lldbinit'], 'share/doc/node/')
   action(['deps/v8/tools/lldb_commands.py'], 'share/doc/node/')
 
-  if 'freebsd' in sys.platform or 'openbsd' in sys.platform:
+  if 'skipme' in sys.platform:
     action(['doc/node.1'], 'man/man1/')
   else:
     action(['doc/node.1'], 'share/man/man1/')

