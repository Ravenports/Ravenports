# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		cups-filters
VERSION=		1.28.17
KEYWORDS=		print
VARIANTS=		standard
SDESC[standard]=	OpenPrinting CUPS filters
HOMEPAGE=		https://openprinting.github.io/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/OpenPrinting/cups-filters/releases/download/1.28.17/
			https://www.openprinting.org/download/cups-filters/
DISTFILE[1]=		cups-filters-1.28.17.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		fonts-dejavu:single:standard
			ghostscript:primary:standard
			poppler:cppdev:standard
			poppler:dev:standard
			openldap:dev:standard
			qpdf:dev:standard
			lcms2:dev:standard
			mupdf:tools:standard
BUILDRUN_DEPENDS=	libexif:primary:standard
			poppler:cpp:standard
			poppler:utils:standard
			openldap:client:standard
			qpdf:primary:standard
			lcms2:primary:standard
			cups:primary:standard

USES=			cpe gmake iconv libtool pkgconfig shebangfix
			fontconfig jpeg png tiff
GNOME_COMPONENTS=	glib

CPE_VENDOR=		linuxfoundation
FPC_EQUIVALENT=		print/cups-filters
SHEBANG_FILES=		filter/braille/drivers/generic/brftoembosser.in
			filter/braille/drivers/index/imageubrltoindexv3.in
			filter/braille/drivers/index/imageubrltoindexv4.in
			filter/braille/drivers/index/textbrftoindexv3.in
			filter/braille/filters/brftopagedbrf.in
			filter/braille/filters/imagetobrf.in
			filter/braille/filters/liblouis1.defs.gen.in
			filter/braille/filters/musicxmltobrf.in
			filter/braille/filters/texttobrf.in
			filter/braille/filters/vectortobrf.in
			filter/braille/filters/vectortopdf.in

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-shell=/bin/sh
			--with-pdftops-path="{{LOCALBASE}}/bin/pdftops"
			--with-test-font-path="{{LOCALBASE}}/share/fonts/dejavu/DejaVuSans.ttf"
			--disable-dbus
			--disable-avahi
			--disable-braille
			--enable-ghostscript
			--enable-exif
			--enable-imagefilters
			--enable-mutool
			--enable-poppler
			--enable-ldap
			--with-jpeg
			--with-png
			--with-tiff
			--with-browseremoteprotocols=cups
			--with-pdftops=hybrid

INSTALL_TARGET=		install-strip
SOVERSION=		1.0.0
RC_SUBR=		cups_browsed:primary

CXXFLAGS=		-std=c++17

post-install:
	${MV} ${STAGEDIR}${PREFIX}/etc/cups/cups-browsed.conf \
		${STAGEDIR}${PREFIX}/etc/cups/cups-browsed.conf.sample
	# worthless doc, keep it a single package
	${RM} -r ${STAGEDIR}${STD_DOCDIR}

pre-configure:
	${REINPLACE_CMD} -e 's|/usr/share|${PREFIX}/share|' \
		-e 's|/etc|${PREFIX}&|' \
		-e 's|README.gz|README|' \
		${WRKSRC}/utils/cups-browsed.8 \
		${WRKSRC}/utils/cups-browsed.conf.5 \
		${WRKSRC}/utils/driverless.1

[FILE:549:descriptions/desc.primary]
The CUPS Filters package contains backends, filters and other software
that was once part of the core CUPS distribution but is no longer
maintained by Apple Inc.  In addition it contains additional filters and
software developed independently of Apple, especially filters for the
PDF-centric printing workflow introduced by OpenPrinting and a daemon to
browse Bonjour broadcasts of remote CUPS printers to make these printers
available locally and to provide backward compatibility to the old CUPS
broadcasting and browsing of CUPS 1.5.x and older.


[FILE:106:distinfo]
270a3752a960368aa99d431fb5d34f4039b2ac943c576d840612d1d8185c9bb9      1516052 cups-filters-1.28.17.tar.xz


[FILE:1464:manifests/plist.primary]
@sample etc/cups/cups-browsed.conf.sample
bin/
 driverless
 driverless-fax
 foomatic-rip
lib/
 libcupsfilters.so.%%SOMAJOR%%
 libcupsfilters.so.%%SOVERSION%%
 libfontembed.so.%%SOMAJOR%%
 libfontembed.so.%%SOVERSION%%
libexec/cups/backend/
 beh
 driverless
 driverless-fax
 implicitclass
 parallel
 serial
libexec/cups/driver/
 driverless
 driverless-fax
libexec/cups/filter/
 bannertopdf
 commandtoescpx
 commandtopclx
 foomatic-rip
 gstopdf
 gstopxl
 gstoraster
 imagetopdf
 imagetops
 imagetoraster
 mupdftoraster
 pdftopdf
 pdftops
 pdftoraster
 rastertoescpx
 rastertopclm
 rastertopclx
 rastertopdf
 rastertops
 sys5ippprinter
 texttopdf
 texttops
 texttotext
sbin/cups-browsed
share/cups/banners/
 classified
 confidential
 form
 secret
 standard
 topsecret
 unclassified
share/cups/charsets/
 pdf.utf-8
 pdf.utf-8.heavy
 pdf.utf-8.simple
share/cups/data/
 classified.pdf
 confidential.pdf
 default-testpage.pdf
 default.pdf
 form_english.pdf
 form_english_in.odt
 form_russian.pdf
 form_russian_in.odt
 secret.pdf
 standard.pdf
 testprint
 topsecret.pdf
 unclassified.pdf
share/cups/drv/cupsfilters.drv
share/cups/mime/
 cupsfilters-ghostscript.convs
 cupsfilters-mupdf.convs
 cupsfilters-poppler.convs
 cupsfilters.convs
 cupsfilters.types
share/cups/ppdc/
 escp.h
 pcl.h
share/ppd/cupsfilters/
 Fuji_Xerox-DocuPrint_CM305_df-PDF.ppd
 Generic-PDF_Printer-PDF.ppd
 HP-Color_LaserJet_CM3530_MFP-PDF.ppd
 Ricoh-PDF_Printer-PDF.ppd
 pxlcolor.ppd
 pxlmono.ppd


[FILE:310:manifests/plist.dev]
include/cupsfilters/
 colord.h
 colormanager.h
 driver.h
 image.h
 ipp.h
 pdftoippprinter.h
 ppdgenerator.h
 raster.h
include/fontembed/
 bitset.h
 embed.h
 fontfile.h
 iofn.h
 sfnt.h
lib/
 libcupsfilters.a
 libcupsfilters.so
 libfontembed.a
 libfontembed.so
lib/pkgconfig/
 libcupsfilters.pc
 libfontembed.pc


[FILE:123:manifests/plist.man]
share/man/man1/
 driverless.1.gz
 foomatic-rip.1.gz
share/man/man5/cups-browsed.conf.5.gz
share/man/man8/cups-browsed.8.gz


[FILE:402:patches/patch-configure]
--- configure.orig	2023-01-25 01:41:19 UTC
+++ configure
@@ -23116,7 +23116,7 @@ RCSTOP="$rcstop"
 
 if test x$rcdir = x; then
 	case "`uname`" in
-		FreeBSD* | OpenBSD* | MirBSD* | ekkoBSD*)
+		FreeBSD* | OpenBSD* | MirBSD* | ekkoBSD* | DragonFly*)
 			# FreeBSD and OpenBSD
 			;;
 
@@ -23140,7 +23140,6 @@ if test x$rcdir = x; then
 
 		NetBSD*)
 			# NetBSD
-			INITDDIR="/etc/rc.d"
 			;;
 
 		*)


[FILE:707:patches/patch-cupsfilters_colormanager.c]
--- cupsfilters/colormanager.c.orig	2023-01-25 01:41:08 UTC
+++ cupsfilters/colormanager.c
@@ -26,6 +26,7 @@ MIT Open Source License  -  http://www.o
 */
 
 
+#include <config.h>
 #include "colormanager.h"
 #include <cupsfilters/colord.h>
 //#include <cupsfilters/kmdevices.h>
@@ -327,7 +328,7 @@ _get_ppd_icc_fallback (ppd_file_t *ppd,
     /* expand to a full path if not already specified */
     if (attr->value[0] != '/')
       snprintf(full_path, sizeof(full_path),
-               "%s/profiles/%s", CUPSDATA, attr->value);
+               "%s/profiles/%s", CUPS_DATADIR, attr->value);
     else {
       strncpy(full_path, attr->value, sizeof(full_path) - 1);
       if (strlen(attr->value) > 1023)


[FILE:275:patches/patch-filter_gstoraster.c]
--- filter/gstoraster.c.orig	2023-01-25 01:41:08 UTC
+++ filter/gstoraster.c
@@ -50,6 +50,8 @@ MIT Open Source License  -  http://www.o
 #include <errno.h>
 #include "pdf.h"
 
+#define execvpe(a, b, c) execvp(a, b)
+
 #define PDF_MAX_CHECK_COMMENT_LINES	20
 
 typedef enum {


[FILE:310:patches/patch-filter_mupdftoraster.c]
--- filter/mupdftoraster.c.orig	2023-01-25 01:41:08 UTC
+++ filter/mupdftoraster.c
@@ -50,6 +50,8 @@ MIT Open Source License  -  http://www.o
 #include <unistd.h>
 #include <errno.h>
 
+#define execvpe(a, b, c) execvp(a, b)
+
 #define PDF_MAX_CHECK_COMMENT_LINES	20
 
 #define CUPS_IPTEMPFILE "/tmp/ip-XXXXXX"


[FILE:531:patches/patch-utils_cups-browsed.c]
--- utils/cups-browsed.c.orig	2023-01-25 01:41:08 UTC
+++ utils/cups-browsed.c
@@ -23,17 +23,17 @@
 
 #include <ctype.h>
 #include <errno.h>
-#if defined(__OpenBSD__)
+#if defined(__OpenBSD__) || defined(__FreeBSD__)
 #include <sys/socket.h>
 #endif /* __OpenBSD__ */
 #include <sys/types.h>
 #include <net/if.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
-#include <ifaddrs.h>
 #include <resolv.h>
 #include <stdio.h>
 #include <sys/stat.h>
+#include <ifaddrs.h>
 #include <stdlib.h>
 #include <time.h>
 #include <signal.h>


[FILE:640:files/cups_browsed.in]
#!/bin/sh

# PROVIDE: cups_browsed
# REQUIRE: cupsd %%AVAHI_DAEMON%%
# KEYWORD: shutdown
#
# Add the following to /etc/rc.conf[.local] to enable this service
#
# cups_browsed_enable (bool):	Set to NO by default.
#				Set it to YES to enable cups_browsed.
#

. /etc/rc.subr

name=cups_browsed
rcvar=cups_browsed_enable

load_rc_config ${name}

: ${cups_browsed_enable:=NO}
: ${cups_browsed_flags:=}

pidfile=/var/run/cups-browsed.pid
command="%%PREFIX%%/sbin/cups-browsed"

start_cmd="${name}_start"

cups_browsed_start()
{
	echo -n "Starting ${name}."
	/usr/sbin/daemon -p ${pidfile} ${command} ${cups_browsed_flags}
}

run_rc_command "$1"

