# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-netbox-proxbox
VERSION=		0.0.5
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Proxmox plugin for Netbox (3.12)
SDESC[v13]=		Proxmox plugin for Netbox (3.13)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/bc/11/cac736f66095ca8bc958e596b33b0865aa9c8bc8aa69b6aa2f79c71a3c05
DISTFILE[1]=		netbox_proxbox-0.0.5-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		netbox_proxbox-0.0.5.dist-info

GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-proxmoxer:single:v12
					python-pynetbox:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-proxmoxer:single:v13
					python-pynetbox:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:1979:descriptions/desc.single]
<div align="center">
	
		[image]
	
	<br>
	
<div>
	
### [New Documentation available!]
</div>
<br>
</div>

## Netbox Plugin which integrates [Proxmox] and [Netbox]!

> **NOTE:** Although the Proxbox plugin is in development, it only use
**GET requests** and there is **no risk to harm your Proxmox environment**
by changing things incorrectly.

<br>

Proxbox is currently able to get the following information from Proxmox:

- **Cluster name**
- **Nodes:**
  - Status (online / offline)
  - Name
- **Virtual Machines and Containers:**
  - Status (online / offline)
  - Name
  - ID
  - CPU
  - Disk
  - Memory
  - Node (Server)

---

<div align="center">
	
### Versions

The following table shows the Netbox and Proxmox versions compatible
(tested) with Proxbox plugin.

| netbox version | proxmox version | proxbox version |
| ------------- |-------------|-------------|
| >= v3.4.0 | >= v6.2.0  | =v0.0.5 |
| >= v3.2.0 | >= v6.2.0 | =v0.0.4 |
| >= v3.0.0 < v3.2 | >= v6.2.0 | =v0.0.3 |

</div>

---

### Summary
[1. Installation]
- [1.1. Install package]
  - [1.1.1. Using pip (production use)]
  - [1.1.2. Using git (development use)]
- [1.2. Enable the Plugin]
- [1.3. Configure Plugin]
  - [1.3.1. Change Netbox 'configuration.py' to add PLUGIN parameters]
  - [1.3.2. Change Netbox 'settings.py' to include Proxbox Template
directory]
- [1.4. Run Database Migrations]
- [1.5 Restart WSGI Service]

[2. Configuration Parameters]

[3. Custom Fields]
- [3.1. Custom Field Configuration]
	- [3.1.1. Proxmox ID]
	- [3.1.2. Proxmox Node]
	- [3.1.3. Proxmox Type]
- [3.2. Custom Field Example]

[4. Usage]

[5. Contributing]

[6. Roadmap]

---

## 1. Installation

The instructions below detail the process for installing and enabling
Proxbox plugin.
The plugin is available as a Python package in pypi and can be installed
with pip.

### 1.1. Install package

#### 1.1.1. Using pip (production use)

Enter Netbox's virtual environment.
```
source /opt/netbox/venv/bin/activate
```


[FILE:116:distinfo]
7fa4a3cb7ceaa1f2f374ed2ffbf765457aa94e1b456df17023131dcb1c2f9cde        50709 netbox_proxbox-0.0.5-py3-none-any.whl

