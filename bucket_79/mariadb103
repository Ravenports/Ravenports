# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		mariadb103
VERSION=		10.3.31
KEYWORDS=		databases
VARIANTS=		standard
SDESC[standard]=	Fast SQL database server, derived from MySQL
HOMEPAGE=		https://mariadb.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://downloads.mariadb.com/MariaDB/mariadb-10.3.31/source/
DISTFILE[1]=		mariadb-10.3.31.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			server
			client
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		bison:primary:standard
BUILDRUN_DEPENDS=	boost-libraries:rest:python_used
			snappy:single:standard
			msgpack:single:standard
			judy:primary:standard
			krb5:primary:standard

USERS=			mysql
GROUPS=			mysql
USERGROUP_SPKG=		server

USES=			cmake zlib ssl readline ncurses shebangfix cpe
			python:build perl:build pkgconfig iconv:translit
			zstd lz4 lzo bz2 execinfo
GNOME_COMPONENTS=	libxml2

DISTNAME=		mariadb-10.3.31

LICENSE=		GPLv2:server
LICENSE_TERMS=		server:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^\#include"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/libmysqld/libmysqld.c
LICENSE_SCHEME=		solo

CPE_PRODUCT=		mariadb
CPE_VENDOR=		mariadb
FPC_EQUIVALENT=		databases/mariadb103-server
SHEBANG_FILES=		scripts/*.sh

INSTALL_REQ_TOOLCHAIN=	yes

CMAKE_ARGS=		-DCOMPILATION_COMMENT="Ravenports"
			-DINSTALL_INCLUDEDIR=include/mysql
			-DINSTALL_PLUGINDIR=lib/mysql/plugin
			-DINSTALL_SHAREDIR=share
			-DINSTALL_SUPPORTFILESDIR=share/mysql
			-DINSTALL_MYSQLSHAREDIR=share/mysql
			-DINSTALL_DOCREADMEDIR=share/doc/mariadb103
			-DINSTALL_DOCDIR=share/doc/mariadb103
			-DINSTALL_LIBDIR=lib/mysql
			-DINSTALL_MANDIR=share/man
			-DINSTALL_SCRIPTDIR=bin
			-DINSTALL_MYSQLTESTDIR=
			-DINSTALL_SQLBENCHDIR=
			-DDEFAULT_CHARSET=utf8mb4
			-DDEFAULT_COLLATION=utf8mb4_unicode_ci
			-DDEFAULT_SYSCONFDIR="{{PREFIX}}/etc"
			-DENABLED_LOCAL_INFILE=ON
			-DPLUGIN_EXAMPLE=NO
			-DPLUGIN_FEEDBACK=NO
			-DPLUGIN_TOKUDB=NO
			-DWITH_EMBEDDED_SERVER=ON
			-DWITH_EXTRA_CHARSETS=complex
			-DWITH_JEMALLOC=NO
			-DWITH_SYSTEMD=no
			-DWITH_LIBWRAP=OFF
			-DWITH_UNIT_TESTS=OFF
			-DWITH_READLINE=system
			-DWITH_SSL="{{OPENSSLBASE}}"
			-DWITH_ZLIB=system
			-DWITH_PCRE=bundled
			-Wno-dev
VAR_OPSYS[freebsd]=	CXXFLAGS=-DHAVE_POSIX_MEMALIGN=1

post-patch:
	${REINPLACE_CMD} 's|/usr/bin/env python|${PYTHON_CMD}|' \
		${WRKSRC}/CMakeLists.txt
	${REINPLACE_CMD} 's|%%PREFIX%%|${PREFIX}|g' \
		${WRKSRC}/mysys/my_default.c
	${REINPLACE_CMD} 's|%%LOCALBASE%%|${LOCALBASE}|g' \
		${WRKSRC}/scripts/mysql_config.sh \
		${WRKSRC}/scripts/CMakeLists.txt
	${CP} ${WRKSRC}/cmake/os/FreeBSD.cmake \
		${WRKSRC}/cmake/os/DragonFly.cmake

post-install:
	${RM} ${STAGEDIR}${STD_DOCDIR}/COPYING
	${MV} ${STAGEDIR}${PREFIX}/lib/mysql/pkgconfig/mariadb.pc \
		${STAGEDIR}${PREFIX}/lib/pkgconfig/
	${RMDIR} ${STAGEDIR}${PREFIX}/lib/mysql/pkgconfig
	# strip plugins and libraries
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/mysql/libmariadb.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/mysql/libmariadbd.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/mysql/plugin/*.so
	# strip binaries
	@flist=$$(${FIND} ${STAGEDIR}${PREFIX}/bin -type f -perm /111 -print) ;\
	for f in $$flist; do \
		(${FILE} $$f | ${GREP} -Fq ", not stripped")\
		&& ${ECHO_CMD} "Auto-stripping $$f"\
		&& ${STRIP_CMD} $$f || ${TRUE} ;\
	done

post-configure:
	${REINPLACE_CMD} -Ee 's|(#define INCLUDE.*)"$$|\1 -I${PREFIX}/include"|' \
		-e 's|(#define LIBS .*)"$$|\1 -L${PREFIX}/lib"|' \
		${BUILD_WRKSRC}/libmariadb/mariadb_config/mariadb_config.c
	${REINPLACE_CMD} -e 's| ${PREFIX}/lib/liblz4.so\(.* ${PREFIX}/lib/liblz4.so.*\)|\1|' \
		-e 's| ${PREFIX}/lib/liblzo2.so\(.* ${PREFIX}/lib/liblzo2.so.*\)|\1|' \
		-e 's| ${PREFIX}/lib/libsnappy.so\(.* ${PREFIX}/lib/libsnappy.so\)|\1|' \
		-e 's| -llzma\(.* -llzma\)|\1|;s| -lbz2\(.* -lbz2\)|\1|;' \
		${BUILD_WRKSRC}/extra/mariabackup/CMakeFiles/mbstream.dir/link.txt

[FILE:807:descriptions/desc.server]
MariaDB Server is one of the most popular database servers in the world.
It's made by the original developers of MySQL and guaranteed to stay open
source. Notable users include Wikipedia, WordPress.com and Google.

MariaDB turns data into structured information in a wide array of
applications, ranging from banking to websites. It is an enhanced, drop-in
replacement for MySQL. MariaDB is used because it is fast, scalable and
robust, with a rich ecosystem of storage engines, plugins and many other
tools make it very versatile for a wide variety of use cases.

MariaDB is developed as open source software and as a relational database
it provides an SQL interface for accessing data. The latest versions of
MariaDB also include GIS and JSON features.

This package contains the server and related files.


[FILE:267:descriptions/desc.client]
MariaDB Server is one of the most popular database servers in the world.
It's made by the original developers of MySQL and guaranteed to stay open
source. Notable users include Wikipedia, WordPress.com and Google.

This package contains the client and related files.


[FILE:101:distinfo]
20421dfe5750f510ab0ee23420337332e6799cd38fa31332e2841dfa956eb771     73298653 mariadb-10.3.31.tar.gz


[FILE:9718:manifests/plist.server]
%%ONLY-LINUX%%lib/mysql/plugin/disks.so
bin/
 aria_chk
 aria_dump_log
 aria_ftdump
 aria_pack
 aria_read_log
 innochecksum
 mariabackup
 mbstream
 my_print_defaults
 myisam_ftdump
 myisamchk
 myisamlog
 myisampack
 myrocks_hotbackup
 mysql_client_test
 mysql_client_test_embedded
 mysql_embedded
 mysql_fix_extensions
 mysql_install_db
 mysql_ldb
 mysql_plugin
 mysql_secure_installation
 mysql_tzinfo_to_sql
 mysql_upgrade
 mysql_waitpid
 mysqld
 mysqld_multi
 mysqld_safe
 mysqld_safe_helper
 mysqldumpslow
 mysqltest
 mysqltest_embedded
 perror
 resolve_stack_dump
 resolveip
 sst_dump
 test-connect-t
 wsrep_sst_common
 wsrep_sst_mariabackup
 wsrep_sst_mysqldump
 wsrep_sst_rsync
 wsrep_sst_rsync_wan
include/mysql/server/
 big_endian.h
 byte_order_generic.h
 byte_order_generic_x86.h
 byte_order_generic_x86_64.h
 decimal.h
 errmsg.h
 handler_ername.h
 handler_state.h
 json_lib.h
 keycache.h
 little_endian.h
 m_ctype.h
 m_string.h
 ma_dyncol.h
 my_alloc.h
 my_attribute.h
 my_byteorder.h
 my_compiler.h
 my_config.h
 my_dbug.h
 my_decimal_limits.h
 my_dir.h
 my_getopt.h
 my_global.h
 my_list.h
 my_net.h
 my_pthread.h
 my_sys.h
 my_valgrind.h
 my_xml.h
 mysql.h
 mysql_com.h
 mysql_com_server.h
 mysql_embed.h
 mysql_time.h
 mysql_version.h
 mysqld_ername.h
 mysqld_error.h
 pack.h
 sql_common.h
 sql_state.h
 sslopt-case.h
 sslopt-longopts.h
 sslopt-vars.h
 typelib.h
include/mysql/server/mysql/
 auth_dialog_client.h
 client_plugin.h
 plugin.h
 plugin_audit.h
 plugin_auth.h
 plugin_auth_common.h
 plugin_encryption.h
 plugin_ftparser.h
 plugin_password_validation.h
 service_base64.h
 service_debug_sync.h
 service_encryption.h
 service_encryption_scheme.h
 service_kill_statement.h
 service_logger.h
 service_md5.h
 service_my_crypt.h
 service_my_print_error.h
 service_my_snprintf.h
 service_progress_report.h
 service_sha1.h
 service_sha2.h
 service_thd_alloc.h
 service_thd_autoinc.h
 service_thd_error_context.h
 service_thd_rnd.h
 service_thd_specifics.h
 service_thd_timezone.h
 service_thd_wait.h
 service_wsrep.h
 services.h
include/mysql/server/mysql/psi/
 mysql_file.h
 mysql_idle.h
 mysql_socket.h
 mysql_stage.h
 mysql_statement.h
 mysql_table.h
 mysql_thread.h
 psi.h
 psi_abi_v0.h
 psi_abi_v1.h
 psi_abi_v2.h
 psi_base.h
 psi_memory.h
include/mysql/server/private/
 authors.h
 bounded_queue.h
 client_settings.h
 compat56.h
 config.h
 contributors.h
 create_options.h
 custom_conf.h
 datadict.h
 debug_sync.h
 derror.h
 des_key_file.h
 discover.h
 dur_prop.h
 embedded_priv.h
 event_data_objects.h
 event_db_repository.h
 event_parse_data.h
 event_queue.h
 event_scheduler.h
 events.h
 field.h
 field_comp.h
 filesort.h
 filesort_utils.h
 ft_global.h
 gcalc_slicescan.h
 gcalc_tools.h
 group_by_handler.h
 gstream.h
 ha_partition.h
 ha_sequence.h
 handler.h
 hash.h
 hash_filo.h
 heap.h
 hostname.h
 ilist.h
 init.h
 innodb_priv.h
 item.h
 item_cmpfunc.h
 item_create.h
 item_func.h
 item_geofunc.h
 item_inetfunc.h
 item_jsonfunc.h
 item_row.h
 item_strfunc.h
 item_subselect.h
 item_sum.h
 item_timefunc.h
 item_vers.h
 item_windowfunc.h
 item_xmlfunc.h
 key.h
 keycaches.h
 lex.h
 lex_string.h
 lex_symbol.h
 lf.h
 lock.h
 log.h
 log_event.h
 log_event_old.h
 log_slow.h
 maria.h
 mariadb.h
 mdl.h
 mem_root_array.h
 message.h
 multi_range_read.h
 my_alarm.h
 my_apc.h
 my_atomic.h
 my_base.h
 my_bit.h
 my_bitmap.h
 my_check_opt.h
 my_compare.h
 my_context.h
 my_cpu.h
 my_crypt.h
 my_decimal.h
 my_default.h
 my_handler_errors.h
 my_json_writer.h
 my_libwrap.h
 my_md5.h
 my_nosys.h
 my_rdtsc.h
 my_rnd.h
 my_service_manager.h
 my_stacktrace.h
 my_time.h
 my_tree.h
 my_uctype.h
 my_user.h
 myisam.h
 myisamchk.h
 myisammrg.h
 myisampack.h
 mysql_async.h
 mysqld.h
 mysqld_default_groups.h
 mysqld_suffix.h
 mysys_err.h
 nt_servc.h
 opt_range.h
 opt_subselect.h
 parse_file.h
 partition_element.h
 partition_info.h
 password.h
 pcre.h
 probes_mysql.h
 probes_mysql_nodtrace.h
 procedure.h
 protocol.h
 proxy_protocol.h
 queues.h
 records.h
 repl_failsafe.h
 replication.h
 rijndael.h
 rpl_constants.h
 rpl_filter.h
 rpl_gtid.h
 rpl_injector.h
 rpl_mi.h
 rpl_parallel.h
 rpl_record.h
 rpl_record_old.h
 rpl_reporting.h
 rpl_rli.h
 rpl_tblmap.h
 rpl_utility.h
 scheduler.h
 semisync.h
 semisync_master.h
 semisync_master_ack_receiver.h
 semisync_slave.h
 service_versions.h
 session_tracker.h
 set_var.h
 slave.h
 source_revision.h
 sp.h
 sp_cache.h
 sp_head.h
 sp_pcontext.h
 sp_rcontext.h
 span.h
 spatial.h
 sql_acl.h
 sql_admin.h
 sql_alloc.h
 sql_alter.h
 sql_analyse.h
 sql_analyze_stmt.h
 sql_array.h
 sql_audit.h
 sql_base.h
 sql_basic_types.h
 sql_binlog.h
 sql_bitmap.h
 sql_bootstrap.h
 sql_cache.h
 sql_callback.h
 sql_class.h
 sql_cmd.h
 sql_connect.h
 sql_const.h
 sql_crypt.h
 sql_cte.h
 sql_cursor.h
 sql_db.h
 sql_delete.h
 sql_derived.h
 sql_digest.h
 sql_digest_stream.h
 sql_do.h
 sql_error.h
 sql_explain.h
 sql_expression_cache.h
 sql_get_diagnostics.h
 sql_handler.h
 sql_help.h
 sql_hset.h
 sql_insert.h
 sql_join_cache.h
 sql_lex.h
 sql_lifo_buffer.h
 sql_list.h
 sql_load.h
 sql_locale.h
 sql_manager.h
 sql_mode.h
 sql_parse.h
 sql_partition.h
 sql_partition_admin.h
 sql_plist.h
 sql_plugin.h
 sql_plugin_compat.h
 sql_prepare.h
 sql_priv.h
 sql_profile.h
 sql_reload.h
 sql_rename.h
 sql_repl.h
 sql_schema.h
 sql_select.h
 sql_sequence.h
 sql_servers.h
 sql_show.h
 sql_signal.h
 sql_sort.h
 sql_statistics.h
 sql_string.h
 sql_table.h
 sql_tablespace.h
 sql_test.h
 sql_time.h
 sql_trigger.h
 sql_truncate.h
 sql_tvc.h
 sql_type.h
 sql_type_int.h
 sql_type_real.h
 sql_udf.h
 sql_union.h
 sql_update.h
 sql_view.h
 sql_window.h
 ssl_compat.h
 strfunc.h
 structs.h
 sys_vars_shared.h
 t_ctype.h
 table.h
 table_cache.h
 thr_alarm.h
 thr_lock.h
 thr_malloc.h
 thr_timer.h
 thread_pool_priv.h
 threadpool.h
 transaction.h
 tzfile.h
 tztime.h
 uniques.h
 unireg.h
 vers_string.h
 vers_utils.h
 violite.h
 waiting_threads.h
 welcome_copyright_notice.h
 win_tzname_data.h
 winservice.h
 wqueue.h
 wsrep.h
 wsrep_applier.h
 wsrep_binlog.h
 wsrep_mysqld.h
 wsrep_mysqld_c.h
 wsrep_priv.h
 wsrep_sst.h
 wsrep_thd.h
 wsrep_utils.h
 wsrep_var.h
 wsrep_xid.h
include/mysql/server/private/atomic/
 gcc_builtins.h
 gcc_sync.h
 generic-msvc.h
 solaris.h
lib/mysql/
 libmariadbd.a
 libmariadbd.so
 libmariadbd.so.19
 libmysqld.a
 libmysqld.so
lib/mysql/plugin/
 adt_null.so
 auth_0x0100.so
 auth_ed25519.so
 auth_gssapi.so
 auth_gssapi_client.so
 auth_socket.so
 auth_test_plugin.so
 caching_sha2_password.so
 debug_key_management.so
 dialog_examples.so
 example_key_management.so
 file_key_management.so
 ha_archive.so
 ha_blackhole.so
 ha_connect.so
 ha_federated.so
 ha_federatedx.so
 ha_mroonga.so
 ha_oqgraph.so
 ha_rocksdb.so
 ha_sphinx.so
 ha_spider.so
 ha_test_sql_discovery.so
 handlersocket.so
 libdaemon_example.so
 locales.so
 metadata_lock_info.so
 mypluglib.so
 qa_auth_client.so
 qa_auth_interface.so
 qa_auth_server.so
 query_cache_info.so
 query_response_time.so
 server_audit.so
 simple_password_check.so
 sql_errlog.so
 test_versioning.so
 wsrep_info.so
share/aclocal/mysql.m4
share/groonga/
 COPYING
 README.md
share/groonga-normalizer-mysql/
 README.md
 lgpl-2.0.txt
share/man/man1/
 aria_chk.1.gz
 aria_dump_log.1.gz
 aria_ftdump.1.gz
 aria_pack.1.gz
 aria_read_log.1.gz
 galera_new_cluster.1.gz
 galera_recovery.1.gz
 innochecksum.1.gz
 mariabackup.1.gz
 mariadb-service-convert.1.gz
 mbstream.1.gz
 my_print_defaults.1.gz
 myisam_ftdump.1.gz
 myisamchk.1.gz
 myisamlog.1.gz
 myisampack.1.gz
 mysql.server.1.gz
 mysql_client_test.1.gz
 mysql_client_test_embedded.1.gz
 mysql_embedded.1.gz
 mysql_fix_extensions.1.gz
 mysql_install_db.1.gz
 mysql_ldb.1.gz
 mysql_secure_installation.1.gz
 mysql_tzinfo_to_sql.1.gz
 mysql_upgrade.1.gz
 mysqld_multi.1.gz
 mysqld_safe.1.gz
 mysqld_safe_helper.1.gz
 mysqldumpslow.1.gz
 mysqltest.1.gz
 mysqltest_embedded.1.gz
 perror.1.gz
 resolve_stack_dump.1.gz
 resolveip.1.gz
 wsrep_sst_common.1.gz
 wsrep_sst_mariabackup.1.gz
 wsrep_sst_mysqldump.1.gz
 wsrep_sst_rsync.1.gz
 wsrep_sst_rsync_wan.1.gz
share/man/man8/mysqld.8.gz
share/mysql/
 binary-configure
 errmsg-utf8.txt
 fill_help_tables.sql
 install_spider.sql
 magic
 maria_add_gis_sp.sql
 maria_add_gis_sp_bootstrap.sql
 mysql-log-rotate
 mysql.server
 mysql_performance_tables.sql
 mysql_system_tables.sql
 mysql_system_tables_data.sql
 mysql_test_data_timezone.sql
 mysql_test_db.sql
 mysqld_multi.server
 wsrep.cnf
 wsrep_notify
share/mysql/charsets/
 Index.xml
 README
 armscii8.xml
 ascii.xml
 cp1250.xml
 cp1251.xml
 cp1256.xml
 cp1257.xml
 cp850.xml
 cp852.xml
 cp866.xml
 dec8.xml
 geostd8.xml
 greek.xml
 hebrew.xml
 hp8.xml
 keybcs2.xml
 koi8r.xml
 koi8u.xml
 latin1.xml
 latin2.xml
 latin5.xml
 latin7.xml
 macce.xml
 macroman.xml
 swe7.xml
share/mysql/czech/errmsg.sys
share/mysql/danish/errmsg.sys
share/mysql/data/test/db.opt
share/mysql/dutch/errmsg.sys
share/mysql/english/errmsg.sys
share/mysql/estonian/errmsg.sys
share/mysql/french/errmsg.sys
share/mysql/german/errmsg.sys
share/mysql/greek/errmsg.sys
share/mysql/hindi/errmsg.sys
share/mysql/hungarian/errmsg.sys
share/mysql/italian/errmsg.sys
share/mysql/japanese/errmsg.sys
share/mysql/korean/errmsg.sys
share/mysql/mroonga/
 AUTHORS
 COPYING
 install.sql
 uninstall.sql
share/mysql/norwegian/errmsg.sys
share/mysql/norwegian-ny/errmsg.sys
share/mysql/policy/apparmor/
 README
 usr.sbin.mysqld
 usr.sbin.mysqld.local
share/mysql/policy/selinux/
 README
 mariadb-server.fc
 mariadb-server.te
 mariadb.te
share/mysql/polish/errmsg.sys
share/mysql/portuguese/errmsg.sys
share/mysql/romanian/errmsg.sys
share/mysql/russian/errmsg.sys
share/mysql/serbian/errmsg.sys
share/mysql/slovak/errmsg.sys
share/mysql/spanish/errmsg.sys
share/mysql/swedish/errmsg.sys
share/mysql/ukrainian/errmsg.sys


[FILE:1341:manifests/plist.client]
bin/
 mariadb_config
 msql2mysql
 mysql
 mysql_config
 mysql_convert_table_format
 mysql_find_rows
 mysql_setpermission
 mysqlaccess
 mysqladmin
 mysqlbinlog
 mysqlcheck
 mysqldump
 mysqlhotcopy
 mysqlimport
 mysqlshow
 mysqlslap
 mytop
 replace
include/mysql/
 errmsg.h
 ma_list.h
 ma_pvio.h
 ma_tls.h
 mariadb_com.h
 mariadb_ctype.h
 mariadb_dyncol.h
 mariadb_rpl.h
 mariadb_stmt.h
 mariadb_version.h
 my_config.h
 my_global.h
 my_sys.h
 mysql.h
 mysql_com.h
 mysql_version.h
 mysqld_error.h
include/mysql/mariadb/ma_io.h
include/mysql/mysql/
 client_plugin.h
 plugin_auth.h
 plugin_auth_common.h
lib/mysql/
 libmariadb.so
 libmariadb.so.3
 libmariadbclient.a
 libmysqlclient.a
 libmysqlclient.so
 libmysqlclient_r.a
 libmysqlclient_r.so
 libmysqlservices.a
lib/mysql/plugin/
 client_ed25519.so
 daemon_example.ini
 dialog.so
 mysql_clear_password.so
 sha256_password.so
lib/pkgconfig/
 libmariadb.pc
 mariadb.pc
share/man/man1/
 msql2mysql.1.gz
 my_safe_process.1.gz
 mysql-stress-test.pl.1.gz
 mysql-test-run.pl.1.gz
 mysql.1.gz
 mysql_config.1.gz
 mysql_convert_table_format.1.gz
 mysql_find_rows.1.gz
 mysql_plugin.1.gz
 mysql_setpermission.1.gz
 mysql_waitpid.1.gz
 mysqlaccess.1.gz
 mysqladmin.1.gz
 mysqlbinlog.1.gz
 mysqlcheck.1.gz
 mysqldump.1.gz
 mysqlhotcopy.1.gz
 mysqlimport.1.gz
 mysqlshow.1.gz
 mysqlslap.1.gz
 replace.1.gz


[FILE:84:manifests/plist.docs]
share/doc/mariadb103/
 CREDITS
 INSTALL-BINARY
 README-wsrep
 README.md
 THIRDPARTY


[FILE:328:patches/patch-MDEV-20248]
--- storage/rocksdb/rocksdb/port/jemalloc_helper.h.orig	2021-08-02 10:59:00 UTC
+++ storage/rocksdb/rocksdb/port/jemalloc_helper.h
@@ -26,6 +26,10 @@
 #include <jemalloc/jemalloc.h>
 #endif
 
+#ifdef __FreeBSD__
+#define JEMALLOC_USABLE_SIZE_CONST const
+#endif
+
 #ifndef JEMALLOC_CXX_THROW
 #define JEMALLOC_CXX_THROW
 #endif


[FILE:5065:patches/patch-MDEV-26537]
From d09426f9e60fd93296464ec9eb5f9d85566437d3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marko=20M=C3=A4kel=C3=A4?= <marko.makela@mariadb.com>
Date: Fri, 10 Sep 2021 19:15:41 +0300
Subject: [PATCH] MDEV-26537 InnoDB corrupts files due to incorrect st_blksize
 calculation

The st_blksize returned by fstat(2) is not documented to be
a power of 2, like we assumed in
commit 58252fff15acfe7c7b0452a87e202e3f8e454e19 (MDEV-26040).
While on Linux, the st_blksize appears to report the file system
block size (which hopefully is not smaller than the sector size
of the underlying block device), on FreeBSD we observed
st_blksize values that might have been something similar to st_size.

Also IBM AIX was affected by this. A simple test case would
lead to a crash when using the minimum innodb_buffer_pool_size=5m
on both FreeBSD and AIX:

seq -f 'create table t%g engine=innodb select * from seq_1_to_200000;' \
1 100|mysql test&
seq -f 'create table u%g engine=innodb select * from seq_1_to_200000;' \
1 100|mysql test&

We will fix this by not trusting st_blksize at all, and assuming that
the smallest allowed write size (for O_DIRECT) is 4096 bytes. We hope
that no storage systems with larger block size exist. Anything larger
than 4096 bytes should be unlikely, given that it is the minimum
virtual memory page size of many contemporary processors.

MariaDB Server on Microsoft Windows was not affected by this.

While the 512-byte sector size of the venerable Seagate ST-225 is still
in widespread use, the minimum innodb_page_size is 4096 bytes, and
innodb_log_file_size can be set in integer multiples of 65536 bytes.

The only occasion where InnoDB uses smaller data file block sizes than
4096 bytes is with ROW_FORMAT=COMPRESSED tables with KEY_BLOCK_SIZE=1
or KEY_BLOCK_SIZE=2 (or innodb_page_size=4096). For such tables,
we will from now on preallocate space in integer multiples of 4096 bytes
and let regular writes extend the file by 1024, 2048, or 3072 bytes.

The view INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES.FS_BLOCK_SIZE
should report the raw st_blksize.

For page_compressed tables, the function fil_space_get_block_size()
will map to 512 any st_blksize value that is larger than 4096.

os_file_set_size(): Assume that the file system block size is 4096 bytes,
and only support extending files to integer multiples of 4096 bytes.

fil_space_extend_must_retry(): Round down the preallocation size to
an integer multiple of 4096 bytes.
--- mysql-test/suite/innodb/t/check_ibd_filesize.test.orig	2021-08-02 10:58:56 UTC
+++ mysql-test/suite/innodb/t/check_ibd_filesize.test
@@ -46,6 +46,12 @@ perl;
 print "# bytes: ", (-s "$ENV{MYSQLD_DATADIR}/test/t1.ibd"), "\n";
 EOF
 INSERT INTO t1 SELECT seq,REPEAT('a',30000) FROM seq_1_to_20;
+# Ensure that the file will be extended with the last 1024-byte page
+# after the file was pre-extended in 4096-byte increments.
+--disable_query_log
+FLUSH TABLE t1 FOR EXPORT;
+UNLOCK TABLES;
+--enable_query_log
 perl;
 print "# bytes: ", (-s "$ENV{MYSQLD_DATADIR}/test/t1.ibd"), "\n";
 EOF
--- storage/innobase/fil/fil0fil.cc.orig	2021-08-02 10:58:57 UTC
+++ storage/innobase/fil/fil0fil.cc
@@ -942,11 +942,17 @@ fil_space_extend_must_retry(
 	const page_size_t	pageSize(space->flags);
 	const ulint		page_size = pageSize.physical();
 
-	/* fil_read_first_page() expects srv_page_size bytes.
-	fil_node_open_file() expects at least 4 * srv_page_size bytes.*/
-	os_offset_t new_size = std::max(
-		os_offset_t(size - file_start_page_no) * page_size,
+		/* fil_read_first_page() expects innodb_page_size bytes.
+		fil_node_open_file() expects at least 4 * innodb_page_size bytes.
+		os_file_set_size() expects multiples of 4096 bytes.
+		For ROW_FORMAT=COMPRESSED tables using 1024-byte or 2048-byte
+		pages, we will preallocate up to an integer multiple of 4096 bytes,
+		and let normal writes append 1024, 2048, or 3072 bytes to the file. */
+		os_offset_t new_size = std::max(
+		(os_offset_t(size - file_start_page_no) * page_size)
+		& ~os_offset_t(4095),
 		os_offset_t(FIL_IBD_FILE_INITIAL_SIZE << srv_page_size_shift));
+		
 
 	*success = os_file_set_size(node->name, node->handle, new_size,
 		FSP_FLAGS_HAS_PAGE_COMPRESSION(space->flags));
--- storage/innobase/os/os0file.cc.orig	2021-08-02 10:58:57 UTC
+++ storage/innobase/os/os0file.cc
@@ -5351,6 +5351,8 @@ os_file_set_size(
 	os_offset_t	size,
 	bool	is_sparse)
 {
+	ut_ad(!(size & 4095));
+
 #ifdef _WIN32
 	/* On Windows, changing file size works well and as expected for both
 	sparse and normal files.
@@ -5392,7 +5394,7 @@ fallback:
 			if (current_size >= size) {
 				return true;
 			}
-			current_size &= ~os_offset_t(statbuf.st_blksize - 1);
+			current_size &= ~4095ULL;
 			err = posix_fallocate(file, current_size,
 					      size - current_size);
 		}
@@ -5432,8 +5434,7 @@ fallback:
 	if (fstat(file, &statbuf)) {
 		return false;
 	}
-	os_offset_t current_size = statbuf.st_size
-		& ~os_offset_t(statbuf.st_blksize - 1);
+	os_offset_t current_size = statbuf.st_size & ~4095ULL;
 #endif
 	if (current_size >= size) {
 		return true;


[FILE:572:patches/patch-client_mysql.cc]
--- client/mysql.cc.orig	2021-08-02 10:58:55 UTC
+++ client/mysql.cc
@@ -61,8 +61,8 @@ static char *server_version= NULL;
 
 extern "C" {
 #if defined(HAVE_CURSES_H) && defined(HAVE_TERM_H)
-#include <curses.h>
-#include <term.h>
+#include <ncurses/curses.h>
+#include <ncurses/term.h>
 #else
 #if defined(HAVE_TERMIOS_H)
 #include <termios.h>
@@ -81,7 +81,7 @@ extern "C" {
 #endif
 #undef SYSV				// hack to avoid syntax error
 #ifdef HAVE_TERM_H
-#include <term.h>
+#include <ncurses/term.h>
 #endif
 #endif
 #endif /* defined(HAVE_CURSES_H) && defined(HAVE_TERM_H) */


[FILE:1966:patches/patch-cmake_readline.cmake]
--- cmake/readline.cmake.orig	2021-08-02 10:58:55 UTC
+++ cmake/readline.cmake
@@ -52,40 +52,17 @@ MACRO (MYSQL_CHECK_MULTIBYTE)
 ENDMACRO()
 
 MACRO (FIND_CURSES)
+ SET(CURSES_NEED_NCURSES True)
  FIND_PACKAGE(Curses REQUIRED)
  MARK_AS_ADVANCED(CURSES_CURSES_H_PATH CURSES_FORM_LIBRARY CURSES_HAVE_CURSES_H)
  IF(NOT CURSES_FOUND)
    SET(ERRORMSG "Curses library not found. Please install appropriate package,
     remove CMakeCache.txt and rerun cmake.")
-   IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
-    SET(ERRORMSG ${ERRORMSG} 
-    "On Debian/Ubuntu, package name is libncurses5-dev, on Redhat and derivates " 
-    "it is ncurses-devel.")
-   ENDIF()
    MESSAGE(FATAL_ERROR ${ERRORMSG})
  ENDIF()
 
- IF(CURSES_HAVE_CURSES_H)
-   SET(HAVE_CURSES_H 1 CACHE INTERNAL "")
- ENDIF()
- IF(CMAKE_SYSTEM_NAME MATCHES "HP")
-   # CMake uses full path to library /lib/libcurses.sl 
-   # On Itanium, it results into architecture mismatch+
-   # the library is for  PA-RISC
-   SET(CURSES_LIBRARY "curses" CACHE INTERNAL "" FORCE)
- ENDIF()
+ SET(HAVE_CURSES_H 1 CACHE INTERNAL "")
 
- IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
-   # -Wl,--as-needed breaks linking with -lcurses, e.g on Fedora 
-   # Lower-level libcurses calls are exposed by libtinfo
-   CHECK_LIBRARY_EXISTS(${CURSES_LIBRARY} tputs "" HAVE_TPUTS_IN_CURSES)
-   IF(NOT HAVE_TPUTS_IN_CURSES)
-     CHECK_LIBRARY_EXISTS(tinfo tputs "" HAVE_TPUTS_IN_TINFO)
-     IF(HAVE_TPUTS_IN_TINFO)
-       SET(CURSES_LIBRARY tinfo)
-     ENDIF()
-   ENDIF() 
- ENDIF()
  CHECK_LIBRARY_EXISTS(${CURSES_LIBRARY} setupterm "" HAVE_SETUPTERM)
  CHECK_LIBRARY_EXISTS(${CURSES_LIBRARY} vidattr "" HAVE_VIDATTR)
 ENDMACRO()
@@ -207,6 +184,8 @@ MACRO (MYSQL_CHECK_READLINE)
     SET(CMAKE_REQUIRED_LIBRARIES)
     SET(CMAKE_REQUIRED_INCLUDES)
   ENDIF(NOT WIN32)
+  SET(CMAKE_REQUIRED_INCLUDES ${CURSES_INCLUDE_DIR}/ncurses)
   CHECK_INCLUDE_FILES ("curses.h;term.h" HAVE_TERM_H)
+  SET(CMAKE_REQUIRED_INCLUDES)
 ENDMACRO()
 


[FILE:349:patches/patch-extra_readline_CMakeLists.txt]
--- extra/readline/CMakeLists.txt.orig	2021-08-02 10:58:55 UTC
+++ extra/readline/CMakeLists.txt
@@ -56,4 +56,4 @@ ADD_LIBRARY(readline STATIC
 
 # Declare dependency
 # so every executable that links with readline links with curses as well
-TARGET_LINK_LIBRARIES(readline ${CURSES_LIBRARY})
+TARGET_LINK_LIBRARIES(readline ${CURSES_LIBRARY} tinfo)


[FILE:1672:patches/patch-mysys_my__default.c]
--- mysys/my_default.c.orig	2021-08-02 10:58:57 UTC
+++ mysys/my_default.c
@@ -784,7 +784,7 @@ static int search_default_file_with_ext(
   {
     MY_STAT stat_info;
     if (!my_stat(name,&stat_info,MYF(0)))
-      return 1;
+      return 0;
     /*
       Ignore world-writable regular files.
       This is mainly done to protect us to not read a file created by
@@ -802,6 +802,14 @@ static int search_default_file_with_ext(
   if (!(fp= mysql_file_fopen(key_file_cnf, name, O_RDONLY, MYF(0))))
     return 1;					/* Ignore wrong files */
 
+  if (strstr(name, "/etc") == name)
+  {
+    fprintf(stderr,
+             "error: Config file %s in invalid location, please move to or merge with %%PREFIX%%%s\n",
+             name,name);
+      goto err;
+  }
+
   while (mysql_file_fgets(buff, sizeof(buff) - 1, fp))
   {
     line++;
@@ -1076,7 +1084,8 @@ void my_print_default_files(const char *
           if (name[0] == FN_HOMELIB)	/* Add . to filenames in home */
             *end++= '.';
           strxmov(end, conf_file, *ext, " ", NullS);
-          fputs(name, stdout);
+          if (strstr(name, "/etc") != name)
+            fputs(name, stdout);
         }
       }
     }
@@ -1203,13 +1212,10 @@ static const char **init_default_directo
 
 #else
 
-#if defined(DEFAULT_SYSCONFDIR)
-  if (DEFAULT_SYSCONFDIR[0])
-    errors += add_directory(alloc, DEFAULT_SYSCONFDIR, dirs);
-#else
   errors += add_directory(alloc, "/etc/", dirs);
   errors += add_directory(alloc, "/etc/mysql/", dirs);
-#endif /* DEFAULT_SYSCONFDIR */
+  errors += add_directory(alloc, "%%PREFIX%%/etc/", dirs);
+  errors += add_directory(alloc, "%%PREFIX%%/etc/mysql/", dirs);
 
 #endif
 


[FILE:1167:patches/patch-oqgraph-MDEV-15291]
--- storage/oqgraph/oqgraph_judy.cc.orig	2021-08-02 10:58:58 UTC
+++ storage/oqgraph/oqgraph_judy.cc
@@ -27,7 +27,7 @@
 /*
   Currently the only active code that can return error is:
     judy_bitset::reset()/J1U()
-    judy_bitset::setbit()/J1S()
+    judy_bitset::jsetbit()/J1S()
 
   In most cases errors are either about wrong parameters passed to Judy
   functions or internal structures corruption. These definitely deserve
@@ -60,7 +60,7 @@ bool open_query::judy_bitset::test(size_
   return rc == 1;
 }
 
-open_query::judy_bitset& open_query::judy_bitset::setbit(size_type n)
+open_query::judy_bitset& open_query::judy_bitset::jsetbit(size_type n)
 {
   int rc;
   J1S(rc, array, n);
--- storage/oqgraph/oqgraph_judy.h.orig	2021-08-02 10:58:58 UTC
+++ storage/oqgraph/oqgraph_judy.h
@@ -63,7 +63,7 @@ namespace open_query
       if (!val)
         return reset(n);
       else
-        return setbit(n);
+        return jsetbit(n);
     }
 
     judy_bitset& set(const judy_bitset& src);
@@ -115,7 +115,7 @@ namespace open_query
   private:
     mutable void* array;
 
-    judy_bitset& setbit(size_type n);
+    judy_bitset& jsetbit(size_type n);
   };
 }
 


[FILE:399:patches/patch-scripts_CMakeLists.txt]
--- scripts/CMakeLists.txt.orig	2021-08-02 10:58:57 UTC
+++ scripts/CMakeLists.txt
@@ -120,11 +120,7 @@ IF(CMAKE_GENERATOR MATCHES "Makefiles|Ni
 ENDIF()
 
 
-IF(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
-  SET (PERL_PATH "/usr/local/bin/perl")
-ELSE()
-  SET (PERL_PATH "/usr/bin/perl")
-ENDIF()
+SET (PERL_PATH "%%LOCALBASE%%/bin/perl")
 
 IF(UNIX)
   # FIND_PROC and CHECK_PID are used by mysqld_safe


[FILE:403:patches/patch-scripts_mysql__config.sh]
--- scripts/mysql_config.sh.orig	2021-08-02 10:58:57 UTC
+++ scripts/mysql_config.sh
@@ -87,7 +87,9 @@ fi
 
 # Create options 
 libs="-L$pkglibdir @RPATH_OPTION@ @LIBS_FOR_CLIENTS@"
+libs="$libs -L%%LOCALBASE%%/lib "
 embedded_libs="-L$pkglibdir @RPATH_OPTION@ @EMB_LIBS_FOR_CLIENTS@"
+embedded_libs="$embedded_libs -L%%LOCALBASE%%/lib "
 
 include="-I$pkgincludedir"
 if [ "$basedir" != "/usr" ]; then


[FILE:446:patches/patch-scripts_mysqld__safe.sh]
--- scripts/mysqld_safe.sh.orig	2021-08-02 10:58:57 UTC
+++ scripts/mysqld_safe.sh
@@ -548,11 +548,11 @@ fi
 
 if test -z "$MYSQL_HOME"
 then 
-  if test -r "$DATADIR/my.cnf"
+  if test -r "$DATADIR/etc/my.cnf"
   then
     log_error "WARNING: Found $DATADIR/my.cnf
 The data directory is not a valid location for my.cnf, please move it to
-$MY_BASEDIR_VERSION/my.cnf"
+$MY_BASEDIR_VERSION/etc/my.cnf"
   fi
   MYSQL_HOME=$MY_BASEDIR_VERSION
 fi


[FILE:484:patches/patch-scripts_wsrep__sst__mariabackup.sh]
--- scripts/wsrep_sst_mariabackup.sh.orig	2021-08-02 10:58:57 UTC
+++ scripts/wsrep_sst_mariabackup.sh
@@ -696,7 +696,7 @@ recv_joiner()
     local ltcmd="$tcmd"
     if [ $tmt -gt 0 ]; then
         if [ -n "$(command -v timeout)" ]; then
-            if timeout --help | grep -qw -- '-k'; then
+            if timeout --help 2>&1 | grep -qw -- '-k'; then
                 ltcmd="timeout -k $(( tmt+10 )) $tmt $tcmd"
             else
                 ltcmd="timeout -s9 $tmt $tcmd"


[FILE:499:patches/patch-sql_CMakeLists.txt]
--- sql/CMakeLists.txt.orig	2021-08-02 10:58:57 UTC
+++ sql/CMakeLists.txt
@@ -397,7 +397,7 @@ IF(INSTALL_LAYOUT STREQUAL "STANDALONE")
 
 # Copy db.opt into data/test/
 SET(DBOPT_FILE ${CMAKE_SOURCE_DIR}/support-files/db.opt ) 
-INSTALL(FILES ${DBOPT_FILE} DESTINATION data/test COMPONENT DataFiles)
+INSTALL(FILES ${DBOPT_FILE} DESTINATION ${INSTALL_SUPPORTFILESDIR}/data/test COMPONENT DataFiles)
 
 # Install initial database on windows
 IF(WIN32 AND TARGET mysqld AND NOT CMAKE_CROSSCOMPILING)


[FILE:304:patches/patch-sql_mysqld.cc]
--- sql/mysqld.cc.orig	2021-08-02 10:58:57 UTC
+++ sql/mysqld.cc
@@ -5033,8 +5033,9 @@ static void init_ssl()
       while ((err= ERR_get_error()))
         sql_print_warning("SSL error: %s", ERR_error_string(err, NULL));
     }
-    else
+    else {
       ERR_remove_state(0);
+    }
   }
   else
   {


[FILE:1559:patches/patch-storage_innobase_lz4.cmake]
--- storage/innobase/lz4.cmake.orig	2021-08-02 10:58:57 UTC
+++ storage/innobase/lz4.cmake
@@ -17,9 +17,16 @@ SET(WITH_INNODB_LZ4 AUTO CACHE STRING
 
 MACRO (MYSQL_CHECK_LZ4)
   IF (WITH_INNODB_LZ4 STREQUAL "ON" OR WITH_INNODB_LZ4 STREQUAL "AUTO")
-    CHECK_INCLUDE_FILES(lz4.h HAVE_LZ4_H)
-    CHECK_LIBRARY_EXISTS(lz4 LZ4_compress_limitedOutput "" HAVE_LZ4_SHARED_LIB)
-    CHECK_LIBRARY_EXISTS(lz4 LZ4_compress_default "" HAVE_LZ4_COMPRESS_DEFAULT)
+    find_path(LZ4_INCLUDE_DIR NAMES lz4.h)
+    find_library(LZ4_LIBRARY NAMES lz4)
+    IF (LZ4_LIBRARY)
+    get_filename_component(LZ4_LIBDIR ${LZ4_LIBRARY} DIRECTORY)
+#MESSAGE(STATUS "LZ4_INCLUDE_DIR=${LZ4_INCLUDE_DIR} LZ4_LIBRARY=${LZ4_LIBRARY} LZ4_LIBDIR=${LZ4_LIBDIR}")
+    IF (LZ4_INCLUDE_DIR)
+      SET(HAVE_LZ4_H YES)
+    ENDIF()
+    CHECK_LIBRARY_EXISTS(lz4 LZ4_compress_limitedOutput ${LZ4_LIBDIR} HAVE_LZ4_SHARED_LIB)
+    CHECK_LIBRARY_EXISTS(lz4 LZ4_compress_default ${LZ4_LIBDIR} HAVE_LZ4_COMPRESS_DEFAULT)
 
     IF (HAVE_LZ4_SHARED_LIB AND HAVE_LZ4_H)
       SET(HAVE_INNODB_LZ4 TRUE)
@@ -27,12 +34,13 @@ MACRO (MYSQL_CHECK_LZ4)
       IF (HAVE_LZ4_COMPRESS_DEFAULT)
         ADD_DEFINITIONS(-DHAVE_LZ4_COMPRESS_DEFAULT=1)
       ENDIF()
-      LINK_LIBRARIES(lz4)
+      LINK_LIBRARIES(${LZ4_LIBRARY})
     ELSE()
       IF (WITH_INNODB_LZ4 STREQUAL "ON")
         MESSAGE(FATAL_ERROR "Required lz4 library is not found")
       ENDIF()
     ENDIF()
+    ENDIF()
   ENDIF()
   ADD_FEATURE_INFO(INNODB_LZ4 HAVE_INNODB_LZ4 "LZ4 compression in the InnoDB storage engine")
 ENDMACRO()


[FILE:968:patches/patch-storage_innobase_lzo.cmake]
--- storage/innobase/lzo.cmake.orig	2021-08-02 10:58:57 UTC
+++ storage/innobase/lzo.cmake
@@ -17,13 +17,17 @@ SET(WITH_INNODB_LZO AUTO CACHE STRING
 
 MACRO (MYSQL_CHECK_LZO)
   IF (WITH_INNODB_LZO STREQUAL "ON" OR WITH_INNODB_LZO STREQUAL "AUTO")
-    CHECK_INCLUDE_FILES(lzo/lzo1x.h HAVE_LZO_H)
-    CHECK_LIBRARY_EXISTS(lzo2 lzo1x_1_compress "" HAVE_LZO_SHARED_LIB)
-
+    find_path(LZO_INCLUDE NAMES lzo/lzo1x.h)
+    find_library(LZO_LIBRARY NAMES lzo2)
+    get_filename_component(LZO_LIBDIR ${LZO_LIBRARY} DIRECTORY)
+    IF (LZO_INCLUDE)
+      SET(HAVE_LZO_H 1)
+    ENDIF()
+    CHECK_LIBRARY_EXISTS(lzo2 lzo1x_1_compress ${LZO_LIBDIR} HAVE_LZO_SHARED_LIB)
     IF(HAVE_LZO_SHARED_LIB AND HAVE_LZO_H)
       SET(HAVE_INNODB_LZO TRUE)
       ADD_DEFINITIONS(-DHAVE_LZO=1)
-      LINK_LIBRARIES(lzo2)
+      LINK_LIBRARIES(${LZO_LIBRARY})
     ELSE()
       IF (WITH_INNODB_LZO STREQUAL "ON")
         MESSAGE(FATAL_ERROR "Required lzo library is not found")


[FILE:1855:patches/patch-storage_rocksdb_ha__rocksdb.cc]
--- storage/rocksdb/ha_rocksdb.cc.orig	2021-08-02 10:58:58 UTC
+++ storage/rocksdb/ha_rocksdb.cc
@@ -260,7 +260,7 @@ Rdb_cf_manager cf_manager;
 Rdb_ddl_manager ddl_manager;
 Rdb_binlog_manager binlog_manager;
 
-#if !defined(_WIN32) && !defined(__APPLE__)
+#if defined(HAVE_TIMER_DELETE) && !defined(_WIN32) && !defined(__APPLE__)
 Rdb_io_watchdog *io_watchdog = nullptr;
 #endif
 /**
@@ -842,7 +842,7 @@ static void rocksdb_set_io_write_timeout
     void *const var_ptr MY_ATTRIBUTE((__unused__)), const void *const save) {
   DBUG_ASSERT(save != nullptr);
   DBUG_ASSERT(rdb != nullptr);
-#if !defined(_WIN32) && !defined(__APPLE__)
+#if defined(HAVE_TIMER_DELETE) && !defined(_WIN32) && !defined(__APPLE__)
   DBUG_ASSERT(io_watchdog != nullptr);
 #endif
 
@@ -851,7 +851,7 @@ static void rocksdb_set_io_write_timeout
   const uint32_t new_val = *static_cast<const uint32_t *>(save);
 
   rocksdb_io_write_timeout_secs = new_val;
-#if !defined(_WIN32) && !defined(__APPLE__)
+#if defined(HAVE_TIMER_DELETE) && !defined(_WIN32) && !defined(__APPLE__)
   io_watchdog->reset_timeout(rocksdb_io_write_timeout_secs);
 #endif
   RDB_MUTEX_UNLOCK_CHECK(rdb_sysvars_mutex);
@@ -5741,7 +5741,7 @@ static int rocksdb_init_func(void *const
     directories.push_back(myrocks::rocksdb_wal_dir);
   }
 
-#if !defined(_WIN32) && !defined(__APPLE__)
+#if defined(HAVE_TIMER_DELETE) && !defined(_WIN32) && !defined(__APPLE__)
   io_watchdog = new Rdb_io_watchdog(std::move(directories));
   io_watchdog->reset_timeout(rocksdb_io_write_timeout_secs);
 #endif
@@ -5848,7 +5848,7 @@ static int rocksdb_done_func(void *const
   delete commit_latency_stats;
   commit_latency_stats = nullptr;
 
-#if !defined(_WIN32) && !defined(__APPLE__)
+#if defined(HAVE_TIMER_DELETE) && !defined(_WIN32) && !defined(__APPLE__)
   delete io_watchdog;
   io_watchdog = nullptr;
 #endif


[FILE:249:patches/patch-storage_rocksdb_rdb__buff.h]
--- storage/rocksdb/rdb_buff.h.orig	2021-08-02 10:58:58 UTC
+++ storage/rocksdb/rdb_buff.h
@@ -40,6 +40,8 @@
 #define be16toh(x) OSSwapBigToHostInt16(x)
 #endif
 
+#include "port/port_posix.h"
+
 /* MySQL header files */
 #include "./my_global.h"
 


[FILE:493:patches/patch-storage_rocksdb_ut0counter.h]
--- storage/rocksdb/ut0counter.h.orig	2021-08-02 10:58:58 UTC
+++ storage/rocksdb/ut0counter.h
@@ -30,6 +30,12 @@ Created 2012/04/12 by Sunny Bains
 
 #ifdef __WIN__
 #define get_curr_thread_id() GetCurrentThreadId()
+#elif defined __FreeBSD__
+#include <pthread_np.h>
+#define get_curr_thread_id() pthread_getthreadid_np()
+#elif defined __DragonFly__
+#include <sys/syscall.h>
+#define get_curr_thread_id() syscall(SYS_lwp_gettid)
 #else
 #define get_curr_thread_id() pthread_self()
 #endif

