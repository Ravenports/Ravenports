# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-django-cors-headers
VERSION=		4.4.0
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Django handler for CORS server headers (3.11)
SDESC[v12]=		Django handler for CORS server headers (3.12)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/9d/0c/4201d5650199b3a36ef3f2ab91f44c4527a70685f3003ce9f3ed8c30780c
DISTFILE[1]=		django_cors_headers-4.4.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		django_cors_headers-4.4.0.dist-info

GENERATED=		yes

[PY311].RUN_DEPENDS_ON=			python-asgiref:single:v11
					python-Django:single:v11
[PY311].USES_ON=			python:v11,wheel

[PY312].RUN_DEPENDS_ON=			python-asgiref:single:v12
					python-Django:single:v12
[PY312].USES_ON=			python:v12,wheel

[FILE:2478:descriptions/desc.single]
===================
django-cors-headers
===================

   :alt: pre-commit

A Django App that adds Cross-Origin Resource Sharing (CORS) headers to
responses. This allows in-browser requests to your Django application from
other origins.

----

**Improve your Django and Git skills** with [my books].

----

About CORS
----------

Adding CORS headers allows your resources to be accessed on other domains.
It's
important you understand the implications before adding the headers, since
you
could be unintentionally opening up your site's private data to others.

Some good resources to read on the subject are:

* Julia Evans' [introductory comic] and
  [educational quiz].
* Jake Archibaldâ€™s [How to win at CORS]
* The [MDN Article]
* The [HTML5 Rocks Tutorial]
* The [Wikipedia Page]

Requirements
------------

Python 3.8 to 3.12 supported.

Django 3.2 to 5.1 supported.

Setup
-----

Install from **pip**:

.. code-block:: sh

    python -m pip install django-cors-headers

and then add it to your installed apps:

.. code-block:: python

    INSTALLED_APPS = [
        ...,
        "corsheaders",
        ...,
   ]

Make sure you add the trailing comma or you might get a ModuleNotFoundError
(see [this blog
post]).

You will also need to add a middleware class to listen in on responses:

.. code-block:: python

    MIDDLEWARE = [
        ...,
        "corsheaders.middleware.CorsMiddleware",
        "django.middleware.common.CommonMiddleware",
        ...,
   ]

CorsMiddleware should be placed as high as possible, especially before any
middleware that can generate responses such as Django's CommonMiddleware or
Whitenoise's WhiteNoiseMiddleware. If it is not before, it will not be able
to add the CORS headers to these responses.

About
-----

**django-cors-headers** was created in January 2013 by Otto Yiu. It went
unmaintained from August 2015 and was forked in January 2016 to the package
`django-cors-middleware
<https://github.com/zestedesavoir/django-cors-middleware>`_
by Laville Augustin at Zeste de Savoir.
In September 2016, Adam Johnson, Ed Morley, and others gained maintenance
responsibility for **django-cors-headers**
([Issue 110])
from Otto Yiu.
Basically all of the changes in the forked **django-cors-middleware** were
merged back, or re-implemented in a different way, so it should be possible
to
switch back. If there's a feature that hasn't been merged, please open an
issue
about it.

**django-cors-headers** has had `40+ contributors


[FILE:121:distinfo]
5c6e3b7fe870876a1efdfeb4f433782c3524078fa0dc9e0195f6706ce7a242f6        12789 django_cors_headers-4.4.0-py3-none-any.whl

