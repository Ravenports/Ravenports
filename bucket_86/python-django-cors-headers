# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-django-cors-headers
VERSION=		3.0.2
KEYWORDS=		python devel
VARIANTS=		py36 py37
SDESC[py36]=		Django handler for CORS server headers (PY 36)
SDESC[py37]=		Django handler for CORS server headers (PY 37)
HOMEPAGE=		https://github.com/ottoyiu/django-cors-headers
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/d/django-cors-headers
DISTFILE[1]=		django-cors-headers-3.0.2.tar.gz:main
DF_INDEX=		1
SPKGS[py36]=		single
SPKGS[py37]=		single

OPTIONS_AVAILABLE=	PY36 PY37
OPTIONS_STANDARD=	none
VOPTS[py36]=		PY36=ON PY37=OFF
VOPTS[py37]=		PY36=OFF PY37=ON

DISTNAME=		django-cors-headers-3.0.2

GENERATED=		yes

[PY36].BUILDRUN_DEPENDS_ON=		python-Django:single:py36
[PY36].USES_ON=				python:py36

[PY37].BUILDRUN_DEPENDS_ON=		python-Django:single:py37
[PY37].USES_ON=				python:py37

[FILE:3237:descriptions/desc.single]
django-cors-headers
===================

.. image::
https://travis-ci.org/ottoyiu/django-cors-headers.svg?branch=master
   :target: https://travis-ci.org/ottoyiu/django-cors-headers

.. image:: https://img.shields.io/pypi/v/django-cors-headers.svg
    :target: https://pypi.python.org/pypi/django-cors-headers/

A Django App that adds Cross-Origin Resource Sharing (CORS) headers to
responses. This allows in-browser requests to your Django application from
other origins.

About CORS
----------

Adding CORS headers allows your resources to be accessed on other domains.
It's
important you understand the implications before adding the headers, since
you
could be unintentionally open up your site's private data to others.

Some good resources to read on the subject are:

* The `Wikipedia Page
<https://en.m.wikipedia.org/wiki/Cross-origin_resource_sharing>`_
* The `MDN Article
<https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS>`_
* The `HTML5 Rocks Tutorial
<https://www.html5rocks.com/en/tutorials/cors/>`_

Requirements
------------

Tested with all combinations of:

* Python: 2.7, 3.5, 3.6, 3.7
* Django: 1.11, 2.0, 2.1, 2.2

Setup
-----

Install from **pip**:

.. code-block:: sh

    pip install django-cors-headers

and then add it to your installed apps:

.. code-block:: python

    INSTALLED_APPS = (
        ...
        'corsheaders',
        ...
    )

You will also need to add a middleware class to listen in on responses:

.. code-block:: python

    MIDDLEWARE = [  # Or MIDDLEWARE_CLASSES on Django < 1.10
        ...
        'corsheaders.middleware.CorsMiddleware',
        'django.middleware.common.CommonMiddleware',
        ...
    ]

``CorsMiddleware`` should be placed as high as possible, especially before
any
middleware that can generate responses such as Django's
``CommonMiddleware`` or
Whitenoise's ``WhiteNoiseMiddleware``. If it is not before, it will not be
able
to add the CORS headers to these responses.

Also if you are using ``CORS_REPLACE_HTTPS_REFERER`` it should be placed
before
Django's ``CsrfViewMiddleware`` (see more below).

About
-----

**django-cors-headers** was created in January 2013 by Otto Yiu. It went
unmaintained from August 2015 and was forked in January 2016 to the package
`django-cors-middleware
<https://github.com/zestedesavoir/django-cors-middleware>`_
by Laville Augustin at Zeste de Savoir.
In September 2016, Adam Johnson, Ed Morley, and others gained maintenance
responsibility for **django-cors-headers**
(`Issue 110 <https://github.com/ottoyiu/django-cors-headers/issues/110>`_)
from
Otto Yiu.
Basically all of the changes in the forked **django-cors-middleware** were
merged back, or re-implemented in a different way, so it should be
possible to
switch back. If there's a feature that hasn't been merged, please open an
issue
about it.

**django-cors-headers** has had `40+
contributors
<https://github.com/ottoyiu/django-cors-headers/graphs/contributors>`_
in its time; thanks to every one of them.

Configuration
-------------

Configure the middleware's behaviour in your Django settings. You must add
the
hosts that are allowed to do cross-site requests to
``CORS_ORIGIN_WHITELIST``, or set ``CORS_ORIGIN_ALLOW_ALL`` to ``True``
to allow all hosts.



[FILE:111:distinfo]
ebf3e2cf25aa6993b959a8e6a87828ebb3c8fe5bc3ec4a2d6e65f3b8d9b4212c        24497 django-cors-headers-3.0.2.tar.gz

