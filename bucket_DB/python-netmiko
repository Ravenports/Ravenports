# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-netmiko
VERSION=		4.1.2
KEYWORDS=		python
VARIANTS=		py310 py311
SDESC[py310]=		Simplify CLI connections to network devices (3.10)
SDESC[py311]=		Simplify CLI connections to network devices (3.11)
HOMEPAGE=		https://github.com/ktbyers/netmiko
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/14/8f/0301558593a278188b1edeabbf082b7a16d73c1bf672cf8b856068152fb6
DISTFILE[1]=		netmiko-4.1.2-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py311]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[py311]=		PY310=OFF PY311=ON

DISTNAME=		netmiko-4.1.2.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-setuptools:single:py310
					python-paramiko:single:py310
					python-scp:single:py310
					python-tenacity:single:py310
					python-PyYAML:single:py310
					python-textfsm:single:py310
					python-ntc-templates:single:py310
					python-pyserial:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-setuptools:single:py311
					python-paramiko:single:py311
					python-scp:single:py311
					python-tenacity:single:py311
					python-PyYAML:single:py311
					python-textfsm:single:py311
					python-ntc-templates:single:py311
					python-pyserial:single:py311
[PY311].USES_ON=			python:py311,wheel

[FILE:1716:descriptions/desc.single]
[![PyPI - Python Version]](https://img.shields.io/pypi/pyversions/netmiko)
[PyPI]
[Downloads]
[GitHub contributors]
[Code Style]

[image]

Netmiko
=======

Multi-vendor library to simplify CLI connections to network devices

<br />

## Why Netmiko?
Network automation to screen-scraping devices is primarily concerned with
gathering output from show commands and with making configuration changes.

Netmiko aims to accomplish both of these operations and to do it across a
very broad set of platforms. It seeks to do this while abstracting away
low-level state control (i.e. eliminate low-level regex pattern matching to
the extent practical).

<br />

## Getting Started
- [Getting Started]

<br />

## Examples
*You really should look here.*

- [Netmiko Examples]

<br />

## Supported Platforms

[PLATFORMS]

<br />

## Installation

To install netmiko, simply us pip:

```
$ pip install netmiko
```

<br />

## API-Documentation

[API-Documentation]

<br />

## Common Issues/FAQ

Answers to some [common questions]

<br />

### Tutorials

- [Netmiko Overview]
- [Secure Copy]
- [Netmiko through SSH Proxy]
- [Netmiko and TextFSM]
- [Netmiko and what constitutes done]

<br />

### Getting Started:

#### Create a dictionary representing the device.

Supported device_types can be found in [ssh_dispatcher.py], see
CLASS_MAPPER keys.
```py
from netmiko import ConnectHandler

cisco_881 = {
    'device_type': 'cisco_ios',
    'host':   '10.10.10.10',
    'username': 'test',
    'password': 'password',
    'port' : 8022,          # optional, defaults to 22
    'secret': 'secret',     # optional, defaults to ''
}

```

#### Establish an SSH connection to the device by passing in the device
dictionary.

```py


[FILE:109:distinfo]
ee1e88ecbd07f619b0bc1e90648f82a64a0adee5968c3068621bbdadbfec5c03       196761 netmiko-4.1.2-py3-none-any.whl

