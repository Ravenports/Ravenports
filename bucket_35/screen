# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		screen
VERSION=		4.6.2
KEYWORDS=		sysutils
VARIANTS=		standard
SDESC[standard]=	Multi-screen window manager
HOMEPAGE=		https://www.gnu.org/software/screen/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNU/screen
DISTFILE[1]=		screen-4.6.2.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			gmake cpe ncurses

CPE_VENDOR=		gnu
FPC_EQUIVALENT=		sysutils/screen

MUST_CONFIGURE=		gnu

MAKE_ARGS=		WITH_MAN=1

CFLAGS=			-I{{NCURSESINC}}
			-DCOLORS256
LDFLAGS=		-L{{NCURSESLIB}}

post-patch:
	${RM} ${WRKSRC}/doc/screen.info*
	${REINPLACE_CMD} -e 's|/dev/ptmx|/nonexistent|' ${WRKSRC}/configure

post-install:
	${INSTALL_DATA} ${FILESDIR}/screenrc.sample \
		${STAGEDIR}${PREFIX}/etc/screenrc.sample

[FILE:512:descriptions/desc.single]
Screen is a full-screen window manager that multiplexes a physical terminal
between several processes (typically interactive shells).

Each virtual terminal provides the functions of a DEC VT100 terminal and,
in addition, several control functions from the ANSI X3.64 (ISO 6429) and
ISO 2022 standards (e.g. insert/delete line and support for multiple
character sets). There is a scrollback history buffer for each virtual
terminal and a copy-and-paste mechanism that allows moving text regions
between windows.


[FILE:98:distinfo]
1b6922520e6a0ce5e28768d620b0f640a6631397f95ccb043b70b91bb503fa3a       845210 screen-4.6.2.tar.gz


[FILE:162:manifests/plist.single]
@sample etc/screenrc.sample
bin/screen
share/man/man1/screen.1.gz
share/screen/utf8encodings/
 01
 02
 03
 04
 18
 19
 a1
 bf
 c2
 c3
 c4
 c6
 c7
 c8
 cc
 cd
 d6


[FILE:2601:patches/patch-Makefile.in]
--- Makefile.in.orig	2017-10-23 11:32:41 UTC
+++ Makefile.in
@@ -83,19 +83,13 @@ screen: $(OFILES)
 	    $(OPTIONS) $(CFLAGS) $<
 
 install_bin: .version screen installdirs
-	-if [ -f $(DESTDIR)$(bindir)/$(SCREEN) ] && [ ! -f $(DESTDIR)$(bindir)/$(SCREEN).old ]; \
-		then mv $(DESTDIR)$(bindir)/$(SCREEN) $(DESTDIR)$(bindir)/$(SCREEN).old; fi
-	$(INSTALL_PROGRAM) screen $(DESTDIR)$(bindir)/$(SCREEN)
-	-chown root $(DESTDIR)$(bindir)/$(SCREEN) && chmod 4755 $(DESTDIR)$(bindir)/$(SCREEN)
-# This doesn't work if $(bindir)/screen is a symlink
-	-if [ -f $(DESTDIR)$(bindir)/screen ] && [ ! -f $(DESTDIR)$(bindir)/screen.old ]; then mv $(DESTDIR)$(bindir)/screen $(DESTDIR)$(bindir)/screen.old; fi
-	rm -f $(DESTDIR)$(bindir)/screen
-	(cd $(DESTDIR)$(bindir) && ln -f -s $(SCREEN) screen)
 	cp $(srcdir)/utf8encodings/?? $(DESTDIR)$(SCREENENCODINGS)
+	$(INSTALL_PROGRAM) screen $(DESTDIR)$(bindir)/screen
+	-chown root:wheel $(DESTDIR)$(bindir)/screen && chmod 4755 $(DESTDIR)$(bindir)/screen
 
 ###############################################################################
 install: installdirs install_bin
-	cd doc ; $(MAKE) install
+	cd doc ; $(MAKE) $(MAKE_ARGS) install
 	-if [ -d $(DESTDIR)/usr/lib/terminfo ]; then \
 		PATH="$$PATH:/usr/5bin" tic ${srcdir}/terminfo/screeninfo.src; \
 		chmod 644 $(DESTDIR)/usr/lib/terminfo/s/screen*; \
@@ -108,7 +102,7 @@ install: installdirs install_bin
 installdirs:
 # Path leading to ETCSCREENRC and Socketdirectory not checked.
 	$(srcdir)/etc/mkinstalldirs $(DESTDIR)$(bindir) $(DESTDIR)$(SCREENENCODINGS)
-	cd doc ; $(MAKE) installdirs
+	cd doc ; $(MAKE) $(MAKE_ARGS) installdirs
 
 uninstall: .version
 	rm -f $(DESTDIR)$(bindir)/$(SCREEN)
@@ -350,7 +344,10 @@ layout.o: layout.h viewport.h canvas.h l
 viewport.o: layout.h viewport.h canvas.h viewport.c config.h screen.h os.h osdef.h ansi.h acls.h \
  comm.h layer.h term.h image.h display.h window.h extern.h \
  braille.h
-list_generic.o: list_generic.h list_generic.c layer.h screen.h osdef.h
-list_display.o: list_generic.h list_display.c layer.h screen.h osdef.h
-list_window.o: list_generic.h list_window.c window.h layer.h screen.h osdef.h comm.h
+list_generic.o: list_generic.h list_generic.c layer.h screen.h os.h osdef.h ansi.h acls.h \
+ comm.h layer.h term.h image.h display.h window.h
+list_display.o: list_generic.h list_display.c layer.h screen.h os.h osdef.h ansi.h acls.h \
+ comm.h layer.h term.h image.h display.h window.h
+list_window.o: list_generic.h list_window.c window.h layer.h screen.h os.h osdef.h ansi.h acls.h \
+ comm.h layer.h term.h image.h display.h window.h
 


[FILE:873:patches/patch-attacher.c]
--- attacher.c.orig	2017-10-23 11:32:41 UTC
+++ attacher.c
@@ -730,7 +730,7 @@ LockTerminal()
   printf("\n");
 
   prg = getenv("LOCKPRG");
-  if (prg && strcmp(prg, "builtin") && !access(prg, X_OK))
+  if (prg && (strcmp(prg, "builtin") || strcmp(prg,"builtin-passwd")) && !access(prg, X_OK))
     {
       signal(SIGCHLD, SIG_DFL);
       debug1("lockterminal: '%s' seems executable, execl it!\n", prg);
@@ -747,7 +747,11 @@ LockTerminal()
             Panic(errno, "setuid");
 #endif
           closeallfiles(0);	/* important: /etc/shadow may be open */
-          execl(prg, "SCREEN-LOCK", NULL);
+          if (strcmp(prg,"builtin-passwd"))
+            /* use system passsword for lock */
+            execl(prg, "SCREEN-LOCK", "-p", "-n", NULL);
+          else
+            execl(prg, "SCREEN-LOCK", NULL);
           exit(errno);
         }
       if (pid == -1)


[FILE:3871:patches/patch-configure]
--- configure.orig	2017-10-23 12:19:08 UTC
+++ configure
@@ -4825,63 +4825,6 @@ if ac_fn_c_try_link "$LINENO"; then :
 
 else
   olibs="$LIBS"
-LIBS="-lcurses $olibs"
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking libcurses..." >&5
-$as_echo "$as_me: checking libcurses..." >&6;}
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-int
-main ()
-{
-
-#ifdef __hpux
-__sorry_hpux_libcurses_is_totally_broken_in_10_10();
-#else
-tgetent((char *)0, (char *)0);
-#endif
-
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-
-else
-  LIBS="-ltermcap $olibs"
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking libtermcap..." >&5
-$as_echo "$as_me: checking libtermcap..." >&6;}
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-int
-main ()
-{
-tgetent((char *)0, (char *)0);
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-
-else
-  LIBS="-ltermlib $olibs"
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking libtermlib..." >&5
-$as_echo "$as_me: checking libtermlib..." >&6;}
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-int
-main ()
-{
-tgetent((char *)0, (char *)0);
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-
-else
   LIBS="-lncursesw $olibs"
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking libncursesw..." >&5
 $as_echo "$as_me: checking libncursesw..." >&6;}
@@ -4966,15 +4909,6 @@ rm -f core conftest.err conftest.$ac_obj
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
 
 if test "$cross_compiling" = yes; then :
   { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
@@ -4985,9 +4919,11 @@ else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
+#include <curses.h>
 main()
 {
- exit(strcmp(tgoto("%p1%d", 0, 1), "1") ? 0 : 1);
+ char *tgoto(const char *, int, int);
+ exit(strcmp(tgoto("%d%d", 0, 1), "1") ? 0 : 1);
 }
 _ACEOF
 if ac_fn_c_try_run "$LINENO"; then :
@@ -5034,7 +4970,7 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SVR4 ptys..." >&5
 $as_echo "$as_me: checking for SVR4 ptys..." >&6;}
 sysvr4ptys=
-if test -c /dev/ptmx ; then
+if test -c /nonexistent ; then
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -5145,19 +5081,16 @@ else
 fi
 rm -f conftest*
 
-if test "$ptys" != "$pdir/pty??" ; then
-p0=`echo $ptys | tr ' ' '\012' | sed -e 's/^.*\(.\).$/\1/g' | sort -u | tr -d '\012'`
-p1=`echo $ptys | tr ' ' '\012' | sed -e 's/^.*\(.\)$/\1/g'  | sort -u | tr -d '\012'`
+# XXX: hardcoded, since port must be devfs and various setups independent
+
 cat >>confdefs.h <<_ACEOF
-#define PTYRANGE0 "$p0"
+#define PTYRANGE0 "pqrsPQRSlmnoLMNO"
 _ACEOF
 
 cat >>confdefs.h <<_ACEOF
-#define PTYRANGE1 "$p1"
+#define PTYRANGE1 "0123456789abcdefghijklmnopqrstuv"
 _ACEOF
 
-fi
-
 
 # Check whether --with-pty-mode was given.
 if test "${with_pty_mode+set}" = set; then :
@@ -5381,9 +5314,11 @@ cat confdefs.h - <<_ACEOF >conftest.$ac_
 
 #include <time.h> /* to get time_t on SCO */
 #include <sys/types.h>
-#if defined(SVR4) && !defined(DGUX)
+#if defined __DragonFly__ || defined __FreeBSD__
 #include <utmpx.h>
 #define utmp utmpx
+#define pututline pututxline
+#define getutent getutxent
 #else
 #include <utmp.h>
 #endif
@@ -5452,6 +5387,10 @@ cat confdefs.h - <<_ACEOF >conftest.$ac_
 #if defined(SVR4) && !defined(DGUX)
 #include <utmpx.h>
 #define utmp utmpx
+#define pututline pututxline
+#define getutent getutxent
+#define pututline pututxline
+#define getutent getutxent
 #else
 #include <utmp.h>
 #endif


[FILE:1020:patches/patch-doc__Makefile.in]
--- doc/Makefile.in.orig	2017-08-03 13:52:32 UTC
+++ doc/Makefile.in
@@ -31,7 +31,10 @@ info screen.info: screen.texinfo
 	$(MAKEINFO) $(srcdir)/screen.texinfo -o screen.info
 
 install: installdirs
+ifeq (${WITH_MAN},1)
 	$(INSTALL_DATA) $(srcdir)/screen.1 $(DESTDIR)$(mandir)/man1/screen.1
+endif
+ifeq (${WITH_INFO},1)
 	-$(MAKE) screen.info
 	-if test -f screen.info; then d=.; else d=$(srcdir); fi; \
 	if test -f $$d/screen.info; then \
@@ -40,13 +43,19 @@ install: installdirs
 	  install-info --info-dir=$(DESTDIR)$(infodir) $$d/screen.info; \
 	else true; fi; \
 	fi
+endif
 
 uninstall:
 	rm -f $(DESTDIR)$(mandir)/man1/screen.1
 	rm -f $(DESTDIR)$(infodir)/screen.info*
 
 installdirs:
-	$(srcdir)/../etc/mkinstalldirs $(DESTDIR)$(mandir)/man1 $(DESTDIR)$(infodir)
+ifeq (${WITH_MAN},1)
+	$(srcdir)/../etc/mkinstalldirs $(DESTDIR)$(mandir)/man1
+endif
+ifeq (${WITH_INFO},1)
+	$(srcdir)/../etc/mkinstalldirs $(DESTDIR)$(infodir)
+endif
 
 mostlyclean:
 	-rm -f *.cp *.cps *.fn *.fns *.ky *.kys *.pg *.tp *.vr


[FILE:337:patches/patch-osdef.h.in]
--- osdef.h.in.orig	2017-10-23 11:32:41 UTC
+++ osdef.h.in
@@ -111,7 +111,7 @@ extern int   setsid __P((void));
 extern int   setpgid __P((int, int));
 extern int   tcsetpgrp __P((int, int));
 #endif
-extern int   ioctl __P((int, int, char *));
+extern int   ioctl __P((int, unsigned long, ...));
 
 extern int   kill __P((int, int));
 


[FILE:456:patches/patch-resize.c]
--- resize.c.orig	2017-10-23 11:32:41 UTC
+++ resize.c
@@ -683,6 +683,17 @@ int wi, he, hi;
       he = MAXWIDTH;
     }
 
+  if (wi > 1000)
+    {
+      Msg(0, "Window width too large, truncated");
+      wi = 1000;
+    }
+  if (he > 1000)
+    {
+      Msg(0, "Window height too large, truncated");
+      he = 1000;
+    }
+
   if (p->w_width == wi && p->w_height == he && p->w_histheight == hi)
     {
       debug("ChangeWindowSize: No change.\n");


[FILE:364:patches/patch-screen.c]
--- screen.c.orig	2017-10-23 11:32:41 UTC
+++ screen.c
@@ -2214,7 +2214,7 @@ static char *pad_expand(char *buf, char
   pn2 = pn = p + padlen;
   r = winmsg_numrend;
   while (p >= buf) {
-    if (r && *p != 127 && p - buf == winmsg_rendpos[r - 1]) {
+    if (r && p - buf == winmsg_rendpos[r - 1]) {
       winmsg_rendpos[--r] = pn - buf;
       continue;
     }


[FILE:346:patches/patch-termcap.c]
--- termcap.c.orig	2017-10-23 11:32:41 UTC
+++ termcap.c
@@ -359,11 +359,7 @@ int he;
   if (D_CG0)
     {
       if (D_CS0 == 0)
-#ifdef TERMINFO
-        D_CS0 = "\033(%p1%c";
-#else
-        D_CS0 = "\033(%.";
-#endif
+	D_CS0 = "\033(%p1%c"; /* Old ncurses can't handle %. */
       if (D_CE0 == 0)
         D_CE0 = "\033(B";
       D_AC = 0;


[FILE:386:patches/patch-terminfo__checktc.c]
--- terminfo/checktc.c.orig	2016-11-12 22:12:37 UTC
+++ terminfo/checktc.c
@@ -171,6 +171,7 @@ char *s;
   fflush(stdout);
 }
 
+#if !(defined __FreeBSD__ || defined __DragonFly__)
 void CPutStr(s, c)
 char *s;
 int c;
@@ -178,6 +179,7 @@ int c;
   tputs(tgoto(s, 0, c), 1, putcha);
   fflush(stdout);
 }
+#endif /* ! __FreeBSD__ or __DragonFly__ */
 
 void CCPutStr(s, x, y)
 char *s;


[FILE:323:files/screenrc.sample]
startup_message off
defscrollback 5000
termcapinfo xterm ti@:te@
termcapinfo xterm-color ti@:te@
hardstatus alwayslastline
hardstatus string '%{gk}[%{G}%H%{g}][%= %{wk}%?%-Lw%?%{=b kR}(%{W}%n*%f %t%?(%u)%?%{=b kR})%{= kw}%?%+Lw%?%?%= %{g}]%{=b C}[%m/%d/%y %C %A]%{W}'
vbell off
shell -$SHELL
logtstamp on
logtstamp after 1


[FILE:1058:dragonfly/patch-os.h]
--- os.h.orig	2017-10-23 11:32:41 UTC
+++ os.h
@@ -250,9 +250,8 @@ extern int errno;
 #endif
 
 #if defined(UTMPOK) || defined(BUGGYGETLOGIN)
-# if defined(SVR4) && !defined(DGUX) && !defined(__hpux) && !defined(linux)
 #  include <utmpx.h>
-#  define UTMPFILE	UTMPX_FILE
+#  define UTMPFILE	_PATH_UTMPX
 #  define utmp		utmpx
 #  define getutent	getutxent
 #  define getutid	getutxid
@@ -261,9 +260,6 @@ extern int errno;
 #  define setutent	setutxent
 #  define endutent	endutxent
 #  define ut_time	ut_xtime
-# else /* SVR4 */
-#  include <utmp.h>
-# endif /* SVR4 */
 # ifdef apollo
    /* 
     * We don't have GETUTENT, so we dig into utmp ourselves.
@@ -273,19 +269,6 @@ extern int errno;
     */
 #  define UTNOKEEP
 # endif /* apollo */
-
-# ifndef UTMPFILE
-#  ifdef UTMP_FILE
-#   define UTMPFILE	UTMP_FILE
-#  else
-#   ifdef _PATH_UTMP
-#    define UTMPFILE	_PATH_UTMP
-#   else
-#    define UTMPFILE	"/etc/utmp"
-#   endif /* _PATH_UTMP */
-#  endif
-# endif
-
 #endif /* UTMPOK || BUGGYGETLOGIN */
 
 #if !defined(UTMPOK) && defined(USRLIMIT)


[FILE:2953:dragonfly/patch-utmp.c]
--- utmp.c.orig	2017-10-23 11:32:41 UTC
+++ utmp.c
@@ -26,6 +26,7 @@
  ****************************************************************
  */
 
+#include <sys/param.h>
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -409,12 +410,6 @@ struct win *wi;
   register slot_t slot;
   struct utmp u;
   int saved_ut;
-#ifdef UTHOST
-  char *p;
-  char host[sizeof(D_loginhost) + 15];
-#else
-  char *host = 0;
-#endif /* UTHOST */
 
   wi->w_slot = (slot_t)0;
   if (!utmpok || wi->w_type != W_TYPE_PTY)
@@ -435,51 +430,13 @@ struct win *wi;
     makeuser(&u, stripdev(wi->w_tty), LoginName, wi->w_pid);
 
 #ifdef UTHOST
-  host[sizeof(host) - 15] = '\0';
-  if (display)
-    {
-      strncpy(host, D_loginhost, sizeof(host) - 15);
-      if (D_loginslot != (slot_t)0 && D_loginslot != (slot_t)-1 && host[0] != '\0')
-	{
-	  /*
-	   * we want to set our ut_host field to something like
-	   * ":ttyhf:s.0" or
-	   * "faui45:s.0" or
-	   * "132.199.81.4:s.0" (even this may hurt..), but not
-	   * "faui45.informati"......:s.0
-	   * HPUX uses host:0.0, so chop at "." and ":" (Eric Backus)
-	   */
-	  for (p = host; *p; p++)
-	    if ((*p < '0' || *p > '9') && (*p != '.'))
-	      break;
-	  if (*p)
-	    {
-	      for (p = host; *p; p++)
-		if (*p == '.' || (*p == ':' && p != host))
-		  {
-		    *p = '\0';
-		    break;
-		  }
-	    }
-	}
-      else
-	{
-	  strncpy(host + 1, stripdev(D_usertty), sizeof(host) - 15 - 1);
-	  host[0] = ':';
-	}
-    }
-  else
-    strncpy(host, "local", sizeof(host) - 15);
-
-  sprintf(host + strlen(host), ":S.%d", wi->w_number);
-  debug1("rlogin hostname: '%s'\n", host);
-
 # if !defined(_SEQUENT_) && !defined(sequent)
-  strncpy(u.ut_host, host, sizeof(u.ut_host));
+  if (display)
+    strncpy(u.ut_host, D_loginhost, sizeof(u.ut_host));
 # endif
 #endif /* UTHOST */
 
-  if (pututslot(slot, &u, host, wi) == 0)
+  if (pututslot(slot, &u, D_loginhost, wi) == 0)
     {
       Msg(errno,"Could not write %s", UtmpName);
       UT_CLOSE;
@@ -598,7 +555,7 @@ makedead(u)
 struct utmp *u;
 {
   u->ut_type = DEAD_PROCESS;
-#if (!defined(linux) || defined(EMPTY)) && !defined(__CYGWIN__)
+#if (!defined(linux) || defined(EMPTY)) && !defined(__CYGWIN__) && !defined(__FreeBSD__)
   u->ut_exit.e_termination = 0;
   u->ut_exit.e_exit = 0;
 #endif
@@ -631,7 +588,11 @@ int pid;
   /* must use temp variable because of NetBSD/sparc64, where
    * ut_xtime is long(64) but time_t is int(32) */
   (void)time(&now);
-  u->ut_time = now;
+#if defined(__FreeBSD_version) && __FreeBSD_version < 900000
+  u->ut_time =  now;
+#else
+  u->ut_tv.tv_sec = now;
+#endif
 }
 
 static slot_t
@@ -743,7 +704,11 @@ int pid;
   strncpy(u->ut_line, line, sizeof(u->ut_line));
   strncpy(u->ut_name, user, sizeof(u->ut_name));
   (void)time(&now);
-  u->ut_time = now;
+#if defined(__FreeBSD_version) && __FreeBSD_version < 900000
+  u->ut_time =  now;
+#else
+  u->ut_tv.tv_sec = now;
+#endif
 }
 
 static slot_t


[FILE:915:freebsd/patch-os.h]
--- os.h.orig	2017-10-23 11:32:41 UTC
+++ os.h
@@ -250,9 +250,7 @@ extern int errno;
 #endif
 
 #if defined(UTMPOK) || defined(BUGGYGETLOGIN)
-# if defined(SVR4) && !defined(DGUX) && !defined(__hpux) && !defined(linux)
 #  include <utmpx.h>
-#  define UTMPFILE	UTMPX_FILE
 #  define utmp		utmpx
 #  define getutent	getutxent
 #  define getutid	getutxid
@@ -261,9 +259,6 @@ extern int errno;
 #  define setutent	setutxent
 #  define endutent	endutxent
 #  define ut_time	ut_xtime
-# else /* SVR4 */
-#  include <utmp.h>
-# endif /* SVR4 */
 # ifdef apollo
    /* 
     * We don't have GETUTENT, so we dig into utmp ourselves.
@@ -524,6 +519,6 @@ typedef struct fd_set { int fds_bits[1];
 /* Changing those you won't be able to attach to your old sessions
  * when changing those values in official tree don't forget to bump
  * MSG_VERSION */
-#define MAXTERMLEN	32
+#define MAXTERMLEN	63
 #define MAXLOGINLEN	256
 


[FILE:2939:freebsd/patch-utmp.c]
--- utmp.c.orig	2017-01-17 11:28:29.397404660 -0800
+++ utmp.c	2017-02-10 16:48:34.902236000 -0800
@@ -26,6 +26,7 @@
  ****************************************************************
  */
 
+#include <sys/param.h>
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -409,12 +410,6 @@
   register slot_t slot;
   struct utmp u;
   int saved_ut;
-#ifdef UTHOST
-  char *p;
-  char host[sizeof(D_loginhost) + 15];
-#else
-  char *host = 0;
-#endif /* UTHOST */
 
   wi->w_slot = (slot_t)0;
   if (!utmpok || wi->w_type != W_TYPE_PTY)
@@ -435,51 +430,13 @@
     makeuser(&u, stripdev(wi->w_tty), LoginName, wi->w_pid);
 
 #ifdef UTHOST
-  host[sizeof(host) - 15] = '\0';
-  if (display)
-    {
-      strncpy(host, D_loginhost, sizeof(host) - 15);
-      if (D_loginslot != (slot_t)0 && D_loginslot != (slot_t)-1 && host[0] != '\0')
-	{
-	  /*
-	   * we want to set our ut_host field to something like
-	   * ":ttyhf:s.0" or
-	   * "faui45:s.0" or
-	   * "132.199.81.4:s.0" (even this may hurt..), but not
-	   * "faui45.informati"......:s.0
-	   * HPUX uses host:0.0, so chop at "." and ":" (Eric Backus)
-	   */
-	  for (p = host; *p; p++)
-	    if ((*p < '0' || *p > '9') && (*p != '.'))
-	      break;
-	  if (*p)
-	    {
-	      for (p = host; *p; p++)
-		if (*p == '.' || (*p == ':' && p != host))
-		  {
-		    *p = '\0';
-		    break;
-		  }
-	    }
-	}
-      else
-	{
-	  strncpy(host + 1, stripdev(D_usertty), sizeof(host) - 15 - 1);
-	  host[0] = ':';
-	}
-    }
-  else
-    strncpy(host, "local", sizeof(host) - 15);
-
-  sprintf(host + strlen(host), ":S.%d", wi->w_number);
-  debug1("rlogin hostname: '%s'\n", host);
-
 # if !defined(_SEQUENT_) && !defined(sequent)
-  strncpy(u.ut_host, host, sizeof(u.ut_host));
+  if (display)
+    strncpy(u.ut_host, D_loginhost, sizeof(u.ut_host));
 # endif
 #endif /* UTHOST */
 
-  if (pututslot(slot, &u, host, wi) == 0)
+  if (pututslot(slot, &u, D_loginhost, wi) == 0)
     {
       Msg(errno,"Could not write %s", UtmpName);
       UT_CLOSE;
@@ -598,7 +555,7 @@
 struct utmp *u;
 {
   u->ut_type = DEAD_PROCESS;
-#if (!defined(linux) || defined(EMPTY)) && !defined(__CYGWIN__)
+#if (!defined(linux) || defined(EMPTY)) && !defined(__CYGWIN__) && !defined(__FreeBSD__)
   u->ut_exit.e_termination = 0;
   u->ut_exit.e_exit = 0;
 #endif
@@ -631,7 +588,11 @@
   /* must use temp variable because of NetBSD/sparc64, where
    * ut_xtime is long(64) but time_t is int(32) */
   (void)time(&now);
-  u->ut_time = now;
+#if defined(__FreeBSD_version) && __FreeBSD_version < 900000
+  u->ut_time =  now;
+#else
+  u->ut_tv.tv_sec = now;
+#endif
 }
 
 static slot_t
@@ -743,7 +704,11 @@
   strncpy(u->ut_line, line, sizeof(u->ut_line));
   strncpy(u->ut_name, user, sizeof(u->ut_name));
   (void)time(&now);
-  u->ut_time = now;
+#if defined(__FreeBSD_version) && __FreeBSD_version < 900000
+  u->ut_time =  now;
+#else
+  u->ut_tv.tv_sec = now;
+#endif
 }
 
 static slot_t


[FILE:281:sunos/patch-socket.c]
--- socket.c.orig	Mon Aug 26 19:27:26 2019
+++ socket.c	Mon Aug 26 20:13:11 2019
@@ -26,6 +26,9 @@
  ****************************************************************
  */
 
+#define _XPG6
+#define _XOPEN_SOURCE 500
+
 #include "config.h"
 #include <stdbool.h>
 #include <string.h>

