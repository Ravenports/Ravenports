# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		leptonica
VERSION=		1.76.0
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Image processing and analysis library
HOMEPAGE=		http://www.leptonica.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.leptonica.org/source/
DISTFILE[1]=		leptonica-1.76.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	tiff:primary:standard
			WebP:single:standard
			openjpeg:single:standard
			gif:single:standard

USES=			png jpeg libtool

LICENSE=		BSD2CLAUSE:single
LICENSE_FILE=		BSD2CLAUSE:{{WRKSRC}}/src/leptonica-license.txt
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/leptonica

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		5.0.3

post-patch:
	# add support for openjpeg 2.3
	${REINPLACE_CMD} -e 's|openjpeg-2.0|openjpeg-2.3|' ${WRKSRC}/configure

[FILE:87:descriptions/desc.single]
An open source C library for efficient image processing and image analysis
operations.


[FILE:102:distinfo]
5e9a33b7ce33ab39fb03cee5a7ec353b044670176303265d7c64d51539616857     12436958 leptonica-1.76.0.tar.gz


[FILE:597:manifests/plist.single]
bin/
 convertfilestopdf
 convertfilestops
 convertformat
 convertsegfilestopdf
 convertsegfilestops
 converttopdf
 converttops
 fileinfo
 xtractprotos
include/leptonica/
 allheaders.h
 alltypes.h
 array.h
 arrayaccess.h
 bbuffer.h
 bilateral.h
 bmf.h
 bmfdata.h
 bmp.h
 ccbord.h
 dewarp.h
 endianness.h
 environ.h
 gplot.h
 heap.h
 imageio.h
 jbclass.h
 leptwin.h
 list.h
 morph.h
 pix.h
 ptra.h
 queue.h
 rbtree.h
 readbarcode.h
 recog.h
 regutils.h
 stack.h
 stringcode.h
 sudoku.h
 watershed.h
lib/
 liblept.a
 liblept.so
 liblept.so.%%SOMAJOR%%
 liblept.so.%%SOVERSION%%
lib/pkgconfig/lept.pc


[FILE:420:patches/patch-src_sarray1.c]
--- src/sarray1.c.orig	2018-04-13 21:35:39 UTC
+++ src/sarray1.c
@@ -1882,7 +1882,11 @@ struct stat     st;
         return (SARRAY *)ERROR_PTR("pdir not opened", procName, NULL);
     }
     safiles = sarrayCreate(0);
+#ifdef __sun__
+    dfd = pdir->dd_fd;
+#else
     dfd = dirfd(pdir);
+#endif
     while ((pdirentry = readdir(pdir))) {
 #if HAVE_FSTATAT
         stat_ret = fstatat(dfd, pdirentry->d_name, &st, 0);

