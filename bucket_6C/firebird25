# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		firebird25
VERSION=		2.5.7
KEYWORDS=		databases
VARIANTS=		standard
SDESC[standard]=	Firebird-2 relational SQL database
HOMEPAGE=		https://www.firebirdsql.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/firebird/firebird/2.5.7-Release
DISTFILE[1]=		Firebird-2.5.7.27050-0.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	complete
			server
			client
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

NOT_FOR_ARCH=		aarch64

BUILDRUN_DEPENDS=	libedit:single:standard
EXRUN[server]=		firebird25:client:standard

USERS=			firebird
GROUPS=			firebird
USERGROUP_SPKG=		server

USES=			cpe gmake pkgconfig c++:server,client

DISTNAME=		Firebird-2.5.7.27050-0

LICENSE=		CUSTOM1:server CUSTOM2:server
LICENSE_NAME=		CUSTOM1:"Initial Developer's Public License"
			CUSTOM2:"InterBase Public License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/builds/install/misc/IDPLicense.txt
			CUSTOM2:{{WRKSRC}}/builds/install/misc/IPLicense.txt
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		databases/firebird25-server

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--prefix=/var/db/firebird
			--exec-prefix={{PREFIX}}
			--with-fbconf={{PREFIX}}/etc/firebird
			--with-fbglock=/var/db/firebird
			--with-fbhelp=/var/db/firebird/help
			--with-fbintl={{PREFIX}}/libexec/firebird/intl
			--with-fblog=/var/db/firebird
			--with-fbmsg={{PREFIX}}/share/firebird
			--with-fbplugins={{PREFIX}}/libexec/firebird/plugins
			--with-fbsbin={{PREFIX}}/sbin
			--with-fbsecure-db=/var/db/firebird
			--with-fbudf={{PREFIX}}/libexec/firebird/UDF
			--with-system-editline
			--enable-superserver
CONFIGURE_ENV=		PTHREAD_LIBS="-lpthread"
			ac_cv_header_atomic_ops_h="no"
			ac_cv_lib_atomic_ops_main="no"
			ac_cv_lib_edit_readline="yes"

BUILD_TARGET=		firebird_basic libfbembed libfbclient embed_isql
			embed_gpre embed_gdef embed_qli extlib
			firebird_embedded firebird_server
MAKE_ARGS=		PREFIX="{{STAGEDIR}}{{PREFIX}}"
MAKE_ENV=		FIREBIRD_TMP="{{WRKDIR}}"
			FIREBIRD_LOCK="{{WRKDIR}}"
SINGLE_JOB=		yes

PLIST_SUB=		SOVERSION=2.5.7
			SOMINOR=2.5
			SOMAJOR=2
			LOCALSTATEDIR=/var/db/firebird
			CONFDIR=etc/firebird
RC_SUBR=		firebird:server
SUB_FILES=		pkg-message-server
SUB_LIST=		DOCDIR={{STD_DOCDIR}}

CXXFLAGS=		-std=gnu++98
			-fno-lifetime-dse
VAR_ARCH[x86_64]=	CFLAGS=-DAMD64

post-patch:
	${FIND} ${WRKSRC} -name "*.sh" -exec ${CHMOD} +x {} \+

do-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/bin \
		${STAGEDIR}${PREFIX}/lib \
		${STAGEDIR}${PREFIX}/include \
		${STAGEDIR}${PREFIX}/sbin \
		${STAGEDIR}${PREFIX}/share/firebird \
		${STAGEDIR}${PREFIX}/etc/firebird \
		${STAGEDIR}${PREFIX}/libexec/firebird/udf \
		${STAGEDIR}/var/db/firebird/help \
		${STAGEDIR}${PREFIX}/libexec/firebird/intl \
		${STAGEDIR}${PREFIX}/libexec/firebird/plugins
	${INSTALL_LIB} ${WRKSRC}/gen/firebird/lib/libib_util.so \
		${WRKSRC}/gen/firebird/lib/libfbclient.so.2.5.7 \
		${WRKSRC}/gen/firebird/lib/libfbembed.so.2.5.7 \
		${STAGEDIR}${PREFIX}/lib
.for ext in so so.2 so.2.5
	${LN} -fs libfbclient.so.2.5.7 ${STAGEDIR}${PREFIX}/lib/libfbclient.${ext}
	${LN} -fs libfbembed.so.2.5.7 ${STAGEDIR}${PREFIX}/lib/libfbembed.${ext}
	${LN} -fs libfbembed.so.2.5.7 ${STAGEDIR}${PREFIX}/lib/libgds.${ext}
.endfor
	${INSTALL_DATA} ${WRKSRC}/gen/firebird/include/*.h ${STAGEDIR}${PREFIX}/include
	${INSTALL_DATA} ${WRKSRC}/gen/firebird/*.msg ${STAGEDIR}${PREFIX}/share/firebird
	${SED} -e "s=%%PREFIX%%=${PREFIX}=g" ${WRKSRC}/gen/install/misc/firebird.conf \
		> ${WRKDIR}/firebird.conf
	${INSTALL_DATA} ${WRKDIR}/firebird.conf ${STAGEDIR}${PREFIX}/etc/firebird/firebird.conf.sample
	${INSTALL_DATA} ${WRKSRC}/gen/install/misc/aliases.conf \
		${STAGEDIR}${PREFIX}/etc/firebird/aliases.conf.sample
	${INSTALL_DATA} ${WRKSRC}/gen/install/misc/fbtrace.conf \
		${STAGEDIR}${PREFIX}/etc/firebird/fbtrace.conf
	${INSTALL_DATA} ${WRKSRC}/gen/install/misc/fbintl.conf \
		${STAGEDIR}${PREFIX}/libexec/firebird/intl/fbintl.conf
.for bin in gpre isql-fb qli fbguard fbsplit fbstat fbsvcmgr fbtracemgr gbak gdef gfix gsec nbackup
	${INSTALL_PROGRAM} ${WRKSRC}/gen/firebird/bin/${bin} ${STAGEDIR}${PREFIX}/bin
.endfor
.for sbin in fb_inet_server fb_lock_print fb_smp_server fbserver
	${INSTALL_PROGRAM} ${WRKSRC}/gen/firebird/bin/${sbin} ${STAGEDIR}${PREFIX}/sbin
.endfor
.for udf_so in ib_udf.so fbudf.so
	${INSTALL} ${STRIP} -m 0555 ${WRKSRC}/gen/firebird/UDF/${udf_so} \
		${STAGEDIR}${PREFIX}/libexec/firebird/udf
.endfor
.for udf_sql in src/extlib/ib_udf2.sql src/extlib/fbudf/fbudf.sql
	${INSTALL} -m 0444 ${WRKSRC}/${udf_sql} ${STAGEDIR}${PREFIX}/libexec/firebird/udf
.endfor
	${INSTALL} ${STRIP} -m 0555 ${WRKSRC}/gen/firebird/plugins/libfbtrace.so \
		${STAGEDIR}${PREFIX}/libexec/firebird/plugins
	${INSTALL} -m 0660 ${WRKSRC}/gen/firebird/security2.fdb \
		${STAGEDIR}/var/db/firebird/security2.fdb.sample
	${INSTALL} -m 0440 ${WRKSRC}/gen/firebird/help/help.fdb \
		${STAGEDIR}/var/db/firebird/help
	${INSTALL} ${STRIP} -m 0555 ${WRKSRC}/gen/firebird/intl/libfbintl.so \
		${STAGEDIR}${PREFIX}/libexec/firebird/intl/fbintl.so
	# docs
	@${MKDIR} ${STAGEDIR}${STD_DOCDIR}/sql.extensions \
		${STAGEDIR}${STD_DOCDIR}/license \
		${STAGEDIR}${STD_DOCDIR}/upgrade
	${INSTALL_DATA} ${WRKSRC}/doc/sql.extensions/* \
		${STAGEDIR}${STD_DOCDIR}/sql.extensions
	${INSTALL_DATA} ${WRKSRC}/doc/license/* \
		${STAGEDIR}${STD_DOCDIR}/license
	${INSTALL_DATA} ${WRKSRC}/src/misc/upgrade/v2/* \
		${STAGEDIR}${STD_DOCDIR}/upgrade
.for F in WhatsNew README.* Firebird* ReleaseNotes.pdf ambiguity.txt ods11-index-structure.html
	${INSTALL_DATA} ${WRKSRC}/doc/${F} ${STAGEDIR}${STD_DOCDIR}
.endfor

[FILE:568:descriptions/desc.server]
Firebird is a relational database offering many ANSI SQL-99 features
that runs on Linux, Windows, and a variety of Unix platforms.  Firebird
offers excellent concurrency, high performance, and powerful language
support for stored procedures and triggers.  It has been used in
production systems, under a variety of names since 1981.

Firebird is completely free of any registration, licensing or deployment
fees.  It may be deployed freely for use with any third-party software,
whether commercial or not.

This package contains the Firebird server and related files.


[FILE:193:descriptions/desc.client]
Firebird is a relational database offering many ANSI SQL-99 features
that runs on Linux, Windows, and a variety of Unix platforms.

This package contains the Firebird client and related files.


[FILE:109:distinfo]
0a3b68c94e9d4eab0e56c98312f0955a0ec69ec4e9e801e0a81be758f032171a     13402538 Firebird-2.5.7.27050-0.tar.bz2


[FILE:742:manifests/plist.server]
bin/
 fbguard
 fbsplit
 fbstat
 fbsvcmgr
 fbtracemgr
 gbak
 gdef
 gfix
 gsec
 nbackup
sbin/
 fb_inet_server
 fb_lock_print
 fb_smp_server
 fbserver
@group firebird
libexec/firebird/udf/
 ib_udf.so
 fbudf.so
 ib_udf2.sql
 fbudf.sql
libexec/firebird/plugins/libfbtrace.so
libexec/firebird/intl/
 fbintl.so
 fbintl.conf
@group
@sample %%CONFDIR%%/aliases.conf.sample
%%CONFDIR%%/fbtrace.conf
@owner firebird
@group firebird
@sample %%LOCALSTATEDIR%%/security2.fdb.sample
%%LOCALSTATEDIR%%/help/help.fdb
@preunexec [ -s %%LOCALSTATEDIR%%/firebird.log ] || rm -f %%LOCALSTATEDIR%%/firebird.log
@rmtry %%LOCALSTATEDIR%%/isc_event1.`hostname`
@rmtry %%LOCALSTATEDIR%%/isc_init1.`hostname`
@rmtry %%LOCALSTATEDIR%%/isc_lock1.`hostname`
@owner
@group


[FILE:443:manifests/plist.client]
bin/
 gpre
 isql-fb
 qli
include/
 ib_util.h
 ibase.h
 iberror.h
 perf.h
lib/
 libfbclient.so
 libfbclient.so.%%SOMAJOR%%
 libfbclient.so.%%SOMINOR%%
 libfbclient.so.%%SOVERSION%%
 libfbembed.so
 libfbembed.so.%%SOMAJOR%%
 libfbembed.so.%%SOMINOR%%
 libfbembed.so.%%SOVERSION%%
 libgds.so
 libgds.so.%%SOMAJOR%%
 libgds.so.%%SOMINOR%%
 libib_util.so
@sample %%CONFDIR%%/firebird.conf.sample
share/firebird/
 de_DE.msg
 firebird.msg
 fr_FR.msg


[FILE:416:patches/patch-builds_install_misc_firebird.conf.in]
--- builds/install/misc/firebird.conf.in.orig	2016-06-30 09:34:53 UTC
+++ builds/install/misc/firebird.conf.in
@@ -60,7 +60,7 @@
 #
 # Type: string
 #
-#RootDirectory =
+#RootDirectory = /var/db/firebird
 
 
 # ----------------------------
@@ -137,7 +137,7 @@
 #
 # Type: string (special format)
 #
-#UdfAccess = Restrict UDF
+UdfAccess = Restrict %%PREFIX%%/libexec/firebird/udf
 
 
 # ----------------------------


[FILE:2233:patches/patch-builds_posix_make.defaults]
--- builds/posix/make.defaults.orig	2017-02-14 09:17:14 UTC
+++ builds/posix/make.defaults
@@ -126,7 +126,7 @@ RM_R=		rm -rf
 CHMOD=			chmod
 CHMOD_6=		chmod 666
 CHMOD_7=		chmod 777
-CHMOD_S7=		chmod 06777
+CHMOD_S7=		chmod 04555
 MV=			mv -f
 TOUCH=			touch
 CP=			cp
@@ -152,7 +152,7 @@ EXE_LINK:= @CXX@ $(GLOB_OPTIONS) $(CXXFL
 STATICEXE_LINK:= @CXX@ $(GLOB_OPTIONS) $(CXXFLAGS)
 
 LINK_LIBS = @LIBS@
-ICU_LIBS = -licuuc -licudata -licui18n
+ICU_LIBS = -lsicuuc -lsicudata -lsicui18n
 STATICLINK_LIBS = @LIBS@
 SO_LINK_LIBS = @LIBS@
 
@@ -223,15 +223,14 @@ LIBFBSTATIC_A = $(LIB)/libfbstatic.a
 
 ifeq ($(EDITLINE_FLG),Y)
   ifeq ($(STD_EDITLINE), true)
-	LIBEDITLINE := -l$(READLINE)
+	LIBEDITLINE := $(shell pkgconf libedit --libs)
   else
 	LIBEDITLINE := $(LIB)/libedit.a
   endif
 endif
 
-LIBICU_SO = $(LIB)/$(LIB_PREFIX)icuuc*.$(SHRLIB_FOREIGN_EXT) \
-			$(LIB)/$(LIB_PREFIX)icudata*.$(SHRLIB_FOREIGN_EXT) \
-			$(LIB)/$(LIB_PREFIX)icui18n*.$(SHRLIB_FOREIGN_EXT)
+LIBICU_SO = $(LIB)/$(LIB_PREFIX)sicuuc*.a $(LIB)/$(LIB_PREFIX)sicudata*.a \
+		$(LIB)/$(LIB_PREFIX)sicui18n*.a
 
 # Shared library name for usage inside of the UDF
 IbUtilLibraryName = $(LIB_PREFIX)ib_util.$(SHRLIB_EXT)
@@ -305,7 +304,7 @@ CREATE_DB	= $(BIN)/create_db$(EXEC_EXT)
 GDS_DROP	= $(BIN)/gds_drop$(EXEC_EXT)
 FBSVCMGR	= $(BIN)/fbsvcmgr$(EXEC_EXT)
 FBTRACEMGR	= $(BIN)/fbtracemgr$(EXEC_EXT)
-GSTAT		= $(BIN)/gstat$(EXEC_EXT)
+GSTAT		= $(BIN)/fbstat$(EXEC_EXT)
 NBACKUP		= $(BIN)/nbackup$(EXEC_EXT)
 FBTRACE		= $(PLUGINS)/$(LIB_PREFIX)fbtrace.$(SHRLIB_EXT)
 LOCKPRINT	= $(BIN)/fb_lock_print$(EXEC_EXT)
@@ -327,14 +326,14 @@ ISC_GBAK	= $(BIN)/security.gbak
 QLI            = $(BIN)/qli$(EXEC_EXT)
 
 # From isql
-ISQL            = $(BIN)/isql$(EXEC_EXT)
-ISQL_STATIC     = $(BIN)/isql_static$(EXEC_EXT)
-MUISQL          = $(BIN)/muisql$(EXEC_EXT)
+ISQL            = $(BIN)/isql-fb$(EXEC_EXT)
+ISQL_STATIC     = $(BIN)/isql-fb_static$(EXEC_EXT)
+MUISQL          = $(BIN)/muisql-fb$(EXEC_EXT)
 
 # From burp
 GBAK_STATIC     = $(BIN)/gbak_static$(EXEC_EXT)
 GBAK            = $(BIN)/gbak$(EXEC_EXT)
-GSPLIT          = $(BIN)/gsplit$(EXEC_EXT)
+GSPLIT          = $(BIN)/fbsplit$(EXEC_EXT)
 
 # From gpre
 # (gpre current is a link to one of the others)


[FILE:358:patches/patch-builds_posix_make.rules]
--- builds/posix/make.rules.orig	2016-06-30 09:34:53 UTC
+++ builds/posix/make.rules
@@ -37,6 +37,8 @@ WFLAGS:=$(CPPFLAGS) -I$(SRC_ROOT)/includ
 
 ifeq ($(STD_ICU),false)
   WFLAGS:= $(WFLAGS) -I$(ROOT)/extern/icu/source/common -I$(ROOT)/extern/icu/source/i18n
+else
+  WFLAGS:= $(WFLAGS) $(shell icu-config --cppflags)
 endif
 
 ifeq ($(IsProdTypeBuild),Y)


[FILE:2462:patches/patch-configure]
--- configure.orig	2017-02-14 09:42:30 UTC
+++ configure
@@ -2428,7 +2428,7 @@ _ACEOF
     SHRLIB_EXT=so
     ;;
 
-  amd64-*-freebsd* | x86_64*-*-freebsd* | x86_64*-*-k*bsd*-gnu)
+  amd64-*-freebsd* | x86_64*-*-freebsd* | x86_64-*-dragonfly* | x86_64*-*-k*bsd*-gnu)
     MAKEFILE_PREFIX=freebsd_amd64
     case "$target" in
         x86_64*-*-k*bsd-gnu)      # Debian/kFreeBSD
@@ -2466,7 +2466,7 @@ _ACEOF
     SHRLIB_EXT=so
     ;;
 
-  *-*-freebsd* | *-*-k*bsd*-gnu)
+  *-*-freebsd* | *-*-dragonfly* | *-*-k*bsd*-gnu)
     MAKEFILE_PREFIX=freebsd
     case "$target" in
         *-*-k*bsd-gnu)      # Debian/kFreeBSD
@@ -4502,7 +4502,7 @@ $as_echo "$as_me: WARNING: we do not kno
 $as_echo_n "checking if more special flags are required for pthreads... " >&6; }
         flag=no
         case "${host_cpu}-${host_os}" in
-                *-aix* | *-freebsd* | *-darwin*) flag="-D_THREAD_SAFE";;
+                *-aix* | *-freebsd* | *-dragonfly* | *-darwin*) flag="-D_THREAD_SAFE";;
                 *solaris* | *-osf* | *-hpux*) flag="-D_REENTRANT";;
         esac
         { $as_echo "$as_me:$LINENO: result: ${flag}" >&5
@@ -11582,7 +11582,7 @@ freebsd* | dragonfly*)
     shlibpath_overrides_runpath=no
     hardcode_into_libs=yes
     ;;
-  freebsd*) # from 4.6 on
+  freebsd*|dragonfly*) # from 4.6 on
     shlibpath_overrides_runpath=yes
     hardcode_into_libs=yes
     ;;
@@ -15574,7 +15574,7 @@ freebsd* | dragonfly*)
     shlibpath_overrides_runpath=no
     hardcode_into_libs=yes
     ;;
-  freebsd*) # from 4.6 on
+  freebsd*|dragonfly*) # from 4.6 on
     shlibpath_overrides_runpath=yes
     hardcode_into_libs=yes
     ;;
@@ -18202,7 +18202,7 @@ freebsd* | dragonfly*)
     shlibpath_overrides_runpath=no
     hardcode_into_libs=yes
     ;;
-  freebsd*) # from 4.6 on
+  freebsd*|dragonfly*) # from 4.6 on
     shlibpath_overrides_runpath=yes
     hardcode_into_libs=yes
     ;;
@@ -20837,7 +20837,7 @@ freebsd* | dragonfly*)
     shlibpath_overrides_runpath=no
     hardcode_into_libs=yes
     ;;
-  freebsd*) # from 4.6 on
+  freebsd*|dragonfly*) # from 4.6 on
     shlibpath_overrides_runpath=yes
     hardcode_into_libs=yes
     ;;
@@ -43305,7 +43305,7 @@ fi
 
 (cd extern/icu/source
 chmod +x runConfigureICU configure install-sh
-./runConfigureICU "$ICU_PLATFORM" "$DEBUG_ICU" "$ICU_EXTRAS" --prefix=`pwd`/..)
+./runConfigureICU "$ICU_PLATFORM" "$DEBUG_ICU" "$ICU_EXTRAS" --disable-shared --enable-static --prefix=`pwd`/..)
 fi
 
 echo


[FILE:830:patches/patch-extern_icu_source_config_mh-bsd-gcc]
--- extern/icu/source/config/mh-bsd-gcc.orig	2017-02-14 09:17:14 UTC
+++ extern/icu/source/config/mh-bsd-gcc
@@ -26,14 +26,14 @@ STATIC_O = ao
 
 ## Compilation rules
 %.$(STATIC_O): $(srcdir)/%.c
-	$(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) -o $@ $<
+	$(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) -fPIC -DPIC -o $@ $<
 %.o: $(srcdir)/%.c
-	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -o $@ $<
+	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -fPIC -DPIC -o $@ $<
 
 %.$(STATIC_O): $(srcdir)/%.cpp
-	$(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) -o $@ $<
+	$(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) -fPIC -DPIC -o $@ $<
 %.o: $(srcdir)/%.cpp
-	$(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) -o $@ $<
+	$(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) -fPIC -DPIC -o $@ $<
 
 
 ## Dependency rules


[FILE:826:patches/patch-extern_icu_source_config_mh-linux]
--- extern/icu/source/config/mh-linux.orig	2017-02-14 09:17:14 UTC
+++ extern/icu/source/config/mh-linux
@@ -33,14 +33,14 @@ STATIC_O = ao
 
 ## Compilation rules
 %.$(STATIC_O): $(srcdir)/%.c
-	$(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) -o $@ $<
+	$(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) -fPIC -DPIC -o $@ $<
 %.o: $(srcdir)/%.c
-	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -o $@ $<
+	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -fPIC -DPIC -o $@ $<
 
 %.$(STATIC_O): $(srcdir)/%.cpp
-	$(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) -o $@ $<
+	$(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) -fPIC -DPIC -o $@ $<
 %.o: $(srcdir)/%.cpp
-	$(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) -o $@ $<
+	$(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) -fPIC -DPIC -o $@ $<
 
 
 ## Dependency rules


[FILE:396:patches/patch-extern_icu_source_configure]
--- extern/icu/source/configure.orig	2017-02-14 09:17:14 UTC
+++ extern/icu/source/configure
@@ -3122,7 +3122,7 @@ alpha*-*-linux-gnu)
 	  	icu_cv_host_frag=mh-cygwin-msvc
 	fi ;;
 *-*-mingw*) icu_cv_host_frag=mh-mingw ;;
-*-*-*bsd*) 	icu_cv_host_frag=mh-bsd-gcc ;;
+*-*-*bsd*|*-*-dragonfly*) 	icu_cv_host_frag=mh-bsd-gcc ;;
 *-*-aix*)
 	if test "$GCC" = yes; then
 		icu_cv_host_frag=mh-aix-gcc


[FILE:330:patches/patch-extern_icu_source_runConfigureICU]
--- extern/icu/source/runConfigureICU.orig	2017-02-14 09:17:15 UTC
+++ extern/icu/source/runConfigureICU
@@ -299,7 +299,7 @@ case $platform in
         RELEASE_CFLAGS='-O2'
         RELEASE_CXXFLAGS='-O2'
         ;;
-    *BSD)
+    *BSD|DragonFly)
         THE_OS="BSD"
         THE_COMP="the GNU C++"
         CC=gcc; export CC


[FILE:368:patches/patch-extern_icu_source_tools_genrb_Makefile.in]
--- extern/icu/source/tools/genrb/Makefile.in.orig	2017-02-14 09:17:16 UTC
+++ extern/icu/source/tools/genrb/Makefile.in
@@ -81,7 +81,7 @@ $(TARGET) : $(OBJECTS)
 	$(LINK.cc) $(OUTOPT)$@ $^ $(LIBS) 
 
 $(DERB) : $(DERB_OBJ)
-	$(LINK.c) $(OUTOPT)$@ $^ $(LIBS) 
+	$(LINK.cc) $(OUTOPT)$@ $^ $(LIBS) 
 
 
 # the 'mv' will always fail if you are building in the source dir


[FILE:400:patches/patch-extern_icu_source_tools_pkgdata_Makefile.in]
--- extern/icu/source/tools/pkgdata/Makefile.in.orig	2017-02-14 09:17:16 UTC
+++ extern/icu/source/tools/pkgdata/Makefile.in
@@ -90,7 +90,7 @@ Makefile: $(srcdir)/Makefile.in  $(top_b
 	&& CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
 
 $(TARGET) : $(OBJECTS)
-	$(LINK.c) $(OUTOPT)$@ $^ $(LIBS) 
+	$(LINK.cc) $(OUTOPT)$@ $^ $(LIBS) 
 
 ifeq (,$(MAKECMDGOALS))
 -include $(DEPS)


[FILE:484:patches/patch-src-common-classes-FpeControl.h]
--- src/common/classes/FpeControl.h.orig	2016-06-30 09:34:54 UTC
+++ src/common/classes/FpeControl.h
@@ -223,13 +223,13 @@ inline bool isinf(double x)
 	return (!_finite (x) && !isnan(x));
 }
 #else
-#ifndef isinf
+#if !defined isinf  && !defined __FreeBSD__ && !defined __DragonFly__
 template <typename F>
 inline bool isinf(F x)
 {
 	return !isnan(x) && isnan(x - x);
 }
-#endif // isinf
+#endif // isinf || FreeBSD || DragonFly
 #endif // WIN_NT
 
 #endif //CLASSES_FPE_CONTROL_H


[FILE:426:patches/patch-src_jrd_isc__sync.cpp]
--- src/jrd/isc_sync.cpp.orig	2016-06-30 09:34:54 UTC
+++ src/jrd/isc_sync.cpp
@@ -677,7 +677,7 @@ namespace {
 	public:
 		const static int N_FILES = 128;
 		const static int N_SETS = 256;
-#if defined(DEV_BUILD)
+#if defined(DEV_BUILD) || defined(FREEBSD)
 		const static int SEM_PER_SET = 4;	// force multiple sets allocation
 #else
 		const static int SEM_PER_SET = 31;	// hard limit for some old systems, might set to 32


[FILE:1896:files/firebird.in]
#!/bin/sh
#
# PROVIDE: firebird
# REQUIRE: LOGIN
# KEYWORD: shutdown
#
# Add the following line to /etc/rc.conf to enable Firebird Database:
#
#
# firebird_enable:	Set it to "YES" to enable firebird.
#			Default is "NO".
# firebird_mode:	Set it to "superclassic" or "superserver" to enable firebird.
#			Default is "superclassic".
# firebird_flags:	Set options to run fbserver or fb_smp_server.
# 			Default is "-el /var/db/firebird".
# firebird_pidfile:	Set full path to pid file.
#			Default is "/var/run/firebird.pid".
#

. /etc/rc.subr

name=firebird
rcvar=firebird_enable

load_rc_config $name

firebird_enable=${firebird_enable:-"NO"}
firebird_mode=${firebird_mode:-"superclassic"}
firebird_flags=${firebird_flags:-"-el /var/db/firebird"}
firebird_pidfile=${firebird_pidfile:-"/var/run/${name}.pid"}
firebird_user=firebird

command=%%PREFIX%%/sbin/fb_smp_server
command_args="${firebird_flags} &"
pidfile=${firebird_pidfile}
start_precmd="start_precmd"
start_postcmd="start_postcmd"
stop_postcmd="stop_postcmd"
reload_postcmd="reload_postcmd"

start_precmd()
{
	touch ${firebird_pidfile}
	chown "${firebird_user}:wheel" ${firebird_pidfile} ||
		err 1 "Cannot chown ${firebird_pidfile}"
}

start_postcmd()
{
	pgrep -u ${firebird_user} ${command_app} > ${firebird_pidfile}
	echo "Current firebird mode is $firebird_mode"
}

stop_postcmd()
{
        rm -f ${pidfile}
}

reload_postcmd()
{
        rm -f ${pidfile}
        run_rc_command start
}

case "${firebird_mode}" in
        superclassic)
                command=%%PREFIX%%/sbin/fb_smp_server
                command_app=fb_smp_server
                ;;
        superserver)
                command=%%PREFIX%%/sbin/fbserver
                command_app=fbserver
                ;;
        *)
                warn "$firebird_mode is an invalid value for firebird_mode"
                return 1
                ;;
esac

run_rc_command "$1"


[FILE:838:files/pkg-install-server]
#!/bin/sh

PATH=/bin:/usr/bin:/usr/sbin

buildwarning() {
cat <<EOF
###############################################################################

                             ** IMPORTANT **

Keep in mind that if you build firebird server as 'root', this may cause
conflicts with SysV semaphores of running services.

If you want to cancel it, press ctrl-C now if you need check some things
before of build it.

###############################################################################
EOF
        sleep 5
}

case $2 in
PRE-INSTALL)
	buildwarning
;;
POST-INSTALL)
	cd /var/db/firebird

# Lock files

for i in isc_init1 isc_lock1 isc_event1
do
	FileName=$i.`hostname`
	touch $FileName
	chmod uga=rw $FileName
	chown firebird:firebird $FileName
done

touch firebird.log
chown firebird:firebird firebird.log security2.fdb

;;

esac


[FILE:1468:files/pkg-message-server.in]
###############################################################################

Firebird was installed.

1) Support for Super Server has been added
2) Before start the server ensure that the following line exists in /etc/services:

gds_db		3050/tcp  #InterBase Database Remote Protocol

3) If you use inetd (Classic Server) then add the following line to /etc/inetd.conf

gds_db	stream	tcp	nowait	firebird	%%PREFIX%%/sbin/fb_inet_server  fb_inet_server

And finally restart inetd.

4) If you want to use SuperClassic Server then you must add the following lines
   to /etc/rc.conf file.

 firebird_enable="YES"
 firebird_mode="superclassic"

5) If you want to use Super Server then you must add the following lines to
   /etc/rc.conf file.

 firebird_enable="YES"
 firebird_mode="superserver"

 Note: Keep in mind that you only can add one of them but never both modes on
       the same time

6) Bedore doing anything serious with Firebird, it is STRONGLY recommended
   that you change the SYSDBA password with:

 # gsec -user SYSDBA -pass masterkey
 GSEC> modify SYSDBA -pw newpassword
 GSEC> quit

7) See documentation in %%DOCDIR%%/ for more information.
8) Some firebird tools were renamed for avoid conflicts with some other ports

	%%PREFIX%%/bin/isql   -> %%PREFIX%%/bin/isql-fb
	%%PREFIX%%/bin/gstat  -> %%PREFIX%%/bin/fbstat
	%%PREFIX%%/bin/gsplit -> %%PREFIX%%/bin/fbsplit

################################################################################


[FILE:163:dragonfly/patch-builds_posix_empty.vers]
--- builds/posix/empty.vers.orig	2016-06-30 09:34:53 UTC
+++ builds/posix/empty.vers
@@ -27,6 +27,8 @@
 {
 global:
 	main;
+	__progname;
+	environ;
 
 local:
 	*;


[FILE:225:dragonfly/patch-builds_posix_firebird.vers]
--- builds/posix/firebird.vers.orig	2016-06-30 09:34:53 UTC
+++ builds/posix/firebird.vers
@@ -25,6 +25,8 @@
 
 {
 global:
+	__progname;
+	environ;
 # private entrypoint for REMOTE server
 	server_main;
 #-------------------


[FILE:163:freebsd/patch-builds_posix_empty.vers]
--- builds/posix/empty.vers.orig	2016-06-30 09:34:53 UTC
+++ builds/posix/empty.vers
@@ -27,6 +27,8 @@
 {
 global:
 	main;
+	__progname;
+	environ;
 
 local:
 	*;


[FILE:225:freebsd/patch-builds_posix_firebird.vers]
--- builds/posix/firebird.vers.orig	2016-06-30 09:34:53 UTC
+++ builds/posix/firebird.vers
@@ -25,6 +25,8 @@
 
 {
 global:
+	__progname;
+	environ;
 # private entrypoint for REMOTE server
 	server_main;
 #-------------------

