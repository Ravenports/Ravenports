# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-driver-input-synaptics
VERSION=		1.9.1
KEYWORDS=		x11_drivers
VARIANTS=		standard
SDESC[standard]=	X.org input driver for Synaptics touchpad devices
HOMEPAGE=		https://www.x.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		XORG/individual/driver
DISTFILE[1]=		xf86-input-synaptics-1.9.1.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	xorg-server:single:standard

USES=			libtool
XORG_COMPONENTS=	xorgproto xtst

DISTNAME=		xf86-input-synaptics-1.9.1

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11-drivers/xf86-input-synaptics

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip

post-patch:
	# disable evdev requirement on linux for now
	${REINPLACE_CMD} -e '/BUILD_EVENTCOMM="yes"/d' ${WRKSRC}/configure

[FILE:61:descriptions/desc.single]
This package contains the X.Org xf86-input-synaptics driver.


[FILE:113:distinfo]
7af83526eff1c76e8b9e1553b34245c203d029028d8044dd9dcf71eef1001576       503722 xf86-input-synaptics-1.9.1.tar.bz2


[FILE:253:manifests/plist.single]
bin/
 synclient
 syndaemon
include/xorg/synaptics-properties.h
lib/pkgconfig/xorg-synaptics.pc
lib/xorg/modules/input/synaptics_drv.so
share/X11/xorg.conf.d/70-synaptics.conf
share/man/man1/
 synclient.1.gz
 syndaemon.1.gz
share/man/man4/synaptics.4.gz


[FILE:515:patches/patch-src_eventcomm.c]
--- src/eventcomm.c.orig	2016-09-30 07:09:32 UTC
+++ src/eventcomm.c
@@ -421,10 +421,15 @@ event_get_abs(struct libevdev *evdev, in
     /* We dont trust a zero fuzz as it probably is just a lazy value */
     if (fuzz && abs->fuzz > 0)
         *fuzz = abs->fuzz;
+#ifdef __linux__
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,30)
     if (res)
         *res = abs->resolution;
 #endif
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
+    if (res)
+        *res = abs->resolution;
+#endif

     return 0;
 }


[FILE:341:patches/patch-src_eventcomm.h]
--- src/eventcomm.h.orig	2015-11-24 23:47:05 UTC
+++ src/eventcomm.h
@@ -30,7 +30,15 @@
 #include <xorg-server.h>
 
 #include <linux/input.h>
+#ifdef __linux__
 #include <linux/version.h>
+#else
+#undef BUS_NONE
+#undef BUS_PCI
+#undef BUS_SBUS
+#undef BUS_PLATFORM
+#undef BUS_last
+#endif
 #include <xf86Xinput.h>
 #include "synproto.h"
 


[FILE:1575:patches/patch-src_synaptics.c]
--- src/synaptics.c.orig	2016-09-30 07:09:32 UTC
+++ src/synaptics.c
@@ -2599,7 +2599,7 @@ HandleScrolling(SynapticsPrivate * priv,
 
         priv->scroll.delta_y += priv->scroll.coast_speed_y * dtime * abs(para->scroll_dist_vert);
         delay = MIN(delay, POLL_MS);
-        if (abs(priv->scroll.coast_speed_y) < ddy) {
+        if (fabs(priv->scroll.coast_speed_y) < ddy) {
             priv->scroll.coast_speed_y = 0;
             priv->scroll.packets_this_scroll = 0;
         }
@@ -2614,7 +2614,7 @@ HandleScrolling(SynapticsPrivate * priv,
         double ddx = para->coasting_friction * dtime;
         priv->scroll.delta_x += priv->scroll.coast_speed_x * dtime * abs(para->scroll_dist_horiz);
         delay = MIN(delay, POLL_MS);
-        if (abs(priv->scroll.coast_speed_x) < ddx) {
+        if (fabs(priv->scroll.coast_speed_x) < ddx) {
             priv->scroll.coast_speed_x = 0;
             priv->scroll.packets_this_scroll = 0;
         }
@@ -2670,8 +2670,8 @@ clickpad_guess_clickfingers(SynapticsPri
              * really, this should be dependent on the touchpad size. Also,
              * you'll need to find a touchpad that doesn't lie about it's
              * size. Good luck. */
-            if (abs(x1 - x2) < (priv->maxx - priv->minx) * .3 &&
-                abs(y1 - y2) < (priv->maxy - priv->miny) * .3) {
+            if (fabs(x1 - x2) < (priv->maxx - priv->minx) * .3 &&
+                fabs(y1 - y2) < (priv->maxy - priv->miny) * .3) {
                 close_point |= (1 << j);
                 close_point |= (1 << i);
             }

