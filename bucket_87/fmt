# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		fmt
VERSION=		10.1.1
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Open-source formatting library for C++
HOMEPAGE=		https://fmt.dev/latest/index.html
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/fmtlib/fmt/releases/download/10.1.1/
DISTFILE[1]=		fmt-10.1.1.zip:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe cmake ninja c++:primary

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE.rst
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/libfmt

SOVERSION=		10.1.1

CMAKE_ARGS=		-DBUILD_SHARED_LIBS:BOOL=ON
			-DFMT_DOC:BOOL=OFF
			-DFMT_TEST:BOOL=OFF

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libfmt.so

[FILE:1476:descriptions/desc.primary]
{fmt} is an open-source formatting library providing a fast and safe
alternative to C stdio and C++ iostreams.

Features
- Simple format API with positional arguments for localization
- Implementation of C++20 std::format
- Format string syntax similar to Python's format
- Fast IEEE 754 floating-point formatter with correct rounding, shortness
  and round-trip guarantees
- Safe printf implementation including the POSIX extension for positional
  arguments
- Extensibility: support for user-defined types
- High performance: faster than common standard library implementations
  of (s)printf, iostreams, to_string and to_chars, see Speed tests and
  Converting a hundred million integers to strings per second
- Small code size both in terms of source code with the minimum
  configuration consisting of just three files, core.h, format.h and
  format-inl.h, and compiled code; see Compile time and code bloat
- Reliability: the library has an extensive set of fuzz tests
- Safety: the library is fully type safe, errors in format strings can be
  reported at compile time, automatic memory management prevents buffer
  overflow errors
- Ease of use: small self-contained code base, no external dependencies,
  permissive MIT license
- Portability with consistent output across platforms and old compilers
- Clean warning-free codebase even on high warning levels
- Locale-independence by default
- Optional header-only configuration enabled with the FMT_HEADER_ONLY macro


[FILE:93:distinfo]
b84e58a310c9b50196cda48d5678d5fa0849bca19e5fdba6b684f0ee93ed9d1b      1278116 fmt-10.1.1.zip


[FILE:53:manifests/plist.primary]
lib/
 libfmt.so.%%SOMAJOR%%
 libfmt.so.%%SOVERSION%%


[FILE:289:manifests/plist.dev]
include/fmt/
 args.h
 chrono.h
 color.h
 compile.h
 core.h
 format-inl.h
 format.h
 os.h
 ostream.h
 printf.h
 ranges.h
 std.h
 xchar.h
lib/libfmt.so
lib/cmake/fmt/
 fmt-config-version.cmake
 fmt-config.cmake
 fmt-targets-%%CMAKE_BUILD_TYPE%%.cmake
 fmt-targets.cmake
lib/pkgconfig/fmt.pc

