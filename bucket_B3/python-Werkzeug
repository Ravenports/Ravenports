# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-Werkzeug
VERSION=		0.12.2
KEYWORDS=		python devel
VARIANTS=		py27 py35 py36
SDESC[py35]=		Swiss Army knife of Python web development (PY 35)
SDESC[py36]=		Swiss Army knife of Python web development (PY 36)
SDESC[py27]=		Swiss Army knife of Python web development (PY 27)
HOMEPAGE=		http://werkzeug.pocoo.org/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/W/Werkzeug
DISTFILE[1]=		Werkzeug-0.12.2.tar.gz:main
DF_INDEX=		1
SPKGS[py35]=		single
SPKGS[py36]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY35 PY36
OPTIONS_STANDARD=	none
VOPTS[py35]=		PY27=OFF PY35=ON PY36=OFF
VOPTS[py36]=		PY27=OFF PY35=OFF PY36=ON
VOPTS[py27]=		PY27=ON PY35=OFF PY36=OFF

DISTNAME=		Werkzeug-0.12.2

LICENSE=		BSDGROUP:single
LICENSE_SCHEME=		solo
LICENSE_FILE=		BSDGROUP:{{WRKSRC}}/LICENSE

GENERATED=		yes

[PY35].USES_ON=				python:py35

[PY36].USES_ON=				python:py36

[PY27].USES_ON=				python:py27

[FILE:1591:descriptions/desc.single]

Werkzeug
========

Werkzeug started as simple collection of various utilities for WSGI
applications and has become one of the most advanced WSGI utility
modules.  It includes a powerful debugger, full featured request and
response objects, HTTP utilities to handle entity tags, cache control
headers, HTTP dates, cookie handling, file uploads, a powerful URL
routing system and a bunch of community contributed addon modules.

Werkzeug is unicode aware and doesn't enforce a specific template
engine, database adapter or anything else.  It doesn't even enforce
a specific way of handling requests and leaves all that up to the
developer. It's most useful for end user applications which should work
on as many server environments as possible (such as blogs, wikis,
bulletin boards, etc.).

Details and example applications are available on the
`Werkzeug website <http://werkzeug.pocoo.org/>`_.


Features
--------

-   unicode awareness

-   request and response objects

-   various utility functions for dealing with HTTP headers such as
    `Accept` and `Cache-Control` headers.

-   thread local objects with proper cleanup at request end

-   an interactive debugger

-   A simple WSGI server with support for threading and forking
    with an automatic reloader.

-   a flexible URL routing system with REST support.

-   fully WSGI compatible


Development Version
-------------------

The Werkzeug development version can be installed by cloning the git
repository from `github`_::

    git clone git@github.com:pallets/werkzeug.git

.. _github: http://github.com/pallets/werkzeug



[FILE:101:distinfo]
903a7b87b74635244548b30d30db4c8947fe64c5198f58899ddcd3a13c23bb26      1169770 Werkzeug-0.12.2.tar.gz

