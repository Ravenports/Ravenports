# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-xcb-util-cursor
VERSION=		0.1.3
KEYWORDS=		x11
VARIANTS=		standard
SDESC[standard]=	XCB cursor library
HOMEPAGE=		https://xcb.freedesktop.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://xcb.freedesktop.org/dist/
DISTFILE[1]=		xcb-util-cursor-0.1.3.tar.bz2:main
DIST_SUBDIR=		xorg
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gperf:single:standard

USES=			libtool gmake
XORG_COMPONENTS=	xproto xcb xcb-render-util xcb-util xcb-util-image

DISTNAME=		xcb-util-cursor-0.1.3

FPC_EQUIVALENT=		x11/xcb-util-cursor

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip

[FILE:514:descriptions/desc.single]
The xcb-util module provides a number of libraries which sit on top of
libxcb, the core X protocol library, and some of the extension
libraries. These experimental libraries provide convenience functions
and interfaces which make the raw X protocol more usable. Some of the
libraries also provide client-side code which is not strictly part of
the X protocol but which have traditionally been provided by Xlib.

The util-cursor module implements the XCB cursor library, which is th XCB
replacement for libXcursor.


[FILE:113:distinfo]
05a10a0706a1a789a078be297b5fb663f66a71fb7f7f1b99658264c35926394f       295224 xorg/xcb-util-cursor-0.1.3.tar.bz2


[FILE:137:manifests/plist.single]
include/xcb/xcb_cursor.h
lib/
 libxcb-cursor.a
 libxcb-cursor.so
 libxcb-cursor.so.0
 libxcb-cursor.so.0.0.0
lib/pkgconfig/xcb-cursor.pc


[FILE:544:patches/patch-cursor__shape_to_id.gperf]
--- cursor/shape_to_id.gperf.orig	2016-05-12 07:51:59 UTC
+++ cursor/shape_to_id.gperf
@@ -1,5 +1,5 @@
 struct shape_mapping { const char *name; int number; };
-const int cursor_shape_to_id(const char *name);
+int cursor_shape_to_id(const char *name);
 %%
 X_cursor,0
 arrow,1
@@ -79,7 +79,7 @@ ur_angle,74
 watch,75
 xterm,76
 %%
-const int cursor_shape_to_id(const char *name) {
+int cursor_shape_to_id(const char *name) {
 	struct shape_mapping *mapping = in_word_set(name, strlen(name));
 	return (mapping ? (mapping->number * 2) : -1);
 }


[FILE:404:patches/patch-cursor_cursor.h]
--- cursor/cursor.h.orig	2016-05-12 07:51:59 UTC
+++ cursor/cursor.h
@@ -161,7 +161,7 @@ typedef struct xcint_image_t {
 } __attribute__((packed)) xcint_image_t;
 
 /* shape_to_id.c */
-const int cursor_shape_to_id(const char *name);
+int cursor_shape_to_id(const char *name);
 
 /* parse_cursor_file.c */
 int parse_cursor_file(xcb_cursor_context_t *c, const int fd, xcint_image_t **images, int *nimg);

