# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-xft
VERSION=		2.3.9
KEYWORDS=		x11_fonts
VARIANTS=		std
SDESC[std]=		Client-sided font API for X applications
HOMEPAGE=		https://www.x.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		XORG/individual/lib
DISTFILE[1]=		libXft-2.3.9.tar.xz:main
DIST_SUBDIR=		xorg
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

EXRUN[dev]=		fontconfig:dev:std

USES=			libtool fontconfig pkgconfig zlib:build
XORG_COMPONENTS=	xrender

DISTNAME=		libXft-2.3.9

FPC_EQUIVALENT=		x11-fonts/libXft

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		2.3.9

post-patch:
	${REINPLACE_CMD} -e '/ac_config_files/s|xft\.pc|xft\.pc xft-config|' \
		${WRKSRC}/configure

post-install:
	${INSTALL_SCRIPT} ${WRKSRC}/xft-config ${STAGEDIR}${PREFIX}/bin/

post-extract:
	${CP} ${FILESDIR}/xft-config.in ${WRKSRC}/xft-config.in

[FILE:396:descriptions/desc.primary]
The current version of Xft provides a client-side font API for X
applications. It uses Fontconfig to select fonts and the X protocol for
rendering them. When available, Xft uses the Render extension to
accelerate text drawing. When Render is not available, Xft uses the core
protocol to draw client-side glyphs. This provides completely compatible
support of client-side fonts for all X servers.


[FILE:103:distinfo]
60a25b78945ed6932635b3bb1899a517d31df7456e69867ffba27f89ff3976f5       313852 xorg/libXft-2.3.9.tar.xz


[FILE:53:manifests/plist.primary]
lib/
 libXft.so.%%SOMAJOR%%
 libXft.so.%%SOVERSION%%


[FILE:99:manifests/plist.dev]
bin/xft-config
include/X11/Xft/
 Xft.h
 XftCompat.h
lib/
 libXft.a
 libXft.so
lib/pkgconfig/xft.pc


[FILE:1530:manifests/plist.man]
share/man/man3/
 Xft.3
 XftCharExists.3
 XftCharFontSpecRender.3
 XftCharIndex.3
 XftCharSpecRender.3
 XftColorAllocName.3
 XftColorAllocValue.3
 XftColorFree.3
 XftDefaultHasRender.3
 XftDefaultSet.3
 XftDefaultSubstitute.3
 XftDrawChange.3
 XftDrawCharFontSpec.3
 XftDrawCharSpec.3
 XftDrawColormap.3
 XftDrawCreate.3
 XftDrawCreateAlpha.3
 XftDrawCreateBitmap.3
 XftDrawDestroy.3
 XftDrawDisplay.3
 XftDrawDrawable.3
 XftDrawGlyphFontSpec.3
 XftDrawGlyphSpec.3
 XftDrawGlyphs.3
 XftDrawPicture.3
 XftDrawRect.3
 XftDrawSetClip.3
 XftDrawSetClipRectangles.3
 XftDrawSetSubwindowMode.3
 XftDrawSrcPicture.3
 XftDrawString16.3
 XftDrawString32.3
 XftDrawString8.3
 XftDrawStringUtf16.3
 XftDrawStringUtf8.3
 XftDrawVisual.3
 XftFontCheckGlyph.3
 XftFontClose.3
 XftFontCopy.3
 XftFontInfoCreate.3
 XftFontInfoDestroy.3
 XftFontInfoEqual.3
 XftFontInfoHash.3
 XftFontLoadGlyphs.3
 XftFontMatch.3
 XftFontOpen.3
 XftFontOpenInfo.3
 XftFontOpenName.3
 XftFontOpenPattern.3
 XftFontOpenXlfd.3
 XftFontUnloadGlyphs.3
 XftGetVersion.3
 XftGlyphExtents.3
 XftGlyphFontSpecRender.3
 XftGlyphRender.3
 XftGlyphSpecRender.3
 XftInit.3
 XftInitFtLibrary.3
 XftListFonts.3
 XftLockFace.3
 XftNameParse.3
 XftNameUnparse.3
 XftTextExtents16.3
 XftTextExtents32.3
 XftTextExtents8.3
 XftTextExtentsUtf16.3
 XftTextExtentsUtf8.3
 XftTextRender16.3
 XftTextRender16BE.3
 XftTextRender16LE.3
 XftTextRender32.3
 XftTextRender32BE.3
 XftTextRender32LE.3
 XftTextRender8.3
 XftTextRenderUtf16.3
 XftTextRenderUtf8.3
 XftUnlockFace.3
 XftXlfdParse.3


[FILE:1671:files/xft-config.in]
#! /bin/sh

prefix="@prefix@"
exec_prefix="@exec_prefix@"
libdir="@libdir@"
includedir="@includedir@"
version="@VERSION@"
freetypelibs="@FREETYPE_LIBS@"
freetypecflags="@FREETYPE_CFLAGS@"
fontconfiglibs="@FONTCONFIG_LIBS@"
fontconfigcflags="@FONTCONFIG_CFLAGS@"
xrenderlibs="@XRENDER_LIBS@"
xrendercflags="@XRENDER_CFLAGS@"

usage()
{
  cat <<EOF
Usage: xft-config [OPTIONS] [LIBRARIES]
Options:
 [--prefix[=DIR]]
 [--exec-prefix[=DIR]]
 [--version]
 [--libs]
 [--cflags]
EOF
  exit $1
}

if test $# -eq 0 ; then
  usage 1 1>&2
fi

while test $# -gt 0 ; do
  case "$1" in
  -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case $1 in
  --prefix=*)
    prefix=$optarg
    local_prefix=yes
    ;;
  --prefix)
    echo_prefix=yes
    ;;
  --exec-prefix=*)
    exec_prefix=$optarg
    exec_prefix_set=yes
    local_prefix=yes
    ;;
  --exec-prefix)
    echo_exec_prefix=yes
    ;;
  --version)
    echo $version
    exit 0
    ;;
  --cflags)
    echo_cflags=yes
    ;;
  --libs)
    echo_libs=yes
    ;;
  *)
    usage 1 1>&2
    ;;
  esac
  shift
done

if test "$local_prefix" = "yes" ; then
    if test "$exec_prefix_set" != "yes" ; then
      exec_prefix=$prefix
    fi
fi

if test "$echo_prefix" = "yes" ; then
 echo $prefix
fi

if test "$echo_exec_prefix" = "yes" ; then
 echo $exec_prefix
fi

if test "$echo_cflags" = "yes" ; then
 cflags="-I${includedir} ${freetypecflags} ${fontconfigcflags} ${xrendercflags}"
 echo $cflags
fi

if test "$echo_libs" = "yes" ; then
 libs="-lXft -lX11 ${freetypelibs} ${fontconfiglibs} ${xrenderlibs}"
 if test "${libdir}" != "/usr/lib" ; then
  echo -L${libdir} $libs
 else
  echo $libs
 fi
fi

# EOF

