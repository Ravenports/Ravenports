# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		florist
VERSION=		2016
KEYWORDS=		devel ada
VARIANTS=		standard
SDESC[standard]=	POSIX Ada binding, IEEE Standards 1003.5(b,c)
HOMEPAGE=		http://libre.adacore.com/
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://downloads.dragonlace.net/src/
DISTFILE[1]=		florist-gpl-2016-src.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BROKEN[linux]=		missing various type definition headers

USES=			gprbuild gmake

DISTNAME=		florist-gpl-2016-src

LICENSE=		GPLv3:single
LICENSE_SCHEME=		solo
LICENSE_FILE=		GPLv3:{{WRKSRC}}/COPYING3

MUST_CONFIGURE=		gnu

SUB_FILES=		florist.gpr

post-extract:
.if "${OPSYS}" != "FreeBSD"
	(cd ${WRKSRC}/configs && ${CP} pconfig.FreeBSD pconfig.${OPSYS})
.endif

[FILE:597:descriptions/desc.single]
Florist was produced by students and faculty of the Florida State University
Department of Computer Science, under contract to the US Department of
Defense, Defense Information Systems Agency, as a product of the POSIX Ada
Real-Time (PART) Project. When the contract was completed, in 1999, FSU turned
maintenance of Florist over to Ada Core Technologies, Inc.). The latest and
most complete free version is available from Adacore.

FLORIST is an implementation of the IEEE Standards 1003.5: 1992,
IEEE STD 1003.5b: 1996, and parts of IEEE STD 1003.5c: 1998, also known as
the POSIX Ada Bindings.


[FILE:106:distinfo]
658e32bfc3bd661bc7edc5b616dcd2427699e7b14065c5093b8a2d8c05ed1af8       291635 florist-gpl-2016-src.tar.gz


[FILE:5173:manifests/plist.single]
include/florist/
 ada_streams.ads
 ada_task_identification.ads
 posix-asynchronous_io.adb
 posix-asynchronous_io.ads
 posix-c.adb
 posix-c.ads
 posix-calendar.adb
 posix-calendar.ads
 posix-condition_variables.adb
 posix-condition_variables.ads
 posix-configurable_file_limits.adb
 posix-configurable_file_limits.ads
 posix-configurable_system_limits.adb
 posix-configurable_system_limits.ads
 posix-error_codes.ads
 posix-file_locking.adb
 posix-file_locking.ads
 posix-file_status-extensions.adb
 posix-file_status-extensions.ads
 posix-file_status.adb
 posix-file_status.ads
 posix-files.adb
 posix-files.ads
 posix-generic_shared_memory.adb
 posix-generic_shared_memory.ads
 posix-group_database.adb
 posix-group_database.ads
 posix-implementation-ok_signals.ads
 posix-implementation.adb
 posix-implementation.ads
 posix-io.adb
 posix-io.ads
 posix-limits.ads
 posix-memory_locking.adb
 posix-memory_locking.ads
 posix-memory_mapping.adb
 posix-memory_mapping.ads
 posix-memory_range_locking.adb
 posix-memory_range_locking.ads
 posix-message_queues.adb
 posix-message_queues.ads
 posix-mutexes.adb
 posix-mutexes.ads
 posix-options.ads
 posix-page_alignment.adb
 posix-page_alignment.ads
 posix-permissions-implementation.adb
 posix-permissions-implementation.ads
 posix-permissions.adb
 posix-permissions.ads
 posix-process_environment.adb
 posix-process_environment.ads
 posix-process_identification.adb
 posix-process_identification.ads
 posix-process_primitives.adb
 posix-process_primitives.ads
 posix-process_scheduling.adb
 posix-process_scheduling.ads
 posix-process_times.adb
 posix-process_times.ads
 posix-semaphores.adb
 posix-semaphores.ads
 posix-shared_memory_objects.adb
 posix-shared_memory_objects.ads
 posix-signals.adb
 posix-signals.ads
 posix-supplement_to_ada_io.adb
 posix-supplement_to_ada_io.ads
 posix-terminal_functions.adb
 posix-terminal_functions.ads
 posix-timers-extensions.adb
 posix-timers-extensions.ads
 posix-timers.adb
 posix-timers.ads
 posix-unsafe_process_primitives.adb
 posix-unsafe_process_primitives.ads
 posix-user_database.adb
 posix-user_database.ads
 posix.adb
 posix.ads
 posix_asynchronous_io.ads
 posix_c.ads
 posix_calendar.ads
 posix_condition_variables.ads
 posix_configurable_file_limits.ads
 posix_configurable_system_limits.ads
 posix_error_codes.ads
 posix_file_locking.ads
 posix_file_status.ads
 posix_files.ads
 posix_generic_shared_memory.ads
 posix_group_database.ads
 posix_io.ads
 posix_limits.ads
 posix_memory_locking.ads
 posix_memory_mapping.ads
 posix_memory_range_locking.ads
 posix_message_queues.ads
 posix_mutexes.ads
 posix_options.ads
 posix_page_alignment.ads
 posix_permissions.ads
 posix_process_environment.ads
 posix_process_identification.ads
 posix_process_primitives.ads
 posix_process_scheduling.ads
 posix_process_times.ads
 posix_semaphores.ads
 posix_shared_memory_objects.ads
 posix_signals.ads
 posix_supplement_to_ada_io.ads
 posix_terminal_functions.ads
 posix_timers.ads
 posix_unsafe_process_primitives.ads
 posix_user_database.ads
 system_storage_elements.ads
lib/florist/
 ada_streams.ali
 ada_task_identification.ali
 libflorist.a
 posix-asynchronous_io.ali
 posix-c.ali
 posix-calendar.ali
 posix-condition_variables.ali
 posix-configurable_file_limits.ali
 posix-configurable_system_limits.ali
 posix-error_codes.ali
 posix-file_locking.ali
 posix-file_status-extensions.ali
 posix-file_status.ali
 posix-files.ali
 posix-generic_shared_memory.ali
 posix-group_database.ali
 posix-implementation-ok_signals.ali
 posix-implementation.ali
 posix-io.ali
 posix-limits.ali
 posix-memory_locking.ali
 posix-memory_mapping.ali
 posix-memory_range_locking.ali
 posix-message_queues.ali
 posix-mutexes.ali
 posix-options.ali
 posix-page_alignment.ali
 posix-permissions-implementation.ali
 posix-permissions.ali
 posix-process_environment.ali
 posix-process_identification.ali
 posix-process_primitives.ali
 posix-process_scheduling.ali
 posix-process_times.ali
 posix-semaphores.ali
 posix-shared_memory_objects.ali
 posix-signals.ali
 posix-supplement_to_ada_io.ali
 posix-terminal_functions.ali
 posix-timers-extensions.ali
 posix-timers.ali
 posix-unsafe_process_primitives.ali
 posix-user_database.ali
 posix.ali
 posix_asynchronous_io.ali
 posix_c.ali
 posix_calendar.ali
 posix_condition_variables.ali
 posix_configurable_file_limits.ali
 posix_configurable_system_limits.ali
 posix_error_codes.ali
 posix_file_locking.ali
 posix_file_status.ali
 posix_files.ali
 posix_generic_shared_memory.ali
 posix_group_database.ali
 posix_io.ali
 posix_limits.ali
 posix_memory_locking.ali
 posix_memory_mapping.ali
 posix_memory_range_locking.ali
 posix_message_queues.ali
 posix_mutexes.ali
 posix_options.ali
 posix_page_alignment.ali
 posix_permissions.ali
 posix_process_environment.ali
 posix_process_identification.ali
 posix_process_primitives.ali
 posix_process_scheduling.ali
 posix_process_times.ali
 posix_semaphores.ali
 posix_shared_memory_objects.ali
 posix_signals.ali
 posix_supplement_to_ada_io.ali
 posix_terminal_functions.ali
 posix_timers.ali
 posix_unsafe_process_primitives.ali
 posix_user_database.ali
 system_storage_elements.ali
lib/gnat/florist.gpr


[FILE:890:patches/patch-Makefile.in]
--- Makefile.in.orig	2016-05-16 09:26:01 UTC
+++ Makefile.in
@@ -171,7 +171,14 @@ distclean: clean
 # install floristlib
 # make all files read-only to prevent recompilation
 install:
-	gprinstall -Pflorist $(PROJECT_FLAGS) -a -p -f --prefix=$(PREFIX) --sources-subdir=floristlib --lib-subdir=floristlib --link-lib-subdir=floristlib
-	chmod a-w $(PREFIX)/floristlib/*
+	mkdir -p $(DESTDIR)$(PREFIX)/lib/gnat \
+		 $(DESTDIR)$(PREFIX)/lib/florist \
+		 $(DESTDIR)$(PREFIX)/include/florist
+	$(BSD_INSTALL_DATA) gensrc/*.ad[bs] gensrc/threads/*.ad[bs] \
+		libsrc/*.ad[bs] libsrc/threads/*.ad[bs] \
+		$(DESTDIR)$(PREFIX)/include/florist
+	$(BSD_INSTALL_DATA) lib/*.ali $(DESTDIR)$(PREFIX)/lib/florist
+	$(BSD_INSTALL_DATA) lib/*.a $(DESTDIR)$(PREFIX)/lib/florist
+	$(BSD_INSTALL_DATA) ../florist.gpr $(DESTDIR)$(PREFIX)/lib/gnat
 
 .PHONY: all install clean distclean regen floristlib force


[FILE:678:patches/patch-c-posix-signals.c]
--- c-posix-signals.c.orig	2015-04-30 10:20:43 UTC
+++ c-posix-signals.c
@@ -468,9 +468,9 @@ int guess_nsigs () {
  */
 
 #if defined(__APPLE__)
-# define BADSIG (0)
+# define FLOR_BADSIG (0)
 #else
-# define BADSIG (-1)
+# define FLOR_BADSIG (-1)
 #endif
 
    sigset_t set;
@@ -484,7 +484,7 @@ int guess_nsigs () {
       result = sigismember (&set, sig);
       if (result == 1) {
          last_good = sig;
-      } else if ((result == BADSIG) && (first_bad == -1)) {
+      } else if ((result == FLOR_BADSIG) && (first_bad == -1)) {
          if (sig == 0) {
             fprintf (stderr, "WARNING: C library problem? "
              "sigfillset does not include zero\n");


[FILE:1555:patches/patch-c-posix.c]
--- c-posix.c.orig	2015-04-30 10:20:43 UTC
+++ c-posix.c
@@ -721,6 +721,25 @@ typedef struct siginfo {
 
 /* sigevent must precede aiocb
  */
+#if defined(__DragonFly__)
+/*
+ * union _sigev_info {
+ *  int   sigev_signo;
+ *  int   sigev_notify_kqueue;
+ *  void *sigev_notify_attributes;
+ * };
+ * sizeof(union _sigev_info) = sizeof(int)
+ * Use "int" rather than fooling with union
+ * For simplicity, The Ada part is only going to list sigev_signo
+ * as the other two elements of the union are unused.
+ */
+  GT1(sigevent, 1)
+  GT2(sigev_notify, int)
+  GT2(sigev_signo, int)
+  GT2(sigev_value, union sigval)
+  GT2(sigev_notify_function, void (*)(union sigval))
+  GT3
+#else  /* __DragonFly__ */
 #ifdef HAVE_struct_sigevent
   GT1(sigevent, 1)
 #else
@@ -743,6 +762,7 @@ struct sigevent {
   GT2(sigev_notify_attributes,pthread_attr_t *)
 #endif
   GT3
+#endif /* __DragonFly__ */
 
 #ifdef HAVE_struct_aiocb
   GT1(aiocb, 1)
@@ -5166,9 +5186,9 @@ void create_c() {
  */
 
 #if defined(__APPLE__)
-# define BADSIG 0
+# define FLOR_BADSIG 0
 #else
-# define BADSIG (-1)
+# define FLOR_BADSIG (-1)
 #endif
 {sigset_t set;
   int sig;
@@ -5179,7 +5199,7 @@ void create_c() {
   for (sig = 0; sig < 1024; sig++) {
     result = sigismember (&set, sig);
     if (result == 1) last_good = sig;
-    else if ((result == BADSIG) && (first_bad = -1)) first_bad = sig;
+    else if ((result == FLOR_BADSIG) && (first_bad = -1)) first_bad = sig;
   }
   if (last_good == 1023)
     printf("c-posix: WARNING: signal range estimate probably too small\n");


[FILE:780:patches/patch-configure]
--- configure.orig	2014-12-12 09:05:56 UTC
+++ configure
@@ -2849,10 +2849,18 @@ case ${UNAME_SYSTEM} in
     echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
     cp ./configs/pconfig.LynxOS ./pconfig.h.in;
     ;;
+ DragonFly)
+    echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
+    cp ./configs/pconfig.DragonFly ./pconfig.h.in;
+    ;;
  FreeBSD)
     echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
     cp ./configs/pconfig.FreeBSD ./pconfig.h.in;
     ;;
+ NetBSD)
+    echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
+    cp ./configs/pconfig.NetBSD ./pconfig.h.in;
+    ;;
  Darwin)
     echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
     cp ./configs/pconfig.Darwin ./pconfig.h.in;


[FILE:385:files/florist.gpr.in]
library project Florist is

   for Languages use ("Ada");

   for Source_Dirs use ("../../include/florist");
   for Library_Dir use "../../lib/florist";
   for Library_Name use "florist";
   for Library_Kind use "static";
   for Externally_Built use "True";

   package Linker is
      for Linker_Options use ("-L%%PREFIX%%/lib", "-Wl,-R,%%PREFIX%%/lib");
   end Linker;

end Florist;

