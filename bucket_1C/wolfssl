# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		wolfssl
VERSION=		5.7.2
KEYWORDS=		security devel
VARIANTS=		std
SDESC[std]=		Embedded SSL C-Library
HOMEPAGE=		https://www.wolfssl.com/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://www.wolfssl.com/
DISTFILE[1]=		wolfssl-5.7.2.zip:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe libtool mbsdfix

LICENSE=		GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/wolfssl/ssl.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		security/wolfssl

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-certgen
			--enable-des3
			--enable-dh
			--enable-dsa
			--enable-dtls
			--enable-ecc
			--enable-ipv6
			--enable-keygen
			--enable-opensslall
			--enable-opensslextra
			--enable-ripemd
			--enable-sessioncerts
			--enable-sha512
			--enable-shared
			--enable-sni
			--enable-ssh
			--enable-static
			--enable-tls13
			--enable-tls13-draft18

INSTALL_TARGET=		install-strip
SOVERSION=		42.2.0

CFLAGS=			-DWOLFSSL_ALT_NAMES

post-configure:
	${REINPLACE_CMD} \
		-e 's|$${prefix}/cyassl/include|$${prefix}/include/cyassl|' \
		-e 's|$${prefix}/cyassl/lib|$${prefix}/lib/cyassl|' \
		${WRKSRC}/Makefile

[FILE:532:descriptions/desc.primary]
WolfSSL is an embedded SSL Library for programmers building security
functionality into their applications and devices.

Highlights
- Up to TLS 1.3 and DTLS 1.3
- Full client and server support
- Progressive list of supported ciphers
- Key and Certificate generation
- OCSP, CRL support

Lightweight
- Small Size: 20-100kB
- Runtime Memory:  1-36kB
- 20x smaller than OpenSSL

Portable
- Abstraction Layers (OS, Custom I/O, Standard C library, and more)
- Simple API
- OpenSSL Compatibility Layer
- Long list of supported platforms


[FILE:96:distinfo]
07d580eb452aed737f1ce71aecc4f076276508f9454d70c8083772f6143ca160     25112699 wolfssl-5.7.2.zip


[FILE:61:manifests/plist.primary]
lib/
 libwolfssl.so.%%SOMAJOR%%
 libwolfssl.so.%%SOVERSION%%


[FILE:1660:manifests/plist.dev]
bin/wolfssl-config
include/wolfssl/
 callbacks.h
 certs_test.h
 crl.h
 error-ssl.h
 ocsp.h
 options.h
 quic.h
 sniffer.h
 sniffer_error.h
 ssl.h
 test.h
 version.h
 wolfio.h
include/wolfssl/openssl/
 aes.h
 asn1.h
 asn1t.h
 bio.h
 bn.h
 buffer.h
 camellia.h
 cmac.h
 cms.h
 compat_types.h
 conf.h
 crypto.h
 des.h
 dh.h
 dsa.h
 ec.h
 ec25519.h
 ec448.h
 ecdh.h
 ecdsa.h
 ed25519.h
 ed448.h
 engine.h
 err.h
 evp.h
 fips_rand.h
 hmac.h
 kdf.h
 lhash.h
 md4.h
 md5.h
 modes.h
 obj_mac.h
 objects.h
 ocsp.h
 opensslconf.h
 opensslv.h
 ossl_typ.h
 pem.h
 pkcs12.h
 pkcs7.h
 rand.h
 rc4.h
 ripemd.h
 rsa.h
 sha.h
 sha3.h
 srp.h
 ssl.h
 ssl23.h
 stack.h
 tls1.h
 txt_db.h
 ui.h
 x509.h
 x509_vfy.h
 x509v3.h
include/wolfssl/wolfcrypt/
 aes.h
 arc4.h
 asn.h
 asn_public.h
 blake2-impl.h
 blake2-int.h
 blake2.h
 camellia.h
 chacha.h
 chacha20_poly1305.h
 cmac.h
 coding.h
 compress.h
 cpuid.h
 cryptocb.h
 curve25519.h
 curve448.h
 des3.h
 dh.h
 dilithium.h
 dsa.h
 ecc.h
 eccsi.h
 ed25519.h
 ed448.h
 error-crypt.h
 ext_kyber.h
 ext_lms.h
 ext_xmss.h
 falcon.h
 fe_448.h
 fe_operations.h
 fips_test.h
 ge_448.h
 ge_operations.h
 hash.h
 hmac.h
 hpke.h
 integer.h
 kdf.h
 kyber.h
 lms.h
 logging.h
 md2.h
 md4.h
 md5.h
 mem_track.h
 memory.h
 misc.h
 mpi_class.h
 mpi_superclass.h
 pkcs12.h
 pkcs7.h
 poly1305.h
 pwdbased.h
 random.h
 rc2.h
 ripemd.h
 rsa.h
 sakke.h
 settings.h
 sha.h
 sha256.h
 sha3.h
 sha512.h
 signature.h
 siphash.h
 sm2.h
 sm3.h
 sm4.h
 sp_int.h
 sphincs.h
 srp.h
 tfm.h
 types.h
 visibility.h
 wc_encrypt.h
 wc_kyber.h
 wc_lms.h
 wc_port.h
 wc_xmss.h
 wolfevent.h
 wolfmath.h
 xmss.h
lib/
 libwolfssl.a
 libwolfssl.so
lib/pkgconfig/wolfssl.pc


[FILE:243:manifests/plist.docs]
share/doc/wolfssl/
 QUIC.md
 README.txt
 taoCert.txt
share/doc/wolfssl/example/
 async_client.c
 async_server.c
 client.c
 echoclient.c
 echoserver.c
 sctp-client-dtls.c
 sctp-client.c
 sctp-server-dtls.c
 sctp-server.c
 server.c
 tls_bench.c


[FILE:553:patches/patch-configure]
--- configure.orig	2024-07-08 19:13:44 UTC
+++ configure
@@ -40796,13 +40796,7 @@ echo "" >> $OPTION_FILE
 
 # Check for supported command to trim option with.
 # note: cut requires an argument to exit with success.
-if colrm >/dev/null 2>&1 </dev/null; then
-    TRIM="colrm 3"
-elif echo "" | cut -c1 >/dev/null 2>&1 </dev/null; then
     TRIM="cut -c1-2"
-else
-    as_fn_error $? "Could not find colrm or cut to make options file" "$LINENO" 5
-fi
 
 for option in $AM_CPPFLAGS $CPPFLAGS $AM_CFLAGS $CFLAGS; do
     opt_type=$(echo $option | $TRIM )

