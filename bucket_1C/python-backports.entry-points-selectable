# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-backports.entry-points-selectable
VERSION=		1.1.1
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Compatibility shim for importlib_metadata (3.10)
SDESC[py39]=		Compatibility shim for importlib_metadata (3.9)
HOMEPAGE=		https://github.com/jaraco/backports.entry_points_selectable
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/6d/2e/a6789183415658c7f2c41da8599d53077bd222233039f5c92bffbf23b28d
DISTFILE[1]=		backports.entry_points_selectable-1.1.1-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

DISTNAME=		backports.entry_points_selectable-1.1.1.dist-info

GENERATED=		yes

[PY39].USES_ON=				python:py39,wheel

[PY310].USES_ON=			python:py310,wheel

[FILE:1637:descriptions/desc.single]


   :alt: tests

   :alt: Code style: Black

Compatibility shim to ease adoption of `importlib_metadata 3.6
<https://importlib-metadata.readthedocs.io/en/latest/history.html#v3-6-0>`_.
Supplies forward-compatibility of "selectable" entry points even on older
versions of importlib_metadata and ``importlib.metadata``, and avoids usage
that triggers [deprecation warnings].

Use this shim for libraries or applications invoking ``entry_points()``
that run on Python older than 3.10 or where importlib_metadata is older
than 3.6. In most cases, this shim is unnecessary and the easiest thing to
do is simply require ``importlib_metadata >= 3.6`` on all Pythons (or only
those prior to 3.10a7). In some environments, a library may be constrained
on which versions of importlib_metadata can be required, so this library
bridges that gap.

To use this shim, add ``backports.entry_points_selectable`` to your project
requirements. It will require importlib_metadata automatically where needed
(prior to Python 3.8) but be satisfied by older versions. Projects should
still require importlib_metadata as appropriate for API uses other than for
entry_points.

Then in code, instead of ``from importlib.metadata import entry_points``,
use::

    from backports.entry_points_selectable import entry_points

And then use the "selectable" features (pass keyword arguments to
entry_points or invoke ``.select()`` on the result).

This backport has a very lenient dependency on `importlib_metadata` for
older Pythons and is a single module implementation. If adding a dependency
is a concern, this module may be vendored into the downstream project.


[FILE:139:distinfo]
7fceed9532a7aa2bd888654a7314f864a3c16a4e710b34a58cfc0f08114c663b         6188 backports.entry_points_selectable-1.1.1-py2.py3-none-any.whl

