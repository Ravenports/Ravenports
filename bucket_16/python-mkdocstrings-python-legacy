# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-mkdocstrings-python-legacy
VERSION=		0.2.6
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Legacy Python handler for mkdocstrings (3.12)
SDESC[v13]=		Legacy Python handler for mkdocstrings (3.13)
HOMEPAGE=		https://mkdocstrings.github.io/python-legacy
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/f1/04/bbefcd0049334a619746a4cd5bd8fd24d9f1723c92ad2261024758fa7290
DISTFILE[1]=		mkdocstrings_python_legacy-0.2.6-py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		mkdocstrings_python_legacy-0.2.6.dist-info

GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-mkdocstrings:single:v12
					python-mkdocs-autorefs:single:v12
					python-pytkdocs:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-mkdocstrings:single:v13
					python-mkdocs-autorefs:single:v13
					python-pytkdocs:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:2491:descriptions/desc.single]
<h1 align="center">mkdocstrings-python-legacy</h1>

<p align="center">The legacy Python handler for <i>mkdocstrings</i>.</p>

<p align="center">
  
    [image]
  
  
    [image]
  
  
    [image]
  
  
    [image]
  
  
    [image]
  
</p>

---

<p align="center">[image]</p>

WARNING: We suggest using the new handler instead:
[mkdocstrings-python].

## Installation

You can install this handler as a *mkdocstrings* extra:

```toml title="pyproject.toml"
# PEP 621 dependencies declaration
# adapt to your dependencies manager
[project]
dependencies = [
    "mkdocstrings[python-legacy]>=0.18",
]
```

You can also explicitely depend on the handler:

```toml title="pyproject.toml"
# PEP 621 dependencies declaration
# adapt to your dependencies manager
[project]
dependencies = [
    "mkdocstrings-python-legacy",
]
```

## Preview

<!-- TODO: update the GIF with a more recent screen capture. Maybe use mp4
instead -->
![mkdocstrings_python_gif]

## Features

- **Data collection from source code**: collection of the object-tree and
the docstrings is done thanks to
  [pytkdocs].

- **Support for type annotations:** pytkdocs collects your type annotations
and *mkdocstrings* uses them
  to display parameters types or return types.

- **Recursive documentation of Python objects:** just use the module
dotted-path as identifier, and you get the full
  module docs. You don't need to inject documentation for each class,
function, etc.

- **Support for documented attributes:** attributes (variables) followed by
a docstring (triple-quoted string) will
  be recognized by Griffe in modules, classes and even in `__init__`
methods.

- **Multiple docstring-styles support:** common support for Google-style,
Numpydoc-style,
  and Sphinx-style docstrings.

- **Admonition support in Google docstrings:** blocks like `Note:` or
`Warning:` will be transformed
  to their [admonition] equivalent.
  *We do not support nested admonitions in docstrings!*

- **Every object has a TOC entry:** we render a heading for each object,
meaning *MkDocs* picks them into the Table
  of Contents, which is nicely display by the Material theme. Thanks to
*mkdocstrings* cross-reference ability,
  you can reference other objects within your docstrings, with the classic
Markdown syntax:
  `[this object][package.module.object]` or directly with
`[package.module.object][]`

- **Source code display:** *mkdocstrings* can add a collapsible div
containing the highlighted source code
  of the Python object.


[FILE:139:distinfo]
7c232175db610e20baf38bcd9b0cd51aa03c290b3e7c5eec1a797ac3121271c4        29262 python-src/mkdocstrings_python_legacy-0.2.6-py3-none-any.whl

