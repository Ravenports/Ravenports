# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libmtp
VERSION=		1.1.22
KEYWORDS=		multimedia
VARIANTS=		std
SDESC[std]=		Media Transfer Protocol (MTP) library
HOMEPAGE=		https://libmtp.sourceforge.net/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/libmtp:libmtp:v1.1.22
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			tools

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		libgcrypt:dev:std
			libtool:primary:std
BUILDRUN_DEPENDS=	libgcrypt:primary:std
EXRUN[tools]=		primary

USES=			cpe autoreconf:build gettext gmake iconv libtool
			pkgconfig

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"ifndef"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/mtpz.h
LICENSE_SCHEME=		solo

CPE_VENDOR=		libmtp_project
FPC_EQUIVALENT=		multimedia/libmtp

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-mtpz

INSTALL_TARGET=		install-strip

post-patch-dragonfly:
	${REINPLACE_CMD} -e 's@machine/endian.h@sys/endian.h@g' \
		${WRKSRC}/m4/byteorder.m4

pre-configure:
	cd ${WRKSRC} && MAKE=gmake sh autogen.sh

[FILE:249:descriptions/desc.primary]
libmtp implements an MTP initiator, which means it initiate MTP sessions 
with devices. The devices responding are known as MTP responders. libmtp 
runs on something with a USB host controller interface, using libusb to 
access the host controller.


[FILE:58:descriptions/desc.tools]
This subpackage contains the tools that come with libmtp.


[FILE:106:distinfo]
8cc96989a2291281e7d7dd920bf60bf9e75d1be637557a392e6834cc43ed04e7      1383096 libmtp-libmtp-1.1.22.tar.gz


[FILE:35:manifests/plist.primary]
lib/
 libmtp.so.9
 libmtp.so.9.4.0


[FILE:67:manifests/plist.dev]
include/libmtp.h
lib/
 libmtp.a
 libmtp.so
lib/pkgconfig/libmtp.pc


[FILE:287:manifests/plist.tools]
bin/
 mtp-albumart
 mtp-albums
 mtp-connect
 mtp-delfile
 mtp-detect
 mtp-emptyfolders
 mtp-files
 mtp-filetree
 mtp-folders
 mtp-format
 mtp-getfile
 mtp-getplaylist
 mtp-newfolder
 mtp-newplaylist
 mtp-playlists
 mtp-reset
 mtp-sendfile
 mtp-sendtr
 mtp-thumb
 mtp-tracks
 mtp-trexist


[FILE:855:patches/patch-src_libusb1-glue.c]
--- src/libusb1-glue.c.orig	2024-11-20 13:47:46.000000000 +0100
+++ src/libusb1-glue.c	2025-01-05 21:55:34.942857000 +0100
@@ -153,7 +153,7 @@
    * We use the same level debug between MTP and USB.
    */
   if (libusb1_initialized)
-     return LIBMTP_ERROR_NONE;
+    libusb_exit(NULL);
 
   if (libusb_init(&libmtp_libusb_context) < 0) {
     LIBMTP_ERROR("Libusb1 init failed\n");
@@ -163,8 +163,8 @@
   libusb1_initialized = 1;
 
   if ((LIBMTP_debug & LIBMTP_DEBUG_USB) != 0)
-    /*libusb_set_debug(libmtp_libusb_context,9);*/
-    libusb_set_option(libmtp_libusb_context, LIBUSB_OPTION_LOG_LEVEL,  LIBUSB_LOG_LEVEL_DEBUG ); /* highest level */
+    libusb_set_debug(libmtp_libusb_context,9);
+    // libusb_set_option(libmtp_libusb_context, LIBUSB_OPTION_LOG_LEVEL,  LIBUSB_LOG_LEVEL_DEBUG ); /* highest level */
   return LIBMTP_ERROR_NONE;
 }
 

