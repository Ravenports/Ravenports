# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-parso
VERSION=		0.8.0
KEYWORDS=		python
VARIANTS=		py38 py37 py27
SDESC[py37]=		Python Parser (PY37)
SDESC[py38]=		Python Parser (PY38)
SDESC[py27]=		Python Parser (PY27 version 0.7.1)
HOMEPAGE=		https://github.com/davidhalter/parso
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/parso
DISTFILE[1]=		parso-0.8.0.tar.gz:main
DISTFILE[2]=		parso-0.7.1.tar.gz:main
DF_INDEX=		1 2
SPKGS[py37]=		single
SPKGS[py38]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY38 PY37 PY27
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON PY27=OFF
VOPTS[py38]=		PY38=ON PY37=OFF PY27=OFF
VOPTS[py27]=		PY38=OFF PY37=OFF PY27=ON

DISTNAME=		parso

GENERATED=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[PY27].USES_ON=				python:py27

post-extract-PY27-OFF:
	${MV} ${WRKDIR}/parso-0.8.0 ${WRKDIR}/parso

post-extract-PY27-ON:
	${MV} ${WRKDIR}/parso-0.7.1 ${WRKDIR}/parso

[FILE:2261:descriptions/desc.single]
###################################################################
parso - A Python Parser
###################################################################

    :alt: Travis CI build status

    :alt: Coverage Status

    :alt: PyPI Downloads

.. image::
https://raw.githubusercontent.com/davidhalter/parso/master/docs/_static/logo_characters.png

Parso is a Python parser that supports error recovery and round-trip
parsing
for different Python versions (in multiple Python versions). Parso is also
able
to list multiple syntax errors in your python file.

Parso has been battle-tested by jedi_. It was pulled out of jedi to be
useful
for other projects as well.

Parso consists of a small API to parse Python and analyse the syntax tree.

A simple example:

.. code-block:: python

    >>> import parso
    >>> module = parso.parse('hello + 1', version="3.9")
    >>> expr = module.children[0]
    >>> expr
    PythonNode(arith_expr, [<Name: hello@1,0>, <Operator: +>, <Number: 1>])
    >>> print(expr.get_code())
    hello + 1
    >>> name = expr.children[0]
    >>> name
    <Name: hello@1,0>
    >>> name.end_pos
    (1, 5)
    >>> expr.end_pos
    (1, 9)

To list multiple issues:

.. code-block:: python

    >>> grammar = parso.load_grammar()
    >>> module = grammar.parse('foo +\nbar\ncontinue')
    >>> error1, error2 = grammar.iter_errors(module)
    >>> error1.message
    'SyntaxError: invalid syntax'
    >>> error2.message
    "SyntaxError: 'continue' not properly in loop"

Resources
=========

- [Testing]
- [PyPI]
- [Docs]
- Uses [semantic versioning]

Installation
============

    pip install parso

Future
======

- There will be better support for refactoring and comments. Stay tuned.
- There's a WIP PEP8 validator. It's however not in a good shape, yet.

Known Issues
============

- `async`/`await` are already used as keywords in Python3.6.
- `from __future__ import print_function` is not ignored.

Acknowledgements
================

- Guido van Rossum (@gvanrossum) for creating the parser generator pgen2
  (originally used in lib2to3).
- [Salome Schneider]
  for the extremely awesome parso logo.

.. _jedi: https://github.com/davidhalter/jedi

.. :changelog:

Changelog
---------

Unreleased
++++++++++

0.8.0 (2020-08-05)


[FILE:194:distinfo]
2b6db14759c528d857eeb9eac559c2166b2554548af39f5198bdfb976f72aa64       395215 parso-0.8.0.tar.gz
caba44724b994a8a5e086460bb212abc5a8bc46951bf4a9a1210745953622eb9       400854 parso-0.7.1.tar.gz

