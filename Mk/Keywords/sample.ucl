# @sample etc/somefile.conf.sample
# or
# @sample file1 file2
#
# Where file1 is considered as a sample file and file2 the target file
#
# This will install the somefile.conf.sample and automatically copy to
# somefile.conf if it doesn't exist. On deinstall it will remove the
# somefile.conf if it still matches the sample, otherwise it is kept.
#
# This replaces the old pattern:
#  @unexec if cmp -s %D/etc/pkgtools.conf %D/etc/pkgtools.conf.sample; then rm -f %D/etc/pkgtools.conf; fi
#  etc/pkgtools.conf.sample
#  @exec [ -f %B/pkgtools.conf ] || cp %B/%f %B/pkgtools.conf

actions: [file]
prepackaging: <<EOS
  if #arg == 1 then
    if string.find(arg[1], "%.sample$") == nil then
      pkg.print_msg("@sample error: 1 single argument requires the '.sample' extension")
      return(1)
    end
  elseif #arg == 2 then
    if arg[1] == arg[2] then
      pkg.print_msg("@sample error: both arguments are identical")
      return(1)
    end
  else
    pkg.print_msg("@sample error: 1 or 2 arguments expected, but got " .. #arg)
    return(1)
  end
EOS
post-install-lua: <<EOS
  sample_file = pkg.prefixed_path(arg[1])
  if arg[2] == nil then
    target_file = string.gsub(sample_file,'%.sample$', "")
  else
    target_file = pkg.prefixed_path(arg[2])
  end
  if not pkg.stat(target_file) then
    pkg.copy(sample_file, target_file)
  end
EOS

pre-deinstall-lua: <<EOS
  sample_file = pkg.prefixed_path(arg[1])
  if arg[2] == nil then
    target_file = string.gsub(sample_file,'%.sample$', "")
  else
    target_file = pkg.prefixed_path(arg[2])
  end
  if pkg.filecmp(sample_file, target_file) == 0 then
    os.remove(target_file)
  else
    if not pkg.pkg_upgrade then
      pkg.print_msg("You may need to manually remove " .. target_file .. " if it is no longer needed.")
    end
  end
EOS
