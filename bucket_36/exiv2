# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		exiv2
VERSION=		0.28.1
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Exif and Iptc metadata manipulation library
HOMEPAGE=		https://exiv2.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/Exiv2:exiv2:v0.28.1
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			tools
			dev
			nls
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		brotli:dev:standard
BUILDRUN_DEPENDS=	brotli:primary:standard
EXRUN[tools]=		exiv2:primary:standard
EXRUN[dev]=		brotli:dev:standard
			expat:dev:standard

USES=			cpe cmake iconv zlib c++:primary expat gettext

LICENSE=		GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/image.cpp
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/exiv2

PLIST_SUB=		SOVERSION=0.28.1
			SOMAJOR=28

CXXFLAGS=		-Wno-deprecated-declarations
CMAKE_ARGS=		-DEXIV2_ENABLE_VIDEO:BOOL=ON
			-DEXIV2_BUILD_PO:BOOL=ON
			-DEXIV2_BUILD_DOC:BOOL=OFF
			-DEXIV2_BUILD_SAMPLES:BOOL=OFF
			-DEXIV2_ENABLE_EXTERNAL_XMP:BOOL=OFF
			-DEXIV2_ENABLE_WEBREADY:BOOL=OFF
			-DEXIV2_ENABLE_INIH:BOOL=OFF
			-DEXIV2_ENABLE_NLS:BOOL=ON

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libexiv2.so

[FILE:287:descriptions/desc.primary]
Exiv2 is a C++ library and a command line utility to manage image metadata.
It provides fast and easy read and write access to the Exif, IPTC, and XMP
metadata of images in various formats. Exiv2 is available as free software
and with a commercial license, and is used in many projects.


[FILE:38:descriptions/desc.tools]
This package contains the exiv2 tool.


[FILE:104:distinfo]
3078651f995cb6313b1041f07f4dd1bf0e9e4d394d6e2adc6e92ad0b621291fa     45225200 Exiv2-exiv2-0.28.1.tar.gz


[FILE:57:manifests/plist.primary]
lib/
 libexiv2.so.%%SOMAJOR%%
 libexiv2.so.%%SOVERSION%%


[FILE:10:manifests/plist.tools]
bin/exiv2


[FILE:835:manifests/plist.dev]
include/exiv2/
 asfvideo.hpp
 basicio.hpp
 bmffimage.hpp
 bmpimage.hpp
 config.h
 convert.hpp
 cr2image.hpp
 crwimage.hpp
 datasets.hpp
 easyaccess.hpp
 epsimage.hpp
 error.hpp
 exif.hpp
 exiv2.hpp
 exiv2lib_export.h
 exv_conf.h
 futils.hpp
 gifimage.hpp
 http.hpp
 image.hpp
 image_types.hpp
 iptc.hpp
 jp2image.hpp
 jpgimage.hpp
 matroskavideo.hpp
 metadatum.hpp
 mrwimage.hpp
 orfimage.hpp
 pgfimage.hpp
 photoshop.hpp
 pngimage.hpp
 preview.hpp
 properties.hpp
 psdimage.hpp
 quicktimevideo.hpp
 rafimage.hpp
 riffvideo.hpp
 rw2image.hpp
 slice.hpp
 tags.hpp
 tgaimage.hpp
 tiffimage.hpp
 types.hpp
 value.hpp
 version.hpp
 webpimage.hpp
 xmp_exiv2.hpp
 xmpsidecar.hpp
lib/libexiv2.so
lib/pkgconfig/exiv2.pc
share/cmake/exiv2/
 exiv2Config.cmake
 exiv2ConfigVersion.cmake
 exiv2Export-%%CMAKE_BUILD_TYPE%%.cmake
 exiv2Export.cmake


[FILE:629:manifests/plist.nls]
share/locale/bs/LC_MESSAGES/exiv2.mo
share/locale/ca/LC_MESSAGES/exiv2.mo
share/locale/de/LC_MESSAGES/exiv2.mo
share/locale/es/LC_MESSAGES/exiv2.mo
share/locale/fi/LC_MESSAGES/exiv2.mo
share/locale/fr/LC_MESSAGES/exiv2.mo
share/locale/gl/LC_MESSAGES/exiv2.mo
share/locale/ms/LC_MESSAGES/exiv2.mo
share/locale/nl/LC_MESSAGES/exiv2.mo
share/locale/pl/LC_MESSAGES/exiv2.mo
share/locale/pt/LC_MESSAGES/exiv2.mo
share/locale/ru/LC_MESSAGES/exiv2.mo
share/locale/sk/LC_MESSAGES/exiv2.mo
share/locale/sv/LC_MESSAGES/exiv2.mo
share/locale/ug/LC_MESSAGES/exiv2.mo
share/locale/uk/LC_MESSAGES/exiv2.mo
share/locale/vi/LC_MESSAGES/exiv2.mo


[FILE:26:manifests/plist.man]
share/man/man1/exiv2.1.gz


[FILE:317:patches/patch-src_CMakeLists.txt]
--- src/CMakeLists.txt.orig	2023-11-06 12:17:09 UTC
+++ src/CMakeLists.txt
@@ -216,7 +216,7 @@ if (WIN32)
 endif()
 
 if (NOT MSVC)
-    if ( CMAKE_SYSTEM_NAME STREQUAL "FreeBSD" )
+    if ( CMAKE_SYSTEM_NAME MATCHES "FreeBSD|MidnightBSD" )
         target_link_libraries( exiv2lib PRIVATE -lprocstat)
     endif()
 


[FILE:692:patches/patch-src_convert.cpp]
Support NetBSD and SunOS iconv being special.

--- src/convert.cpp.orig	2023-11-06 12:17:09 UTC
+++ src/convert.cpp
@@ -1431,7 +1431,11 @@ bool convertStringCharsetIconv(std::stri
     char outbuf[256];
     char* outptr = outbuf;
     size_t outbytesleft = sizeof(outbuf);
+#if (defined(__NetBSD__) && !NETBSD_POSIX_ICONV) || defined(__sun)
+    size_t rc = iconv(cd, const_cast<char **>(&inptr), &inbytesleft, &outptr, &outbytesleft);
+#else
     size_t rc = iconv(cd, &inptr, &inbytesleft, &outptr, &outbytesleft);
+#endif
     const size_t outbytesProduced = sizeof(outbuf) - outbytesleft;
     if (rc == std::numeric_limits<size_t>::max() && errno != E2BIG) {
 #ifndef SUPPRESS_WARNINGS

