# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		freeglut
VERSION=		3.4.0
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	FOSS implementation of the GLUT library
HOMEPAGE=		https://freeglut.sourceforge.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/freeglut/freeglut/3.4.0
DISTFILE[1]=		freeglut-3.4.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	libGLU:single:standard
			libglvnd:single:standard

USES=			cmake:insource
XORG_COMPONENTS=	ice x11 xi xrandr xrender

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/freeglut

INSTALL_TARGET=		install/strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		3.12.0

VAR_OPSYS[freebsd]=	LDFLAGS=-lusbhid
			LDFLAGS=-lm
VAR_OPSYS[sunos]=	LDFLAGS=-lrt

post-patch:
.for fract in Fractals/fractals.c Fractals_random/fractals_random.c
	${REINPLACE_CMD} -e "s|/usr/local|${PREFIX}|g"		\
		${WRKSRC}/progs/demos/${fract}
.endfor
	${REINPLACE_CMD} -e 's|__FreeBSD__|__NOPE__|g' \
		-e 's|__FreeBSD_kernel__|__NYET__|g' \
		${WRKSRC}/src/x11/fg_joystick_x11.c \
		${WRKSRC}/src/x11/fg_internal_x11.h

post-install:
	${MKDIR} ${STAGEDIR}${STD_EXAMPLESDIR}
	${INSTALL_DATA} ${WRKSRC}/progs/demos/Fractals/fractals.dat \
		${STAGEDIR}${STD_EXAMPLESDIR}
.for prog in CallbackMaker Fractals Fractals_random Lorenz One multi-touch shapes smooth_opengl3 spaceball subwin timer
	${INSTALL_PROGRAM} ${BUILD_WRKSRC}/bin/${prog} ${STAGEDIR}${STD_EXAMPLESDIR}
.endfor

[FILE:537:descriptions/desc.primary]
freeglut is a completely OpenSourced alternative to the OpenGL Utility
Toolkit (GLUT) library. GLUT was originally written by Mark Kilgard to
support the sample programs in the second edition OpenGL 'RedBook'.
Since then, GLUT has been used in a wide variety of practical applications
because it is simple, universally available and highly portable.

GLUT (and hence freeglut) allows the user to create and manage windows
containing OpenGL contexts on a wide range of platforms and also read the
mouse, keyboard and joystick functions.
 

[FILE:100:distinfo]
3c0bcb915d9b180a97edaebd011b7a1de54583a838644dcd42bb0ea0c6f3eaec       413389 freeglut-3.4.0.tar.gz


[FILE:307:manifests/plist.primary]
include/GL/
 freeglut.h
 freeglut_ext.h
 freeglut_std.h
 freeglut_ucall.h
 glut.h
lib/
 libglut.a
 libglut.so
 libglut.so.%%SOMAJOR%%
 libglut.so.%%SOVERSION%%
lib/cmake/FreeGLUT/
 FreeGLUTConfig.cmake
 FreeGLUTConfigVersion.cmake
 FreeGLUTTargets-release.cmake
 FreeGLUTTargets.cmake
lib/pkgconfig/glut.pc


[FILE:157:manifests/plist.examples]
share/examples/freeglut/
 CallbackMaker
 Fractals
 Fractals_random
 Lorenz
 One
 fractals.dat
 multi-touch
 shapes
 smooth_opengl3
 spaceball
 subwin
 timer


[FILE:441:patches/patch-src_fg__internal.h]
--- src/fg_internal.h.orig	2022-10-07 16:12:51 UTC
+++ src/fg_internal.h
@@ -137,9 +137,6 @@
  * If so, perhaps there should be a config_guess.h for them. Alternatively,
  * config guesses could be placed above, just after the config.h exclusion.
  */
-#if defined(__FreeBSD__) || defined(__NetBSD__)
-#    define HAVE_USB_JS 1
-#endif
 
 #if defined(_MSC_VER) || defined(__WATCOMC__)
 /* strdup() is non-standard, for all but POSIX-2001 */

