# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		freeglut
VERSION=		3.2.1
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	FOSS implementation of the GLUT library
HOMEPAGE=		http://freeglut.sourceforge.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/freeglut/freeglut/3.2.1
DISTFILE[1]=		freeglut-3.2.1.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	libGLU:single:standard

USES=			cmake:insource mesa
XORG_COMPONENTS=	ice x11 xi xrandr

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/freeglut

INSTALL_TARGET=		install/strip
SOVERSION=		3.11.0

VAR_OPSYS[freebsd]=	LDFLAGS=-lusbhid
			LDFLAGS=-lm
VAR_OPSYS[sunos]=	LDFLAGS=-lrt

post-patch:
.for fract in Fractals/fractals.c Fractals_random/fractals_random.c
	${REINPLACE_CMD} -e "s|/usr/local|${PREFIX}|g"		\
		${WRKSRC}/progs/demos/${fract}
.endfor
	${REINPLACE_CMD} -e 's|__FreeBSD__|__NOPE__|g' \
		-e 's|__FreeBSD_kernel__|__NYET__|g' \
		${WRKSRC}/src/x11/fg_joystick_x11.c \
		${WRKSRC}/src/x11/fg_internal_x11.h

post-install:
	@${MKDIR} ${STAGEDIR}${STD_DOCDIR}  ${STAGEDIR}${STD_EXAMPLESDIR}
.for f in download.html freeglut.html freeglut_logo.png freeglut_user_interface.html index.html ogl_sm.png progress.html structure.html
	${INSTALL_DATA} ${WRKSRC}/doc/${f} ${STAGEDIR}${STD_DOCDIR}
.endfor
	${INSTALL_DATA} ${WRKSRC}/progs/demos/Fractals/fractals.dat \
		${STAGEDIR}${STD_EXAMPLESDIR}
.for prog in CallbackMaker Fractals Fractals_random Lorenz One Resizer multi-touch shapes smooth_opengl3 spaceball subwin timer
	${INSTALL_PROGRAM} ${BUILD_WRKSRC}/bin/${prog} ${STAGEDIR}${STD_EXAMPLESDIR}
.endfor

[FILE:537:descriptions/desc.primary]
freeglut is a completely OpenSourced alternative to the OpenGL Utility
Toolkit (GLUT) library. GLUT was originally written by Mark Kilgard to
support the sample programs in the second edition OpenGL 'RedBook'.
Since then, GLUT has been used in a wide variety of practical applications
because it is simple, universally available and highly portable.

GLUT (and hence freeglut) allows the user to create and manage windows
containing OpenGL contexts on a wide range of platforms and also read the
mouse, keyboard and joystick functions.
 

[FILE:100:distinfo]
d4000e02102acaf259998c870e25214739d1f16f67f99cb35e4f46841399da68       440228 freeglut-3.2.1.tar.gz


[FILE:307:manifests/plist.primary]
include/GL/
 freeglut.h
 freeglut_ext.h
 freeglut_std.h
 freeglut_ucall.h
 glut.h
lib/
 libglut.a
 libglut.so
 libglut.so.%%SOMAJOR%%
 libglut.so.%%SOVERSION%%
lib/cmake/FreeGLUT/
 FreeGLUTConfig.cmake
 FreeGLUTConfigVersion.cmake
 FreeGLUTTargets-release.cmake
 FreeGLUTTargets.cmake
lib/pkgconfig/glut.pc


[FILE:154:manifests/plist.docs]
share/doc/freeglut/
 download.html
 freeglut.html
 freeglut_logo.png
 freeglut_user_interface.html
 index.html
 ogl_sm.png
 progress.html
 structure.html


[FILE:166:manifests/plist.examples]
share/examples/freeglut/
 CallbackMaker
 Fractals
 Fractals_random
 Lorenz
 One
 Resizer
 fractals.dat
 multi-touch
 shapes
 smooth_opengl3
 spaceball
 subwin
 timer


[FILE:3274:patches/patch-fix-fno-common]
From 5791564dd934d193df771a0a7c52013e9f456aa1 Mon Sep 17 00:00:00 2001
From: Sergei Trofimovich <slyfox@gentoo.org>
Date: Tue, 21 Jan 2020 22:33:49 +0000
Subject: [PATCH] fg_gl2: fix build failure against gcc-10

On gcc-10 (and gcc-9 -fno-common) build fails as:

```
[ 31%] Linking C executable bin/Lorenz_static
/usr/bin/cmake -E cmake_link_script CMakeFiles/Lorenz_static.dir/link.txt --verbose=1
/usr/lib/ccache/bin/cc  -Wall -pedantic  -rdynamic CMakeFiles/Lorenz_static.dir/progs/demos/Lorenz/lorenz.c.o \
   -o bin/Lorenz_static  -lGLU -lGL -lm -lX11 -lXrandr -lXxf86vm -lXi -lm lib/libglut.a -lGL -lm -lX11 -lXrandr -lXxf86vm -lXi
ld: lib/libglut.a(fg_gl2.c.o):(.bss+0x0):
  multiple definition of `fghGenBuffers'; lib/libglut.a(fg_window.c.o):(.bss+0x0): first defined here
ld: lib/libglut.a(fg_gl2.c.o):(.bss+0x8):
  multiple definition of `fghDeleteBuffers'; lib/libglut.a(fg_window.c.o):(.bss+0x8): first defined here
```

Note: duplicate definition comes here from 'fg_gl2.h'.
The fix is to move declaration to a 'fg_gl2.c' file.

gcc-10 will change the default from -fcommon to fno-common:
https://gcc.gnu.org/PR85678.

The error also happens if CFLAGS=-fno-common passed explicitly.

Bug: https://bugs.gentoo.org/705840
Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
---
 src/fg_gl2.c | 12 ++++++++++++
 src/fg_gl2.h | 14 +++++++-------
 2 files changed, 19 insertions(+), 7 deletions(-)

--- src/fg_gl2.c
+++ src/fg_gl2.c
@@ -27,6 +27,18 @@
 #include "fg_internal.h"
 #include "fg_gl2.h"
 
+#ifdef GL_ES_VERSION_2_0
+/* Use existing functions on GLES 2.0 */
+#else
+FGH_PFNGLGENBUFFERSPROC fghGenBuffers;
+FGH_PFNGLDELETEBUFFERSPROC fghDeleteBuffers;
+FGH_PFNGLBINDBUFFERPROC fghBindBuffer;
+FGH_PFNGLBUFFERDATAPROC fghBufferData;
+FGH_PFNGLENABLEVERTEXATTRIBARRAYPROC fghEnableVertexAttribArray;
+FGH_PFNGLDISABLEVERTEXATTRIBARRAYPROC fghDisableVertexAttribArray;
+FGH_PFNGLVERTEXATTRIBPOINTERPROC fghVertexAttribPointer;
+#endif
+
 void FGAPIENTRY glutSetVertexAttribCoord3(GLint attrib) {
   if (fgStructure.CurrentWindow != NULL)
     fgStructure.CurrentWindow->Window.attribute_v_coord = attrib;
--- src/fg_gl2.h
+++ src/fg_gl2.h
@@ -67,13 +67,13 @@ typedef void (APIENTRY *FGH_PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
 typedef void (APIENTRY *FGH_PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint);
 typedef void (APIENTRY *FGH_PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
 
-FGH_PFNGLGENBUFFERSPROC fghGenBuffers;
-FGH_PFNGLDELETEBUFFERSPROC fghDeleteBuffers;
-FGH_PFNGLBINDBUFFERPROC fghBindBuffer;
-FGH_PFNGLBUFFERDATAPROC fghBufferData;
-FGH_PFNGLENABLEVERTEXATTRIBARRAYPROC fghEnableVertexAttribArray;
-FGH_PFNGLDISABLEVERTEXATTRIBARRAYPROC fghDisableVertexAttribArray;
-FGH_PFNGLVERTEXATTRIBPOINTERPROC fghVertexAttribPointer;
+extern FGH_PFNGLGENBUFFERSPROC fghGenBuffers;
+extern FGH_PFNGLDELETEBUFFERSPROC fghDeleteBuffers;
+extern FGH_PFNGLBINDBUFFERPROC fghBindBuffer;
+extern FGH_PFNGLBUFFERDATAPROC fghBufferData;
+extern FGH_PFNGLENABLEVERTEXATTRIBARRAYPROC fghEnableVertexAttribArray;
+extern FGH_PFNGLDISABLEVERTEXATTRIBARRAYPROC fghDisableVertexAttribArray;
+extern FGH_PFNGLVERTEXATTRIBPOINTERPROC fghVertexAttribPointer;
 
 #    endif
 


[FILE:891:patches/patch-src_fg__internal.h]
--- src/fg_internal.h.orig	2019-09-25 10:08:07 UTC
+++ src/fg_internal.h
@@ -137,9 +137,6 @@
  * If so, perhaps there should be a config_guess.h for them. Alternatively,
  * config guesses could be placed above, just after the config.h exclusion.
  */
-#if defined(__FreeBSD__) || defined(__NetBSD__)
-#    define HAVE_USB_JS 1
-#endif
 
 #if defined(_MSC_VER) || defined(__WATCOMC__)
 /* strdup() is non-standard, for all but POSIX-2001 */
@@ -1067,6 +1064,8 @@ int         fgJoystickDetect( void );
 void        fgInitialiseJoysticks( void );
 void        fgJoystickClose( void );
 void        fgJoystickPollWindow( SFG_Window* window );
+void        fgJoystickRawRead( SFG_Joystick* joy, int* buttons, float* axes );
+void        fghJoystickRawRead( SFG_Joystick* joy, int* buttons, float* axes );
 
 /* InputDevice Initialisation and Closure */
 int         fgInputDeviceDetect( void );


[FILE:342:patches/patch-src_fg__joystick.c]
--- src/fg_joystick.c.orig	2017-07-31 20:49:26 UTC
+++ src/fg_joystick.c
@@ -76,7 +76,7 @@ SFG_Joystick *fgJoystick [ MAX_NUM_JOYST
 /*
  * Read the raw joystick data
  */
-static void fghJoystickRawRead( SFG_Joystick* joy, int* buttons, float* axes )
+void fghJoystickRawRead( SFG_Joystick* joy, int* buttons, float* axes )
 {
     int i;
 

