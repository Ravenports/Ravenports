# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		langkit
VERSION=		2019
KEYWORDS=		lang devel
VARIANTS=		standard
SDESC[standard]=	Syntactic and semantic language analysis compiler
HOMEPAGE=		https://github.com/AdaCore/langkit
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://downloads.dragonlace.net/src/
DISTFILE[1]=		langkit-2019-20190510-19B8C-src.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gnatcoll-core:primary:standard
			gnatcoll-bindings:iconv:standard
			python-psutil:single:py27
BUILDRUN_DEPENDS=	python-enum34:single:py27
			python-Mako:single:py27
			python-funcy:single:py27
			python-docutils:single:py27
			python-autopep8:single:py27
			python-yapf:single:py27

USES=			gprbuild python:py27

DISTNAME=		langkit-2019-20190510-19B8C-src

LICENSE=		GPLv3+:single GPLv3RLE:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
			GPLv3RLE:{{WRKSRC}}/COPYING.RUNTIME
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/langkit/support/langkit_support.ads
LICENSE_SCHEME=		multi

MUST_CONFIGURE=		yes

MAKE_ENV=		PYTHONPATH={{WRKSRC}}

INSTALL_REQ_TOOLCHAIN=	yes

post-patch:
	# disable -Werror
	${REINPLACE_CMD} -e 's|"-gnatwe", ||' \
		${WRKSRC}/langkit/templates/project_file.mako \
		${WRKSRC}/langkit/templates/langkit_support_gpr.mako

do-build:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} scripts/build-langkit_support.py\
		--verbosity=info\
		--library-types=static\
		build)

do-configure:
	# must build as static since rpaths are either missing,
	# refer to /construction, ignore gpr settings, etc
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} scripts/build-langkit_support.py\
		--verbosity=info\
		--library-types=static\
		generate)

do-install:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} setup.py install --root ${STAGEDIR})
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} scripts/build-langkit_support.py\
		--library-types=static\
		install ${STAGEDIR}${PREFIX})

[FILE:554:descriptions/desc.single]
Langkit (nickname for language kit) is a tool whose purpose is to make it
easy to create syntactic and semantic analysis engines. Write a language
specification in our Python DSL and Langkit will generate for you an Ada
library with bindings for the C and Python programming languages.

The generated library is meant to provide a basis to write tooling,
including tools working on potentially changing and incorrect code, such
as IDEs.

The currently main Langkit user is Libadalang, a high performance semantic
engine for the Ada programming language.


[FILE:117:distinfo]
13f7905faab86a800affbbfb2c518b2ab7d8ecd8c5a91bb7ff6c856dad73cd18       699205 langkit-2019-20190510-19B8C-src.tar.gz


[FILE:2291:manifests/plist.single]
@comment all python files are already added to manifest automatically
include/langkit_support/
 langkit_support-adalog-abstract_relation.adb
 langkit_support-adalog-abstract_relation.ads
 langkit_support-adalog-debug.adb
 langkit_support-adalog-debug.ads
 langkit_support-adalog-eq_same.adb
 langkit_support-adalog-eq_same.ads
 langkit_support-adalog-logic_ref.adb
 langkit_support-adalog-logic_ref.ads
 langkit_support-adalog-logic_var.ads
 langkit_support-adalog-main_support.adb
 langkit_support-adalog-main_support.ads
 langkit_support-adalog-operations.adb
 langkit_support-adalog-operations.ads
 langkit_support-adalog-predicates.adb
 langkit_support-adalog-predicates.ads
 langkit_support-adalog-pure_relations.adb
 langkit_support-adalog-pure_relations.ads
 langkit_support-adalog-relations.adb
 langkit_support-adalog-relations.ads
 langkit_support-adalog-unify.adb
 langkit_support-adalog-unify.ads
 langkit_support-adalog-unify_lr.adb
 langkit_support-adalog-unify_lr.ads
 langkit_support-adalog-unify_one_side.adb
 langkit_support-adalog-unify_one_side.ads
 langkit_support-adalog.ads
 langkit_support-array_utils.adb
 langkit_support-array_utils.ads
 langkit_support-boxes.adb
 langkit_support-boxes.ads
 langkit_support-bump_ptr-vectors.adb
 langkit_support-bump_ptr-vectors.ads
 langkit_support-bump_ptr.adb
 langkit_support-bump_ptr.ads
 langkit_support-cheap_sets.adb
 langkit_support-cheap_sets.ads
 langkit_support-diagnostics.adb
 langkit_support-diagnostics.ads
 langkit_support-hashes.adb
 langkit_support-hashes.ads
 langkit_support-images.adb
 langkit_support-images.ads
 langkit_support-iterators.adb
 langkit_support-iterators.ads
 langkit_support-lexical_env.adb
 langkit_support-lexical_env.ads
 langkit_support-packrat.adb
 langkit_support-packrat.ads
 langkit_support-relative_get.adb
 langkit_support-relative_get.ads
 langkit_support-slocs.adb
 langkit_support-slocs.ads
 langkit_support-symbols.adb
 langkit_support-symbols.ads
 langkit_support-text.adb
 langkit_support-text.ads
 langkit_support-token_data_handlers.adb
 langkit_support-token_data_handlers.ads
 langkit_support-tree_traversal_iterator.adb
 langkit_support-tree_traversal_iterator.ads
 langkit_support-types.ads
 langkit_support-vectors.adb
 langkit_support-vectors.ads
 langkit_support.ads


[FILE:950:patches/patch-langkit_astdoc.py]
--- langkit/astdoc.py.orig	2019-05-11 05:16:01 UTC
+++ langkit/astdoc.py
@@ -73,19 +73,7 @@ def format_doc(entity):
         doc = trim_docstring_lines(doc)
 
         # Run docutils and intercept its warnings and errors
-        with substitute_stdio() as (stdout, stderr):
-            formatted_doc = publish_parts(doc, writer_name='html')['html_body']
-            stdout.seek(0)
-            stderr.seek(0)
-            out = stdout.read().strip()
-            err = stderr.read().strip()
-
-        # Turn docutils' diagnostic into our own diagnostic system
-        with entity.diagnostic_context:
-            for output in (out, err):
-                check_source_language(
-                    not output, output, severity=Severity.warning,
-                    ok_for_codegen=True)
+        formatted_doc = publish_parts(doc, writer_name='html')['html_body']
 
         return '<div class="doc">{}</div>'.format(formatted_doc)
     else:


[FILE:466:patches/patch-langkit_libmanage.py]
--- langkit/libmanage.py.orig	2019-05-11 05:16:01 UTC
+++ langkit/libmanage.py
@@ -826,6 +826,7 @@ class ManageScript(object):
         base_argv = ['gprinstall', '-p',
                      '-P{}'.format(project_file),
                      '--prefix={}'.format(self.dirs.install_dir()),
+                     '--project-subdir=lib/gnat',
                      '--build-var=LIBRARY_TYPE',
                      '--build-var={}_LIBRARY_TYPE'.format(project_name)]
 

