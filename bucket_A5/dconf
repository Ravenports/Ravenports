# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		dconf
VERSION=		0.40.0
REVISION=		1
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Configuration database system for GNOME
HOMEPAGE=		https://wiki.gnome.org/Projects/dconf
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://ftp.gnome.org/pub/GNOME/sources/dconf/0.40/
DISTFILE[1]=		dconf-0.40.0.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		docbook-xsl:primary:std
			vala:single:std
			dbus:dev:std
BUILDRUN_DEPENDS=	dbus:primary:std

USES=			gmake meson pkgconfig shebangfix solaris-funcs
GNOME_COMPONENTS=	glib libxslt

LICENSE=		LGPL20+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL20+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/client/dconf.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/dconf
MESON_ARGS=		-Dgtk_doc=false
			-Dbash_completion=false
SHEBANG_FILES=		meson_post_install.py
SOL_FUNCTIONS=		strndup:bin/dconf.c

INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		1.0.0

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/etc/dconf/db
	${MKDIR} ${STAGEDIR}${PREFIX}/etc/dconf/profile

pre-configure:
	${REINPLACE_CMD} -e \
		's|__DBPATH__|${PREFIX}/share/xsl/docbook/manpages|' \
		${WRKSRC}/docs/meson.build

[FILE:339:descriptions/desc.primary]
Dconf is a simple key-based low-level configuration system. Its main 
purpose is to provide a backend to GSettings on platforms that don't 
already have configuration storage systems. Keys exist in an unstructured 
database. Dconf supports features like change notification, stacking of 
multiple configuration sources and mandatory keys.


[FILE:98:distinfo]
cf7f22a4c9200421d8d3325c5c1b8b93a36843650c9f95d6451e20f0bcb24533       117764 dconf-0.40.0.tar.xz


[FILE:522:manifests/plist.primary]
bin/dconf
include/dconf/dconf.h
include/dconf/client/dconf-client.h
include/dconf/common/
 dconf-changeset.h
 dconf-enums.h
 dconf-paths.h
lib/
 libdconf.so
 libdconf.so.%%SOMAJOR%%
 libdconf.so.%%SOVERSION%%
lib/gio/modules/libdconfsettings.so
lib/pkgconfig/dconf.pc
lib/systemd/user/dconf.service
libexec/dconf-service
share/dbus-1/services/ca.desrt.dconf.service
share/man/man1/
 dconf-service.1.gz
 dconf.1.gz
share/man/man7/dconf.7.gz
share/vala/vapi/
 dconf.deps
 dconf.vapi
@dir etc/dconf/db
@dir etc/dconf/profile


[FILE:648:patches/patch-docs_meson.build]
--- docs/meson.build.orig	2021-03-13 01:05:23 UTC
+++ docs/meson.build
@@ -22,12 +22,13 @@ if get_option('man')
     xsltproc,
     '--output', '@OUTPUT@',
     '--nonet',
+    '--path', '__DBPATH__',
     '--stringparam', 'man.output.quietly', '1',
     '--stringparam', 'funcsynopsis.style', 'ansi',
     '--stringparam', 'man.th.extra1.suppress', '1',
     '--stringparam', 'man.authors.section.enabled', '0',
     '--stringparam', 'man.copyright.section.enabled', '0',
-    'http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl',
+    'http://cdn.docbook.org/release/xsl/current/manpages/docbook.xsl',
     '@INPUT@',
   ]
 


[FILE:1364:patches/patch-tests_meson.build]
Work around duplicate symbols exposed by meson 0.52

--- tests/meson.build.orig	2021-03-13 01:05:23 UTC
+++ tests/meson.build
@@ -28,10 +28,10 @@ unit_tests = [
   ['gvdb', 'gvdb.c', '-DSRCDIR="@0@"'.format(test_dir), libgvdb_dep, []],
   ['gdbus-thread', 'dbus.c', '-DDBUS_BACKEND="/gdbus/thread"', libdconf_gdbus_thread_dep, []],
   ['gdbus-filter', 'dbus.c', '-DDBUS_BACKEND="/gdbus/filter"', libdconf_gdbus_filter_dep, []],
-  ['gdbus-thread-leak', 'dbus-leak.c', '-DDBUS_BACKEND="/gdbus/thread"', [libdconf_client_dep, libdconf_gdbus_thread_dep], []],
-  ['gdbus-filter-leak', 'dbus-leak.c', '-DDBUS_BACKEND="/gdbus/filter"', [libdconf_client_dep, libdconf_gdbus_filter_dep], []],
+  ['gdbus-thread-leak', 'dbus-leak.c', '-DDBUS_BACKEND="/gdbus/thread"', [libdconf_client_dep], []],
+  ['gdbus-filter-leak', 'dbus-leak.c', '-DDBUS_BACKEND="/gdbus/filter"', [libdconf_client_dep], []],
   ['engine', 'engine.c', '-DSRCDIR="@0@"'.format(test_dir), [dl_dep, libdconf_engine_test_dep, m_dep], libdconf_mock],
-  ['client', 'client.c', '-DSRCDIR="@0@"'.format(test_dir), [libdconf_client_dep, libdconf_engine_dep], libdconf_mock],
+  ['client', 'client.c', '-DSRCDIR="@0@"'.format(test_dir), [libdconf_client_dep], libdconf_mock],
   ['writer', 'writer.c', '-DSRCDIR="@0@"'.format(test_dir), [glib_dep, dl_dep, m_dep, libdconf_service_dep], [libdconf_mock]],
 ]
 

