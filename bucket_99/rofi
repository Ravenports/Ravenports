# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		rofi
VERSION=		1.6.1
KEYWORDS=		x11
VARIANTS=		standard
SDESC[standard]=	Window switcher, run dialog and dmenu replacement
HOMEPAGE=		https://github.com/DaveDavenport/rofi
CONTACT=		Alexanre_C_Guimar√£es[privacychain@privacychain.ch]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/DaveDavenport/rofi/releases/download/1.6.1/
DISTFILE[1]=		rofi-1.6.1.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		check:single:standard
BUILDRUN_DEPENDS=	libxkbcommon:single:standard
			startup-notification:single:standard
			xorg-xcb-util:single:standard
			xorg-xcb-util-wm:single:standard
			xorg-xcb-util-xrm:single:standard
B_DEPS[sunos]=		libbsd4sol:single:standard

USES=			bison gmake libtool pkgconfig shebangfix
GNOME_COMPONENTS=	cairo gdkpixbuf librsvg pango
XORG_COMPONENTS=	xcb

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11/rofi
SHEBANG_FILES=		script/get_git_rev.sh
			script/rofi-sensible-terminal
SHEBANG_LANG=		bash
SHEBANG_NEW_BASH=	/bin/sh
SHEBANG_OLD_BASH=	"/usr/bin/env bash"

MUST_CONFIGURE=		gnu

VAR_OPSYS[sunos]=	CFLAGS=-I{{LOCALBASE}}/include/bsd
			CONFIGURE_ENV=LIBS="-lbsd -lrt"

post-patch:
	${REINPLACE_CMD} -e 's/ -pedantic//' ${WRKSRC}/configure

[FILE:426:descriptions/desc.single]
A window switcher, application launcher and dmenu replacement.

A popup window switcher roughly based on superswitcher, requiring only xlib
and pango. This version started off as a clone of simpleswitcher, the
version from Sean Pringle. All credit for this great tool should go to him.
Rofi developed extra features, like a run-dialog, ssh-launcher and can
act as a drop-in dmenu replacement, making it a very versatile tool.


[FILE:96:distinfo]
8d1df739117fb79e519b40f9a7824586f88a5fe8643bd30d9b9325b7b0a4f411       569262 rofi-1.6.1.tar.gz


[FILE:785:manifests/plist.single]
bin/
 rofi
 rofi-sensible-terminal
 rofi-theme-selector
include/rofi/
 helper.h
 mode-private.h
 mode.h
 rofi-icon-fetcher.h
 rofi-types.h
lib/pkgconfig/rofi.pc
share/man/man1/
 rofi-sensible-terminal.1.gz
 rofi-theme-selector.1.gz
 rofi.1.gz
share/man/man5/
 rofi-script.5.gz
 rofi-theme.5.gz
share/rofi/themes/
 Adapta-Nokto.rasi
 Arc-Dark.rasi
 Arc.rasi
 DarkBlue.rasi
 Indego.rasi
 Monokai.rasi
 Paper.rasi
 Pop-Dark.rasi
 android_notification.rasi
 arthur.rasi
 blue.rasi
 c64.rasi
 dmenu.rasi
 fancy.rasi
 glue_pro_blue.rasi
 gruvbox-common.rasi
 gruvbox-dark-hard.rasi
 gruvbox-dark-soft.rasi
 gruvbox-dark.rasi
 gruvbox-light-hard.rasi
 gruvbox-light-soft.rasi
 gruvbox-light.rasi
 lb.rasi
 paper-float.rasi
 purple.rasi
 sidebar.rasi
 solarized.rasi
 solarized_alternate.rasi


[FILE:313:patches/patch-source_dialogs_combi.c]
--- source/dialogs/combi.c.orig	2020-09-06 18:37:58 UTC
+++ source/dialogs/combi.c
@@ -40,6 +40,15 @@
 #include "mode-private.h"
 #include <theme.h>
 
+#ifdef __sun__
+static inline char *strchrnul(const char *s, int c)
+{
+	while (*s && *s != c)
+		s++;
+	return (char *)s;
+}
+#endif
+
 /**
  * Combi Mode
  */


[FILE:1575:patches/patch-source_dialogs_drun.c]
--- source/dialogs/drun.c.orig	2020-09-06 18:37:58 UTC
+++ source/dialogs/drun.c
@@ -625,12 +625,21 @@ static void walk_dir ( DRunModePrivateDa
         if ( file->d_name[0] == '.' ) {
             continue;
         }
+#ifdef __sun__
+	stat(file->d_name, &st);
+	switch (st.st_mode) {
+	case S_IFLNK:
+	case S_IFREG:
+	case S_IFDIR:
+	case 0:
+#else
         switch ( file->d_type )
         {
         case DT_LNK:
         case DT_REG:
         case DT_DIR:
         case DT_UNKNOWN:
+#endif
             filename = g_build_filename ( dirname, file->d_name, NULL );
             break;
         default:
@@ -639,6 +648,21 @@ static void walk_dir ( DRunModePrivateDa
 
         // On a link, or if FS does not support providing this information
         // Fallback to stat method.
+#ifdef __sun__
+        switch (st.st_mode) {
+        case S_IFREG:
+            // Skip files not ending on .desktop.
+            if ( g_str_has_suffix ( file->d_name, ".desktop" ) ) {
+                read_desktop_file ( pd, root, filename, file->d_name, DRUN_GROUP_NAME );
+            }
+            break;
+        case S_IFDIR:
+            walk_dir ( pd, root, filename );
+            break;
+        default:
+            break;
+	}
+#else
         if ( file->d_type == DT_LNK || file->d_type == DT_UNKNOWN ) {
             file->d_type = DT_UNKNOWN;
             if ( stat ( filename, &st ) == 0 ) {
@@ -665,6 +689,7 @@ static void walk_dir ( DRunModePrivateDa
         default:
             break;
         }
+#endif
         g_free ( filename );
     }
     closedir ( dir );


[FILE:2335:patches/patch-source_dialogs_filebrowser.c]
--- source/dialogs/filebrowser.c.orig	2020-11-22 21:02:43 UTC
+++ source/dialogs/filebrowser.c
@@ -107,6 +107,9 @@ static gint compare ( gconstpointer a, g
 
 static void get_file_browser (  Mode *sw )
 {
+#ifdef __sun__
+    struct stat st;
+#endif
     FileBrowserModePrivateData *pd = (FileBrowserModePrivateData *) mode_get_private_data ( sw );
     /**
      * Get the entries to display.
@@ -132,6 +135,19 @@ static void get_file_browser (  Mode *sw
                 continue;
             }
 
+#ifdef __sun__
+            stat (rd->d_name, &st);
+            switch (st.st_mode) 
+            {
+            case S_IFBLK:
+            case S_IFCHR:
+            case S_IFIFO:
+            case S_IFSOCK:
+            default:
+                break;
+            case S_IFREG:
+            case S_IFDIR:
+#else
             switch ( rd->d_type )
             {
             case DT_BLK:
@@ -143,16 +159,27 @@ static void get_file_browser (  Mode *sw
                 break;
             case DT_REG:
             case DT_DIR:
+#endif
                 pd->array = g_realloc ( pd->array, ( pd->array_length + 1 ) * sizeof ( FBFile ) );
                 // Rofi expects utf-8, so lets convert the filename.
                 pd->array[pd->array_length].name           = g_filename_to_utf8 ( rd->d_name, -1, NULL, NULL, NULL );
                 pd->array[pd->array_length].path           = g_build_filename ( cdir, rd->d_name, NULL );
-                pd->array[pd->array_length].type           = ( rd->d_type == DT_DIR ) ? DIRECTORY : RFILE;
+                pd->array[pd->array_length].type           =
+#ifdef __sun__
+                  ( st.st_mode == S_IFDIR )
+#else
+                  ( rd->d_type == DT_DIR )
+#endif
+                  ? DIRECTORY : RFILE;
                 pd->array[pd->array_length].icon_fetch_uid = 0;
                 pd->array[pd->array_length].link           = FALSE;
                 pd->array_length++;
                 break;
+#ifdef __sun__
+            case S_IFLNK:
+#else
             case DT_LNK:
+#endif
                 pd->array = g_realloc ( pd->array, ( pd->array_length + 1 ) * sizeof ( FBFile ) );
                 // Rofi expects utf-8, so lets convert the filename.
                 pd->array[pd->array_length].name           = g_filename_to_utf8 ( rd->d_name, -1, NULL, NULL, NULL );


[FILE:1029:patches/patch-source_dialogs_run.c]
--- source/dialogs/run.c.orig	2020-09-06 18:37:58 UTC
+++ source/dialogs/run.c
@@ -45,6 +45,9 @@
 #include <strings.h>
 #include <string.h>
 #include <errno.h>
+#ifdef __sun__
+#include <sys/stat.h>
+#endif
 
 #include "rofi.h"
 #include "settings.h"
@@ -209,6 +212,9 @@ static char ** get_apps ( unsigned int *
     char         **retv        = NULL;
     unsigned int num_favorites = 0;
     char         *path;
+#ifdef __sun__
+    struct stat  s;
+#endif
 
     if ( g_getenv ( "PATH" ) == NULL ) {
         return NULL;
@@ -253,7 +259,12 @@ static char ** get_apps ( unsigned int *
             g_free ( dirn );
 
             while ( ( dent = readdir ( dir ) ) != NULL ) {
+#ifdef __sun__
+                stat(dent->d_name, &s);
+                if (s.st_mode != S_IFREG && s.st_mode != S_IFLNK && s.st_mode != 0) {
+#else
                 if ( dent->d_type != DT_REG && dent->d_type != DT_LNK && dent->d_type != DT_UNKNOWN ) {
+#endif
                     continue;
                 }
                 // Skip dot files.

