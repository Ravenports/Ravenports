# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		ucpp
VERSION=		1.3.5
REVISION=		1
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		C preprocessor and lexer
HOMEPAGE=		https://gitlab.com/scarabeusiv/ucpp
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITLAB/scarabeusiv:ucpp:1.3.5
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			tools
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

EXRUN[tools]=		primary

USES=			autoreconf gmake libtool

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/ucpp

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		13.0.5

VAR_OPSYS[sunos]=	CFLAGS=-D_XPG6

[FILE:284:descriptions/desc.primary]
ucpp is a C preprocessor and lexer. It has the following goals:

  - Strict conformance to the C99 standard (with switches to
    disable some extensions and mimic C90 behaviour)
  - Low memory consumption
  - Possibility to use the code as a lexer (that outputs tokens
    directly)


[FILE:40:descriptions/desc.tools]
This package contains the ucpp program.


[FILE:108:distinfo]
2a4d7d78b70a5b82c226a463a41e2e225e84296178f1637421c4aeace1e5df29        92981 scarabeusiv-ucpp-1.3.5.tar.gz


[FILE:55:manifests/plist.primary]
lib/
 libucpp.so.%%SOMAJOR%%
 libucpp.so.%%SOVERSION%%


[FILE:133:manifests/plist.dev]
include/libucpp/
 cpp.h
 hash.h
 mem.h
 nhash.h
 tune.h
 ucpp-config.h
 ucppi.h
lib/
 libucpp.a
 libucpp.so
lib/pkgconfig/libucpp.pc


[FILE:9:manifests/plist.tools]
bin/ucpp


[FILE:22:manifests/plist.man]
share/man/man1/ucpp.1


[FILE:416:patches/patch-src_cpp.c]
Disable assertions always

--- src/cpp.c.orig	2012-12-19 07:37:55 UTC
+++ src/cpp.c
@@ -2373,7 +2373,7 @@ static int parse_opt(int argc, char *arg
 	char *filename = 0;
 	int with_std_incpath = 1;
 	int print_version = 0, print_defs = 0, print_asserts = 0;
-	int system_macros = 0, standard_assertions = 1;
+	int system_macros = 0, standard_assertions = 0;
 
 	init_lexer_state(ls);
 	ls->flags = DEFAULT_CPP_FLAGS;

