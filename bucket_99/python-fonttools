# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-fonttools
VERSION=		4.39.0
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Tools to manipulate font files (3.10)
SDESC[v11]=		Tools to manipulate font files (3.11)
HOMEPAGE=		https://github.com/fonttools/fonttools
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/43/6e/810648a366d6488e1e0543f72dcb2016e54ec02933e302cd41d72599e90d
DISTFILE[1]=		fonttools-4.39.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		fonttools-4.39.0.dist-info

GENERATED=		yes

[PY310].USES_ON=			python:py310,wheel

[PY311].USES_ON=			python:v11,wheel

[FILE:3991:descriptions/desc.single]
|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|

What is this?
~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
  project includes the TTX tool, that can convert TrueType and OpenType
  fonts to and from an XML text format, which is also called TTX. It
  supports TrueType, OpenType, AFM and to an extent Type 1 and some
  Mac-specific formats. The project has an `MIT open-source
  licence <LICENSE>`__.
| Among other things this means you can use it free of charge.

[User documentation] and
[developer documentation]
are available at [Read the Docs].

Installation
~~~~~~~~~~~~

FontTools requires [Python] 3.8
or later. We try to follow the same schedule of minimum Python version
support as
NumPy (see [NEP 29]).

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

Changelog
~~~~~~~~~

4.39.0 (released 2023-03-06)
----------------------------

- [mtiLib] Optionally add `Debg` debug info for MTI feature builds (#3018).
- [ttx] Support reading input file from standard input using special `-`
character,
  similar to existing `-o -` option to write output to standard output
(#3020).
- [cython] Prevent ``cython.compiled`` raise AttributeError if cython not
installed
  properly (#3017).
- [OS/2] Guard against ZeroDivisionError when calculating xAvgCharWidth in
the unlikely
  scenario no glyph has non-zero advance (#3015).
- [subset] Recompute xAvgCharWidth independently of
--no-prune-unicode-ranges,
  previously the two options were involuntarily bundled together (#3012).
- [fontBuilder] Add debug parameter to addOpenTypeFeatures method to add
source
  debugging information to the font in the Debg private table (#3008).
- [name] Make NameRecord `__lt__` comparison not fail on Unicode encoding
errors (#3006).
- [featureVars] Fixed bug in overlayBox (#3003, #3005).
- [glyf] Added experimental support for cubic bezier curves in TrueType
glyf table, as
  outlined in glyf v1 proposal (#2988):
 
https://github.com/harfbuzz/boring-expansion-spec/blob/main/glyf1-cubicOutlines.md
- Added new qu2cu module and related qu2cuPen, the reverse of cu2qu for
converting
  TrueType quadratic splines to cubic bezier curves (#2993).
- [glyf] Added experimental support for reading and writing Variable
Composites/Components
  as defined in glyf v1 spec proposal (#2958):
 
https://github.com/harfbuzz/boring-expansion-spec/blob/main/glyf1-varComposites.md.
- [pens]: Added `addVarComponent` method to pen protocols' base classes,
which pens can implement
  to handle varcomponents (by default they get decompo
- [misc.transform] Added DecomposedTransform class which implements an
affine transformation
  with separate translate, rotation, scale, skew, and transformation-center
components (#2598)
- [sbix] Ensure Glyph.referenceGlyphName is set; fixes error after dumping
and
  re-compiling sbix table with 'dupe' glyphs (#2984).
- [feaLib] Be cleverer when merging chained single substitutions into same
lookup
  when they are specified using the inline notation (#2150, #2974).
- [instancer] Clamp user-inputted axis ranges to those of fvar (#2959).
- [otBase/subset] Define __getstate__ for BaseTable so that a
copied/pickled 'lazy'
  object gets its own OTTableReader to read from; incidentally fixes a bug
while
  subsetting COLRv1 table containing ClipBoxes on python 3.11 (#2965,
#2968).
- [sbix] Handle glyphs with "dupe" graphic type on compile correctly
(#2963).
- [glyf] endPointsOfContours field should be unsigned! Kudos to behdad for
  spotting one of the oldest bugs in FT. Probably nobody has ever dared to
make
  glyphs with more than 32767 points... (#2957).
- [feaLib] Fixed handling of ignore statements with unmarked glyphs to
match
  makeotf behavior, which assumes the first glyph is marked (#2950).
- Reformatted code with black and enforce new code style via CI check
(#2925).
- [feaLib] Sort name table entries following OT spec prescribed order in
the builder (#2927).


[FILE:112:distinfo]
f5e764e1fd6ad54dfc201ff32af0ba111bcfbe0d05b24540af74c63db4ed6390      1004285 fonttools-4.39.0-py3-none-any.whl

