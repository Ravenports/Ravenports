# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-fonttools
VERSION=		4.25.2
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Tools to manipulate font files (PY38)
SDESC[py39]=		Tools to manipulate font files (PY39)
HOMEPAGE=		https://github.com/fonttools/fonttools
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/45/3b/4065f0c341aeef244761a3892f7f1cd66f6f57fa49779e832c4499977560
DISTFILE[1]=		fonttools-4.25.2-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		fonttools-4.25.2.dist-info

GENERATED=		yes

[PY38].USES_ON=				python:py38,wheel

[PY39].USES_ON=				python:py39,wheel

[FILE:3661:descriptions/desc.single]
|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|

What is this?
~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
  project includes the TTX tool, that can convert TrueType and OpenType
  fonts to and from an XML text format, which is also called TTX. It
  supports TrueType, OpenType, AFM and to an extent Type 1 and some
  Mac-specific formats. The project has an `MIT open-source
  licence <LICENSE>`__.
| Among other things this means you can use it free of charge.

[User documentation] and
[developer documentation]
are available at [Read the Docs].

Installation
~~~~~~~~~~~~

FontTools 4.x requires [Python] 3.6
or later. FontTools 3.x requires Python 2.7 or later.

**NOTE** From August 2019, until no later than January 1 2020, the support
for *Python 2.7* will be limited to only critical bug fixes, and no new
features
will be added to the py27 branch. You can read more [here]
and [here] for the
reasons behind this decision.

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

Changelog
~~~~~~~~~

4.25.2 (released 2021-07-26)
----------------------------

- [COLRv1] Various changes to sync with the latest CORLv1 draft spec. In
particular:  
  define COLR.VarIndexMap, remove/inline ColorIndex struct, add
VarIndexBase to ``PaintVar*`` tables (#2372);  
  add reduced-precicion specialized transform Paints;  
  define Angle as fraction of half circle encoded as F2Dot14;  
  use FWORD (int16) for all Paint center coordinates;  
  change PaintTransform to have an offset to Affine2x3;  
- [ttLib] when importing XML, only set sfntVersion if the font has no
reader and is empty (#2376)

4.25.1 (released 2021-07-16)
----------------------------

- [ttGlyphPen] Fixed bug in TTGlyphPointPen, whereby open contours (i.e.
starting
  with segmentType "move") would throw NotImplementedError. They are now
treated
  as if they are closed, like with the TTGlyphPen (#2364, #2366).

4.25.0 (released 2021-07-05)
----------------------------

- [tfmLib] Added new library for parsing TeX Font Metric (TFM) files
(#2354).
- [TupleVariation] Make shared tuples order deterministic on python < 3.7
where
  Counter (subclass of dict) doesn't remember insertion order (#2351,
#2353).
- [otData] Renamed COLRv1 structs to remove 'v1' suffix and match the
updated draft
  spec: 'LayerV1List' -> 'LayerList', 'BaseGlyphV1List' -> 'BaseGlyphList',
  'BaseGlyphV1Record' -> 'BaseGlyphPaintRecord' (#2346).
  Added 8 new ``PaintScale*`` tables: with/without centers, uniform vs
non-uniform.
  Added ``*AroundCenter variants to PaintRotate and PaintSkew``: the
default
  versions no longer have centerX/Y, but default to origin.
  PaintRotate, PaintSkew and PaintComposite formats were re-numbered.
  NOTE: these are breaking changes; clients using the experimental COLRv1
API will
  have to be updated (#2348).
- [pointPens] Allow GuessSmoothPointPen to accept a tolerance. Fixed call
to
  ``math.atan2`` with x/y parameters inverted. Sync the code with fontPens
(#2344).
- [post] Fixed parsing post table format 2.0 when it contains extra garbage
  at the end of the stringData array (#2314).
- [subset] drop empty features unless 'size' with FeatureParams table
(#2324).
- [otlLib] Added ``otlLib.optimize`` module; added GPOS compaction
algorithm.
  The compaction can be run on existing fonts with ``fonttools
otlLib.optimize
  or using the snippet compact_gpos.py``. There's experimental support for
  compacting fonts at compilation time using an environment variable, but
that
  might be removed later (#2326).

4.24.4 (released 2021-05-25)
----------------------------


[FILE:112:distinfo]
e5221298b235f1747fbbf9a7c71d9b665e2b017508f7c14d3496a6d049a7740d       868272 fonttools-4.25.2-py3-none-any.whl

