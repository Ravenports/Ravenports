# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-fonttools
VERSION=		4.9.0
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		Tools to manipulate font files (PY37)
SDESC[py38]=		Tools to manipulate font files (PY38)
HOMEPAGE=		https://github.com/fonttools/fonttools
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/f/fonttools
DISTFILE[1]=		fonttools-4.9.0.zip:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		fonttools-4.9.0

GENERATED=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[FILE:3635:descriptions/desc.single]
|Travis Build Status| |Appveyor Build status| |Coverage Status| |PyPI|
|Gitter Chat|

What is this?
~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
  project includes the TTX tool, that can convert TrueType and OpenType
  fonts to and from an XML text format, which is also called TTX. It
  supports TrueType, OpenType, AFM and to an extent Type 1 and some
  Mac-specific formats. The project has an `MIT open-source
  licence <LICENSE>`__.
| Among other things this means you can use it free of charge.

Installation
~~~~~~~~~~~~

FontTools 4.x requires [Python] 3.6
or later. FontTools 3.x requires Python 2.7 or later.

**NOTE** From August 2019, until no later than January 1 2020, the support
for *Python 2.7* will be limited to only critical bug fixes, and no new
features
will be added to the py27 branch. You can read more [here]
and [here] for the
reasons behind this decision.

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

Changelog
~~~~~~~~~

4.9.0 (released 2020-04-29)
---------------------------

- [subset] Fixed subsetting of FeatureVariations table. The subsetter no
longer drops
  FeatureVariationRecords that have empty substitutions as that will keep
the search
  going and thus change the logic. It will only drop empty records that
occur at the
  end of the FeatureVariationRecords array (#1881).
- [subset] Remove FeatureVariations table and downgrade GSUB/GPOS to
version 0x10000
  when FeatureVariations contain no FeatureVariationRecords after
subsetting (#1903).
- [agl] Add support for legacy Adobe Glyph List of glyph names in
``fontTools.agl``
  (#1895).
- [feaLib] Ignore superfluous script statements (#1883).
- [feaLib] Hide traceback by default on fonttools feaLib command line.
  Use ``--traceback`` option to show (#1898).
- [feaLib] Check lookup index in chaining sub/pos lookups and print better
error
  message (#1896, #1897).
- [feaLib] Fix building chained alt substitutions (#1902).
- [Doc] Included all fontTools modules in the sphinx-generated
documentation, and
  published it to ReadTheDocs for continuous documentation of the fontTools
project
  (#1333). Check it out at https://fonttools.readthedocs.io/. Thanks to
Chris Simpkins!
- [transform] The Transform class is now subclass of ``typing.NamedTuple``.
No
  change in functionality (#1904).

4.8.1 (released 2020-04-17)
---------------------------

- [feaLib] Fixed ``AttributeError: 'NoneType' has no attribute
'getAlternateGlyphs'
  when aalt`` feature references a chain contextual substitution lookup
  (googlefonts/fontmake#648, #1878).

4.8.0 (released 2020-04-16)
---------------------------

- [feaLib] If Parser is initialized without a glyphNames parameter, it
cannot
  distinguish between a glyph name containing an hyphen, or a range of
glyph names;
  instead of raising an error, it now interprets them as literal glyph
names, while
  also outputting a logging warning to alert user about the ambiguity
(#1768, #1870).
- [feaLib] When serializing AST to string, emit spaces around hyphens that
denote
  ranges. Also, fixed an issue with CID ranges when round-tripping
AST->string->AST
  (#1872).
- [Snippets/otf2ttf] In otf2ttf.py script update LSB in hmtx to match xMin
(#1873).
- [colorLib] Added experimental support for building COLR v1 tables as per
  the `colr-gradients-spec
<https://github.com/googlefonts/colr-gradients-spec/blob/master/colr-gradients-spec.md>`__
  draft proposal. **NOTE**: both the API and the XML dump of COLR v1 are
  susceptible to change while the proposal is being discussed and
formalized (#1822).



[FILE:98:distinfo]
16dd6ae4d057e170756339cde146e7295c721baad46e197b98a68d4cdd425c94      4173320 fonttools-4.9.0.zip

