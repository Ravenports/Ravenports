# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-fonttools
VERSION=		4.39.3
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Tools to manipulate font files (3.10)
SDESC[v11]=		Tools to manipulate font files (3.11)
HOMEPAGE=		https://github.com/fonttools/fonttools
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/16/07/1c7547e27f559ec078801d522cc4d5127cdd4ef8e831c8ddcd9584668a07
DISTFILE[1]=		fonttools-4.39.3-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		fonttools-4.39.3.dist-info

GENERATED=		yes

[PY310].USES_ON=			python:py310,wheel

[PY311].USES_ON=			python:v11,wheel

[FILE:3588:descriptions/desc.single]
|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|

What is this?
~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
  project includes the TTX tool, that can convert TrueType and OpenType
  fonts to and from an XML text format, which is also called TTX. It
  supports TrueType, OpenType, AFM and to an extent Type 1 and some
  Mac-specific formats. The project has an `MIT open-source
  licence <LICENSE>`__.
| Among other things this means you can use it free of charge.

[User documentation] and
[developer documentation]
are available at [Read the Docs].

Installation
~~~~~~~~~~~~

FontTools requires [Python] 3.8
or later. We try to follow the same schedule of minimum Python version
support as
NumPy (see [NEP 29]).

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

Changelog
~~~~~~~~~

4.39.3 (released 2023-03-28)
----------------------------

- [sbix] Fixed TypeError when compiling empty glyphs whose imageData is
None, regression
  was introduced in v4.39 (#3059).
- [ttFont] Fixed AttributeError on python <= 3.10 when opening a TTFont
from a tempfile
  SpooledTemporaryFile, seekable method only added on python 3.11 (#3052).

4.39.2 (released 2023-03-16)
----------------------------

- [varLib] Fixed regression introduced in 4.39.1 whereby an incomplete
'STAT' table
  would be built even though a DesignSpace v5 did contain 'STAT'
definitions (#3045, #3046).

4.39.1 (released 2023-03-16)
----------------------------

- [avar2] Added experimental support for reading/writing avar version 2 as
specified in
  this draft proposal:
https://github.com/harfbuzz/boring-expansion-spec/blob/main/avar2.md
- [glifLib] Wrap underlying XML library exceptions with GlifLibError when
parsing GLIFs,
  and also print the name and path of the glyph that fails to be parsed
(#3042).
- [feaLib] Consult avar for normalizing user-space values in ConditionSets
and in
  VariableScalars (#3042, #3043).
- [ttProgram] Handle string input to Program.fromAssembly() (#3038).
- [otlLib] Added a config option to emit GPOS 7 lookups, currently disabled
by default
  because of a macOS bug (#3034).
- [COLRv1] Added method to automatically compute ClipBoxes (#3027).
- [ttFont] Fixed getGlyphID to raise KeyError on missing glyphs instead of
returning
  None. The regression was introduced in v4.27.0 (#3032).
- [sbix] Fixed UnboundLocalError: cannot access local variable 'rawdata'
(#3031).
- [varLib] When building VF, do not overwrite a pre-existing STAT table
that was built
  with feaLib from FEA feature file. Also, added support for building
multiple VFs
  defined in Designspace v5 from fonttools varLib script (#3024).
- [mtiLib] Only add Debg table with lookup names when
FONTTOOLS_LOOKUP_DEBUGGING
  env variable is set (#3023).

4.39.0 (released 2023-03-06)
----------------------------

- [mtiLib] Optionally add `Debg` debug info for MTI feature builds (#3018).
- [ttx] Support reading input file from standard input using special `-`
character,
  similar to existing `-o -` option to write output to standard output
(#3020).
- [cython] Prevent ``cython.compiled`` raise AttributeError if cython not
installed
  properly (#3017).
- [OS/2] Guard against ZeroDivisionError when calculating xAvgCharWidth in
the unlikely
  scenario no glyph has non-zero advance (#3015).
- [subset] Recompute xAvgCharWidth independently of
--no-prune-unicode-ranges,
  previously the two options were involuntarily bundled together (#3012).
- [fontBuilder] Add debug parameter to addOpenTypeFeatures method to add


[FILE:112:distinfo]
64c0c05c337f826183637570ac5ab49ee220eec66cf50248e8df527edfa95aeb      1009099 fonttools-4.39.3-py3-none-any.whl

