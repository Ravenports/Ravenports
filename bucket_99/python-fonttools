# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-fonttools
VERSION=		4.27.0
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Tools to manipulate font files (PY38)
SDESC[py39]=		Tools to manipulate font files (PY39)
HOMEPAGE=		https://github.com/fonttools/fonttools
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/e8/c0/ee9de5a38cbf9168924899b9eecaa9e209b1cff16cb8ff3d440b73af07c6
DISTFILE[1]=		fonttools-4.27.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		fonttools-4.27.0.dist-info

GENERATED=		yes

[PY38].USES_ON=				python:py38,wheel

[PY39].USES_ON=				python:py39,wheel

[FILE:3502:descriptions/desc.single]
|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|

What is this?
~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
  project includes the TTX tool, that can convert TrueType and OpenType
  fonts to and from an XML text format, which is also called TTX. It
  supports TrueType, OpenType, AFM and to an extent Type 1 and some
  Mac-specific formats. The project has an `MIT open-source
  licence <LICENSE>`__.
| Among other things this means you can use it free of charge.

[User documentation] and
[developer documentation]
are available at [Read the Docs].

Installation
~~~~~~~~~~~~

FontTools 4.x requires [Python] 3.6
or later. FontTools 3.x requires Python 2.7 or later.

**NOTE** From August 2019, until no later than January 1 2020, the support
for *Python 2.7* will be limited to only critical bug fixes, and no new
features
will be added to the py27 branch. You can read more [here]
and [here] for the
reasons behind this decision.

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

Changelog
~~~~~~~~~

4.27.0 (released 2021-09-14)
----------------------------

- [ttLib/otTables] Cleaned up virtual GID handling: allow virtual GIDs in
Coverage
  and ClassDef readers; removed unused allowVID argument from TTFont
  constructor, and requireReal argument in ``TTFont.getGlyphID`` method.
  Make ``TTFont.setGlyphOrder`` clear reverse glyphOrder map, and assume
glyphOrder
  internal attribute is never modified outside setGlyphOrder; added
``TTFont.getGlyphNameMany
  and getGlyphIDMany`` (#1536, #1654, #2334, #2398).
- [py23] Dropped internal use of ``fontTools.py23`` module to fix
deprecation warnings
  in client code that imports from fontTools (#2234, #2399, #2400).
- [subset] Fix subsetting COLRv1 clip boxes when font is loaded lazily
(#2408).

4.26.2 (released 2021-08-09)
----------------------------

- [otTables] Added missing ``CompositeMode.PLUS`` operator (#2390).

4.26.1 (released 2021-08-03)
----------------------------

- [transform] Added transformVector and transformVectors methods to the
  Transform class. Similar to transformPoint but ignore the translation
  part (#2386).

4.26.0 (released 2021-08-03)
----------------------------

- [xmlWriter] Default to ``"\n" for newlinestr`` instead of
platform-specific
  ``os.linesep`` (#2384).
- [otData] Define COLRv1 ClipList and ClipBox (#2379).
- [removeOverlaps/instancer] Added --ignore-overlap-errors option to work
around
  Skia PathOps.Simplify bug (#2382, #2363, google/fonts#3365).
- NOTE: This will be the last version to support Python 3.6. FontTools will
require
  Python 3.7 or above from the next release (#2350)

4.25.2 (released 2021-07-26)
----------------------------

- [COLRv1] Various changes to sync with the latest CORLv1 draft spec. In
particular:  
  define COLR.VarIndexMap, remove/inline ColorIndex struct, add
VarIndexBase to ``PaintVar*`` tables (#2372);  
  add reduced-precicion specialized transform Paints;  
  define Angle as fraction of half circle encoded as F2Dot14;  
  use FWORD (int16) for all Paint center coordinates;  
  change PaintTransform to have an offset to Affine2x3;  
- [ttLib] when importing XML, only set sfntVersion if the font has no
reader and is empty (#2376)

4.25.1 (released 2021-07-16)
----------------------------

- [ttGlyphPen] Fixed bug in TTGlyphPointPen, whereby open contours (i.e.
starting
  with segmentType "move") would throw NotImplementedError. They are now


[FILE:112:distinfo]
f12224bde50eaee537120fab09c3ad6f955059f530dfd24f70aa5228be327d72       869463 fonttools-4.27.0-py3-none-any.whl

