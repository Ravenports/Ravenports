# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-fonttools
VERSION=		4.37.1
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Tools to manipulate font files (3.10)
SDESC[py39]=		Tools to manipulate font files (3.9)
HOMEPAGE=		https://github.com/fonttools/fonttools
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/99/e2/90421047dfd94ed78064b41345d63985c576dc98b7c87bec92a1a8cb88e5
DISTFILE[1]=		fonttools-4.37.1-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

DISTNAME=		fonttools-4.37.1.dist-info

GENERATED=		yes

[PY39].USES_ON=				python:py39,wheel

[PY310].USES_ON=			python:py310,wheel

[FILE:3501:descriptions/desc.single]
|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|

What is this?
~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
  project includes the TTX tool, that can convert TrueType and OpenType
  fonts to and from an XML text format, which is also called TTX. It
  supports TrueType, OpenType, AFM and to an extent Type 1 and some
  Mac-specific formats. The project has an `MIT open-source
  licence <LICENSE>`__.
| Among other things this means you can use it free of charge.

[User documentation] and
[developer documentation]
are available at [Read the Docs].

Installation
~~~~~~~~~~~~

FontTools requires [Python] 3.7
or later.

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

Changelog
~~~~~~~~~

4.37.1 (released 2022-08-24)
----------------------------

- [subset] Fixed regression introduced with v4.37.0 while subsetting the
VarStore of
  HVAR and VVAR tables, whereby an ``AttributeError: subset_varidxes`` was
  thrown because an apparently unused import statement (with the
side-effect of
  dynamically binding that subset_varidxes method to the VarStore class)
had been
  accidentally deleted in an unrelated PR (#2679, #2773).
- [pens] Added cairoPen (#2678).
- [gvar] Read gvar more lazily by not parsing all of the glyf table
(#2771).
- [ttGlyphSet] Make ``drawPoints(pointPen)`` method work for CFF fonts as
well via
  adapter pen (#2770).

4.37.0 (released 2022-08-23)
----------------------------

- [varLib.models] Reverted PR #2717 which added support for "narrow tents"
in v4.36.0,
  as it introduced a regression (#2764, #2765). It will be restored in
upcoming release
  once we found a solution to the bug.
- [cff.specializer] Fixed issue in charstring generalizer with the blend
operator
  (#2750, #1975).
- [varLib.models] Added support for extrapolation (#2757).
- [ttGlyphSet] Ensure the newly added _TTVarGlyphSet inherits from
_TTGlyphSet
  to keep backward compatibility with existing API (#2762).
- [kern] Allow compiling legacy kern tables with more than 64k entries
(d21cfdede).
- [visitor] Added new visitor API to traverse tree of objects and dispatch
based
  on the attribute type: cf. ``fontTools.misc.visitor and
fontTools.ttLib.ttVisitor``. Added ``fontTools.ttLib.scaleUpem`` module
that uses the latter to
  change a font's units-per-em and scale all the related fields accordingly
(#2718,
  #2755).

4.36.0 (released 2022-08-17)
----------------------------

- [varLib.models] Use a simpler model that generates narrower "tents"
(regions, master
  supports) whenever possible: specifically when any two axes that actively
"cooperate"
  (have masters at non-zero positions for both axes) have a complete set of
intermediates.
  The simpler algorithm produces fewer overlapping regions and behaves
better with
  respect to rounding at the peak positions than the generic solver, always
matching
  intermediate masters exactly, instead of maximally 0.5 units off. This
may be useful
  when 100% metrics compatibility is desired (#2218, #2717).
- [feaLib] Remove warning when about GDEF not being built when explicitly
not
  requested; don't build one unconditonally even when not requested (#2744,
also works
  around #2747).
- [ttFont] ``TTFont.getGlyphSet`` method now supports selecting a location
that
  represents an instance of a variable font (supports both user-scale and
normalized
  axes coordinates via the ``normalized=False`` parameter). Currently this
only works


[FILE:112:distinfo]
fff6b752e326c15756c819fe2fe7ceab69f96a1dbcfe8911d0941cdb49905007       957211 fonttools-4.37.1-py3-none-any.whl

