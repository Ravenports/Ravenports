# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-fonttools
VERSION=		4.24.0
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Tools to manipulate font files (PY38)
SDESC[py39]=		Tools to manipulate font files (PY39)
HOMEPAGE=		https://github.com/fonttools/fonttools
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/39/b5/e58a6192bd686bb214598301f4675ab9aadd7769bb4a4933de36d440d17d
DISTFILE[1]=		fonttools-4.24.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		fonttools-4.24.0.dist-info

GENERATED=		yes

[PY38].USES_ON=				python:py38,wheel

[PY39].USES_ON=				python:py39,wheel

[FILE:3683:descriptions/desc.single]
|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|

What is this?
~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
  project includes the TTX tool, that can convert TrueType and OpenType
  fonts to and from an XML text format, which is also called TTX. It
  supports TrueType, OpenType, AFM and to an extent Type 1 and some
  Mac-specific formats. The project has an `MIT open-source
  licence <LICENSE>`__.
| Among other things this means you can use it free of charge.

[User documentation] and
[developer documentation]
are available at [Read the Docs].

Installation
~~~~~~~~~~~~

FontTools 4.x requires [Python] 3.6
or later. FontTools 3.x requires Python 2.7 or later.

**NOTE** From August 2019, until no later than January 1 2020, the support
for *Python 2.7* will be limited to only critical bug fixes, and no new
features
will be added to the py27 branch. You can read more [here]
and [here] for the
reasons behind this decision.

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

Changelog
~~~~~~~~~

4.24.0 (released 2021-05-17)
----------------------------

- [pens] Add ``ttGlyphPen.TTGlyphPointPen similar to TTGlyphPen`` (#2205).

4.23.1 (released 2021-05-14)
----------------------------

- [subset] Fix KeyError after subsetting COLR table that initially contains
  both v0 and v1 color glyphs when the subset only requested v1 glyphs; we
were
  not pruning the v0 portion of the table (#2308).
- [colorLib] Set LayerV1List attribute to None when empty, it's optional
  in CORLv1 (#2308).

4.23.0 (released 2021-05-13)
----------------------------

- [designspaceLib] Allow to use ``\\UNC`` absolute paths on Windows (#2299,
#2306).
- [varLib.merger] Fixed bug where VarLibMergeError was raised with
incorrect
  parameters (#2300).
- [feaLib] Allow substituting a glyph class with NULL to delete multiple
glyphs
  (#2303).
- [glyf] Fixed NameError exception in getPhantomPoints (#2295, #2305).
- [removeOverlaps] Retry pathops.simplify after rounding path coordinates
to integers
  if it fails the first time using floats, to work around a rare and hard
to debug
  Skia bug (#2288).
- [varLib] Added support for building, reading, writing and optimizing
32-bit
  ItemVariationStore as used in COLRv1 table (#2285).
- [otBase/otConverters] Add array readers/writers for int types (#2285).
- [feaLib] Allow more than one lookahead glyph/class in contextual
positioning with
  "value at end" (#2293, #2294).
- [COLRv1] Default varIdx should be 0xFFFFFFFF (#2297, #2298).
- [pens] Make RecordingPointPen actually pass on identifiers; replace
asserts with
  explicit PenError exception (#2284).
- [mutator] Round lsb for CF2 fonts as well (#2286).

4.22.1 (released 2021-04-26)
----------------------------

- [feaLib] Skip references to named lookups if the lookup block definition
  is empty, similarly to makeotf. This also fixes an AttributeError while
  generating aalt feature (#2276, #2277).
- [subset] Fixed bug with ``--no-hinting`` implementation for Device tables
(#2272,
  #2275). The previous code was alwyas dropping Device tables if no-hinting
was
  requested, but some Device tables (DeltaFormat=0x8000) are also used to
encode
  variation indices and need to be retained.
- [otBase] Fixed bug in getting the ValueRecordSize when decompiling MVAR
  table with ``lazy=True`` (#2273, #2274).
- [varLib/glyf/gvar] Optimized and simplified GlyphCoordinates and
  TupleVariation classes, use bytearray where possible, refactored
  phantom-points calculations. We measured about 30% speedup in total time
  of loading master ttfs, building gvar, and saving (#2261, #2266).


[FILE:112:distinfo]
0353ce8d269a111a240f1959192e4d841b093c8674b9b6b858a96668c0bc76bb       853818 fonttools-4.24.0-py3-none-any.whl

