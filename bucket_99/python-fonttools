# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-fonttools
VERSION=		4.34.4
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Tools to manipulate font files (3.10)
SDESC[py39]=		Tools to manipulate font files (3.9)
HOMEPAGE=		https://github.com/fonttools/fonttools
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/ad/27/094dd5d09d3a57f7a5f27414ae5c1405bae1164922f1bb61fd8a748e8f65
DISTFILE[1]=		fonttools-4.34.4-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

DISTNAME=		fonttools-4.34.4.dist-info

GENERATED=		yes

[PY39].USES_ON=				python:py39,wheel

[PY310].USES_ON=			python:py310,wheel

[FILE:3361:descriptions/desc.single]
|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|

What is this?
~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
  project includes the TTX tool, that can convert TrueType and OpenType
  fonts to and from an XML text format, which is also called TTX. It
  supports TrueType, OpenType, AFM and to an extent Type 1 and some
  Mac-specific formats. The project has an `MIT open-source
  licence <LICENSE>`__.
| Among other things this means you can use it free of charge.

[User documentation] and
[developer documentation]
are available at [Read the Docs].

Installation
~~~~~~~~~~~~

FontTools requires [Python] 3.7
or later.

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

Changelog
~~~~~~~~~

4.34.4 (released 2022-07-07)
----------------------------

- Fixed typo in varLib/merger.py that causes NameError merging COLR glyphs
  containing more than 255 layers (#2685).

4.34.3 (released 2022-07-07)
----------------------------

- [designspaceLib] Don't make up bad PS names when no STAT data (#2684)

4.34.2 (released 2022-07-06)
----------------------------

- [varStore/subset] fixed KeyError exception to do with NO_VARIATION_INDEX
while
  subsetting varidxes in GPOS/GDEF (a08140d).

4.34.1 (released 2022-07-06)
----------------------------

- [instancer] When optimizing HVAR/VVAR VarStore,
use_NO_VARIATION_INDEX=False to avoid
  including NO_VARIATION_INDEX in AdvWidthMap, RsbMap, LsbMap mappings,
which would
  push the VarIdx width to maximum (4bytes), which is not desirable. This
also fixes
  a hard crash when attempting to subset a varfont after it had been
partially instanced
  with use_NO_VARIATION_INDEX=True.

4.34.0 (released 2022-07-06)
----------------------------

- [instancer] Set RIBBI bits in head and OS/2 table when cutting instances
and the
  subfamily nameID=2 contains strings like 'Italic' or 'Bold' (#2673).
- [otTraverse] Addded module containing methods for traversing trees of
otData tables
  (#2660).
- [otTables] Made DeltaSetIndexMap TTX dump less verbose by omitting no-op
entries
  (#2660).
- [colorLib.builder] Added option to disable PaintColrLayers's reuse of
layers from
  LayerList (#2660).
- [varLib] Added support for merging multiple master COLRv1 tables into a
variable
  COLR table (#2660, #2328). Base color glyphs of same name in different
masters must have
  identical paint graph structure (incl. number of layers, palette indices,
number
  of color line stops, corresponding paint formats at each level of the
graph),
  but can differ in the variable fields (e.g. PaintSolid.Alpha). PaintVar*
tables
  are produced when this happens and a VarStore/DeltaSetIndexMap is added
to the
  variable COLR table. It is possible for non-default masters to be
'sparse', i.e.
  omit some of the color glyphs present in the default master.
- [feaLib] Let the Parser set nameIDs 1 through 6 that were previously
reserved (#2675).
- [varLib.varStore] Support NO_VARIATION_INDEX in optimizer and instancer.
- [feaLib] Show all missing glyphs at once at end of parsing (#2665).
- [varLib.iup] Rewrite force-set conditions and limit DP loopback length
(#2651).
  For Noto Sans, IUP time drops from 23s down to 9s, with only a slight
size increase
  in the final font. This basically turns the algorithm from O(n^3) into
O(n).


[FILE:112:distinfo]
d73f25b283cd8033367451122aa868a23de0734757a01984e4b30b18b9050c72       944138 fonttools-4.34.4-py3-none-any.whl

