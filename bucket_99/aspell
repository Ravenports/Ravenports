# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		aspell
VERSION=		0.60.7
KEYWORDS=		textproc
VARIANTS=		standard
SDESC[standard]=	GNU spell checker
HOMEPAGE=		http://aspell.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNU/aspell
DISTFILE[1]=		aspell-0.60.7.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe gmake iconv libtool ncurses perl shebangfix
			gettext-runtime fbsd10fix

INFO=			single:aspell-dev
			single:aspell
CPE_VENDOR=		gnu
FPC_EQUIVALENT=		textproc/aspell
INFO_SUBDIR=		.
SHEBANG_FILES=		scripts/aspell-import

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-dict-dir={{PREFIX}}/share/aspell
			--enable-docdir={{STD_DOCSDIR}}
			--enable-curses=ncursesw
			--enable-static
			--enable-nls

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		15.2.0
PLIST_SUB=		VER=0.60

[FILE:704:descriptions/desc.single]
GNU Aspell is a Free and Open Source spell checker designed to eventually
replace Ispell. It can either be used as a library or as an independent
spell checker.

Its main feature is that it does a superior job of suggesting possible
replacements for a misspelled word than just about any other spell checker
out there for the English language. Unlike Ispell, Aspell can also easily
check documents in UTF-8 without having to use a special dictionary.
Aspell will also do its best to respect the current locale setting. Other
advantages over Ispell include support for using multiple dictionaries at
once and intelligently handling personal dictionaries when more than one
Aspell process is open at once.


[FILE:99:distinfo]
5ca8fc8cb0370cc6c9eb5b64c6d1bc5d57b3750dbf17887726c3407d833b70e4      2071890 aspell-0.60.7.tar.gz


[FILE:2810:manifests/plist.single]
bin/
 aspell
 aspell-import
 precat
 preunzip
 prezip
 prezip-bin
 pspell-config
 run-with-aspell
 word-list-compress
include/aspell.h
include/pspell/pspell.h
lib/
 libaspell.a
 libaspell.so
 libaspell.so.%%SOMAJOR%%
 libaspell.so.%%SOVERSION%%
 libpspell.a
 libpspell.so
 libpspell.so.%%SOMAJOR%%
 libpspell.so.%%SOVERSION%%
lib/aspell-%%VER%%/
 cp1250.cmap
 cp1250.cset
 cp1251.cmap
 cp1251.cset
 cp1252.cmap
 cp1252.cset
 cp1253.cmap
 cp1253.cset
 cp1254.cmap
 cp1254.cset
 cp1255.cmap
 cp1255.cset
 cp1256.cmap
 cp1256.cset
 cp1257.cmap
 cp1257.cset
 cp1258.cmap
 cp1258.cset
 dvorak.kbd
 iso-8859-1.cmap
 iso-8859-1.cset
 iso-8859-10.cmap
 iso-8859-10.cset
 iso-8859-11.cmap
 iso-8859-11.cset
 iso-8859-13.cmap
 iso-8859-13.cset
 iso-8859-14.cmap
 iso-8859-14.cset
 iso-8859-15.cmap
 iso-8859-15.cset
 iso-8859-16.cmap
 iso-8859-16.cset
 iso-8859-2.cmap
 iso-8859-2.cset
 iso-8859-3.cmap
 iso-8859-3.cset
 iso-8859-4.cmap
 iso-8859-4.cset
 iso-8859-5.cmap
 iso-8859-5.cset
 iso-8859-6.cmap
 iso-8859-6.cset
 iso-8859-7.cmap
 iso-8859-7.cset
 iso-8859-8.cmap
 iso-8859-8.cset
 iso-8859-9.cmap
 iso-8859-9.cset
 ispell
 koi8-r.cmap
 koi8-r.cset
 koi8-u.cmap
 koi8-u.cset
 spell
 split.kbd
 standard.kbd
share/aspell/
 ccpp.amf
 comment.amf
 email.amf
 html.amf
 none.amf
 nroff.amf
 perl.amf
 sgml.amf
 tex.amf
 texinfo.amf
 url.amf
share/locale/ast/LC_MESSAGES/aspell.mo
share/locale/be/LC_MESSAGES/aspell.mo
share/locale/ca/LC_MESSAGES/aspell.mo
share/locale/cs/LC_MESSAGES/aspell.mo
share/locale/da/LC_MESSAGES/aspell.mo
share/locale/de/LC_MESSAGES/aspell.mo
share/locale/en_GB/LC_MESSAGES/aspell.mo
share/locale/eo/LC_MESSAGES/aspell.mo
share/locale/es/LC_MESSAGES/aspell.mo
share/locale/fi/LC_MESSAGES/aspell.mo
share/locale/fr/LC_MESSAGES/aspell.mo
share/locale/fur/LC_MESSAGES/aspell.mo
share/locale/ga/LC_MESSAGES/aspell.mo
share/locale/hr/LC_MESSAGES/aspell.mo
share/locale/id/LC_MESSAGES/aspell.mo
share/locale/it/LC_MESSAGES/aspell.mo
share/locale/ja/LC_MESSAGES/aspell.mo
share/locale/mn/LC_MESSAGES/aspell.mo
share/locale/ms/LC_MESSAGES/aspell.mo
share/locale/nl/LC_MESSAGES/aspell.mo
share/locale/pl/LC_MESSAGES/aspell.mo
share/locale/pt/LC_MESSAGES/aspell.mo
share/locale/pt_BR/LC_MESSAGES/aspell.mo
share/locale/ro/LC_MESSAGES/aspell.mo
share/locale/ru/LC_MESSAGES/aspell.mo
share/locale/rw/LC_MESSAGES/aspell.mo
share/locale/sk/LC_MESSAGES/aspell.mo
share/locale/sl/LC_MESSAGES/aspell.mo
share/locale/sr/LC_MESSAGES/aspell.mo
share/locale/sv/LC_MESSAGES/aspell.mo
share/locale/tg/LC_MESSAGES/aspell.mo
share/locale/uk/LC_MESSAGES/aspell.mo
share/locale/vi/LC_MESSAGES/aspell.mo
share/locale/wa/LC_MESSAGES/aspell.mo
share/locale/zh_CN/LC_MESSAGES/aspell.mo
share/man/man1/
 aspell-import.1.gz
 aspell.1.gz
 prezip-bin.1.gz
 pspell-config.1.gz
 run-with-aspell.1.gz
 word-list-compress.1.gz


[FILE:1534:patches/patch-Makefile.in]
--- Makefile.in.orig	2019-07-29 06:38:02 UTC
+++ Makefile.in
@@ -651,7 +651,12 @@ top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 AUTOMAKE_OPTIONS = foreign subdir-objects
-SUBDIRS = . po manual
+
+ifndef NOPORTDOCS
+MANUALSUBDIR = manual
+endif
+SUBDIRS = . po $(MANUALSUBDIR)
+
 DIST_SUBDIRS = ${SUBDIRS} examples myspell lib5
 filterdir = ${pkglibdir}
 optdir = ${pkgdatadir}
@@ -739,7 +744,7 @@ libaspell_la_SOURCES = common/cache.cpp
 	lib/string_list-c.cpp lib/find_speller.cpp lib/speller-c.cpp \
 	lib/string_pair_enumeration-c.cpp lib/new_checker.cpp \
 	modules/filter/url.cpp $(am__append_3)
-libaspell_la_LIBADD = $(LTLIBINTL) $(PTHREAD_LIB)
+libaspell_la_LIBADD = $(LTLIBINTL) $(PTHREAD_LIB) $(LTLIBINTL)
 @INCREMENTED_SONAME_FALSE@libaspell_la_LDFLAGS = -version-info 17:0:2 -no-undefined
 @INCREMENTED_SONAME_TRUE@libaspell_la_LDFLAGS = -version-info 18:0:2 -no-undefined
 @PSPELL_COMPATIBILITY_TRUE@libpspell_la_SOURCES = lib/dummy.cpp
@@ -748,7 +753,7 @@ libaspell_la_LIBADD = $(LTLIBINTL) $(PTH
 @INCREMENTED_SONAME_TRUE@@PSPELL_COMPATIBILITY_TRUE@libpspell_la_LDFLAGS = -version-info 18:0:2 -no-undefined
 word_list_compress_SOURCES = prog/compress.c
 aspell_SOURCES = prog/aspell.cpp prog/check_funs.cpp prog/checker_string.cpp
-aspell_LDADD = libaspell.la $(CURSES_LIB)
+aspell_LDADD = libaspell.la $(CURSES_LIB) $(LTLIBINTL)
 prezip_bin_SOURCES = prog/prezip.c
 static_optfiles = modules/filter/url-filter.info $(am__append_2)
 dynamic_optfiles = $(am__append_4)


[FILE:951:patches/patch-configure]
--- configure.orig	2019-07-29 06:38:03 UTC
+++ configure
@@ -18289,7 +18289,7 @@ _ACEOF
 if ac_fn_cxx_try_link "$LINENO"; then :
   CURSES_LIB=-lncurses
 
-$as_echo "#define CURSES_HEADER <ncurses/curses.h>" >>confdefs.h
+$as_echo "#define CURSES_HEADER <ncurses/ncurses.h>" >>confdefs.h
 
 
 $as_echo "#define TERM_HEADER <ncurses/term.h>" >>confdefs.h
@@ -18401,8 +18401,8 @@ $as_echo "#define TERM_HEADER <term.h>"
      if test "$enable_wide_curses" != "no"
      then
 
-       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for wide character support in curses libraray" >&5
-$as_echo_n "checking for wide character support in curses libraray... " >&6; }
+       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for wide character support in curses library" >&5
+$as_echo_n "checking for wide character support in curses library... " >&6; }
        if test -n "$have_mblen"
        then
          cat confdefs.h - <<_ACEOF >conftest.$ac_ext


[FILE:808:patches/patch-interfaces__cc__aspell.h]
--- interfaces/cc/aspell.h.orig	2019-06-24 20:03:55 UTC
+++ interfaces/cc/aspell.h
@@ -243,7 +243,7 @@ void delete_aspell_can_have_error(struct
 
 /******************************** errors ********************************/
 
-
+#ifndef ASPELL_ERRORS__HPP
 extern const struct AspellErrorInfo * const aerror_other;
 extern const struct AspellErrorInfo * const aerror_operation_not_supported;
 extern const struct AspellErrorInfo * const   aerror_cant_copy;
@@ -329,7 +329,7 @@ extern const struct AspellErrorInfo * co
 extern const struct AspellErrorInfo * const   aerror_bad_magic;
 extern const struct AspellErrorInfo * const aerror_expression;
 extern const struct AspellErrorInfo * const   aerror_invalid_expression;
-
+#endif
 
 /******************************* speller *******************************/
 


[FILE:435:patches/patch-modules__speller__default__affix.cpp]
--- modules/speller/default/affix.cpp.orig	2019-07-10 09:17:18 UTC
+++ modules/speller/default/affix.cpp
@@ -796,7 +796,10 @@ bool AffixMgr::suffix_check (const Looku
     if (se->check(linf, word, ci, gi, sfxopts, ppfx)) return true;
     se = se->next;
   }
-  
+
+  if (word.size() == 0)
+    return false;
+
   // now handle the general case
   byte sp = *((const byte *)(word + word.size() - 1));
   SfxEntry * sptr = sStart[sp];


[FILE:388:patches/patch-prog_aspell.cpp]
--- prog/aspell.cpp.orig	2019-07-29 06:33:31 UTC
+++ prog/aspell.cpp
@@ -25,6 +25,7 @@
 # include <langinfo.h>
 #endif
 
+#include "errors.hpp"
 #include "aspell.h"
 
 #include <sys/types.h>
@@ -41,7 +42,6 @@
 #include "convert.hpp"
 #include "document_checker.hpp"
 #include "enumeration.hpp"
-#include "errors.hpp"
 #include "file_util.hpp"
 #include "fstream.hpp"
 #include "info.hpp"


[FILE:235:patches/patch-prog_checker__string.cpp]
--- prog/checker_string.cpp.orig	2019-07-16 02:02:10 UTC
+++ prog/checker_string.cpp
@@ -6,6 +6,7 @@
 
 #include <assert.h>
 
+#include <assert.h>
 #include "checker_string.hpp"
 #include "speller.hpp"
 #include "document_checker.hpp"


[FILE:194:patches/patch-prog_checker__string.hpp]
--- prog/checker_string.hpp.orig	2019-07-16 02:02:10 UTC
+++ prog/checker_string.hpp
@@ -6,6 +6,7 @@
 
 #include <stdio.h>
 
+#include "errors.hpp"
 #include "aspell.h"
 
 #include "vector.hpp"

