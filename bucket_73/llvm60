# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		llvm60
VERSION=		6.0.1
KEYWORDS=		devel lang
VARIANTS=		standard
SDESC[standard]=	LLVM 6.0 and Clang
HOMEPAGE=		http://llvm.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://llvm.org/releases/6.0.1/
DISTFILE[1]=		llvm-6.0.1.src.tar.xz:main
DISTFILE[2]=		cfe-6.0.1.src.tar.xz:main
DISTFILE[3]=		clang-tools-extra-6.0.1.src.tar.xz:main
DISTFILE[4]=		openmp-6.0.1.src.tar.xz:main
DF_INDEX=		1 2 3 4
SPKGS[standard]=	complete
			clang
			llvm

OPTIONS_AVAILABLE=	GOLD OPENMP
OPTIONS_STANDARD=	GOLD OPENMP
OPT_ON[freebsd]=	OPENMP//x86_64
OPT_ON[x86_64]=		GOLD

USES=			cmake:outsource ncurses perl:build python:build
			execinfo shebangfix zlib c++:llvm compiler:clang
GNOME_COMPONENTS=	libxml2

DISTNAME=		llvm-6.0.1.src

LICENSE=		CUSTOM1:llvm
LICENSE_NAME=		CUSTOM1:"LLVM Release License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE.TXT
LICENSE_SCHEME=		solo

CMAKE_BUILD_TYPE=	Release
CMAKE_INSTALL_PREFIX=	{{PREFIX}}/llvm60
FPC_EQUIVALENT=		devel/llvm50
SHEBANG_FILES=		tools/clang/tools/scan-view/bin/scan-view
			tools/clang/tools/clang-format/git-clang-format
			tools/clang/tools/clang-format/clang-format-diff.py
			tools/clang/tools/extra/clang-tidy/tool/clang-tidy-diff.py
			tools/clang/tools/extra/clang-tidy/tool/run-clang-tidy.py
			tools/clang/tools/extra/include-fixer/find-all-symbols/tool/run-find-all-symbols.py

SINGLE_JOB=		yes

PLIST_SUB=		NAMEBASE="llvm60"
			LLVM_RELEASE="6.0.1"
			LLVM_MAJORMIN="6.0"
			LLVM_MAJOR="6"

CMAKE_ARGS=		-DLLVM_BUILD_LLVM_DYLIB=ON
			-DCMAKE_INSTALL_RPATH:STRING="{{LOCALBASE}}/llvm60/lib"
			-DLLVM_HOST_TRIPLE:STRING="{{CONFIGURE_TARGET}}"

[OPENMP].DESCRIPTION=			Install libomp, the LLVM OpenMP runtime library

[GOLD].DESCRIPTION=			Build the LLVM Gold plugin for LTO
[GOLD].CMAKE_ARGS_ON=			-DLLVM_BINUTILS_INCDIR={{LOCALBASE}}/toolchain/include
					-DLLVM_USE_LINKER=gold

post-patch:
	${REINPLACE_CMD} -e 's,/usr/local/,${LOCALBASE}/,' \
		${WRKSRC}/tools/clang/lib/Driver/ToolChains/CommonArgs.cpp
	${REINPLACE_CMD} \
		-e 's|@RAVEN_GCC@|${LOCALBASE}/toolchain/gcc8/lib|' \
		-e 's|@RAVEN_GCC_TARGET@|${LOCALBASE}/toolchain/gcc8/lib/gcc/${CONFIGURE_TARGET}/8.2.0|' \
		-e 's|@RAVEN_GXX_HEADERS_DIR@|${LOCALBASE}/toolchain/gcc8/include/c++/8.2.0|' \
		${WRKSRC}/tools/clang/lib/Driver/ToolChains/DragonFly.cpp \
		${WRKSRC}/tools/clang/lib/Driver/ToolChains/Linux.cpp \
		${WRKSRC}/tools/clang/lib/Driver/ToolChains/Gnu.cpp \
		${WRKSRC}/tools/clang/lib/Frontend/InitHeaderSearch.cpp

post-patch-OPENMP-OFF:
	${MV} ${WRKSRC}/tools/openmp ${WRKDIR}/unused-openmp-source

post-install:
	${RM} -r ${STAGEDIR}${MANPREFIX}/man
	${RM} -r ${STAGEDIR}${PREFIX}/llvm60/share/man
	${RM} -r ${STAGEDIR}${PREFIX}/llvm60/include/llvm/MC/MCAnalysis
	${RM} -r ${STAGEDIR}${PREFIX}/llvm60/include/llvm/BinaryFormat/WasmRelocs
	${INSTALL_PROGRAM} ${WRKDIR}/.build/bin/clang-tblgen \
	    ${STAGEDIR}${PREFIX}/llvm60/bin/
	${FIND} ${STAGEDIR}${PREFIX}/llvm60/bin/ -type f ! \( -name git-clang-format -o -name "scan-*" \) \
		| ${XARGS} ${STRIP_CMD}
	${FIND} ${STAGEDIR}${PREFIX}/llvm60/lib/ -type f -name "*.so*" \
		| ${XARGS} ${STRIP_CMD}

post-extract:
	${MV} ${WRKDIR}/cfe-6.0.1.src ${WRKSRC}/tools/clang
	${MV} ${WRKDIR}/clang-tools-extra-6.0.1.src ${WRKSRC}/tools/clang/tools/extra
	${MV} ${WRKDIR}/openmp-6.0.1.src ${WRKSRC}/tools/openmp

post-patch-OPENMP-ON:
	${MV} ${WRKSRC}/tools/openmp ${WRKSRC}/projects/openmp

[FILE:842:descriptions/desc.clang]
The LLVM Project is a collection of modular and reusable compiler and
toolchain technologies. Despite its name, LLVM has little to do with
traditional virtual machines, though it does provide helpful libraries
that can be used to build them. The name "LLVM" itself is not an
acronym; it is the full name of the project.

This package contains Clang is an "LLVM native" C/C++/Objective-C
compiler, which aims to deliver amazingly fast compiles (e.g. about 3x
faster than GCC when compiling Objective-C code in a debug
configuration), extremely useful error and warning messages and to
provide a platform for building great source level tools. The Clang
Static Analyzer is a tool that automatically finds bugs in your code,
and is a great example of the sort of tool that can be built using
the Clang frontend as a library to parse C/C++ code.


[FILE:834:descriptions/desc.llvm]
The LLVM Project is a collection of modular and reusable compiler and
toolchain technologies. Despite its name, LLVM has little to do with
traditional virtual machines, though it does provide helpful libraries
that can be used to build them. The name "LLVM" itself is not an
acronym; it is the full name of the project.

This package contains the LLVM Core libraries which provide a modern
source- and target-independent optimizer, along with code generation
support for many popular CPUs (as well as some less common ones!)
These libraries are built around a well specified code representation
known as the LLVM intermediate representation ("LLVM IR"). The LLVM
Core libraries are well documented, and it is particularly easy to
invent your own language (or port an existing compiler) to use LLVM
as an optimizer and code generator.


[FILE:414:distinfo]
b6d6c324f9c71494c0ccaf3dac1f16236d970002b42bb24a6c9e1634f7d0f4e2     25306628 llvm-6.0.1.src.tar.xz
7c243f1485bddfdfedada3cd402ff4792ea82362ff91fbdac2dae67c6026b667     11905772 cfe-6.0.1.src.tar.xz
0d2e3727786437574835b75135f9e36f861932a958d8547ced7e13ebdda115f1       757256 clang-tools-extra-6.0.1.src.tar.xz
66afca2b308351b180136cf899a3b22865af1a775efaf74dc8a10c96d4721c5a      2048320 openmp-6.0.1.src.tar.xz


[FILE:15463:manifests/plist.clang]
%%NAMEBASE%%/bin/
 c-index-test
 clang
 clang++
 clang-%%LLVM_MAJORMIN%%
 clang-apply-replacements
 clang-change-namespace
 clang-check
 clang-cl
 clang-cpp
 clang-format
 clang-func-mapping
 clang-import-test
 clang-include-fixer
 clang-offload-bundler
 clang-query
 clang-refactor
 clang-rename
 clang-reorder-fields
 clang-tblgen
 clang-tidy
 clangd
 find-all-symbols
 git-clang-format
 modularize
 scan-build
 scan-view
%%NAMEBASE%%/include/clang-c/
 BuildSystem.h
 CXCompilationDatabase.h
 CXErrorCode.h
 CXString.h
 Documentation.h
 Index.h
 Platform.h
%%NAMEBASE%%/include/clang/ARCMigrate/
 ARCMT.h
 ARCMTActions.h
 FileRemapper.h
%%NAMEBASE%%/include/clang/AST/
 APValue.h
 AST.h
 ASTConsumer.h
 ASTContext.h
 ASTDiagnostic.h
 ASTFwd.h
 ASTImporter.h
 ASTLambda.h
 ASTMutationListener.h
 ASTStructuralEquivalence.h
 ASTTypeTraits.h
 ASTUnresolvedSet.h
 ASTVector.h
 Attr.h
 AttrDump.inc
 AttrImpl.inc
 AttrIterator.h
 AttrVisitor.inc
 Attrs.inc
 Availability.h
 BaseSubobject.h
 BuiltinTypes.def
 CXXInheritance.h
 CanonicalType.h
 CharUnits.h
 Comment.h
 CommentBriefParser.h
 CommentCommandInfo.inc
 CommentCommandList.inc
 CommentCommandTraits.h
 CommentDiagnostic.h
 CommentHTMLNamedCharacterReferences.inc
 CommentHTMLTags.inc
 CommentHTMLTagsProperties.inc
 CommentLexer.h
 CommentNodes.inc
 CommentParser.h
 CommentSema.h
 CommentVisitor.h
 DataCollection.h
 Decl.h
 DeclAccessPair.h
 DeclBase.h
 DeclCXX.h
 DeclContextInternals.h
 DeclFriend.h
 DeclGroup.h
 DeclLookups.h
 DeclNodes.inc
 DeclObjC.h
 DeclOpenMP.h
 DeclTemplate.h
 DeclVisitor.h
 DeclarationName.h
 DependentDiagnostic.h
 EvaluatedExprVisitor.h
 Expr.h
 ExprCXX.h
 ExprObjC.h
 ExprOpenMP.h
 ExternalASTMerger.h
 ExternalASTSource.h
 GlobalDecl.h
 LambdaCapture.h
 LexicallyOrderedRecursiveASTVisitor.h
 LocInfoType.h
 Mangle.h
 MangleNumberingContext.h
 NSAPI.h
 NestedNameSpecifier.h
 ODRHash.h
 OpenMPClause.h
 OperationKinds.def
 OperationKinds.h
 ParentMap.h
 PrettyPrinter.h
 QualTypeNames.h
 RawCommentList.h
 RecordLayout.h
 RecursiveASTVisitor.h
 Redeclarable.h
 SelectorLocationsKind.h
 Stmt.h
 StmtCXX.h
 StmtDataCollectors.inc
 StmtGraphTraits.h
 StmtIterator.h
 StmtNodes.inc
 StmtObjC.h
 StmtOpenMP.h
 StmtVisitor.h
 TemplateBase.h
 TemplateName.h
 Type.h
 TypeLoc.h
 TypeLocNodes.def
 TypeLocVisitor.h
 TypeNodes.def
 TypeOrdering.h
 TypeVisitor.h
 UnresolvedSet.h
 VTTBuilder.h
 VTableBuilder.h
%%NAMEBASE%%/include/clang/ASTMatchers/
 ASTMatchFinder.h
 ASTMatchers.h
 ASTMatchersInternal.h
 ASTMatchersMacros.h
%%NAMEBASE%%/include/clang/ASTMatchers/Dynamic/
 Diagnostics.h
 Parser.h
 Registry.h
 VariantValue.h
%%NAMEBASE%%/include/clang/Analysis/
 AnalysisDeclContext.h
 AnalysisDiagnostic.h
 BodyFarm.h
 CFG.h
 CFGStmtMap.h
 CallGraph.h
 CloneDetection.h
 CodeInjector.h
 ProgramPoint.h
%%NAMEBASE%%/include/clang/Analysis/Analyses/
 CFGReachabilityAnalysis.h
 Consumed.h
 Dominators.h
 FormatString.h
 LiveVariables.h
 OSLog.h
 PostOrderCFGView.h
 PseudoConstantAnalysis.h
 ReachableCode.h
 ThreadSafety.h
 ThreadSafetyCommon.h
 ThreadSafetyLogical.h
 ThreadSafetyOps.def
 ThreadSafetyTIL.h
 ThreadSafetyTraverse.h
 ThreadSafetyUtil.h
 UninitializedValues.h
%%NAMEBASE%%/include/clang/Analysis/DomainSpecific/
 CocoaConventions.h
 ObjCNoReturn.h
%%NAMEBASE%%/include/clang/Analysis/FlowSensitive/DataflowValues.h
%%NAMEBASE%%/include/clang/Analysis/Support/BumpVector.h
%%NAMEBASE%%/include/clang/Basic/
 ABI.h
 AddressSpaces.h
 AlignedAllocation.h
 AllDiagnostics.h
 AttrHasAttributeImpl.inc
 AttrKinds.h
 AttrList.inc
 AttrSubMatchRulesList.inc
 AttrSubjectMatchRules.h
 Attributes.h
 Builtins.def
 Builtins.h
 BuiltinsAArch64.def
 BuiltinsAMDGPU.def
 BuiltinsARM.def
 BuiltinsHexagon.def
 BuiltinsLe64.def
 BuiltinsMips.def
 BuiltinsNEON.def
 BuiltinsNVPTX.def
 BuiltinsNios2.def
 BuiltinsPPC.def
 BuiltinsSystemZ.def
 BuiltinsWebAssembly.def
 BuiltinsX86.def
 BuiltinsX86_64.def
 BuiltinsXCore.def
 CapturedStmt.h
 CharInfo.h
 CommentOptions.h
 Cuda.h
 DebugInfoOptions.h
 Diagnostic.h
 DiagnosticASTKinds.inc
 DiagnosticAnalysisKinds.inc
 DiagnosticCategories.h
 DiagnosticCommentKinds.inc
 DiagnosticCommonKinds.inc
 DiagnosticCrossTUKinds.inc
 DiagnosticDriverKinds.inc
 DiagnosticError.h
 DiagnosticFrontendKinds.inc
 DiagnosticGroups.inc
 DiagnosticIDs.h
 DiagnosticIndexName.inc
 DiagnosticLexKinds.inc
 DiagnosticOptions.def
 DiagnosticOptions.h
 DiagnosticParseKinds.inc
 DiagnosticRefactoringKinds.inc
 DiagnosticSemaKinds.inc
 DiagnosticSerializationKinds.inc
 ExceptionSpecificationType.h
 ExpressionTraits.h
 FileManager.h
 FileSystemOptions.h
 FileSystemStatCache.h
 IdentifierTable.h
 LLVM.h
 Lambda.h
 LangOptions.def
 LangOptions.h
 Linkage.h
 MacroBuilder.h
 MemoryBufferCache.h
 Module.h
 ObjCRuntime.h
 OpenCLExtensions.def
 OpenCLImageTypes.def
 OpenCLOptions.h
 OpenMPKinds.def
 OpenMPKinds.h
 OperatorKinds.def
 OperatorKinds.h
 OperatorPrecedence.h
 PartialDiagnostic.h
 PlistSupport.h
 PragmaKinds.h
 PrettyStackTrace.h
 SanitizerBlacklist.h
 SanitizerSpecialCaseList.h
 Sanitizers.def
 Sanitizers.h
 SourceLocation.h
 SourceManager.h
 SourceManagerInternals.h
 Specifiers.h
 SyncScope.h
 TargetBuiltins.h
 TargetCXXABI.h
 TargetInfo.h
 TargetOptions.h
 TemplateKinds.h
 TokenKinds.def
 TokenKinds.h
 TypeTraits.h
 Version.h
 Version.inc
 VersionTuple.h
 VirtualFileSystem.h
 Visibility.h
 X86Target.def
 XRayLists.h
 arm_neon.inc
%%NAMEBASE%%/include/clang/CodeGen/
 BackendUtil.h
 CGFunctionInfo.h
 CodeGenABITypes.h
 CodeGenAction.h
 ConstantInitBuilder.h
 ConstantInitFuture.h
 ModuleBuilder.h
 ObjectFilePCHContainerOperations.h
 SwiftCallingConv.h
%%NAMEBASE%%/include/clang/Config/config.h
%%NAMEBASE%%/include/clang/CrossTU/
 CrossTUDiagnostic.h
 CrossTranslationUnit.h
%%NAMEBASE%%/include/clang/Driver/
 Action.h
 Compilation.h
 Distro.h
 Driver.h
 DriverDiagnostic.h
 Job.h
 Multilib.h
 Options.h
 Options.inc
 Phases.h
 SanitizerArgs.h
 Tool.h
 ToolChain.h
 Types.def
 Types.h
 Util.h
 XRayArgs.h
%%NAMEBASE%%/include/clang/Edit/
 Commit.h
 EditedSource.h
 EditsReceiver.h
 FileOffset.h
 Rewriters.h
%%NAMEBASE%%/include/clang/Format/Format.h
%%NAMEBASE%%/include/clang/Frontend/
 ASTConsumers.h
 ASTUnit.h
 ChainedDiagnosticConsumer.h
 CodeGenOptions.def
 CodeGenOptions.h
 CommandLineSourceLoc.h
 CompilerInstance.h
 CompilerInvocation.h
 DependencyOutputOptions.h
 DiagnosticRenderer.h
 FrontendAction.h
 FrontendActions.h
 FrontendDiagnostic.h
 FrontendOptions.h
 FrontendPluginRegistry.h
 LangStandard.h
 LangStandards.def
 LayoutOverrideSource.h
 LogDiagnosticPrinter.h
 MigratorOptions.h
 MultiplexConsumer.h
 PCHContainerOperations.h
 PrecompiledPreamble.h
 PreprocessorOutputOptions.h
 SerializedDiagnosticPrinter.h
 SerializedDiagnosticReader.h
 SerializedDiagnostics.h
 TextDiagnostic.h
 TextDiagnosticBuffer.h
 TextDiagnosticPrinter.h
 Utils.h
 VerifyDiagnosticConsumer.h
%%NAMEBASE%%/include/clang/FrontendTool/Utils.h
%%NAMEBASE%%/include/clang/Index/
 CodegenNameGenerator.h
 CommentToXML.h
 IndexDataConsumer.h
 IndexSymbol.h
 IndexingAction.h
 USRGeneration.h
%%NAMEBASE%%/include/clang/Lex/
 CodeCompletionHandler.h
 DirectoryLookup.h
 ExternalPreprocessorSource.h
 HeaderMap.h
 HeaderMapTypes.h
 HeaderSearch.h
 HeaderSearchOptions.h
 LexDiagnostic.h
 Lexer.h
 LiteralSupport.h
 MacroArgs.h
 MacroInfo.h
 ModuleLoader.h
 ModuleMap.h
 MultipleIncludeOpt.h
 PPCallbacks.h
 PPConditionalDirectiveRecord.h
 PTHLexer.h
 PTHManager.h
 Pragma.h
 PreprocessingRecord.h
 Preprocessor.h
 PreprocessorLexer.h
 PreprocessorOptions.h
 ScratchBuffer.h
 Token.h
 TokenConcatenation.h
 TokenLexer.h
 VariadicMacroSupport.h
%%NAMEBASE%%/include/clang/Parse/
 AttrParserStringSwitches.inc
 AttrSubMatchRulesParserStringSwitches.inc
 ParseAST.h
 ParseDiagnostic.h
 Parser.h
 RAIIObjectsForParser.h
%%NAMEBASE%%/include/clang/Rewrite/Core/
 DeltaTree.h
 HTMLRewrite.h
 RewriteBuffer.h
 RewriteRope.h
 Rewriter.h
 TokenRewriter.h
%%NAMEBASE%%/include/clang/Rewrite/Frontend/
 ASTConsumers.h
 FixItRewriter.h
 FrontendActions.h
 Rewriters.h
%%NAMEBASE%%/include/clang/Sema/
 AnalysisBasedWarnings.h
 AttrParsedAttrImpl.inc
 AttrParsedAttrKinds.inc
 AttrParsedAttrList.inc
 AttrSpellingListIndex.inc
 AttrTemplateInstantiate.inc
 AttributeList.h
 CXXFieldCollector.h
 CleanupInfo.h
 CodeCompleteConsumer.h
 CodeCompleteOptions.h
 DeclSpec.h
 DelayedDiagnostic.h
 Designator.h
 ExternalSemaSource.h
 IdentifierResolver.h
 Initialization.h
 Lookup.h
 LoopHint.h
 MultiplexExternalSemaSource.h
 ObjCMethodList.h
 Overload.h
 Ownership.h
 ParsedTemplate.h
 PrettyDeclStackTrace.h
 Scope.h
 ScopeInfo.h
 Sema.h
 SemaConsumer.h
 SemaDiagnostic.h
 SemaFixItUtils.h
 SemaInternal.h
 SemaLambda.h
 Template.h
 TemplateDeduction.h
 TypoCorrection.h
 Weak.h
%%NAMEBASE%%/include/clang/Serialization/
 ASTBitCodes.h
 ASTDeserializationListener.h
 ASTReader.h
 ASTWriter.h
 AttrPCHRead.inc
 AttrPCHWrite.inc
 ContinuousRangeMap.h
 GlobalModuleIndex.h
 Module.h
 ModuleFileExtension.h
 ModuleManager.h
 SerializationDiagnostic.h
%%NAMEBASE%%/include/clang/StaticAnalyzer/Checkers/
 Checkers.inc
 ClangCheckers.h
 LocalCheckers.h
 MPIFunctionClassifier.h
 ObjCRetainCount.h
 SValExplainer.h
%%NAMEBASE%%/include/clang/StaticAnalyzer/Core/
 Analyses.def
 AnalyzerOptions.h
 Checker.h
 CheckerManager.h
 CheckerOptInfo.h
 CheckerRegistry.h
 IssueHash.h
 PathDiagnosticConsumers.h
%%NAMEBASE%%/include/clang/StaticAnalyzer/Core/BugReporter/
 BugReporter.h
 BugReporterVisitors.h
 BugType.h
 CommonBugCategories.h
 PathDiagnostic.h
%%NAMEBASE%%/include/clang/StaticAnalyzer/Core/PathSensitive/
 APSIntType.h
 AnalysisManager.h
 BasicValueFactory.h
 BlockCounter.h
 CallEvent.h
 CheckerContext.h
 CheckerHelpers.h
 ConstraintManager.h
 CoreEngine.h
 DynamicTypeInfo.h
 DynamicTypeMap.h
 Environment.h
 ExplodedGraph.h
 ExprEngine.h
 FunctionSummary.h
 LoopUnrolling.h
 LoopWidening.h
 MemRegion.h
 ProgramState.h
 ProgramStateTrait.h
 ProgramState_Fwd.h
 Regions.def
 SValBuilder.h
 SValVisitor.h
 SVals.def
 SVals.h
 SimpleConstraintManager.h
 Store.h
 StoreRef.h
 SubEngine.h
 SummaryManager.h
 SymExpr.h
 SymbolManager.h
 Symbols.def
 TaintManager.h
 TaintTag.h
 WorkList.h
%%NAMEBASE%%/include/clang/StaticAnalyzer/Frontend/
 AnalysisConsumer.h
 CheckerRegistration.h
 FrontendActions.h
 ModelConsumer.h
%%NAMEBASE%%/include/clang/Tooling/
 ArgumentsAdjusters.h
 CommonOptionsParser.h
 CompilationDatabase.h
 CompilationDatabasePluginRegistry.h
 DiagnosticsYaml.h
 Execution.h
 FileMatchTrie.h
 FixIt.h
 JSONCompilationDatabase.h
 Refactoring.h
 RefactoringCallbacks.h
 ReplacementsYaml.h
 StandaloneExecution.h
 ToolExecutorPluginRegistry.h
 Tooling.h
%%NAMEBASE%%/include/clang/Tooling/ASTDiff/
 ASTDiff.h
 ASTDiffInternal.h
%%NAMEBASE%%/include/clang/Tooling/Core/
 Diagnostic.h
 Lookup.h
 Replacement.h
%%NAMEBASE%%/include/clang/Tooling/Refactoring/
 ASTSelection.h
 AtomicChange.h
 RecursiveSymbolVisitor.h
 RefactoringAction.h
 RefactoringActionRule.h
 RefactoringActionRuleRequirements.h
 RefactoringActionRules.h
 RefactoringActionRulesInternal.h
 RefactoringDiagnostic.h
 RefactoringOption.h
 RefactoringOptionVisitor.h
 RefactoringOptions.h
 RefactoringResultConsumer.h
 RefactoringRuleContext.h
%%NAMEBASE%%/include/clang/Tooling/Refactoring/Extract/Extract.h
%%NAMEBASE%%/include/clang/Tooling/Refactoring/Rename/
 RenamingAction.h
 SymbolName.h
 SymbolOccurrences.h
 USRFinder.h
 USRFindingAction.h
 USRLocFinder.h
%%NAMEBASE%%/lib/
 libclang.so
 libclang.so.%%LLVM_MAJOR%%
 libclang.so.%%LLVM_MAJORMIN%%
 libclangARCMigrate.a
 libclangAST.a
 libclangASTMatchers.a
 libclangAnalysis.a
 libclangApplyReplacements.a
 libclangBasic.a
 libclangChangeNamespace.a
 libclangCodeGen.a
 libclangCrossTU.a
 libclangDaemon.a
 libclangDriver.a
 libclangDynamicASTMatchers.a
 libclangEdit.a
 libclangFormat.a
 libclangFrontend.a
 libclangFrontendTool.a
 libclangHandleCXX.a
 libclangIncludeFixer.a
 libclangIncludeFixerPlugin.a
 libclangIndex.a
 libclangLex.a
 libclangMove.a
 libclangParse.a
 libclangQuery.a
 libclangReorderFields.a
 libclangRewrite.a
 libclangRewriteFrontend.a
 libclangSema.a
 libclangSerialization.a
 libclangStaticAnalyzerCheckers.a
 libclangStaticAnalyzerCore.a
 libclangStaticAnalyzerFrontend.a
 libclangTidy.a
 libclangTidyAndroidModule.a
 libclangTidyBoostModule.a
 libclangTidyBugproneModule.a
 libclangTidyCERTModule.a
 libclangTidyCppCoreGuidelinesModule.a
 libclangTidyFuchsiaModule.a
 libclangTidyGoogleModule.a
 libclangTidyHICPPModule.a
 libclangTidyLLVMModule.a
 libclangTidyMPIModule.a
 libclangTidyMiscModule.a
 libclangTidyModernizeModule.a
 libclangTidyObjCModule.a
 libclangTidyPerformanceModule.a
 libclangTidyPlugin.a
 libclangTidyReadabilityModule.a
 libclangTidyUtils.a
 libclangTooling.a
 libclangToolingASTDiff.a
 libclangToolingCore.a
 libclangToolingRefactor.a
 libfindAllSymbols.a
%%NAMEBASE%%/lib/clang/%%LLVM_RELEASE%%/include/
 __clang_cuda_builtin_vars.h
 __clang_cuda_cmath.h
 __clang_cuda_complex_builtins.h
 __clang_cuda_intrinsics.h
 __clang_cuda_math_forward_declares.h
 __clang_cuda_runtime_wrapper.h
 __stddef_max_align_t.h
 __wmmintrin_aes.h
 __wmmintrin_pclmul.h
 adxintrin.h
 altivec.h
 ammintrin.h
 arm64intr.h
 arm_acle.h
 arm_neon.h
 armintr.h
 avx2intrin.h
 avx512bitalgintrin.h
 avx512bwintrin.h
 avx512cdintrin.h
 avx512dqintrin.h
 avx512erintrin.h
 avx512fintrin.h
 avx512ifmaintrin.h
 avx512ifmavlintrin.h
 avx512pfintrin.h
 avx512vbmi2intrin.h
 avx512vbmiintrin.h
 avx512vbmivlintrin.h
 avx512vlbitalgintrin.h
 avx512vlbwintrin.h
 avx512vlcdintrin.h
 avx512vldqintrin.h
 avx512vlintrin.h
 avx512vlvbmi2intrin.h
 avx512vlvnniintrin.h
 avx512vnniintrin.h
 avx512vpopcntdqintrin.h
 avx512vpopcntdqvlintrin.h
 avxintrin.h
 bmi2intrin.h
 bmiintrin.h
 cetintrin.h
 clflushoptintrin.h
 clwbintrin.h
 clzerointrin.h
 cpuid.h
 emmintrin.h
 f16cintrin.h
 float.h
 fma4intrin.h
 fmaintrin.h
 fxsrintrin.h
 gfniintrin.h
 htmintrin.h
 htmxlintrin.h
 ia32intrin.h
 immintrin.h
 intrin.h
 inttypes.h
 iso646.h
 lwpintrin.h
 lzcntintrin.h
 mm3dnow.h
 mm_malloc.h
 mmintrin.h
 module.modulemap
 msa.h
 mwaitxintrin.h
 nmmintrin.h
 opencl-c.h
 pkuintrin.h
 pmmintrin.h
 popcntintrin.h
 prfchwintrin.h
 rdseedintrin.h
 rtmintrin.h
 s390intrin.h
 shaintrin.h
 smmintrin.h
 tbmintrin.h
 tgmath.h
 tmmintrin.h
 unwind.h
 vadefs.h
 vaesintrin.h
 vecintrin.h
 vpclmulqdqintrin.h
 wmmintrin.h
 x86intrin.h
 xmmintrin.h
 xopintrin.h
 xsavecintrin.h
 xsaveintrin.h
 xsaveoptintrin.h
 xsavesintrin.h
 xtestintrin.h
%%NAMEBASE%%/lib/clang/%%LLVM_RELEASE%%/include/cuda_wrappers/
 algorithm
 complex
 new
%%NAMEBASE%%/lib/cmake/clang/
 ClangConfig.cmake
 ClangTargets-%%CMAKE_BUILD_TYPE%%.cmake
 ClangTargets.cmake
%%NAMEBASE%%/libexec/
 c++-analyzer
 ccc-analyzer
%%NAMEBASE%%/share/clang/
 bash-autocomplete.sh
 clang-format-bbedit.applescript
 clang-format-diff.py
 clang-format-sublime.py
 clang-format.el
 clang-format.py
 clang-include-fixer.el
 clang-include-fixer.py
 clang-rename.el
 clang-rename.py
 clang-tidy-diff.py
 run-clang-tidy.py
 run-find-all-symbols.py
%%NAMEBASE%%/share/opt-viewer/
 opt-diff.py
 opt-stats.py
 opt-viewer.py
 optpmap.py
 optrecord.py
 style.css
%%NAMEBASE%%/share/scan-build/
 scanview.css
 sorttable.js
%%NAMEBASE%%/share/scan-view/
 FileRadar.scpt
 GetRadarVersion.scpt
 Reporter.py
 ScanView.py
 bugcatcher.ico
 startfile.py
%%ONLY-LINUX%%%%NAMEBASE%%/lib/clang/%%LLVM_RELEASE%%/include/
 limits.h
 stdalign.h
 stdarg.h
 stdatomic.h
 stdbool.h
 stddef.h
 stdint.h
 stdnoreturn.h
 varargs.h
%%OPENMP-ON%%%%NAMEBASE%%/lib/clang/%%LLVM_RELEASE%%/include/omp.h


[FILE:27196:manifests/plist.llvm]
%%GOLD-ON%%%%NAMEBASE%%/lib/LLVMgold.so
%%NAMEBASE%%/bin/
 bugpoint
 llc
 lli
 llvm-ar
 llvm-as
 llvm-bcanalyzer
 llvm-c-test
 llvm-cat
 llvm-cfi-verify
 llvm-config
 llvm-cov
 llvm-cvtres
 llvm-cxxdump
 llvm-cxxfilt
 llvm-diff
 llvm-dis
 llvm-dlltool
 llvm-dsymutil
 llvm-dwarfdump
 llvm-dwp
 llvm-extract
 llvm-lib
 llvm-link
 llvm-lto
 llvm-lto2
 llvm-mc
 llvm-mcmarkup
 llvm-modextract
 llvm-mt
 llvm-nm
 llvm-objcopy
 llvm-objdump
 llvm-opt-report
 llvm-pdbutil
 llvm-profdata
 llvm-ranlib
 llvm-rc
 llvm-readelf
 llvm-readobj
 llvm-rtdyld
 llvm-size
 llvm-split
 llvm-stress
 llvm-strings
 llvm-symbolizer
 llvm-tblgen
 llvm-xray
 obj2yaml
 opt
 sancov
 sanstats
 verify-uselistorder
 yaml2obj
%%NAMEBASE%%/include/llvm/
 InitializePasses.h
 LinkAllIR.h
 LinkAllPasses.h
 Pass.h
 PassAnalysisSupport.h
 PassInfo.h
 PassRegistry.h
 PassSupport.h
%%NAMEBASE%%/include/llvm-c/
 Analysis.h
 BitReader.h
 BitWriter.h
 Core.h
 DebugInfo.h
 Disassembler.h
 ErrorHandling.h
 ExecutionEngine.h
 IRReader.h
 Initialization.h
 LinkTimeOptimizer.h
 Linker.h
 Object.h
 OrcBindings.h
 Support.h
 Target.h
 TargetMachine.h
 Types.h
 lto.h
%%NAMEBASE%%/include/llvm-c/Transforms/
 IPO.h
 PassManagerBuilder.h
 Scalar.h
 Vectorize.h
%%NAMEBASE%%/include/llvm/ADT/
 APFloat.h
 APInt.h
 APSInt.h
 AllocatorList.h
 ArrayRef.h
 BitVector.h
 BitmaskEnum.h
 BreadthFirstIterator.h
 CachedHashString.h
 DAGDeltaAlgorithm.h
 DeltaAlgorithm.h
 DenseMap.h
 DenseMapInfo.h
 DenseSet.h
 DepthFirstIterator.h
 EpochTracker.h
 EquivalenceClasses.h
 FoldingSet.h
 GraphTraits.h
 Hashing.h
 ImmutableList.h
 ImmutableMap.h
 ImmutableSet.h
 IndexedMap.h
 IntEqClasses.h
 IntervalMap.h
 IntrusiveRefCntPtr.h
 MapVector.h
 None.h
 Optional.h
 PackedVector.h
 PointerEmbeddedInt.h
 PointerIntPair.h
 PointerSumType.h
 PointerUnion.h
 PostOrderIterator.h
 PriorityQueue.h
 PriorityWorklist.h
 SCCIterator.h
 STLExtras.h
 ScopeExit.h
 ScopedHashTable.h
 Sequence.h
 SetOperations.h
 SetVector.h
 SmallBitVector.h
 SmallPtrSet.h
 SmallSet.h
 SmallString.h
 SmallVector.h
 SparseBitVector.h
 SparseMultiSet.h
 SparseSet.h
 Statistic.h
 StringExtras.h
 StringMap.h
 StringRef.h
 StringSet.h
 StringSwitch.h
 TinyPtrVector.h
 Triple.h
 Twine.h
 UniqueVector.h
 VariadicFunction.h
 edit_distance.h
 ilist.h
 ilist_base.h
 ilist_iterator.h
 ilist_node.h
 ilist_node_base.h
 ilist_node_options.h
 iterator.h
 iterator_range.h
 simple_ilist.h
%%NAMEBASE%%/include/llvm/Analysis/
 AliasAnalysis.h
 AliasAnalysisEvaluator.h
 AliasSetTracker.h
 AssumptionCache.h
 BasicAliasAnalysis.h
 BlockFrequencyInfo.h
 BlockFrequencyInfoImpl.h
 BranchProbabilityInfo.h
 CFG.h
 CFGPrinter.h
 CFLAliasAnalysisUtils.h
 CFLAndersAliasAnalysis.h
 CFLSteensAliasAnalysis.h
 CGSCCPassManager.h
 CallGraph.h
 CallGraphSCCPass.h
 CallPrinter.h
 CaptureTracking.h
 CmpInstAnalysis.h
 CodeMetrics.h
 ConstantFolding.h
 DOTGraphTraitsPass.h
 DemandedBits.h
 DependenceAnalysis.h
 DivergenceAnalysis.h
 DomPrinter.h
 DominanceFrontier.h
 DominanceFrontierImpl.h
 EHPersonalities.h
 GlobalsModRef.h
 IVUsers.h
 IndirectCallPromotionAnalysis.h
 IndirectCallSiteVisitor.h
 InlineCost.h
 InstructionSimplify.h
 Interval.h
 IntervalIterator.h
 IntervalPartition.h
 IteratedDominanceFrontier.h
 LazyBlockFrequencyInfo.h
 LazyBranchProbabilityInfo.h
 LazyCallGraph.h
 LazyValueInfo.h
 Lint.h
 Loads.h
 LoopAccessAnalysis.h
 LoopAnalysisManager.h
 LoopInfo.h
 LoopInfoImpl.h
 LoopIterator.h
 LoopPass.h
 LoopUnrollAnalyzer.h
 MemoryBuiltins.h
 MemoryDependenceAnalysis.h
 MemoryLocation.h
 MemorySSA.h
 MemorySSAUpdater.h
 ModuleSummaryAnalysis.h
 ObjCARCAliasAnalysis.h
 ObjCARCAnalysisUtils.h
 ObjCARCInstKind.h
 ObjectUtils.h
 OptimizationRemarkEmitter.h
 OrderedBasicBlock.h
 PHITransAddr.h
 Passes.h
 PostDominators.h
 ProfileSummaryInfo.h
 PtrUseVisitor.h
 RegionInfo.h
 RegionInfoImpl.h
 RegionIterator.h
 RegionPass.h
 RegionPrinter.h
 ScalarEvolution.h
 ScalarEvolutionAliasAnalysis.h
 ScalarEvolutionExpander.h
 ScalarEvolutionExpressions.h
 ScalarEvolutionNormalization.h
 ScopedNoAliasAA.h
 SparsePropagation.h
 TargetFolder.h
 TargetLibraryInfo.def
 TargetLibraryInfo.h
 TargetTransformInfo.h
 TargetTransformInfoImpl.h
 Trace.h
 TypeBasedAliasAnalysis.h
 TypeMetadataUtils.h
 ValueLattice.h
 ValueLatticeUtils.h
 ValueTracking.h
 VectorUtils.h
%%NAMEBASE%%/include/llvm/AsmParser/
 Parser.h
 SlotMapping.h
%%NAMEBASE%%/include/llvm/BinaryFormat/
 COFF.h
 Dwarf.def
 Dwarf.h
 ELF.h
 MachO.def
 MachO.h
 Magic.h
 Wasm.h
 WasmRelocs.def
%%NAMEBASE%%/include/llvm/BinaryFormat/ELFRelocs/
 AArch64.def
 AMDGPU.def
 ARC.def
 ARM.def
 AVR.def
 BPF.def
 Hexagon.def
 Lanai.def
 Mips.def
 PowerPC.def
 PowerPC64.def
 RISCV.def
 Sparc.def
 SystemZ.def
 WebAssembly.def
 i386.def
 x86_64.def
%%NAMEBASE%%/include/llvm/Bitcode/
 BitCodes.h
 BitcodeReader.h
 BitcodeWriter.h
 BitcodeWriterPass.h
 BitstreamReader.h
 BitstreamWriter.h
 LLVMBitCodes.h
%%NAMEBASE%%/include/llvm/CodeGen/
 Analysis.h
 AsmPrinter.h
 AtomicExpandUtils.h
 BasicTTIImpl.h
 CalcSpillWeights.h
 CallingConvLower.h
 CommandFlags.def
 CostTable.h
 DAGCombine.h
 DFAPacketizer.h
 DIE.h
 DIEValue.def
 DwarfStringPoolEntry.h
 EdgeBundles.h
 ExecutionDepsFix.h
 ExpandReductions.h
 FastISel.h
 FaultMaps.h
 FunctionLoweringInfo.h
 GCMetadata.h
 GCMetadataPrinter.h
 GCStrategy.h
 GCs.h
 ISDOpcodes.h
 IntrinsicLowering.h
 LatencyPriorityQueue.h
 LazyMachineBlockFrequencyInfo.h
 LexicalScopes.h
 LinkAllAsmWriterComponents.h
 LinkAllCodegenComponents.h
 LiveInterval.h
 LiveIntervalUnion.h
 LiveIntervals.h
 LivePhysRegs.h
 LiveRangeEdit.h
 LiveRegMatrix.h
 LiveRegUnits.h
 LiveStacks.h
 LiveVariables.h
 LowLevelType.h
 MIRPrinter.h
 MIRYamlMapping.h
 MachORelocation.h
 MachineBasicBlock.h
 MachineBlockFrequencyInfo.h
 MachineBranchProbabilityInfo.h
 MachineCombinerPattern.h
 MachineConstantPool.h
 MachineDominanceFrontier.h
 MachineDominators.h
 MachineFrameInfo.h
 MachineFunction.h
 MachineFunctionPass.h
 MachineInstr.h
 MachineInstrBuilder.h
 MachineInstrBundle.h
 MachineInstrBundleIterator.h
 MachineJumpTableInfo.h
 MachineLoopInfo.h
 MachineMemOperand.h
 MachineModuleInfo.h
 MachineModuleInfoImpls.h
 MachineOperand.h
 MachineOptimizationRemarkEmitter.h
 MachinePassRegistry.h
 MachinePostDominators.h
 MachineRegionInfo.h
 MachineRegisterInfo.h
 MachineSSAUpdater.h
 MachineScheduler.h
 MachineTraceMetrics.h
 MachineValueType.h
 MacroFusion.h
 PBQPRAConstraint.h
 ParallelCG.h
 Passes.h
 PreISelIntrinsicLowering.h
 PseudoSourceValue.h
 RegAllocPBQP.h
 RegAllocRegistry.h
 RegisterClassInfo.h
 RegisterPressure.h
 RegisterScavenging.h
 RegisterUsageInfo.h
 ResourcePriorityQueue.h
 RuntimeLibcalls.def
 RuntimeLibcalls.h
 SDNodeProperties.td
 ScheduleDAG.h
 ScheduleDAGInstrs.h
 ScheduleDAGMutation.h
 ScheduleDFS.h
 ScheduleHazardRecognizer.h
 SchedulerRegistry.h
 ScoreboardHazardRecognizer.h
 SelectionDAG.h
 SelectionDAGAddressAnalysis.h
 SelectionDAGISel.h
 SelectionDAGNodes.h
 SelectionDAGTargetInfo.h
 SlotIndexes.h
 StackMaps.h
 StackProtector.h
 TailDuplicator.h
 TargetCallingConv.h
 TargetFrameLowering.h
 TargetInstrInfo.h
 TargetLowering.h
 TargetLoweringObjectFile.h
 TargetLoweringObjectFileImpl.h
 TargetOpcodes.def
 TargetOpcodes.h
 TargetPassConfig.h
 TargetRegisterInfo.h
 TargetSchedule.h
 TargetSubtargetInfo.h
 UnreachableBlockElim.h
 ValueTypes.h
 ValueTypes.td
 VirtRegMap.h
 WinEHFuncInfo.h
%%NAMEBASE%%/include/llvm/CodeGen/GlobalISel/
 CallLowering.h
 GISelWorkList.h
 IRTranslator.h
 InstructionSelect.h
 InstructionSelector.h
 InstructionSelectorImpl.h
 LegalizationArtifactCombiner.h
 Legalizer.h
 LegalizerHelper.h
 LegalizerInfo.h
 Localizer.h
 MachineIRBuilder.h
 RegBankSelect.h
 RegisterBank.h
 RegisterBankInfo.h
 Types.h
 Utils.h
%%NAMEBASE%%/include/llvm/CodeGen/MIRParser/MIRParser.h
%%NAMEBASE%%/include/llvm/CodeGen/PBQP/
 CostAllocator.h
 Graph.h
 Math.h
 ReductionRules.h
 Solution.h
%%NAMEBASE%%/include/llvm/Config/
 AsmParsers.def
 AsmPrinters.def
 Disassemblers.def
 Targets.def
 abi-breaking.h
 llvm-config.h
%%NAMEBASE%%/include/llvm/DebugInfo/DIContext.h
%%NAMEBASE%%/include/llvm/DebugInfo/CodeView/
 AppendingTypeTableBuilder.h
 CVDebugRecord.h
 CVRecord.h
 CVSymbolVisitor.h
 CVTypeVisitor.h
 CodeView.h
 CodeViewError.h
 CodeViewRecordIO.h
 CodeViewRegisters.def
 CodeViewSymbols.def
 CodeViewTypes.def
 ContinuationRecordBuilder.h
 DebugChecksumsSubsection.h
 DebugCrossExSubsection.h
 DebugCrossImpSubsection.h
 DebugFrameDataSubsection.h
 DebugInlineeLinesSubsection.h
 DebugLinesSubsection.h
 DebugStringTableSubsection.h
 DebugSubsection.h
 DebugSubsectionRecord.h
 DebugSubsectionVisitor.h
 DebugSymbolRVASubsection.h
 DebugSymbolsSubsection.h
 DebugUnknownSubsection.h
 EnumTables.h
 Formatters.h
 FunctionId.h
 GUID.h
 GlobalTypeTableBuilder.h
 LazyRandomTypeCollection.h
 Line.h
 MergingTypeTableBuilder.h
 RecordName.h
 RecordSerialization.h
 SimpleTypeSerializer.h
 StringsAndChecksums.h
 SymbolDeserializer.h
 SymbolDumpDelegate.h
 SymbolDumper.h
 SymbolRecord.h
 SymbolRecordMapping.h
 SymbolSerializer.h
 SymbolVisitorCallbackPipeline.h
 SymbolVisitorCallbacks.h
 SymbolVisitorDelegate.h
 TypeCollection.h
 TypeDeserializer.h
 TypeDumpVisitor.h
 TypeHashing.h
 TypeIndex.h
 TypeIndexDiscovery.h
 TypeRecord.h
 TypeRecordMapping.h
 TypeStreamMerger.h
 TypeSymbolEmitter.h
 TypeTableCollection.h
 TypeVisitorCallbackPipeline.h
 TypeVisitorCallbacks.h
%%NAMEBASE%%/include/llvm/DebugInfo/DWARF/
 DWARFAbbreviationDeclaration.h
 DWARFAcceleratorTable.h
 DWARFAttribute.h
 DWARFCompileUnit.h
 DWARFContext.h
 DWARFDataExtractor.h
 DWARFDebugAbbrev.h
 DWARFDebugArangeSet.h
 DWARFDebugAranges.h
 DWARFDebugFrame.h
 DWARFDebugInfoEntry.h
 DWARFDebugLine.h
 DWARFDebugLoc.h
 DWARFDebugMacro.h
 DWARFDebugPubTable.h
 DWARFDebugRangeList.h
 DWARFDie.h
 DWARFExpression.h
 DWARFFormValue.h
 DWARFGdbIndex.h
 DWARFObject.h
 DWARFRelocMap.h
 DWARFSection.h
 DWARFTypeUnit.h
 DWARFUnit.h
 DWARFUnitIndex.h
 DWARFVerifier.h
%%NAMEBASE%%/include/llvm/DebugInfo/MSF/
 IMSFFile.h
 MSFBuilder.h
 MSFCommon.h
 MSFError.h
 MappedBlockStream.h
%%NAMEBASE%%/include/llvm/DebugInfo/PDB/
 ConcreteSymbolEnumerator.h
 GenericError.h
 IPDBDataStream.h
 IPDBEnumChildren.h
 IPDBLineNumber.h
 IPDBRawSymbol.h
 IPDBSession.h
 IPDBSourceFile.h
 IPDBTable.h
 PDB.h
 PDBContext.h
 PDBExtras.h
 PDBSymDumper.h
 PDBSymbol.h
 PDBSymbolAnnotation.h
 PDBSymbolBlock.h
 PDBSymbolCompiland.h
 PDBSymbolCompilandDetails.h
 PDBSymbolCompilandEnv.h
 PDBSymbolCustom.h
 PDBSymbolData.h
 PDBSymbolExe.h
 PDBSymbolFunc.h
 PDBSymbolFuncDebugEnd.h
 PDBSymbolFuncDebugStart.h
 PDBSymbolLabel.h
 PDBSymbolPublicSymbol.h
 PDBSymbolThunk.h
 PDBSymbolTypeArray.h
 PDBSymbolTypeBaseClass.h
 PDBSymbolTypeBuiltin.h
 PDBSymbolTypeCustom.h
 PDBSymbolTypeDimension.h
 PDBSymbolTypeEnum.h
 PDBSymbolTypeFriend.h
 PDBSymbolTypeFunctionArg.h
 PDBSymbolTypeFunctionSig.h
 PDBSymbolTypeManaged.h
 PDBSymbolTypePointer.h
 PDBSymbolTypeTypedef.h
 PDBSymbolTypeUDT.h
 PDBSymbolTypeVTable.h
 PDBSymbolTypeVTableShape.h
 PDBSymbolUnknown.h
 PDBSymbolUsingNamespace.h
 PDBTypes.h
 UDTLayout.h
%%NAMEBASE%%/include/llvm/DebugInfo/PDB/DIA/
 DIADataStream.h
 DIAEnumDebugStreams.h
 DIAEnumLineNumbers.h
 DIAEnumSourceFiles.h
 DIAEnumSymbols.h
 DIAEnumTables.h
 DIAError.h
 DIALineNumber.h
 DIARawSymbol.h
 DIASession.h
 DIASourceFile.h
 DIASupport.h
 DIATable.h
%%NAMEBASE%%/include/llvm/DebugInfo/PDB/Native/
 DbiModuleDescriptor.h
 DbiModuleDescriptorBuilder.h
 DbiModuleList.h
 DbiStream.h
 DbiStreamBuilder.h
 EnumTables.h
 Formatters.h
 GSIStreamBuilder.h
 GlobalsStream.h
 Hash.h
 HashTable.h
 ISectionContribVisitor.h
 InfoStream.h
 InfoStreamBuilder.h
 ModuleDebugStream.h
 NamedStreamMap.h
 NativeBuiltinSymbol.h
 NativeCompilandSymbol.h
 NativeEnumModules.h
 NativeEnumSymbol.h
 NativeEnumTypes.h
 NativeExeSymbol.h
 NativeRawSymbol.h
 NativeSession.h
 PDBFile.h
 PDBFileBuilder.h
 PDBStringTable.h
 PDBStringTableBuilder.h
 PublicsStream.h
 RawConstants.h
 RawError.h
 RawTypes.h
 SymbolStream.h
 TpiHashing.h
 TpiStream.h
 TpiStreamBuilder.h
%%NAMEBASE%%/include/llvm/DebugInfo/Symbolize/
 DIPrinter.h
 SymbolizableModule.h
 Symbolize.h
%%NAMEBASE%%/include/llvm/Demangle/Demangle.h
%%NAMEBASE%%/include/llvm/ExecutionEngine/
 ExecutionEngine.h
 GenericValue.h
 Interpreter.h
 JITEventListener.h
 JITSymbol.h
 MCJIT.h
 OProfileWrapper.h
 ObjectCache.h
 ObjectMemoryBuffer.h
 OrcMCJITReplacement.h
 RTDyldMemoryManager.h
 RuntimeDyld.h
 RuntimeDyldChecker.h
 SectionMemoryManager.h
%%NAMEBASE%%/include/llvm/ExecutionEngine/Orc/
 CompileOnDemandLayer.h
 CompileUtils.h
 ExecutionUtils.h
 GlobalMappingLayer.h
 IRCompileLayer.h
 IRTransformLayer.h
 IndirectionUtils.h
 LambdaResolver.h
 LazyEmittingLayer.h
 NullResolver.h
 ObjectTransformLayer.h
 OrcABISupport.h
 OrcError.h
 OrcRemoteTargetClient.h
 OrcRemoteTargetRPCAPI.h
 OrcRemoteTargetServer.h
 RPCSerialization.h
 RPCUtils.h
 RTDyldObjectLinkingLayer.h
 RawByteChannel.h
 RemoteObjectLayer.h
 SymbolStringPool.h
%%NAMEBASE%%/include/llvm/FuzzMutate/
 FuzzerCLI.h
 IRMutator.h
 OpDescriptor.h
 Operations.h
 Random.h
 RandomIRBuilder.h
%%NAMEBASE%%/include/llvm/IR/
 Argument.h
 AssemblyAnnotationWriter.h
 Attributes.gen
 Attributes.h
 Attributes.td
 AutoUpgrade.h
 BasicBlock.h
 CFG.h
 CallSite.h
 CallingConv.h
 Comdat.h
 Constant.h
 ConstantFolder.h
 ConstantRange.h
 Constants.h
 DIBuilder.h
 DataLayout.h
 DebugInfo.h
 DebugInfoFlags.def
 DebugInfoMetadata.h
 DebugLoc.h
 DerivedTypes.h
 DerivedUser.h
 DiagnosticHandler.h
 DiagnosticInfo.h
 DiagnosticPrinter.h
 Dominators.h
 Function.h
 GVMaterializer.h
 GetElementPtrTypeIterator.h
 GlobalAlias.h
 GlobalIFunc.h
 GlobalIndirectSymbol.h
 GlobalObject.h
 GlobalValue.h
 GlobalVariable.h
 IRBuilder.h
 IRPrintingPasses.h
 InlineAsm.h
 InstIterator.h
 InstVisitor.h
 InstrTypes.h
 Instruction.def
 Instruction.h
 Instructions.h
 IntrinsicInst.h
 Intrinsics.gen
 Intrinsics.h
 Intrinsics.td
 IntrinsicsAArch64.td
 IntrinsicsAMDGPU.td
 IntrinsicsARM.td
 IntrinsicsBPF.td
 IntrinsicsHexagon.td
 IntrinsicsMips.td
 IntrinsicsNVVM.td
 IntrinsicsPowerPC.td
 IntrinsicsSystemZ.td
 IntrinsicsWebAssembly.td
 IntrinsicsX86.td
 IntrinsicsXCore.td
 LLVMContext.h
 LegacyPassManager.h
 LegacyPassManagers.h
 LegacyPassNameParser.h
 MDBuilder.h
 Mangler.h
 Metadata.def
 Metadata.h
 Module.h
 ModuleSlotTracker.h
 ModuleSummaryIndex.h
 ModuleSummaryIndexYAML.h
 NoFolder.h
 OperandTraits.h
 Operator.h
 OptBisect.h
 PassManager.h
 PassManagerInternal.h
 PatternMatch.h
 PredIteratorCache.h
 ProfileSummary.h
 SafepointIRVerifier.h
 Statepoint.h
 SymbolTableListTraits.h
 TrackingMDRef.h
 Type.h
 TypeBuilder.h
 TypeFinder.h
 Use.h
 UseListOrder.h
 User.h
 Value.def
 Value.h
 ValueHandle.h
 ValueMap.h
 ValueSymbolTable.h
 Verifier.h
%%NAMEBASE%%/include/llvm/IRReader/IRReader.h
%%NAMEBASE%%/include/llvm/LTO/
 Caching.h
 Config.h
 LTO.h
 LTOBackend.h
%%NAMEBASE%%/include/llvm/LTO/legacy/
 LTOCodeGenerator.h
 LTOModule.h
 ThinLTOCodeGenerator.h
 UpdateCompilerUsed.h
%%NAMEBASE%%/include/llvm/LineEditor/LineEditor.h
%%NAMEBASE%%/include/llvm/Linker/
 IRMover.h
 Linker.h
%%NAMEBASE%%/include/llvm/MC/
 ConstantPools.h
 LaneBitmask.h
 MCAsmBackend.h
 MCAsmInfo.h
 MCAsmInfoCOFF.h
 MCAsmInfoDarwin.h
 MCAsmInfoELF.h
 MCAsmInfoWasm.h
 MCAsmLayout.h
 MCAsmMacro.h
 MCAssembler.h
 MCCodeEmitter.h
 MCCodePadder.h
 MCCodeView.h
 MCContext.h
 MCDirectives.h
 MCDwarf.h
 MCELFObjectWriter.h
 MCELFStreamer.h
 MCExpr.h
 MCFixedLenDisassembler.h
 MCFixup.h
 MCFixupKindInfo.h
 MCFragment.h
 MCInst.h
 MCInstBuilder.h
 MCInstPrinter.h
 MCInstrAnalysis.h
 MCInstrDesc.h
 MCInstrInfo.h
 MCInstrItineraries.h
 MCLabel.h
 MCLinkerOptimizationHint.h
 MCMachObjectWriter.h
 MCObjectFileInfo.h
 MCObjectStreamer.h
 MCObjectWriter.h
 MCRegisterInfo.h
 MCSchedule.h
 MCSection.h
 MCSectionCOFF.h
 MCSectionELF.h
 MCSectionMachO.h
 MCSectionWasm.h
 MCStreamer.h
 MCSubtargetInfo.h
 MCSymbol.h
 MCSymbolCOFF.h
 MCSymbolELF.h
 MCSymbolMachO.h
 MCSymbolWasm.h
 MCTargetOptions.h
 MCTargetOptionsCommandFlags.def
 MCValue.h
 MCWasmObjectWriter.h
 MCWasmStreamer.h
 MCWin64EH.h
 MCWinCOFFObjectWriter.h
 MCWinCOFFStreamer.h
 MCWinEH.h
 MachineLocation.h
 SectionKind.h
 StringTableBuilder.h
 SubtargetFeature.h
%%NAMEBASE%%/include/llvm/MC/MCDisassembler/
 MCDisassembler.h
 MCExternalSymbolizer.h
 MCRelocationInfo.h
 MCSymbolizer.h
%%NAMEBASE%%/include/llvm/MC/MCParser/
 AsmCond.h
 AsmLexer.h
 MCAsmLexer.h
 MCAsmParser.h
 MCAsmParserExtension.h
 MCAsmParserUtils.h
 MCParsedAsmOperand.h
 MCTargetAsmParser.h
%%NAMEBASE%%/include/llvm/Object/
 Archive.h
 ArchiveWriter.h
 Binary.h
 COFF.h
 COFFImportFile.h
 COFFModuleDefinition.h
 Decompressor.h
 ELF.h
 ELFObjectFile.h
 ELFTypes.h
 Error.h
 IRObjectFile.h
 IRSymtab.h
 MachO.h
 MachOUniversal.h
 ModuleSymbolTable.h
 ObjectFile.h
 RelocVisitor.h
 StackMapParser.h
 SymbolSize.h
 SymbolicFile.h
 Wasm.h
 WindowsResource.h
%%NAMEBASE%%/include/llvm/ObjectYAML/
 COFFYAML.h
 CodeViewYAMLDebugSections.h
 CodeViewYAMLSymbols.h
 CodeViewYAMLTypeHashing.h
 CodeViewYAMLTypes.h
 DWARFEmitter.h
 DWARFYAML.h
 ELFYAML.h
 MachOYAML.h
 ObjectYAML.h
 WasmYAML.h
 YAML.h
%%NAMEBASE%%/include/llvm/Option/
 Arg.h
 ArgList.h
 OptParser.td
 OptSpecifier.h
 OptTable.h
 Option.h
%%NAMEBASE%%/include/llvm/Passes/PassBuilder.h
%%NAMEBASE%%/include/llvm/ProfileData/
 GCOV.h
 InstrProf.h
 InstrProfData.inc
 InstrProfReader.h
 InstrProfWriter.h
 ProfileCommon.h
 SampleProf.h
 SampleProfReader.h
 SampleProfWriter.h
%%NAMEBASE%%/include/llvm/ProfileData/Coverage/
 CoverageMapping.h
 CoverageMappingReader.h
 CoverageMappingWriter.h
%%NAMEBASE%%/include/llvm/Support/
 AArch64TargetParser.def
 AMDGPUKernelDescriptor.h
 AMDGPUMetadata.h
 ARMAttributeParser.h
 ARMBuildAttributes.h
 ARMEHABI.h
 ARMTargetParser.def
 ARMWinEH.h
 AlignOf.h
 Allocator.h
 ArrayRecycler.h
 Atomic.h
 AtomicOrdering.h
 BinaryByteStream.h
 BinaryItemStream.h
 BinaryStream.h
 BinaryStreamArray.h
 BinaryStreamError.h
 BinaryStreamReader.h
 BinaryStreamRef.h
 BinaryStreamWriter.h
 BlockFrequency.h
 BranchProbability.h
 CBindingWrapping.h
 COM.h
 CachePruning.h
 Capacity.h
 Casting.h
 Chrono.h
 CodeGen.h
 CodeGenCWrappers.h
 CodeGenCoverage.h
 CommandLine.h
 Compiler.h
 Compression.h
 ConvertUTF.h
 CrashRecoveryContext.h
 DOTGraphTraits.h
 DataExtractor.h
 DataTypes.h
 Debug.h
 DebugCounter.h
 DynamicLibrary.h
 Endian.h
 EndianStream.h
 Errc.h
 Errno.h
 Error.h
 ErrorHandling.h
 ErrorOr.h
 FileOutputBuffer.h
 FileSystem.h
 FileUtilities.h
 Format.h
 FormatAdapters.h
 FormatCommon.h
 FormatProviders.h
 FormatVariadic.h
 FormatVariadicDetails.h
 FormattedStream.h
 GenericDomTree.h
 GenericDomTreeConstruction.h
 GlobPattern.h
 GraphWriter.h
 Host.h
 JamCRC.h
 KnownBits.h
 LEB128.h
 LICENSE.TXT
 LineIterator.h
 Locale.h
 LockFileManager.h
 LowLevelTypeImpl.h
 MD5.h
 ManagedStatic.h
 MathExtras.h
 Memory.h
 MemoryBuffer.h
 MipsABIFlags.h
 Mutex.h
 MutexGuard.h
 NativeFormatting.h
 OnDiskHashTable.h
 Options.h
 Parallel.h
 Path.h
 PluginLoader.h
 PointerLikeTypeTraits.h
 PrettyStackTrace.h
 Printable.h
 Process.h
 Program.h
 RWMutex.h
 RandomNumberGenerator.h
 Recycler.h
 RecyclingAllocator.h
 Regex.h
 Registry.h
 ReverseIteration.h
 SHA1.h
 SMLoc.h
 SaveAndRestore.h
 ScaledNumber.h
 ScopedPrinter.h
 Signals.h
 SourceMgr.h
 SpecialCaseList.h
 StringPool.h
 StringSaver.h
 SwapByteOrder.h
 SystemUtils.h
 TarWriter.h
 TargetParser.h
 TargetRegistry.h
 TargetSelect.h
 ThreadLocal.h
 ThreadPool.h
 Threading.h
 Timer.h
 ToolOutputFile.h
 TrailingObjects.h
 TrigramIndex.h
 TypeName.h
 Unicode.h
 UnicodeCharRanges.h
 UniqueLock.h
 VCSRevision.h
 Valgrind.h
 Watchdog.h
 Win64EH.h
 WindowsError.h
 X86TargetParser.def
 YAMLParser.h
 YAMLTraits.h
 circular_raw_ostream.h
 raw_os_ostream.h
 raw_ostream.h
 raw_sha1_ostream.h
 thread.h
 type_traits.h
 xxhash.h
%%NAMEBASE%%/include/llvm/Support/Solaris/sys/regset.h
%%NAMEBASE%%/include/llvm/TableGen/
 Error.h
 Main.h
 Record.h
 SearchableTable.td
 SetTheory.h
 StringMatcher.h
 StringToOffsetTable.h
 TableGenBackend.h
%%NAMEBASE%%/include/llvm/Target/
 GenericOpcodes.td
 Target.td
 TargetCallingConv.td
 TargetIntrinsicInfo.h
 TargetItinerary.td
 TargetMachine.h
 TargetOptions.h
 TargetSchedule.td
 TargetSelectionDAG.td
%%NAMEBASE%%/include/llvm/Target/GlobalISel/
 RegisterBank.td
 SelectionDAGCompat.td
 Target.td
%%NAMEBASE%%/include/llvm/Testing/Support/
 Error.h
 SupportHelpers.h
%%NAMEBASE%%/include/llvm/ToolDrivers/llvm-dlltool/DlltoolDriver.h
%%NAMEBASE%%/include/llvm/ToolDrivers/llvm-lib/LibDriver.h
%%NAMEBASE%%/include/llvm/Transforms/
 Coroutines.h
 GCOVProfiler.h
 IPO.h
 InstrProfiling.h
 Instrumentation.h
 ObjCARC.h
 PGOInstrumentation.h
 SampleProfile.h
 Scalar.h
 Vectorize.h
%%NAMEBASE%%/include/llvm/Transforms/IPO/
 AlwaysInliner.h
 ArgumentPromotion.h
 CalledValuePropagation.h
 ConstantMerge.h
 CrossDSOCFI.h
 DeadArgumentElimination.h
 ElimAvailExtern.h
 ForceFunctionAttrs.h
 FunctionAttrs.h
 FunctionImport.h
 GlobalDCE.h
 GlobalOpt.h
 GlobalSplit.h
 InferFunctionAttrs.h
 Inliner.h
 Internalize.h
 LowerTypeTests.h
 PartialInlining.h
 PassManagerBuilder.h
 SCCP.h
 StripDeadPrototypes.h
 ThinLTOBitcodeWriter.h
 WholeProgramDevirt.h
%%NAMEBASE%%/include/llvm/Transforms/InstCombine/
 InstCombine.h
 InstCombineWorklist.h
%%NAMEBASE%%/include/llvm/Transforms/Instrumentation/BoundsChecking.h
%%NAMEBASE%%/include/llvm/Transforms/Scalar/
 ADCE.h
 AlignmentFromAssumptions.h
 BDCE.h
 CallSiteSplitting.h
 ConstantHoisting.h
 CorrelatedValuePropagation.h
 DCE.h
 DeadStoreElimination.h
 DivRemPairs.h
 EarlyCSE.h
 Float2Int.h
 GVN.h
 GVNExpression.h
 GuardWidening.h
 IVUsersPrinter.h
 IndVarSimplify.h
 JumpThreading.h
 LICM.h
 LoopAccessAnalysisPrinter.h
 LoopDataPrefetch.h
 LoopDeletion.h
 LoopDistribute.h
 LoopIdiomRecognize.h
 LoopInstSimplify.h
 LoopLoadElimination.h
 LoopPassManager.h
 LoopPredication.h
 LoopRotation.h
 LoopSimplifyCFG.h
 LoopSink.h
 LoopStrengthReduce.h
 LoopUnrollPass.h
 LowerAtomic.h
 LowerExpectIntrinsic.h
 LowerGuardIntrinsic.h
 MemCpyOptimizer.h
 MergedLoadStoreMotion.h
 NaryReassociate.h
 NewGVN.h
 PartiallyInlineLibCalls.h
 Reassociate.h
 RewriteStatepointsForGC.h
 SCCP.h
 SROA.h
 SimpleLoopUnswitch.h
 SimplifyCFG.h
 Sink.h
 SpeculateAroundPHIs.h
 SpeculativeExecution.h
 TailRecursionElimination.h
%%NAMEBASE%%/include/llvm/Transforms/Utils/
 ASanStackFrameLayout.h
 AddDiscriminators.h
 BasicBlockUtils.h
 BreakCriticalEdges.h
 BuildLibCalls.h
 BypassSlowDivision.h
 CallPromotionUtils.h
 Cloning.h
 CodeExtractor.h
 CtorUtils.h
 EntryExitInstrumenter.h
 EscapeEnumerator.h
 Evaluator.h
 FunctionComparator.h
 FunctionImportUtils.h
 GlobalStatus.h
 ImportedFunctionsInliningStatistics.h
 IntegerDivision.h
 LCSSA.h
 LibCallsShrinkWrap.h
 Local.h
 LoopSimplify.h
 LoopUtils.h
 LoopVersioning.h
 LowerInvoke.h
 LowerMemIntrinsics.h
 Mem2Reg.h
 ModuleUtils.h
 NameAnonGlobals.h
 OrderedInstructions.h
 PredicateInfo.h
 PromoteMemToReg.h
 SSAUpdater.h
 SSAUpdaterImpl.h
 SanitizerStats.h
 SimplifyIndVar.h
 SimplifyInstructions.h
 SimplifyLibCalls.h
 SplitModule.h
 SymbolRewriter.h
 UnifyFunctionExitNodes.h
 UnrollLoop.h
 VNCoercion.h
 ValueMapper.h
%%NAMEBASE%%/include/llvm/Transforms/Vectorize/
 LoopVectorize.h
 SLPVectorizer.h
%%NAMEBASE%%/include/llvm/WindowsManifest/WindowsManifestMerger.h
%%NAMEBASE%%/include/llvm/WindowsResource/
 ResourceProcessor.h
 ResourceScriptToken.h
 ResourceScriptTokenList.h
%%NAMEBASE%%/include/llvm/XRay/
 Graph.h
 InstrumentationMap.h
 Trace.h
 XRayRecord.h
 YAMLXRayRecord.h
%%NAMEBASE%%/lib/
 BugpointPasses.so
 LLVMHello.so
 libLLVM-%%LLVM_MAJORMIN%%.so
 libLLVM-%%LLVM_RELEASE%%.so
 libLLVM.so
 libLLVMAArch64AsmParser.a
 libLLVMAArch64AsmPrinter.a
 libLLVMAArch64CodeGen.a
 libLLVMAArch64Desc.a
 libLLVMAArch64Disassembler.a
 libLLVMAArch64Info.a
 libLLVMAArch64Utils.a
 libLLVMAMDGPUAsmParser.a
 libLLVMAMDGPUAsmPrinter.a
 libLLVMAMDGPUCodeGen.a
 libLLVMAMDGPUDesc.a
 libLLVMAMDGPUDisassembler.a
 libLLVMAMDGPUInfo.a
 libLLVMAMDGPUUtils.a
 libLLVMARMAsmParser.a
 libLLVMARMAsmPrinter.a
 libLLVMARMCodeGen.a
 libLLVMARMDesc.a
 libLLVMARMDisassembler.a
 libLLVMARMInfo.a
 libLLVMARMUtils.a
 libLLVMAnalysis.a
 libLLVMAsmParser.a
 libLLVMAsmPrinter.a
 libLLVMBPFAsmParser.a
 libLLVMBPFAsmPrinter.a
 libLLVMBPFCodeGen.a
 libLLVMBPFDesc.a
 libLLVMBPFDisassembler.a
 libLLVMBPFInfo.a
 libLLVMBinaryFormat.a
 libLLVMBitReader.a
 libLLVMBitWriter.a
 libLLVMCodeGen.a
 libLLVMCore.a
 libLLVMCoroutines.a
 libLLVMCoverage.a
 libLLVMDebugInfoCodeView.a
 libLLVMDebugInfoDWARF.a
 libLLVMDebugInfoMSF.a
 libLLVMDebugInfoPDB.a
 libLLVMDemangle.a
 libLLVMDlltoolDriver.a
 libLLVMExecutionEngine.a
 libLLVMFuzzMutate.a
 libLLVMGlobalISel.a
 libLLVMHexagonAsmParser.a
 libLLVMHexagonCodeGen.a
 libLLVMHexagonDesc.a
 libLLVMHexagonDisassembler.a
 libLLVMHexagonInfo.a
 libLLVMIRReader.a
 libLLVMInstCombine.a
 libLLVMInstrumentation.a
 libLLVMInterpreter.a
 libLLVMLTO.a
 libLLVMLanaiAsmParser.a
 libLLVMLanaiAsmPrinter.a
 libLLVMLanaiCodeGen.a
 libLLVMLanaiDesc.a
 libLLVMLanaiDisassembler.a
 libLLVMLanaiInfo.a
 libLLVMLibDriver.a
 libLLVMLineEditor.a
 libLLVMLinker.a
 libLLVMMC.a
 libLLVMMCDisassembler.a
 libLLVMMCJIT.a
 libLLVMMCParser.a
 libLLVMMIRParser.a
 libLLVMMSP430AsmPrinter.a
 libLLVMMSP430CodeGen.a
 libLLVMMSP430Desc.a
 libLLVMMSP430Info.a
 libLLVMMipsAsmParser.a
 libLLVMMipsAsmPrinter.a
 libLLVMMipsCodeGen.a
 libLLVMMipsDesc.a
 libLLVMMipsDisassembler.a
 libLLVMMipsInfo.a
 libLLVMNVPTXAsmPrinter.a
 libLLVMNVPTXCodeGen.a
 libLLVMNVPTXDesc.a
 libLLVMNVPTXInfo.a
 libLLVMObjCARCOpts.a
 libLLVMObject.a
 libLLVMObjectYAML.a
 libLLVMOption.a
 libLLVMOrcJIT.a
 libLLVMPasses.a
 libLLVMPowerPCAsmParser.a
 libLLVMPowerPCAsmPrinter.a
 libLLVMPowerPCCodeGen.a
 libLLVMPowerPCDesc.a
 libLLVMPowerPCDisassembler.a
 libLLVMPowerPCInfo.a
 libLLVMProfileData.a
 libLLVMRuntimeDyld.a
 libLLVMScalarOpts.a
 libLLVMSelectionDAG.a
 libLLVMSparcAsmParser.a
 libLLVMSparcAsmPrinter.a
 libLLVMSparcCodeGen.a
 libLLVMSparcDesc.a
 libLLVMSparcDisassembler.a
 libLLVMSparcInfo.a
 libLLVMSupport.a
 libLLVMSymbolize.a
 libLLVMSystemZAsmParser.a
 libLLVMSystemZAsmPrinter.a
 libLLVMSystemZCodeGen.a
 libLLVMSystemZDesc.a
 libLLVMSystemZDisassembler.a
 libLLVMSystemZInfo.a
 libLLVMTableGen.a
 libLLVMTarget.a
 libLLVMTransformUtils.a
 libLLVMVectorize.a
 libLLVMWindowsManifest.a
 libLLVMX86AsmParser.a
 libLLVMX86AsmPrinter.a
 libLLVMX86CodeGen.a
 libLLVMX86Desc.a
 libLLVMX86Disassembler.a
 libLLVMX86Info.a
 libLLVMX86Utils.a
 libLLVMXCoreAsmPrinter.a
 libLLVMXCoreCodeGen.a
 libLLVMXCoreDesc.a
 libLLVMXCoreDisassembler.a
 libLLVMXCoreInfo.a
 libLLVMXRay.a
 libLLVMipo.a
 libLTO.so
 libLTO.so.%%LLVM_MAJOR%%
 libLTO.so.%%LLVM_RELEASE%%
%%NAMEBASE%%/lib/cmake/llvm/
 AddLLVM.cmake
 AddLLVMDefinitions.cmake
 AddOCaml.cmake
 AddSphinxTarget.cmake
 CheckAtomic.cmake
 CheckCompilerVersion.cmake
 CheckLinkerFlag.cmake
 ChooseMSVCCRT.cmake
 CrossCompile.cmake
 DetermineGCCCompatible.cmake
 FindOCaml.cmake
 FindSphinx.cmake
 GenerateVersionFromCVS.cmake
 GetSVN.cmake
 HandleLLVMOptions.cmake
 HandleLLVMStdlib.cmake
 LLVM-Config.cmake
 LLVMConfig.cmake
 LLVMConfigVersion.cmake
 LLVMExports-%%CMAKE_BUILD_TYPE%%.cmake
 LLVMExports.cmake
 LLVMExternalProjectUtils.cmake
 LLVMInstallSymlink.cmake
 LLVMProcessSources.cmake
 TableGen.cmake
 VersionFromVCS.cmake
%%OPENMP-ON%%%%NAMEBASE%%/lib/
 libgomp.so
 libiomp5.so
 libomp.so


[FILE:1216:patches/patch-bug32279]
--- tools/openmp/runtime/cmake/LibompHandleFlags.cmake.orig	2017-11-29 19:31:48 UTC
+++ tools/openmp/runtime/cmake/LibompHandleFlags.cmake
@@ -152,6 +152,9 @@ function(libomp_get_libflags libflags)
   if(${IA32})
     libomp_append(libflags_local -lirc_pic LIBOMP_HAVE_IRC_PIC_LIBRARY)
   endif()
+  IF(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD|DragonFly")
+    libomp_append(libflags_local "-lm")
+  ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
   IF(${CMAKE_SYSTEM_NAME} MATCHES "NetBSD")
     libomp_append(libflags_local -lm)
   ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "NetBSD")
--- tools/openmp/runtime/cmake/LibompMicroTests.cmake.orig	2016-12-08 09:22:24 UTC
+++ tools/openmp/runtime/cmake/LibompMicroTests.cmake
@@ -171,7 +171,7 @@ add_custom_command(
 add_custom_target(libomp-test-deps DEPENDS test-deps/.success)
 set(libomp_expected_library_deps)
 if(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
-  set(libomp_expected_library_deps libc.so.7 libthr.so.3)
+  set(libomp_expected_library_deps libc.so.7 libthr.so.3 libm.so.5)
   libomp_append(libomp_expected_library_deps libhwloc.so.5 LIBOMP_USE_HWLOC)
 elseif(CMAKE_SYSTEM_NAME MATCHES "NetBSD")
   set(libomp_expected_library_deps libc.so.12 libpthread.so.1 libm.so.0)


[FILE:523:patches/patch-cmake_modules_HandleLLVMOptions.cmake]
--- cmake/modules/HandleLLVMOptions.cmake.orig	2017-11-29 18:05:32 UTC
+++ cmake/modules/HandleLLVMOptions.cmake
@@ -146,6 +146,7 @@ endif()
 # build might work on ELF but fail on MachO/COFF.
 if(NOT (${CMAKE_SYSTEM_NAME} MATCHES "Darwin" OR WIN32 OR CYGWIN OR
         ${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD" OR
+        ${CMAKE_SYSTEM_NAME} MATCHES "DragonFly" OR
         ${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD") AND
    NOT LLVM_USE_SANITIZER)
   set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-z,defs")


[FILE:623:patches/patch-lib_Support_Unix_Path.inc]
--- lib/Support/Unix/Path.inc.orig	2017-11-07 00:47:04 UTC
+++ lib/Support/Unix/Path.inc
@@ -68,13 +68,13 @@
 
 #include <sys/types.h>
 #if !defined(__APPLE__) && !defined(__OpenBSD__) && !defined(__FreeBSD__) &&   \
-    !defined(__linux__)
+    !defined(__linux__) && !defined(__DragonFly__)
 #include <sys/statvfs.h>
 #define STATVFS statvfs
 #define FSTATVFS fstatvfs
 #define STATVFS_F_FRSIZE(vfs) vfs.f_frsize
 #else
-#if defined(__OpenBSD__) || defined(__FreeBSD__)
+#if defined(__OpenBSD__) || defined(__FreeBSD__) || defined(__DragonFly__)
 #include <sys/mount.h>
 #include <sys/param.h>
 #elif defined(__linux__)


[FILE:770:patches/patch-tools_clang_lib_Driver_ToolChains_CommonArgs.cpp]
--- tools/clang/lib/Driver/ToolChains/CommonArgs.cpp.orig	2017-12-28 16:58:54 UTC
+++ tools/clang/lib/Driver/ToolChains/CommonArgs.cpp
@@ -482,16 +482,16 @@ bool tools::addOpenMPRuntime(ArgStringLi
 
   switch (TC.getDriver().getOpenMPRuntime(Args)) {
   case Driver::OMPRT_OMP:
-    CmdArgs.push_back("-lomp");
+    CmdArgs.push_back("/usr/local/llvm50/lib/libomp.so");
     break;
   case Driver::OMPRT_GOMP:
-    CmdArgs.push_back("-lgomp");
+    CmdArgs.push_back("/usr/local/llvm50/lib/libgomp.so");
 
     if (GompNeedsRT)
       CmdArgs.push_back("-lrt");
     break;
   case Driver::OMPRT_IOMP5:
-    CmdArgs.push_back("-liomp5");
+    CmdArgs.push_back("/usr/local/llvm50/lib/libiomp5.so");
     break;
   case Driver::OMPRT_Unknown:
     // Already diagnosed.


[FILE:2435:patches/patch-tools_clang_lib_Driver_ToolChains_DragonFly.cpp]
--- tools/clang/lib/Driver/ToolChains/DragonFly.cpp.orig	2017-07-25 18:02:57 UTC
+++ tools/clang/lib/Driver/ToolChains/DragonFly.cpp
@@ -70,7 +70,7 @@ void dragonfly::Linker::ConstructJob(Com
       CmdArgs.push_back("-Bshareable");
     else {
       CmdArgs.push_back("-dynamic-linker");
-      CmdArgs.push_back("/usr/libexec/ld-elf.so.2");
+      CmdArgs.push_back("/libexec/ld-elf.so.2");
     }
     CmdArgs.push_back("--hash-style=gnu");
     CmdArgs.push_back("--enable-new-dtags");
@@ -113,17 +113,20 @@ void dragonfly::Linker::ConstructJob(Com
           Args.MakeArgString(getToolChain().GetFilePath("crtbegin.o")));
   }
 
+  if (D.isUsingLTO())
+    AddGoldPlugin(getToolChain(), Args, CmdArgs, D.getLTOMode() == LTOK_Thin, D);
+
   Args.AddAllArgs(CmdArgs,
                   {options::OPT_L, options::OPT_T_Group, options::OPT_e});
 
   AddLinkerInputs(getToolChain(), Inputs, Args, CmdArgs, JA);
 
   if (!Args.hasArg(options::OPT_nostdlib, options::OPT_nodefaultlibs)) {
-    CmdArgs.push_back("-L/usr/lib/gcc50");
+    CmdArgs.push_back("-L@RAVEN_GCC@");
 
     if (!Args.hasArg(options::OPT_static)) {
       CmdArgs.push_back("-rpath");
-      CmdArgs.push_back("/usr/lib/gcc50");
+      CmdArgs.push_back("@RAVEN_GCC@");
     }
 
     if (D.CCCIsCXX()) {
@@ -144,16 +147,7 @@ void dragonfly::Linker::ConstructJob(Com
         CmdArgs.push_back("-lgcc");
         CmdArgs.push_back("-lgcc_eh");
     } else {
-      if (Args.hasArg(options::OPT_shared_libgcc)) {
-          CmdArgs.push_back("-lgcc_pic");
-          if (!Args.hasArg(options::OPT_shared))
-            CmdArgs.push_back("-lgcc");
-      } else {
-          CmdArgs.push_back("-lgcc");
-          CmdArgs.push_back("--as-needed");
-          CmdArgs.push_back("-lgcc_pic");
-          CmdArgs.push_back("--no-as-needed");
-      }
+      CmdArgs.push_back("-lgcc_s");
     }
   }
 
@@ -186,7 +180,8 @@ DragonFly::DragonFly(const Driver &D, co
 
   getFilePaths().push_back(getDriver().Dir + "/../lib");
   getFilePaths().push_back("/usr/lib");
-  getFilePaths().push_back("/usr/lib/gcc50");
+  getFilePaths().push_back("@RAVEN_GCC@");
+  getFilePaths().push_back("@RAVEN_GCC_TARGET@");
 }
 
 Tool *DragonFly::buildAssembler() const {
@@ -196,3 +191,5 @@ Tool *DragonFly::buildAssembler() const
 Tool *DragonFly::buildLinker() const {
   return new tools::dragonfly::Linker(*this);
 }
+
+bool DragonFly::HasNativeLLVMSupport() const { return true; }


[FILE:413:patches/patch-tools_clang_lib_Driver_ToolChains_DragonFly.h]
--- tools/clang/lib/Driver/ToolChains/DragonFly.h.orig	2017-03-08 01:02:16 UTC
+++ tools/clang/lib/Driver/ToolChains/DragonFly.h
@@ -53,6 +53,7 @@ class LLVM_LIBRARY_VISIBILITY DragonFly
 public:
   DragonFly(const Driver &D, const llvm::Triple &Triple,
             const llvm::opt::ArgList &Args);
+  bool HasNativeLLVMSupport() const override;
 
   bool IsMathErrnoDefault() const override { return false; }
 


[FILE:699:patches/patch-tools_clang_lib_Driver_ToolChains_Gnu.cpp]
--- tools/clang/lib/Driver/ToolChains/Gnu.cpp.orig	2017-12-09 00:34:01 UTC
+++ tools/clang/lib/Driver/ToolChains/Gnu.cpp
@@ -396,6 +396,9 @@ void tools::gnutools::Linker::ConstructJ
   }
 
   if (!Args.hasArg(options::OPT_static)) {
+    CmdArgs.push_back("-rpath");
+    CmdArgs.push_back("@RAVEN_GCC@");
+
     if (Args.hasArg(options::OPT_rdynamic))
       CmdArgs.push_back("-export-dynamic");
 
@@ -483,6 +486,8 @@ void tools::gnutools::Linker::ConstructJ
 
   if (!Args.hasArg(options::OPT_nostdlib)) {
     if (!Args.hasArg(options::OPT_nodefaultlibs)) {
+      CmdArgs.push_back("-L@RAVEN_GCC@");
+
       if (Args.hasArg(options::OPT_static))
         CmdArgs.push_back("--start-group");
 


[FILE:2756:patches/patch-tools_clang_lib_Driver_ToolChains_Linux.cpp]
--- tools/clang/lib/Driver/ToolChains/Linux.cpp.orig	2017-12-11 18:14:51 UTC
+++ tools/clang/lib/Driver/ToolChains/Linux.cpp
@@ -215,10 +215,6 @@ Linux::Linux(const Driver &D, const llvm
     ExtraOpts.push_back("now");
   }
 
-  if (Distro.IsOpenSUSE() || Distro.IsUbuntu() || Distro.IsAlpineLinux()) {
-    ExtraOpts.push_back("-z");
-    ExtraOpts.push_back("relro");
-  }
 
   if (Arch == llvm::Triple::arm || Arch == llvm::Triple::thumb)
     ExtraOpts.push_back("-X");
@@ -237,13 +233,7 @@ Linux::Linux(const Driver &D, const llvm
   // Android loader does not support .gnu.hash.
   // Hexagon linker/loader does not support .gnu.hash
   if (!IsMips && !IsAndroid && !IsHexagon) {
-    if (Distro.IsRedhat() || Distro.IsOpenSUSE() || Distro.IsAlpineLinux() ||
-        (Distro.IsUbuntu() && Distro >= Distro::UbuntuMaverick))
       ExtraOpts.push_back("--hash-style=gnu");
-
-    if (Distro.IsDebian() || Distro.IsOpenSUSE() || Distro == Distro::UbuntuLucid ||
-        Distro == Distro::UbuntuJaunty || Distro == Distro::UbuntuKarmic)
-      ExtraOpts.push_back("--hash-style=both");
   }
 
   if (Distro.IsRedhat() && Distro != Distro::RHEL5 && Distro != Distro::RHEL6)
@@ -253,7 +243,6 @@ Linux::Linux(const Driver &D, const llvm
   ExtraOpts.push_back("--build-id");
 #endif
 
-  if (IsAndroid || Distro.IsOpenSUSE())
     ExtraOpts.push_back("--enable-new-dtags");
 
   // The selection of paths to try here is designed to match the patterns which
@@ -333,6 +322,8 @@ Linux::Linux(const Driver &D, const llvm
   addPathIfExists(D, SysRoot + "/lib/../" + OSLibDir, Paths);
   addPathIfExists(D, SysRoot + "/usr/lib/" + MultiarchTriple, Paths);
   addPathIfExists(D, SysRoot + "/usr/lib/../" + OSLibDir, Paths);
+  addPathIfExists(D, SysRoot + "@RAVEN_GCC@", Paths);
+  addPathIfExists(D, SysRoot + "@RAVEN_GCC_TARGET@", Paths);
 
   // Try walking via the GCC triple path in case of biarch or multiarch GCC
   // installations with strange symlinks.
@@ -769,10 +760,9 @@ void Linux::addLibStdCxxIncludePaths(con
   const GCCVersion &Version = GCCInstallation.getVersion();
 
   // The primary search for libstdc++ supports multiarch variants.
-  if (addLibStdCXXIncludePaths(LibDir.str() + "/../include",
-                               "/c++/" + Version.Text, TripleStr,
-                               GCCMultiarchTriple, TargetMultiarchTriple,
-                               Multilib.includeSuffix(), DriverArgs, CC1Args))
+  addSystemInclude(DriverArgs, CC1Args, "@RAVEN_GXX_HEADERS_DIR@");
+  addSystemInclude(DriverArgs, CC1Args, "@RAVEN_GXX_HEADERS_DIR@/backward");
+  addSystemInclude(DriverArgs, CC1Args, "@RAVEN_GXX_HEADERS_DIR@" + TripleStr);
     return;
 
   // Otherwise, fall back on a bunch of options which don't use multiarch


[FILE:592:patches/patch-tools_clang_lib_Frontend_InitHeaderSearch.cpp]
--- tools/clang/lib/Frontend/InitHeaderSearch.cpp.orig	2017-10-02 18:22:19 UTC
+++ tools/clang/lib/Frontend/InitHeaderSearch.cpp
@@ -412,7 +412,9 @@ AddDefaultCPlusPlusIncludePaths(const ll
     }
     break;
   case llvm::Triple::DragonFly:
-    AddPath("/usr/include/c++/5.0", CXXSystem, false);
+    AddPath("@RAVEN_GXX_HEADERS_DIR@", CXXSystem, false);
+    AddPath("@RAVEN_GXX_HEADERS_DIR@/backward", CXXSystem, false);
+    AddPath("@RAVEN_GXX_HEADERS_DIR@/" + triple.getTriple(), CXXSystem, false);
     break;
   case llvm::Triple::OpenBSD: {
     std::string t = triple.getTriple();


[FILE:128:files/special.mk]
# for some reason linux freezes when linking two clang programs
# at the same time

.if ${OPSYS} == Linux
SINGLE_JOB=	yes
.endif

[FILE:582:dragonfly/patch-tools_clang_lib_Headers_CMakeLists.txt]
--- tools/clang/lib/Headers/CMakeLists.txt.orig	2017-12-27 11:25:07 UTC
+++ tools/clang/lib/Headers/CMakeLists.txt
@@ -56,7 +56,6 @@ set(files
   intrin.h
   inttypes.h
   iso646.h
-  limits.h
   lwpintrin.h
   lzcntintrin.h
   mm3dnow.h
@@ -76,21 +75,13 @@ set(files
   s390intrin.h
   shaintrin.h
   smmintrin.h
-  stdalign.h
-  stdarg.h
-  stdatomic.h
-  stdbool.h
-  stddef.h
   __stddef_max_align_t.h
-  stdint.h
-  stdnoreturn.h
   tbmintrin.h
   tgmath.h
   tmmintrin.h
   unwind.h
   vadefs.h
   vaesintrin.h
-  varargs.h
   vecintrin.h
   vpclmulqdqintrin.h
   wmmintrin.h


[FILE:582:freebsd/patch-tools_clang_lib_Headers_CMakeLists.txt]
--- tools/clang/lib/Headers/CMakeLists.txt.orig	2017-12-27 11:25:07 UTC
+++ tools/clang/lib/Headers/CMakeLists.txt
@@ -56,7 +56,6 @@ set(files
   intrin.h
   inttypes.h
   iso646.h
-  limits.h
   lwpintrin.h
   lzcntintrin.h
   mm3dnow.h
@@ -76,21 +75,13 @@ set(files
   s390intrin.h
   shaintrin.h
   smmintrin.h
-  stdalign.h
-  stdarg.h
-  stdatomic.h
-  stdbool.h
-  stddef.h
   __stddef_max_align_t.h
-  stdint.h
-  stdnoreturn.h
   tbmintrin.h
   tgmath.h
   tmmintrin.h
   unwind.h
   vadefs.h
   vaesintrin.h
-  varargs.h
   vecintrin.h
   vpclmulqdqintrin.h
   wmmintrin.h

