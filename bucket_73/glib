# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		glib
VERSION=		2.80.0
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Some useful routines of C programming
HOMEPAGE=		https://www.gtk.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNOME/glib/2.80
DISTFILE[1]=		glib-2.80.0.tar.xz:main
DIST_SUBDIR=		gnome2
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev
			man
			nls

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		xmlto:single:standard
			libffi:dev:standard
			python-packaging:single:python_used
			python-docutils:single:python_used
BUILDRUN_DEPENDS=	libffi:primary:standard
EXRUN[dev]=		zlib:dev:standard
			pcre2:dev:standard
			libffi:dev:standard
			python-packaging:single:python_used

USES=			pcre2 gettext gmake libtool perl:build pkgconfig
			python:build shebangfix zlib meson iconv cpe

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"__G_LIB_H__"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/glib/glib.h
LICENSE_SCHEME=		solo

CPE_VENDOR=		gnome
FPC_EQUIVALENT=		devel/glib20
MESON_ARGS=		-Dselinux=disabled
			-Dxattr=false
			-Dlibmount=disabled
			-Ddtrace=false
			-Dman=true
			-Dgtk_doc=false
			-Db_lundef=false
			-Dtests=false
SHEBANG_FILES=		*/*.pl
			{{pyscripts}}

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
PLIST_SUB=		LIBVERSION=0.8000.0
			RESETPREFIX={{PREFIX}}

SET_DEBUGGING_ON=	yes
OPTIMIZER_LEVEL=	0
VAR_OPSYS[sunos]=	CFLAGS=-fPIC
			LDFLAGS=-lintl
			LDFLAGS=-liconv
			LDFLAGS=-lnsl
			LDFLAGS=-lsocket
VAR_OPSYS[darwin]=	MAKE_ENV=DYLD_FALLBACK_LIBRARY_PATH="$$DYLD_FALLBACK_LIBRARY_PATH:{{WRKSRC}}/_build/glib:{{WRKSRC}}/_build/gio:{{WRKSRC}}/_build/gobject:{{WRKSRC}}/_build/gmodule"

post-patch:
	for F in ${pyscripts}; do \
		${CHMOD} ${BINMODE} ${WRKSRC}/$$F; \
	done

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/share/GConf/gsettings
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/gio/modules
	${RM} -r ${STAGEDIR}${PREFIX}/libexec

pre-configure:
	${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|g ; \
		s|/usr/share/locale/locale|${LOCALBASE}/share/locale/locale|g' \
			${WRKSRC}/glib/gutils.c
	${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|g' \
		${WRKSRC}/gio/gunixmounts.c \
		${WRKSRC}/gio/xdgmime/xdgmime.c \
		${WRKSRC}/glib/tests/utils.c
	${REINPLACE_CMD} \
		-e "s|http://docbook.sourceforge.net/release/xsl/current/|file://${LOCALBASE}/share/xsl/docbook/|" \
		${WRKSRC}/meson.build

[FILE:205:descriptions/desc.primary]
GLib provides a simple, abstract, and highly portable set of C support
routines such as lists, trees, hashes, memory allocation, and much, much
more.  It is a foundation for writing portable applications.


[FILE:104:distinfo]
8228a92f92a412160b139ae68b6345bd28f24434a7b5af150ebe21ff587a561d      5510536 gnome2/glib-2.80.0.tar.xz


[FILE:1718:manifests/plist.primary]
@comment share/glib-2.0/codegen auto-generated
%%ONLY-LINUX%%share/bash-completion/completions/
 gapplication
 gdbus
 gio
 gresource
 gsettings
%%ONLY-SUNOS%%share/bash-completion/completions/
 gapplication
 gdbus
 gio
 gresource
 gsettings
bin/
 gapplication
 gdbus
 gdbus-codegen
 gi-compile-repository
 gi-decompile-typelib
 gi-inspect-typelib
 gio
 gio-querymodules
 glib-compile-resources
 glib-compile-schemas
 glib-genmarshal
 glib-gettextize
 glib-mkenums
 gobject-query
 gresource
 gsettings
 gtester
 gtester-report
lib/
 libgio-2.0.so.%%LIBVERSION%%
 libgio-2.0.so.0
 libgirepository-2.0.so.%%LIBVERSION%%
 libgirepository-2.0.so.0
 libglib-2.0.so.%%LIBVERSION%%
 libglib-2.0.so.0
 libgmodule-2.0.so.%%LIBVERSION%%
 libgmodule-2.0.so.0
 libgobject-2.0.so.%%LIBVERSION%%
 libgobject-2.0.so.0
 libgthread-2.0.so.%%LIBVERSION%%
 libgthread-2.0.so.0
lib/glib-2.0/include/glibconfig.h
share/gdb/auto-load%%RESETPREFIX%%/lib/
 libglib-2.0.so.%%LIBVERSION%%-gdb.py
 libgobject-2.0.so.%%LIBVERSION%%-gdb.py
share/gettext/its/
 gschema.its
 gschema.loc
share/glib-2.0/codegen/
 __init__.py
 codegen.py
 codegen_docbook.py
 codegen_main.py
 codegen_md.py
 codegen_rst.py
 config.py
 dbustypes.py
 parser.py
 utils.py
share/glib-2.0/dtds/gresource.dtd
share/glib-2.0/gdb/
 glib_gdb.py
 gobject_gdb.py
share/glib-2.0/gettext/po/Makefile.in.in
share/glib-2.0/schemas/gschema.dtd
share/glib-2.0/valgrind/glib.supp
@dir lib/gio/modules
@dir share/GConf/gsettings
@postexec %D/bin/gio-querymodules %D/lib/gio/modules 2>/dev/null || /usr/bin/true
@postexec %D/bin/glib-compile-schemas %D/share/glib-2.0/schemas 2>/dev/null || /usr/bin/true
@postunexec /bin/rm -f %D/share/glib-2.0/schemas/gschemas.compiled || /usr/bin/true


[FILE:5408:manifests/plist.dev]
include/gio-unix-2.0/gio/
 gdesktopappinfo.h
 gfiledescriptorbased.h
 gunixfdmessage.h
 gunixinputstream.h
 gunixmounts.h
 gunixoutputstream.h
include/glib-2.0/
 glib-object.h
 glib-unix.h
 glib.h
 gmodule.h
include/glib-2.0/gio/
 gaction.h
 gactiongroup.h
 gactiongroupexporter.h
 gactionmap.h
 gappinfo.h
 gapplication.h
 gapplicationcommandline.h
 gasyncinitable.h
 gasyncresult.h
 gbufferedinputstream.h
 gbufferedoutputstream.h
 gbytesicon.h
 gcancellable.h
 gcharsetconverter.h
 gcontenttype.h
 gconverter.h
 gconverterinputstream.h
 gconverteroutputstream.h
 gcredentials.h
 gdatagrambased.h
 gdatainputstream.h
 gdataoutputstream.h
 gdbusactiongroup.h
 gdbusaddress.h
 gdbusauthobserver.h
 gdbusconnection.h
 gdbuserror.h
 gdbusinterface.h
 gdbusinterfaceskeleton.h
 gdbusintrospection.h
 gdbusmenumodel.h
 gdbusmessage.h
 gdbusmethodinvocation.h
 gdbusnameowning.h
 gdbusnamewatching.h
 gdbusobject.h
 gdbusobjectmanager.h
 gdbusobjectmanagerclient.h
 gdbusobjectmanagerserver.h
 gdbusobjectproxy.h
 gdbusobjectskeleton.h
 gdbusproxy.h
 gdbusserver.h
 gdbusutils.h
 gdebugcontroller.h
 gdebugcontrollerdbus.h
 gdrive.h
 gdtlsclientconnection.h
 gdtlsconnection.h
 gdtlsserverconnection.h
 gemblem.h
 gemblemedicon.h
 gfile.h
 gfileattribute.h
 gfileenumerator.h
 gfileicon.h
 gfileinfo.h
 gfileinputstream.h
 gfileiostream.h
 gfilemonitor.h
 gfilenamecompleter.h
 gfileoutputstream.h
 gfilterinputstream.h
 gfilteroutputstream.h
 gicon.h
 ginetaddress.h
 ginetaddressmask.h
 ginetsocketaddress.h
 ginitable.h
 ginputstream.h
 gio-autocleanups.h
 gio-visibility.h
 gio.h
 gioenums.h
 gioenumtypes.h
 gioerror.h
 giomodule.h
 gioscheduler.h
 giostream.h
 giotypes.h
 glistmodel.h
 gliststore.h
 gloadableicon.h
 gmemoryinputstream.h
 gmemorymonitor.h
 gmemoryoutputstream.h
 gmenu.h
 gmenuexporter.h
 gmenumodel.h
 gmount.h
 gmountoperation.h
 gnativesocketaddress.h
 gnativevolumemonitor.h
 gnetworkaddress.h
 gnetworking.h
 gnetworkmonitor.h
 gnetworkservice.h
 gnotification.h
 goutputstream.h
 gpermission.h
 gpollableinputstream.h
 gpollableoutputstream.h
 gpollableutils.h
 gpowerprofilemonitor.h
 gpropertyaction.h
 gproxy.h
 gproxyaddress.h
 gproxyaddressenumerator.h
 gproxyresolver.h
 gremoteactiongroup.h
 gresolver.h
 gresource.h
 gseekable.h
 gsettings.h
 gsettingsbackend.h
 gsettingsschema.h
 gsimpleaction.h
 gsimpleactiongroup.h
 gsimpleasyncresult.h
 gsimpleiostream.h
 gsimplepermission.h
 gsimpleproxyresolver.h
 gsocket.h
 gsocketaddress.h
 gsocketaddressenumerator.h
 gsocketclient.h
 gsocketconnectable.h
 gsocketconnection.h
 gsocketcontrolmessage.h
 gsocketlistener.h
 gsocketservice.h
 gsrvtarget.h
 gsubprocess.h
 gsubprocesslauncher.h
 gtask.h
 gtcpconnection.h
 gtcpwrapperconnection.h
 gtestdbus.h
 gthemedicon.h
 gthreadedsocketservice.h
 gtlsbackend.h
 gtlscertificate.h
 gtlsclientconnection.h
 gtlsconnection.h
 gtlsdatabase.h
 gtlsfiledatabase.h
 gtlsinteraction.h
 gtlspassword.h
 gtlsserverconnection.h
 gunixconnection.h
 gunixcredentialsmessage.h
 gunixfdlist.h
 gunixsocketaddress.h
 gvfs.h
 gvolume.h
 gvolumemonitor.h
 gzlibcompressor.h
 gzlibdecompressor.h
include/glib-2.0/girepository/
 gi-visibility.h
 giarginfo.h
 gibaseinfo.h
 gicallableinfo.h
 gicallbackinfo.h
 giconstantinfo.h
 gienuminfo.h
 gifieldinfo.h
 giflagsinfo.h
 gifunctioninfo.h
 giinterfaceinfo.h
 giobjectinfo.h
 gipropertyinfo.h
 giregisteredtypeinfo.h
 girepository-autocleanups.h
 girepository.h
 girffi.h
 gisignalinfo.h
 gistructinfo.h
 gitypeinfo.h
 gitypelib.h
 gitypes.h
 giunioninfo.h
 giunresolvedinfo.h
 givalueinfo.h
 givfuncinfo.h
include/glib-2.0/glib/
 galloca.h
 garray.h
 gasyncqueue.h
 gatomic.h
 gbacktrace.h
 gbase64.h
 gbitlock.h
 gbookmarkfile.h
 gbytes.h
 gcharset.h
 gchecksum.h
 gconvert.h
 gdataset.h
 gdate.h
 gdatetime.h
 gdir.h
 genviron.h
 gerror.h
 gfileutils.h
 ggettext.h
 ghash.h
 ghmac.h
 ghook.h
 ghostutils.h
 gi18n-lib.h
 gi18n.h
 giochannel.h
 gkeyfile.h
 glib-autocleanups.h
 glib-typeof.h
 glib-visibility.h
 glist.h
 gmacros.h
 gmain.h
 gmappedfile.h
 gmarkup.h
 gmem.h
 gmessages.h
 gnode.h
 goption.h
 gpathbuf.h
 gpattern.h
 gpoll.h
 gprimes.h
 gprintf.h
 gqsort.h
 gquark.h
 gqueue.h
 grand.h
 grcbox.h
 grefcount.h
 grefstring.h
 gregex.h
 gscanner.h
 gsequence.h
 gshell.h
 gslice.h
 gslist.h
 gspawn.h
 gstdio.h
 gstrfuncs.h
 gstring.h
 gstringchunk.h
 gstrvbuilder.h
 gtestutils.h
 gthread.h
 gthreadpool.h
 gtimer.h
 gtimezone.h
 gtrashstack.h
 gtree.h
 gtypes.h
 gunicode.h
 guri.h
 gutils.h
 guuid.h
 gvariant.h
 gvarianttype.h
 gversion.h
 gversionmacros.h
include/glib-2.0/glib/deprecated/
 gallocator.h
 gcache.h
 gcompletion.h
 gmain.h
 grel.h
 gthread.h
include/glib-2.0/gmodule/gmodule-visibility.h
include/glib-2.0/gobject/
 gbinding.h
 gbindinggroup.h
 gboxed.h
 gclosure.h
 genums.h
 glib-enumtypes.h
 glib-types.h
 gmarshal.h
 gobject-autocleanups.h
 gobject-visibility.h
 gobject.h
 gobjectnotifyqueue.c
 gparam.h
 gparamspecs.h
 gsignal.h
 gsignalgroup.h
 gsourceclosure.h
 gtype.h
 gtypemodule.h
 gtypeplugin.h
 gvalue.h
 gvaluearray.h
 gvaluecollector.h
 gvaluetypes.h
lib/
 libgio-2.0.so
 libgirepository-2.0.so
 libglib-2.0.so
 libgmodule-2.0.so
 libgobject-2.0.so
 libgthread-2.0.so
lib/pkgconfig/
 gio-2.0.pc
 gio-unix-2.0.pc
 girepository-2.0.pc
 glib-2.0.pc
 gmodule-2.0.pc
 gmodule-export-2.0.pc
 gmodule-no-export-2.0.pc
 gobject-2.0.pc
 gthread-2.0.pc
share/aclocal/
 glib-2.0.m4
 glib-gettext.m4
 gsettings.m4


[FILE:386:manifests/plist.man]
share/man/man1/
 gapplication.1.gz
 gdbus-codegen.1.gz
 gdbus.1.gz
 gi-compile-repository.1.gz
 gi-decompile-typelib.1.gz
 gi-inspect-typelib.1.gz
 gio-querymodules.1.gz
 gio.1.gz
 glib-compile-resources.1.gz
 glib-compile-schemas.1.gz
 glib-genmarshal.1.gz
 glib-gettextize.1.gz
 glib-mkenums.1.gz
 gobject-query.1.gz
 gresource.1.gz
 gsettings.1.gz
 gtester-report.1.gz
 gtester.1.gz


[FILE:3855:manifests/plist.nls]
share/locale/ab/LC_MESSAGES/glib20.mo
share/locale/af/LC_MESSAGES/glib20.mo
share/locale/am/LC_MESSAGES/glib20.mo
share/locale/an/LC_MESSAGES/glib20.mo
share/locale/ar/LC_MESSAGES/glib20.mo
share/locale/as/LC_MESSAGES/glib20.mo
share/locale/ast/LC_MESSAGES/glib20.mo
share/locale/az/LC_MESSAGES/glib20.mo
share/locale/be/LC_MESSAGES/glib20.mo
share/locale/be@latin/LC_MESSAGES/glib20.mo
share/locale/bg/LC_MESSAGES/glib20.mo
share/locale/bn/LC_MESSAGES/glib20.mo
share/locale/bn_IN/LC_MESSAGES/glib20.mo
share/locale/bs/LC_MESSAGES/glib20.mo
share/locale/ca/LC_MESSAGES/glib20.mo
share/locale/ca@valencia/LC_MESSAGES/glib20.mo
share/locale/cs/LC_MESSAGES/glib20.mo
share/locale/cy/LC_MESSAGES/glib20.mo
share/locale/da/LC_MESSAGES/glib20.mo
share/locale/de/LC_MESSAGES/glib20.mo
share/locale/dz/LC_MESSAGES/glib20.mo
share/locale/el/LC_MESSAGES/glib20.mo
share/locale/en@shaw/LC_MESSAGES/glib20.mo
share/locale/en_CA/LC_MESSAGES/glib20.mo
share/locale/en_GB/LC_MESSAGES/glib20.mo
share/locale/eo/LC_MESSAGES/glib20.mo
share/locale/es/LC_MESSAGES/glib20.mo
share/locale/et/LC_MESSAGES/glib20.mo
share/locale/eu/LC_MESSAGES/glib20.mo
share/locale/fa/LC_MESSAGES/glib20.mo
share/locale/fi/LC_MESSAGES/glib20.mo
share/locale/fr/LC_MESSAGES/glib20.mo
share/locale/fur/LC_MESSAGES/glib20.mo
share/locale/ga/LC_MESSAGES/glib20.mo
share/locale/gd/LC_MESSAGES/glib20.mo
share/locale/gl/LC_MESSAGES/glib20.mo
share/locale/gu/LC_MESSAGES/glib20.mo
share/locale/he/LC_MESSAGES/glib20.mo
share/locale/hi/LC_MESSAGES/glib20.mo
share/locale/hr/LC_MESSAGES/glib20.mo
share/locale/hu/LC_MESSAGES/glib20.mo
share/locale/hy/LC_MESSAGES/glib20.mo
share/locale/id/LC_MESSAGES/glib20.mo
share/locale/ie/LC_MESSAGES/glib20.mo
share/locale/is/LC_MESSAGES/glib20.mo
share/locale/it/LC_MESSAGES/glib20.mo
share/locale/ja/LC_MESSAGES/glib20.mo
share/locale/ka/LC_MESSAGES/glib20.mo
share/locale/kk/LC_MESSAGES/glib20.mo
share/locale/kn/LC_MESSAGES/glib20.mo
share/locale/ko/LC_MESSAGES/glib20.mo
share/locale/ku/LC_MESSAGES/glib20.mo
share/locale/lt/LC_MESSAGES/glib20.mo
share/locale/lv/LC_MESSAGES/glib20.mo
share/locale/mai/LC_MESSAGES/glib20.mo
share/locale/mg/LC_MESSAGES/glib20.mo
share/locale/mk/LC_MESSAGES/glib20.mo
share/locale/ml/LC_MESSAGES/glib20.mo
share/locale/mn/LC_MESSAGES/glib20.mo
share/locale/mr/LC_MESSAGES/glib20.mo
share/locale/ms/LC_MESSAGES/glib20.mo
share/locale/nb/LC_MESSAGES/glib20.mo
share/locale/nds/LC_MESSAGES/glib20.mo
share/locale/ne/LC_MESSAGES/glib20.mo
share/locale/nl/LC_MESSAGES/glib20.mo
share/locale/nn/LC_MESSAGES/glib20.mo
share/locale/oc/LC_MESSAGES/glib20.mo
share/locale/or/LC_MESSAGES/glib20.mo
share/locale/pa/LC_MESSAGES/glib20.mo
share/locale/pl/LC_MESSAGES/glib20.mo
share/locale/ps/LC_MESSAGES/glib20.mo
share/locale/pt/LC_MESSAGES/glib20.mo
share/locale/pt_BR/LC_MESSAGES/glib20.mo
share/locale/ro/LC_MESSAGES/glib20.mo
share/locale/ru/LC_MESSAGES/glib20.mo
share/locale/rw/LC_MESSAGES/glib20.mo
share/locale/si/LC_MESSAGES/glib20.mo
share/locale/sk/LC_MESSAGES/glib20.mo
share/locale/sl/LC_MESSAGES/glib20.mo
share/locale/sq/LC_MESSAGES/glib20.mo
share/locale/sr/LC_MESSAGES/glib20.mo
share/locale/sr@ije/LC_MESSAGES/glib20.mo
share/locale/sr@latin/LC_MESSAGES/glib20.mo
share/locale/sv/LC_MESSAGES/glib20.mo
share/locale/ta/LC_MESSAGES/glib20.mo
share/locale/te/LC_MESSAGES/glib20.mo
share/locale/tg/LC_MESSAGES/glib20.mo
share/locale/th/LC_MESSAGES/glib20.mo
share/locale/tl/LC_MESSAGES/glib20.mo
share/locale/tr/LC_MESSAGES/glib20.mo
share/locale/tt/LC_MESSAGES/glib20.mo
share/locale/ug/LC_MESSAGES/glib20.mo
share/locale/uk/LC_MESSAGES/glib20.mo
share/locale/vi/LC_MESSAGES/glib20.mo
share/locale/wa/LC_MESSAGES/glib20.mo
share/locale/xh/LC_MESSAGES/glib20.mo
share/locale/yi/LC_MESSAGES/glib20.mo
share/locale/zh_CN/LC_MESSAGES/glib20.mo
share/locale/zh_HK/LC_MESSAGES/glib20.mo
share/locale/zh_TW/LC_MESSAGES/glib20.mo


[FILE:631:patches/patch-gio_glib-compile-schemas.c]
--- gio/glib-compile-schemas.c.orig	2024-03-07 21:35:05 UTC
+++ gio/glib-compile-schemas.c
@@ -1232,6 +1232,7 @@ parse_state_start_schema (ParseState  *s
       return;
     }
 
+#if 0
   if (path && (g_str_has_prefix (path, "/apps/") ||
                g_str_has_prefix (path, "/desktop/") ||
                g_str_has_prefix (path, "/system/")))
@@ -1244,6 +1245,7 @@ parse_state_start_schema (ParseState  *s
       g_printerr ("%s\n", message);
       g_free (message);
     }
+#endif
 
   state->schema_state = schema_state_new (path, gettext_domain,
                                           extends, extends_name, list_of);


[FILE:232:patches/patch-gio_glocalfileinfo.c]
--- gio/glocalfileinfo.c.orig	2024-03-07 21:35:05 UTC
+++ gio/glocalfileinfo.c
@@ -24,6 +24,10 @@
 
 #include "config.h"
 
+#ifdef __sun__
+#  define	_POSIX_PTHREAD_SEMANTICS 1
+#endif
+
 #include <glib.h>
 
 #ifdef HAVE_SYS_TIME_H


[FILE:285:patches/patch-gio_gsocket.c]
--- gio/gsocket.c.orig	2024-03-07 21:35:05 UTC
+++ gio/gsocket.c
@@ -58,6 +58,10 @@
 #include <sys/uio.h>
 #endif
 
+#ifdef __sun__
+#define _XPG4_2	1
+#endif
+
 #define GOBJECT_COMPILATION
 #include "gobject/gtype-private.h" /* For _PRELUDE type define */
 #undef GOBJECT_COMPILATION


[FILE:675:patches/patch-gio_gunixmount.c]
--- gio/gunixmount.c.orig	2024-03-07 21:35:05 UTC
+++ gio/gunixmount.c
@@ -360,12 +360,17 @@ g_unix_mount_eject (GMount             *
                     gpointer             user_data)
 {
   GUnixMount *unix_mount = G_UNIX_MOUNT (mount);
+#if ! defined(__FreeBSD__) && ! defined(__DragonFly__)
   char *argv[] = {"eject", NULL, NULL};
 
   if (unix_mount->mount_path != NULL)
     argv[1] = unix_mount->mount_path;
   else
     argv[1] = unix_mount->device_path;
+#else
+   char *argv[] = {"cdcontrol", "-f", NULL, "eject", NULL};
+   argv[2] = unix_mount->device_path;
+#endif
 
   eject_unmount_do (mount, cancellable, callback, user_data, argv, "[gio] eject mount");
 }


[FILE:292:patches/patch-gio_gunixmounts.c]
--- gio/gunixmounts.c.orig	2024-03-07 21:35:05 UTC
+++ gio/gunixmounts.c
@@ -74,6 +74,10 @@ extern char* hasmntopt(const struct mnte
 #define O_BINARY 0
 #endif
 
+#ifdef __sun__
+#define mnt_opts	mnt_mntopts
+#endif
+
 #include "gunixmounts.h"
 #include "gfile.h"
 #include "gfilemonitor.h"


[FILE:593:patches/patch-gio_gunixvolume.c]
--- gio/gunixvolume.c.orig	2024-03-07 21:35:05 UTC
+++ gio/gunixvolume.c
@@ -369,9 +369,14 @@ g_unix_volume_eject (GVolume
                      gpointer             user_data)
 {
   GUnixVolume *unix_volume = G_UNIX_VOLUME (volume);
+#if defined(__FreeBSD__) || defined(__DragonFly__)
+  const gchar *argv[] = {"cdcontrol", "-f", NULL, "eject", NULL};
+  argv[2] = unix_volume->device_path;
+#else
   const gchar *argv[] = { "eject", NULL, NULL };
 
   argv[1] = unix_volume->device_path;
+#endif
 
   eject_mount_do (volume, cancellable, callback, user_data, argv, "[gio] eject volume");
 }


[FILE:452:patches/patch-gio_xdgmime_xdgmime.c]
The /usr/local value is replaced by post-patch target

--- gio/xdgmime/xdgmime.c.orig	2024-03-07 21:35:05 UTC
+++ gio/xdgmime/xdgmime.c
@@ -228,7 +228,7 @@ xdg_init_dirs (void)
   xdg_data_dirs = getenv ("XDG_DATA_DIRS");
 
   if (xdg_data_dirs == NULL)
-    xdg_data_dirs = "/usr/local/share/:/usr/share/";
+    xdg_data_dirs = "/usr/local/share/";
 
   /* Work out how many dirs we’re dealing with. */
   if (xdg_data_home != NULL || home != NULL)


[FILE:766:patches/patch-gio_xdgmime_xdgmimecache.h]
--- gio/xdgmime/xdgmimecache.h.orig	2024-03-07 21:35:05 UTC
+++ gio/xdgmime/xdgmimecache.h
@@ -30,6 +30,9 @@ typedef struct _XdgMimeCache XdgMimeCach
 #define _xdg_mime_cache_get_icon                      XDG_RESERVED_ENTRY(cache_get_icon)
 #define _xdg_mime_cache_get_generic_icon              XDG_RESERVED_ENTRY(cache_get_generic_icon)
 #define _xdg_mime_cache_glob_dump                     XDG_RESERVED_ENTRY(cache_glob_dump)
+#define _xdg_mime_cache_is_valid_mime_type            XDG_RESERVED_ENTRY(cache_is_valid_mime_type)
+#define _xdg_mime_cache_mime_type_equal               XDG_RESERVED_ENTRY(cache_mime_type_equal)
+#define _xdg_mime_cache_media_type_equal              XDG_RESERVED_ENTRY(cache_media_type_equal)
 #endif
 
 extern XdgMimeCache **_caches;


[FILE:386:patches/patch-glib_fix_hidden]
--- glib/gmem.c.orig	2024-03-07 21:35:05 UTC
+++ glib/gmem.c
@@ -38,8 +38,10 @@
 
 #if defined(HAVE_MEMALIGN) || defined(HAVE__ALIGNED_MALLOC)
 /* Required for _aligned_malloc() and _aligned_free() on Windows */
+#if !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
+#endif
 
 #ifdef HAVE__ALIGNED_MALLOC
 /* _aligned_malloc() takes parameters of aligned_malloc() in reverse order */


[FILE:352:patches/patch-glib_gcharset.c]
--- glib/gcharset.c.orig	2024-03-07 21:35:05 UTC
+++ glib/gcharset.c
@@ -288,6 +288,11 @@ _g_get_ctype_charset (const char **chars
 
 #ifdef HAVE_LANGINFO_CODESET
   raw = nl_langinfo (CODESET);
+# if defined __NetBSD__
+  if (strcmp(raw, "646") == 0) {
+     raw = "ASCII";
+  }
+# endif
 #else
   G_LOCK (aliases);
   raw = _g_locale_charset_raw ();


[FILE:608:patches/patch-glib_gconvert.c]
--- glib/gconvert.c.orig	2024-03-07 21:35:05 UTC
+++ glib/gconvert.c
@@ -126,6 +126,18 @@ g_iconv_open (const gchar  *to_codeset,
 	      const gchar  *from_codeset)
 {
   iconv_t cd;
+#if defined __NetBSD__
+  {
+    const char * nbsd_new_codeset;
+    const char * nbsd_old_codeset;
+
+    nbsd_new_codeset = (strcmp(to_codeset, "646")) ? to_codeset : "ASCII";
+    nbsd_old_codeset = (strcmp(from_codeset, "646")) ? from_codeset : "ASCII";
+
+   if (try_conversion (nbsd_new_codeset, nbsd_old_codeset, &cd))
+      goto out;
+  }
+#endif
   
   if (!try_conversion (to_codeset, from_codeset, &cd))
     {


[FILE:228:patches/patch-glib_giounix.c]
--- glib/giounix.c.orig	2024-03-07 21:35:05 UTC
+++ glib/giounix.c
@@ -33,7 +33,9 @@
 
 #include "config.h"
 
+#ifndef __sun__
 #define _POSIX_SOURCE		/* for SSIZE_MAX */
+#endif
 
 #include <sys/types.h>
 #include <sys/stat.h>


[FILE:273:patches/patch-glib_glib-unix.c]
--- glib/glib-unix.c.orig	2024-03-07 21:35:05 UTC
+++ glib/glib-unix.c
@@ -48,6 +48,9 @@
 #include <stdlib.h>   /* for fdwalk */
 #include <string.h>
 #include <sys/types.h>
+#ifdef __sun
+#define _POSIX_PTHREAD_SEMANTICS 1
+#endif
 #include <pwd.h>
 #include <unistd.h>
 


[FILE:854:patches/patch-glib_gutils.c]
/usr/local value is replaced by post-patch target

--- glib/gutils.c.orig	2024-03-07 21:35:05 UTC
+++ glib/gutils.c
@@ -30,6 +30,10 @@
 
 #include "config.h"
 
+#ifdef __sun__
+#  define	_POSIX_PTHREAD_SEMANTICS 1
+#  undef	HAVE_SYS_AUXV_H
+#endif
 #include "gutils.h"
 #include "gutilsprivate.h"
 
@@ -2695,7 +2699,7 @@ g_build_system_data_dirs (void)
    */
 #ifndef G_OS_WIN32
   if (!data_dirs || !data_dirs[0])
-    data_dirs = "/usr/local/share/:/usr/share/";
+    data_dirs = "/usr/local/share/";
 
   data_dir_vector = g_strsplit (data_dirs, G_SEARCHPATH_SEPARATOR_S, 0);
 #else
@@ -2792,7 +2796,7 @@ g_build_system_config_dirs (void)
     }
 #else
   if (!conf_dirs || !conf_dirs[0])
-    conf_dirs = "/etc/xdg";
+    conf_dirs = "/usr/local/etc/xdg:/etc/xdg";
 
   conf_dir_vector = g_strsplit (conf_dirs, G_SEARCHPATH_SEPARATOR_S, 0);
 #endif


[FILE:524:patches/patch-glib_libcharset_localcharset.c]
--- glib/libcharset/localcharset.c.orig	2024-03-07 21:35:05 UTC
+++ glib/libcharset/localcharset.c
@@ -287,6 +287,12 @@ _g_locale_charset_raw (void)
 
   /* Most systems support nl_langinfo (CODESET) nowadays.  */
   codeset = nl_langinfo (CODESET);
+# if defined(__NetBSD__)
+  /* If "646" is returned on NetBSD iconv cannot convert it so override. */
+  if (strcmp(codeset, "646") == 0) {
+     codeset = "ASCII";
+  }
+# endif
 
 #  ifdef __CYGWIN__
   /* Cygwin 2006 does not have locales.  nl_langinfo (CODESET) always


[FILE:295:patches/patch-glib_tests_include.c]
--- glib/tests/include.c.orig	2024-03-07 21:35:05 UTC
+++ glib/tests/include.c
@@ -1,8 +1,11 @@
 /* Test case for bug 659866 */
 
+#ifndef __sun
 #define _POSIX_C_SOURCE 199309L
 #undef _GNU_SOURCE
 #undef _XOPEN_SOURCE
+#endif
+#include <sys/types.h>
 #include <pthread.h>
 #include <glib.h>
 


[FILE:287:patches/patch-glib_tests_utils.c]
--- glib/tests/utils.c.orig	2024-03-07 21:35:05 UTC
+++ glib/tests/utils.c
@@ -869,7 +869,7 @@ test_xdg_dirs (void)
 
   xdg = (gchar *)g_getenv ("XDG_CONFIG_DIRS");
   if (!xdg)
-    xdg = "/etc/xdg";
+    xdg = "/usr/local/etc/xdg:/etc/xdg";
 
   dirs = g_get_system_config_dirs ();
 


[FILE:474:patches/patch-gmodule_gmodule-dl.c]
--- gmodule/gmodule-dl.c.orig	2024-03-07 21:35:05 UTC
+++ gmodule/gmodule-dl.c
@@ -153,6 +153,7 @@ _g_module_open (const gchar *file_name,
 static gpointer
 _g_module_self (void)
 {
+#if ! defined(__FreeBSD__) && ! defined(__DragonFly__)
   gpointer handle;
   
   /* to query symbols from the program itself, special link options
@@ -177,6 +178,9 @@ _g_module_self (void)
   unlock_dlerror ();
   
   return handle;
+#else
+  return RTLD_DEFAULT;
+#endif
 }
 
 static void


[FILE:877:patches/patch-meson.build]
--- meson.build.orig	2024-03-07 21:35:05 UTC
+++ meson.build
@@ -2236,7 +2236,7 @@ if libintl.found() and libintl.type_name
   #
   # Meson's builtin dependency lookup as of 0.60.0 doesn't check for
   # pthread, so we do this manually here.
-  if cc.has_function('ngettext', dependencies : libintl, prefix: libintl_prefix)
+  if cc.has_function('ngettext', dependencies : libintl, prefix: libintl_prefix) and host_system != 'sunos'
     libintl_deps += [libintl]
   else
     libintl_iconv = cc.find_library('iconv', required : false)
@@ -2441,8 +2441,7 @@ env_program = find_program('env', requir
 
 # FIXME: How to detect Solaris? https://github.com/mesonbuild/meson/issues/1578
 if host_system == 'sunos'
-  glib_conf.set('_XOPEN_SOURCE_EXTENDED', 1)
-  glib_conf.set('_XOPEN_SOURCE', 2)
+  glib_conf.set('_XOPEN_SOURCE', 600)
   glib_conf.set('__EXTENSIONS__',1)
 endif
 


[FILE:532:files/special.mk]
glib_MAN=	gtester.1 gtester-report.1 glib-gettextize.1
gio_MAN=	gdbus.1 gsettings.1 gio-querymodules.1 \
		glib-compile-schemas.1 gapplication.1 \
		glib-compile-resources.1 gresource.1 gdbus-codegen.1
gobject_MAN=	glib-genmarshal.1 glib-mkenums.1 gobject-query.1
pyscripts=	gio/tests/gengiotypefuncs.py \
		glib/update-gtranslit.py \


POST_PLIST_TARGET=	my-autolist

my-autolist:
	(cd ${STAGEDIR}${PREFIX} && ${FIND} share/glib-2.0/codegen \
	\( -type f -o -type l \) 2>/dev/null | ${SORT}) \
	>> ${WRKDIR}/.manifest.single.mktmp


[FILE:877:darwin/patch-meson.build]
--- meson.build.orig	2024-03-07 21:35:05 UTC
+++ meson.build
@@ -2236,7 +2236,7 @@ if libintl.found() and libintl.type_name
   #
   # Meson's builtin dependency lookup as of 0.60.0 doesn't check for
   # pthread, so we do this manually here.
-  if cc.has_function('ngettext', dependencies : libintl, prefix: libintl_prefix)
+  if cc.has_function('ngettext', dependencies : libintl, prefix: libintl_prefix) and host_system != 'sunos'
     libintl_deps += [libintl]
   else
     libintl_iconv = cc.find_library('iconv', required : false)
@@ -2441,8 +2441,7 @@ env_program = find_program('env', requir
 
 # FIXME: How to detect Solaris? https://github.com/mesonbuild/meson/issues/1578
 if host_system == 'sunos'
-  glib_conf.set('_XOPEN_SOURCE_EXTENDED', 1)
-  glib_conf.set('_XOPEN_SOURCE', 2)
+  glib_conf.set('_XOPEN_SOURCE', 600)
   glib_conf.set('__EXTENSIONS__',1)
 endif
 

