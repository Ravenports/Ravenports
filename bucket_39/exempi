# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		exempi
VERSION=		2.6.2
REVISION=		1
KEYWORDS=		textproc
VARIANTS=		standard
SDESC[standard]=	Parse Extensible Metadata Platform information
HOMEPAGE=		https://wiki.freedesktop.org/libopenraw/Exempi/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://libopenraw.freedesktop.org/download/
DISTFILE[1]=		exempi-2.6.2.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	boost-libraries:rest:python_default

USES=			cpe gmake libtool zlib expat

LICENSE=		BSD3CLAUSE:single
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

CPE_VENDOR=		exempi_project
FPC_EQUIVALENT=		textproc/exempi

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-unittest=no

INSTALL_TARGET=		install-strip
SOVERSION=		8.1.2

[FILE:115:descriptions/desc.single]
Exempi is an implementation of XMP (Extensible Metadata Platform) and is 
based on a port Adobe's XMP SDK to *nix.


[FILE:99:distinfo]
4d17d4c93df2a95da3e3172c45b7a5bf317dd31dafd1c7a340169728c7089d1d      3709476 exempi-2.6.2.tar.bz2


[FILE:223:manifests/plist.single]
bin/exempi
include/exempi-2.0/exempi/
 xmp++.hpp
 xmp.h
 xmpconsts.h
 xmperrors.h
lib/
 libexempi.a
 libexempi.so
 libexempi.so.%%SOMAJOR%%
 libexempi.so.%%SOVERSION%%
lib/pkgconfig/exempi-2.0.pc
share/man/man1/exempi.1.gz


[FILE:1318:patches/patch-samples_source_common_DumpFile.cpp]
--- samples/source/common/DumpFile.cpp.orig	2022-06-25 21:43:18 UTC
+++ samples/source/common/DumpFile.cpp
@@ -2476,7 +2476,7 @@ DumpISOBoxes(LFA_FileRef file, XMP_Uns32
 					DumpTIFF(tiffContent, tiffLength, offset, "HEIF Exif", "HEIF:Exif");
 					LFA_Seek(file, keep, SEEK_SET, &ok);
 					assertMsg("seek failed", ok);
-					exif_item_id = NULL;
+					exif_item_id = 0;
 				}
 			}
 			//Get the data for xmp - using value from mime_item_id
@@ -2494,7 +2494,7 @@ DumpISOBoxes(LFA_FileRef file, XMP_Uns32
 					DumpXMP(xmpContent, xmpLength, offset, "XMP");
 					LFA_Seek(file, keep, SEEK_SET, &ok);
 					assertMsg("seek failed", ok);
-					mime_item_id = NULL;
+					mime_item_id = 0;
 				}
 			}
 			break;
@@ -2646,7 +2646,7 @@ DumpISOBoxes(LFA_FileRef file, XMP_Uns32
 					DumpTIFF(tiffContent, tiffLength, offset, "HEIF Exif", "HEIF:Exif");
 					LFA_Seek(file, keep, SEEK_SET, &ok);
 					assertMsg("seek failed", ok);
-					exif_item_id = NULL;
+					exif_item_id = 0;
 				}
 			}
 			//Get the data for xmp - using value from mime_item_id
@@ -2664,7 +2664,7 @@ DumpISOBoxes(LFA_FileRef file, XMP_Uns32
 					DumpXMP(xmpContent, xmpLength, offset, "XMP");
 					LFA_Seek(file, keep, SEEK_SET, &ok);
 					assertMsg("seek failed", ok);
-					mime_item_id = NULL;
+					mime_item_id = 0;
 				}
 			}
 


[FILE:290:files/special.mk]
# Strip -ldl from all platforms except linux

.if "${OPSYS}" != "Linux"
_USES_configure+= 452:remove_libdl
.endif

remove_libdl:
	@echo "BSD: Remove -ldl and -lrt linkage"
	${REINPLACE_CMD} -e '/ -lrt/d; s| -ldl||' \
		${WRKSRC}/samples/source/Makefile.in \
		${WRKSRC}/exempi/Makefile.in	

