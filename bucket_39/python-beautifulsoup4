# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-beautifulsoup4
VERSION=		4.9.0
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		Screen-scraping library (PY37)
SDESC[py38]=		Screen-scraping library (PY38)
HOMEPAGE=		https://www.crummy.com/software/BeautifulSoup/bs4/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/b/beautifulsoup4
DISTFILE[1]=		beautifulsoup4-4.9.0.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		beautifulsoup4-4.9.0

GENERATED=		yes

[PY37].BUILDRUN_DEPENDS_ON=		python-soupsieve:single:py37
[PY37].USES_ON=				python:py37

[PY38].BUILDRUN_DEPENDS_ON=		python-soupsieve:single:py38
[PY38].USES_ON=				python:py38

[FILE:2186:descriptions/desc.single]
Beautiful Soup is a library that makes it easy to scrape information
from web pages. It sits atop an HTML or XML parser, providing Pythonic
idioms for iterating, searching, and modifying the parse tree.

# Quick start

```
>>> from bs4 import BeautifulSoup
>>> soup = BeautifulSoup("<p>Some<b>bad<i>HTML")
>>> print soup.prettify()
<html>
<body>
<p>
Some
<b>
bad
<i>
HTML
</i>
</b>
</p>
</body>
</html>
>>> soup.find(text="bad")
u'bad'
>>> soup.i
<i>HTML</i>
#
>>> soup = BeautifulSoup("<tag1>Some<tag2/>bad<tag3>XML", "xml")
#
>>> print soup.prettify()
<?xml version="1.0" encoding="utf-8">
<tag1>
Some
<tag2 />
bad
<tag3>
XML
</tag3>
</tag1>
```

To go beyond the basics, [comprehensive documentation is available].

# Links

* [Homepage]
* [Documentation]
* [Discussion group]
* [Development]
* [Bug tracker]
* [Complete changelog]

# Note on Python 2 sunsetting

Since 2012, Beautiful Soup has been developed as a Python 2 library
which is automatically converted to Python 3 code as necessary. This
makes it impossible to take advantage of some features of Python
3.

For this reason, I plan to discontinue Beautiful Soup's Python 2
support at some point after December 31, 2020: one year after the
sunset date for Python 2 itself. Beyond that point, new Beautiful Soup
development will exclusively target Python 3. Of course, older
releases of Beautiful Soup, which support both versions, will continue
to be available.

# Supporting the project

If you use Beautiful Soup as part of your professional work, please
consider a
[Tidelift subscription].
This will support many of the free software projects your organization
depends on, not just Beautiful Soup.

If you use Beautiful Soup for personal projects, the best way to say
thank you is to read
[Tool Safety], a zine I
wrote about what Beautiful Soup has taught me about software
development.

# Building the documentation

The bs4/doc/ directory contains full documentation in Sphinx
format. Run `make html` in that directory to create HTML
documentation.

# Running the unit tests

Beautiful Soup supports unit test discovery from the project root
directory:

```
$ nosetests
`

`
$ python -m unittest discover -s bs4
```



[FILE:106:distinfo]
594ca51a10d2b3443cbac41214e12dbb2a1cd57e1a7344659849e2e20ba6a8d8       368809 beautifulsoup4-4.9.0.tar.gz

