# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gnat-util
VERSION=		9.2.0
KEYWORDS=		lang ada
VARIANTS=		standard
SDESC[standard]=	Library used to build GNAT tools such as ASIS
HOMEPAGE=		http://libre.adacore.com
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main extra
SITES[extra]=		https://raw.githubusercontent.com/gcc-mirror/gcc/5dc190e/gcc/ada/
SITES[main]=		GCC/releases/gcc-9.2.0
DISTFILE[1]=		gcc-9.2.0.tar.xz:main
DISTFILE[2]=		repinfo-input.ads:extra
DISTFILE[3]=		repinfo-input.adb:extra
DF_INDEX=		1 2 3
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

DISTNAME=		gcc-9.2.0
EXTRACT_ONLY=		1

LICENSE=		GPLv3+:single LGPL3+:single GPLv3RLE+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
			LGPL3+:{{WRKSRC}}/COPYING3.LIB
			GPLv3RLE+:{{WRKSRC}}/COPYING.RUNTIME
LICENSE_SCHEME=		multi

PATCH_WRKSRC=		{{BUILD_WRKSRC}}

BUILD_WRKSRC=		{{WRKDIR}}/gnat-util
MAKE_ENV=		MAJEOBJDIR={{WRKSRC}}/obj

INSTALL_WRKSRC=		{{BUILD_WRKSRC}}

post-install:
	# impunit is needed for GPS menus, just provide the source files
	${INSTALL_DATA} ${WRKSRC}/gcc/ada/impunit.* \
		${STAGEDIR}${PREFIX}/include/gnat-util
	# gnat_ugn.texi is used to generate gnat_switches.py for GPS
	@${MKDIR} ${STAGEDIR}${PREFIX}/share/gnat-util
	${INSTALL_DATA} ${WRKSRC}/gcc/ada/gnat_ugn.texi \
		${STAGEDIR}${PREFIX}/share/gnat-util/

post-extract:
	${MKDIR} ${BUILD_WRKSRC}/obj
.for F in Makefile gnat_util.gpr sdefault_adb.gnat-util osint_scars.c
	${CP} ${FILESDIR}/${F} ${BUILD_WRKSRC}/
.endfor
	(cd ${WRKSRC}/gcc/ada && \
		${CP} ${GNAT_SRCS} ${BUILD_WRKSRC}/)
	${CP} ${DISTDIR}/repinfo-input.* ${BUILD_WRKSRC}/
	# construct license terms
	${HEAD} -n 19 ${WRKSRC}/gcc/gcc.h > ${WRKDIR}/TERMS
	${HEAD} -n 31 ${WRKSRC}/gcc/ada/adaint.h >> ${WRKDIR}/TERMS
	${HEAD} -n 18 ${WRKSRC}/libiberty/hex.c >> ${WRKDIR}/TERMS

[FILE:490:descriptions/desc.single]
Gnat_Util is a library uniting a number of GNAT sources that are used by
different tools. At the moment Gnat_Util provides GNAT sources needed by
ASIS, GNATCOLL and Gprbuild. Its main purpose is allowing to simultaneously
use tools like ASIS and GNATCOLL (and other ones based on GNAT sources, if
they are to come), which would normally cause name conflicts between the
same GNAT sources that they use. Building both of them using same set of
sources that is Gnat_Util solves this problem.


[FILE:287:distinfo]
ea6ef08f121239da5695f76c9b33637a118dcf63e24164422231917fa61fb206     70607648 gcc-9.2.0.tar.xz
2df8515e75c2222f00e3324896665be9a241665cfb859611198f3f1abeb1647a         4613 repinfo-input.ads
82d9d84e39ef9ce6bfe0ed2dbcd1f4e209326972e727b3796ba141265055f7ac        42606 repinfo-input.adb


[FILE:2327:manifests/plist.single]
include/gnat-util/
 ali-util.adb
 ali-util.ads
 ali.adb
 ali.ads
 alloc.ads
 aspects.adb
 aspects.ads
 atree.adb
 atree.ads
 binderr.adb
 binderr.ads
 butil.adb
 butil.ads
 casing.adb
 casing.ads
 csets.adb
 csets.ads
 debug.adb
 debug.ads
 einfo.adb
 einfo.ads
 elists.adb
 elists.ads
 err_vars.ads
 errout.adb
 errout.ads
 erroutc.adb
 erroutc.ads
 errutil.adb
 errutil.ads
 fmap.adb
 fmap.ads
 fname-uf.adb
 fname-uf.ads
 fname.adb
 fname.ads
 get_scos.adb
 get_scos.ads
 gnatvsn.adb
 gnatvsn.ads
 hostparm.ads
 impunit.adb
 impunit.ads
 krunch.adb
 krunch.ads
 lib-list.adb
 lib-sort.adb
 lib.adb
 lib.ads
 namet.adb
 namet.ads
 nlists.adb
 nlists.ads
 opt.adb
 opt.ads
 osint.adb
 osint.ads
 output.adb
 output.ads
 put_scos.adb
 put_scos.ads
 repinfo-input.adb
 repinfo-input.ads
 repinfo.adb
 repinfo.ads
 restrict.adb
 restrict.ads
 rident.ads
 scans.adb
 scans.ads
 scng.adb
 scng.ads
 scos.adb
 scos.ads
 sdefault.adb
 sdefault.ads
 sem_aux.adb
 sem_aux.ads
 sinfo.adb
 sinfo.ads
 sinput-c.adb
 sinput-c.ads
 sinput.adb
 sinput.ads
 snames.adb
 snames.ads
 stand.adb
 stand.ads
 stringt.adb
 stringt.ads
 styleg.adb
 styleg.ads
 stylesw.adb
 stylesw.ads
 switch-m.adb
 switch-m.ads
 switch.adb
 switch.ads
 table.adb
 table.ads
 targparm.adb
 targparm.ads
 tempdir.adb
 tempdir.ads
 tree_in.adb
 tree_in.ads
 tree_io.adb
 tree_io.ads
 types.adb
 types.ads
 uintp.adb
 uintp.ads
 uname.adb
 uname.ads
 urealp.adb
 urealp.ads
 widechar.adb
 widechar.ads
 xsnamest.adb
 xutil.adb
 xutil.ads
lib/gnat/gnat_util.gpr
lib/gnat-util/
 ali-util.ali
 ali.ali
 alloc.ali
 aspects.ali
 atree.ali
 binderr.ali
 butil.ali
 casing.ali
 csets.ali
 debug.ali
 einfo.ali
 elists.ali
 err_vars.ali
 errout.ali
 erroutc.ali
 errutil.ali
 fmap.ali
 fname-uf.ali
 fname.ali
 get_scos.ali
 gnatvsn.ali
 hostparm.ali
 krunch.ali
 lib.ali
 libgnat-util.a
 namet.ali
 nlists.ali
 opt.ali
 osint.ali
 output.ali
 put_scos.ali
 repinfo-input.ali
 repinfo.ali
 restrict.ali
 rident.ali
 scans.ali
 scng.ali
 scos.ali
 sdefault.ali
 sem_aux.ali
 sinfo.ali
 sinput-c.ali
 sinput.ali
 snames.ali
 stand.ali
 stringt.ali
 styleg.ali
 stylesw.ali
 switch-m.ali
 switch.ali
 table.ali
 targparm.ali
 tempdir.ali
 tree_in.ali
 tree_io.ali
 types.ali
 uintp.ali
 uname.ali
 urealp.ali
 widechar.ali
 xsnamest.ali
 xutil.ali
share/gnat-util/gnat_ugn.texi


[FILE:461:patches/patch-alloc.ads]
--- alloc.ads.orig
+++ alloc.ads
@@ -116,6 +116,9 @@ package Alloc is
    Rep_Table_Initial                : constant := 1000;       -- Repinfo
    Rep_Table_Increment              : constant := 200;
 
+   Rep_JSON_Table_Initial           : constant := 10;          -- Repinfo
+   Rep_JSON_Table_Increment         : constant := 200;
+
    Scope_Stack_Initial              : constant := 10;         -- Sem
    Scope_Stack_Increment            : constant := 200;


[FILE:1185:patches/patch-gnatvsn.adb]
--- gnatvsn.adb.orig	2013-07-16 03:35:21.000000000 +0000
+++ gnatvsn.adb
@@ -53,32 +53,13 @@ package body Gnatvsn is
         " FOR A PARTICULAR PURPOSE.";
    end Gnat_Free_Software;
 
-   type char_array is array (Natural range <>) of aliased Character;
-   Version_String : char_array (0 .. Ver_Len_Max - 1);
-   --  Import the C string defined in the (language-independent) source file
-   --  version.c using the zero-based convention of the C language.
-   --  The size is not the real one, which does not matter since we will
-   --  check for the nul character in Gnat_Version_String.
-   pragma Import (C, Version_String, "version_string");
-
    -------------------------
    -- Gnat_Version_String --
    -------------------------
 
    function Gnat_Version_String return String is
-      S : String (1 .. Ver_Len_Max);
-      Pos : Natural := 0;
    begin
-      loop
-         exit when Version_String (Pos) = ASCII.NUL;
-
-         S (Pos + 1) := Version_String (Pos);
-         Pos := Pos + 1;
-
-         exit when Pos = Ver_Len_Max;
-      end loop;
-
-      return S (1 .. Pos);
+      Return Gnat_Static_Version_String;
    end Gnat_Version_String;
 
 end Gnatvsn;


[FILE:551:patches/patch-snames.ads-tmpl]
--- snames.ads-tmpl.orig
+++ snames.ads-tmpl
@@ -1511,6 +1511,11 @@ package Snames is
    Name_Runtime_Library_Dir              : constant Name_Id := N + $;
    Name_Runtime_Source_Dir               : constant Name_Id := N + $;
 
+   --  Additional names used by the Repinfo unit
+
+   Name_Discriminant                     : constant Name_Id := N + $;
+   Name_Operands                         : constant Name_Id := N + $;
+
    --  Other miscellaneous names used in front end
 
    Name_Unaligned_Valid                  : constant Name_Id := N + $;


[FILE:2068:files/Makefile]
# To avoid a cirular dependency with GPRBuild, this custom BSD Makefile is
# used instead of the provided asis.gpr file.

CP=		cp -p
MKDIR=		mkdir -p
SRC=		gen_src
ADA_FLAGS=	-O2 -gnatn -gnatws -gnat05
C_FLAGS=	-O2
ADB_SRCS!=	cd ${.CURDIR} && ls *.adb | sort -r
GEN_SRCS=	sdefault.adb snames.adb xsnamest.adb
ADS_SRCS=	rident.ads hostparm.ads err_vars.ads alloc.ads
C_SRCS=		link.c osint_scars.c
LIB_SRCS+=	${C_SRCS} ${GEN_SRCS} ${ADS_SRCS} ${ADB_SRCS:Nlib-*.adb}
LIB_OBJS=	${LIB_SRCS:R:S/$/.o/}

.if ${OPSYS} == Linux || ${OPSYS} == SunOS || ${OPSYS} == Darwin
TSORT=		tsort 2>/dev/null
.else
TSORT=		tsort -q
.endif

.PHONY: all
.PHONY: generate_sources
.PHONY: libgnat-util.a
.PHONY: install
.PHONY: clean

all: libgnat-util.a

generate_sources:
	(cd ${.CURDIR} && ${MKDIR} ${SRC} lib)
	${CP} ${.CURDIR}/sdefault_adb.gnat-util ${.CURDIR}/${SRC}/sdefault.adb
	(cd ${.CURDIR} && ${CP} \
	    xsnamest.adb xutil.* snames.adb-tmpl snames.ads-tmpl \
	    snames.h-tmpl ${SRC})
	(cd ${.CURDIR}/${SRC} && \
	   gnatmake -gnatf -gnatwae -gnatyg -gnatyS xsnamest && \
	   ./xsnamest && mv snames.ns snames.ads && mv snames.nb snames.adb)

${LIB_OBJS}: generate_sources

install:
	${MKDIR} ${DESTDIR}${PREFIX}/lib/gnat
	${MKDIR} ${DESTDIR}${PREFIX}/lib/gnat-util
	${MKDIR} ${DESTDIR}${PREFIX}/include/gnat-util

	${BSD_INSTALL_DATA} ../gnat_util.gpr ${DESTDIR}${PREFIX}/lib/gnat
	find ../lib -type f -exec $(BSD_INSTALL_DATA) {} \
		${DESTDIR}${PREFIX}/lib/gnat-util \;
	find ../* -name \*\.ad\[bs\] -exec $(BSD_INSTALL_DATA) {} \
		${DESTDIR}${PREFIX}/include/gnat-util \;

clean:
	rm -f ${.OBJDIR}/*
	rm -f ${.CURDIR}/lib/*
	rm -rf ${.CURDIR}/${SRC}

.SUFFIXES: .adb .ads .c .o

.adb.o:
	ada ${ADA_FLAGS} -I../ -I../${SRC} -c ../${.TARGET:R}.adb

.c.o:
	${CC} ${C_FLAGS} -c ../${.TARGET:R}.c

${ADS_SRCS:R:S/$/.o/}:
	ada ${ADA_FLAGS} -I../${SRC} -c ../${.TARGET:R}.ads

${GEN_SRCS:R:S/$/.o/}:
	ada ${ADA_FLAGS} -I../ -c ../${SRC}/${.TARGET:R}.adb

libgnat-util.a: ${LIB_OBJS}
	ar cq ${.TARGET} `lorder ${LIB_OBJS} | ${TSORT}`
	ranlib ${.TARGET}
	mv ${.TARGET} *.ali ../lib


[FILE:235:files/gnat_util.gpr]
project Gnat_Util is
   for Languages use ("ada", "C");
   for Library_Name use "gnat-util";
   for Library_Dir use "../gnat-util";
   for Source_Dirs use ("../../include/gnat-util");
   for Externally_Built use "true";
end Gnat_Util;


[FILE:228:files/osint_scars.c]
/* Dummy version of set_std_prefix (needed by osint.adb) */

void
set_std_prefix (char *path, int len)
{
}

/* Dummy version of update_path (needed by osint.adb) */

char *
update_path (char *path, char *key)
{
  return path;
}


[FILE:691:files/sdefault_adb.gnat-util]
--  This is a dummy version of the body of Sdefault, used by gnat-util. It gets
--  copied to sdefault.adb by custom makefile that comes with port.

package body Sdefault is

   Target : constant String_Ptr := new String'("no target");

   function Include_Dir_Default_Name return String_Ptr is
   begin
      return null;
   end Include_Dir_Default_Name;

   function Object_Dir_Default_Name return String_Ptr is
   begin
      return null;
   end Object_Dir_Default_Name;

   function Target_Name return String_Ptr is
   begin
      return Target;
   end Target_Name;

   function Search_Dir_Prefix return String_Ptr is
   begin
      return null;
   end Search_Dir_Prefix;

end Sdefault;


[FILE:1811:files/special.mk]
# From gnat_util-gpl-2018-20180524, file: MANIFEST.gnat_util (sorted)
# minus *.gpr, sdefault_adb.gnat_util, 	gnat_util_dummies.c
GNAT_SRCS= \
	ali-util.adb \
	ali-util.ads \
	ali.adb \
	ali.ads \
	alloc.ads \
	aspects.adb \
	aspects.ads \
	atree.adb \
	atree.ads \
	binderr.adb \
	binderr.ads \
	butil.adb \
	butil.ads \
	casing.adb \
	casing.ads \
	csets.adb \
	csets.ads \
	debug.adb \
	debug.ads \
	einfo.adb \
	einfo.ads \
	elists.adb \
	elists.ads \
	err_vars.ads \
	errout.adb \
	errout.ads \
	erroutc.adb \
	erroutc.ads \
	errutil.adb \
	errutil.ads \
	fmap.adb \
	fmap.ads \
	fname-uf.adb \
	fname-uf.ads \
	fname.adb \
	fname.ads \
	get_scos.adb \
	get_scos.ads \
	gnatvsn.adb \
	gnatvsn.ads \
	hostparm.ads \
	krunch.adb \
	krunch.ads \
	lib-list.adb \
	lib-sort.adb \
	lib.adb \
	lib.ads \
	link.c \
	namet.adb \
	namet.ads \
	nlists.adb \
	nlists.ads \
	opt.adb \
	opt.ads \
	osint.adb \
	osint.ads \
	output.adb \
	output.ads \
	put_scos.adb \
	put_scos.ads \
	repinfo.adb \
	repinfo.ads \
	restrict.adb \
	restrict.ads \
	rident.ads \
	scans.adb \
	scans.ads \
	scng.adb \
	scng.ads \
	scos.adb \
	scos.ads \
	sdefault.ads \
	sem_aux.adb \
	sem_aux.ads \
	sinfo.adb \
	sinfo.ads \
	sinput-c.adb \
	sinput-c.ads \
	sinput.adb \
	sinput.ads \
	snames.adb-tmpl \
	snames.ads-tmpl \
	snames.h-tmpl \
	stand.adb \
	stand.ads \
	stringt.adb \
	stringt.ads \
	styleg.adb \
	styleg.ads \
	stylesw.adb \
	stylesw.ads \
	switch-m.adb \
	switch-m.ads \
	switch.adb \
	switch.ads \
	table.adb \
	table.ads \
	targparm.adb \
	targparm.ads \
	tempdir.adb \
	tempdir.ads \
	tree_in.adb \
	tree_in.ads \
	tree_io.adb \
	tree_io.ads \
	types.adb \
	types.ads \
	uintp.adb \
	uintp.ads \
	uname.adb \
	uname.ads \
	urealp.adb \
	urealp.ads \
	widechar.adb \
	widechar.ads \
	xsnamest.adb \
	xutil.adb \
	xutil.ads

