# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-dnspython
VERSION=		2.4.2
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		DNS toolkit for Python (3.11)
SDESC[v12]=		DNS toolkit for Python (3.12)
HOMEPAGE=		https://www.dnspython.org
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/f6/b4/0a9bee52c50f226a3cbfb54263d02bb421c7f2adc136520729c2c689c1e5
DISTFILE[1]=		dnspython-2.4.2-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		dnspython-2.4.2.dist-info

GENERATED=		yes

[PY311].USES_ON=			python:v11,wheel

[PY312].USES_ON=			python:v12,wheel

[FILE:2877:descriptions/desc.single]
# dnspython

[Build Status]
[Documentation Status]
[PyPI version]
[![License: ISC]](https://opensource.org/licenses/ISC)
[Coverage]
[![Code style: black]](https://github.com/psf/black)

## INTRODUCTION

dnspython is a DNS toolkit for Python. It supports almost all record types.
It
can be used for queries, zone transfers, and dynamic updates. It supports
TSIG
authenticated messages and EDNS0.

dnspython provides both high and low level access to DNS. The high level
classes
perform queries for data of a given name, type, and class, and return an
answer
set. The low level classes allow direct manipulation of DNS zones,
messages,
names, and records.

To see a few of the ways dnspython can be used, look in the `examples/`
directory.

dnspython is a utility to work with DNS, `/etc/hosts` is thus not used. For
simple forward DNS lookups, it's better to use `socket.getaddrinfo()` or
`socket.gethostbyname()`.

dnspython originated at Nominum where it was developed
to facilitate the testing of DNS software.

## ABOUT THIS RELEASE

This is dnspython 2.4.2.
Please read
[What's New] for
information about the changes in this release.

## INSTALLATION

* Many distributions have dnspython packaged for you, so you should
  check there first.
* To use a wheel downloaded from PyPi, run:

    pip install dnspython

* To install from the source code, go into the top-level of the source code
  and run:

```
    pip install --upgrade pip build
    python -m build
    pip install dist/*.whl
```

* To install the latest from the master branch, run `pip install
git+https://github.com/rthalley/dnspython.git`

Dnspython's default installation does not depend on any modules other than
those in the Python standard library.  To use some features, additional
modules
must be installed.  For convenience, pip options are defined for the
requirements.

If you want to use DNS-over-HTTPS, run
`pip install dnspython[doh]`.

If you want to use DNSSEC functionality, run
`pip install dnspython[dnssec]`.

If you want to use internationalized domain names (IDNA)
functionality, you must run
`pip install dnspython[idna]`

If you want to use the Trio asynchronous I/O package, run
`pip install dnspython[trio]`.

If you want to use WMI on Windows to determine the active DNS settings
instead of the default registry scanning method, run
`pip install dnspython[wmi]`.

If you want to try the experimental DNS-over-QUIC code, run
`pip install dnspython[doq]`.

Note that you can install any combination of the above, e.g.:
`pip install dnspython[doh,dnssec,idna]`

### Notices

Python 2.x support ended with the release of 1.16.0.  Dnspython 2.0.0
through
2.2.x support Python 3.6 and later.  For dnspython 2.3.x, the minimum
supported Python version is 3.7, and for 2.4.x the minimum supported
verison is 3.8.
We plan to align future support with the lifetime of the Python 3 versions.



[FILE:111:distinfo]
57c6fbaaeaaf39c891292012060beb141791735dbb4004798328fc2c467402d8       300366 dnspython-2.4.2-py3-none-any.whl

