# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		check
VERSION=		0.15.2
REVISION=		1
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Unit test framework for C
HOMEPAGE=		https://libcheck.github.io/check/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/libcheck:check:0.15.2
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			tools
			dev
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cmake pkgconfig

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING.LESSER
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/check.c
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/check

SOVERSION=		0.15.2

CMAKE_ARGS=		-DBUILD_TESTING:BOOL=OFF

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libcheck.so

[FILE:289:descriptions/desc.primary]
Check is a unit test framework for C. It features a simple interface for
defining unit tests, putting little in the way of the developer. Tests
are run in a separate address space, so Check can catch both assertion
failures and code errors that cause segmentation faults or other signals.


[FILE:63:descriptions/desc.tools]
This package contains the checkmk tool of the Check framework.


[FILE:107:distinfo]
998d355294bb94072f40584272cf4424571c396c631620ce463f6ea97aa67d2e       306136 libcheck-check-0.15.2.tar.gz


[FILE:57:manifests/plist.primary]
lib/
 libcheck.so.%%SOMAJOR%%
 libcheck.so.%%SOVERSION%%


[FILE:12:manifests/plist.tools]
bin/checkmk


[FILE:202:manifests/plist.dev]
include/
 check.h
 check_stdint.h
lib/
 libcheck.a
 libcheck.so
lib/cmake/check/
 check-config-version.cmake
 check-config.cmake
 check-targets-release.cmake
 check-targets.cmake
lib/pkgconfig/check.pc


[FILE:25:manifests/plist.man]
share/man/man1/checkmk.1


[FILE:323:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2020-08-09 06:12:30 UTC
+++ CMakeLists.txt
@@ -387,7 +387,7 @@ if (HAVE_LIBM)
   set (LIBM "m")
 endif (HAVE_LIBM)
 
-check_library_exists(rt clock_gettime "" HAVE_LIBRT)
+check_library_exists(rt xxxclock_gettime "" HAVE_LIBRT)
 if (HAVE_LIBRT)
   set(LIBRT "rt")
   ADD_DEFINITIONS(-DHAVE_LIBRT=1)

