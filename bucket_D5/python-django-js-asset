# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-django-js-asset
VERSION=		1.0.0
KEYWORDS=		python devel
VARIANTS=		py35 py36
SDESC[py35]=		Script tag with additional attributes for  (PY 35)
SDESC[py36]=		Script tag with additional attributes for  (PY 36)
HOMEPAGE=		https://github.com/matthiask/django-js-asset/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/d/django-js-asset
DISTFILE[1]=		django-js-asset-1.0.0.tar.gz:main
DF_INDEX=		1
SPKGS[py35]=		single
SPKGS[py36]=		single

OPTIONS_AVAILABLE=	PY35 PY36
OPTIONS_STANDARD=	none
VOPTS[py35]=		PY35=ON PY36=OFF
VOPTS[py36]=		PY35=OFF PY36=ON

DISTNAME=		django-js-asset-1.0.0

LICENSE=		BSDGROUP:single
LICENSE_SCHEME=		solo
LICENSE_FILE=		BSDGROUP:{{WRKSRC}}/LICENSE

GENERATED=		yes

[PY35].USES_ON=				python:py35

[PY36].USES_ON=				python:py36

[FILE:1694:descriptions/desc.single]
===========================================================================
====
django-js-asset -- script tag with additional attributes for
django.forms.Media
===========================================================================
====

.. image::
https://travis-ci.org/matthiask/django-js-asset.svg?branch=master
    :target: https://travis-ci.org/matthiask/django-js-asset

Usage
=====

Use this to insert a script tag via ``forms.Media`` containing additional
attributes (such as ``id`` and ``data-*`` for CSP-compatible data
injection.)::

    from js_asset import JS

    forms.Media(js=[
        JS('asset.js', {
            'id': 'asset-script',
            'data-answer': '"42"',
        }),
    ])

The rendered media tag (via ``{{ media.js }}`` or ``{{ media }}`` will
now contain a script tag as follows, without line breaks::

    <script type="text/javascript" src="/static/asset.js"
        data-answer="&quot;42&quot;" id="asset-script"></script>

The attributes are automatically escaped. The data attributes may now be
accessed inside ``asset.js``::

    var answer = document.querySelector('#asset-script').dataset.answer;

Also, because the implementation of ``static`` differs between supported
Django versions (older do not take the presence of
``django.contrib.staticfiles`` in ``INSTALLED_APPS`` into account), a
``js_asset.static`` function is provided which does the right thing
automatically.


Compatibility
=============

At the time of writing this app is compatible with Django 1.7 and better
(up to and including the Django master branch), but have a look at the
`Travis CI build <https://travis-ci.org/matthiask/django-js-asset>`_ for
definitive answers.



[FILE:107:distinfo]
38fc1de7a93a2f667fe7ee34acc53d682bac5ce6c73ac6f0ecb4ff77d0f61f1b         4104 django-js-asset-1.0.0.tar.gz

