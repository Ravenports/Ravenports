# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-django-js-asset
VERSION=		2.2.0
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Django forms.Media script tag (3.11)
SDESC[v12]=		Django forms.Media script tag (3.12)
HOMEPAGE=		https://github.com/matthiask/django-js-asset/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/dc/4d/5bb8c351f2515a616576a4218c736af081edf0dd4d1eead1c7e880f74c0e
DISTFILE[1]=		django_js_asset-2.2.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		django_js_asset-2.2.0.dist-info

GENERATED=		yes

[PY311].RUN_DEPENDS_ON=			python-Django:single:v11
[PY311].USES_ON=			python:v11,wheel

[PY312].RUN_DEPENDS_ON=			python-Django:single:v12
[PY312].USES_ON=			python:v12,wheel

[FILE:2042:descriptions/desc.single]
===============================================================================
django-js-asset -- script tag with additional attributes for
django.forms.Media
===============================================================================

Usage
=====

Use this to insert a script tag via ``forms.Media`` containing additional
attributes (such as id and ``data-*`` for CSP-compatible data
injection.):

.. code-block:: python

    from js_asset import JS

    forms.Media(js=[
        JS("asset.js", {
            "id": "asset-script",
            "data-answer": "42",
        }),
   ])

The rendered media tag (via ``{{ media.js }} or {{ media }}`` will
now contain a script tag as follows, without line breaks:

.. code-block:: html

    <script type="text/javascript" src="/static/asset.js"
        data-answer="42" id="asset-script"></script>

The attributes are automatically escaped. The data attributes may now be
accessed inside ``asset.js``:

.. code-block:: javascript

    var answer = document.querySelector("#asset-script").dataset.answer;

Also, because the implementation of static differs between supported
Django versions (older do not take the presence of
``django.contrib.staticfiles in INSTALLED_APPS`` into account), a
``js_asset.static`` function is provided which does the right thing
automatically.

When adding external script assets, you should pass ``static=False to the
JS object to avoid passing the script URL through static()``. In this
case, you probably want to add defer or async, and maybe also
integrity and crossorigin attributes. Please note that boolean
attributes are not properly supported when using Django before 4.1 so
specify
them as follows:

.. code-block:: python

    JS(
        "https://cdn.example.com/script.js",
        {"defer": "defer"},
        static=False,
    )

Compatibility
=============

At the time of writing this app is compatible with Django 1.8 and better
(up to and including the Django master branch), but have a look at the
[tox configuration
] for
definitive answers.


[FILE:117:distinfo]
7ef3e858e13d06f10799b56eea62b1e76706f42cf4e709be4e13356bc0ae30d8         4704 django_js_asset-2.2.0-py3-none-any.whl

