# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		lua-bitop
VERSION=		1.0.2
REVISION=		1
KEYWORDS=		devel
VARIANTS=		lua51 lua52 lua53 lua54
SDESC[lua51]=		Bitwise operations on numbers for Lua 5.1
SDESC[lua52]=		Bitwise operations on numbers for Lua 5.2
SDESC[lua53]=		Bitwise operations on numbers for Lua 5.3
SDESC[lua54]=		Bitwise operations on numbers for Lua 5.4
HOMEPAGE=		http://bitop.luajit.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://bitop.luajit.org/download/
DISTFILE[1]=		LuaBitOp-1.0.2.tar.gz:main
DF_INDEX=		1
SPKGS[lua51]=		single
SPKGS[lua52]=		single
SPKGS[lua53]=		single
SPKGS[lua54]=		single

OPTIONS_AVAILABLE=	LUA51 LUA52 LUA53 LUA54
OPTIONS_STANDARD=	none
VOPTS[lua51]=		LUA51=ON LUA52=OFF LUA53=OFF LUA54=OFF
VOPTS[lua52]=		LUA51=OFF LUA52=ON LUA53=OFF LUA54=OFF
VOPTS[lua53]=		LUA51=OFF LUA52=OFF LUA53=ON LUA54=OFF
VOPTS[lua54]=		LUA51=OFF LUA52=OFF LUA53=OFF LUA54=ON

USES=			gmake

DISTNAME=		LuaBitOp-1.0.2

FPC_EQUIVALENT=		devel/lua-bitop

MAKE_ARGS=		CC={{CC}}
			LUA={{LUA_CMD}}

CFLAGS=			-DLUA_NUMBER_LONG_LONG
			-I{{LUA_INCDIR}}

[LUA51].DESCRIPTION=			Build with Lua 5.1
[LUA51].BUILD_DEPENDS_ON=		lua51:set:std
[LUA51].MAKEFILE_ON=			LUA_INCDIR={{LOCALBASE}}/include/lua51
					LUA_MODLIBDIR={{LOCALBASE}}/lib/lua/5.1
					LUA_CMD=luac51
[LUA51].PLIST_SUB_ON=			LUA_MODLIBDIR=lib/lua/5.1

[LUA52].DESCRIPTION=			Build with Lua 5.2
[LUA52].USES_ON=			lua:5.2

[LUA53].DESCRIPTION=			Build with Lua 5.3
[LUA53].USES_ON=			lua:5.3

[LUA54].DESCRIPTION=			Build with Lua 5.4
[LUA54].USES_ON=			lua:5.4

do-install:
	@${MKDIR} ${STAGEDIR}${LUA_MODLIBDIR}
	${INSTALL_LIB} ${WRKSRC}/bit.so ${STAGEDIR}${LUA_MODLIBDIR}

[FILE:826:descriptions/desc.single]
Lua BitOp is a C extension module for Lua 5.1/5.2 which adds bitwise
operations on numbers.

Features:
 * Supported functions: bit.tobit, bit.tohex, bit.bnot, bit.band, bit.bor,
   bit.bxor, bit.lshift, bit.rshift, bit.arshift, bit.rol, bit.ror,
   bit.bswap
 * Consistent semantics across 16, 32 and 64 bit platforms.
 * Supports different lua_Number types: either IEEE 754 doubles,
   int32_t or int64_t.
 * Runs on Linux, *BSD, Mac OS X, Windows and probably anything else you
   can find.
 * Simple installation on all systems. No bulky configure scripts.
   Embedded-systems-friendly.
 * Internal self-test on startup to detect miscompiles. Includes a
   comprehensive test and benchmark suite.
 * Compatible with the built-in bitwise operations in LuaJIT 2.0.
 * It's as fast as you can get with the standard Lua/C API.


[FILE:100:distinfo]
1207c9293dcd52eb9dca6538d1b87352bd510f4e760938f5048433f7f272ce99        23127 LuaBitOp-1.0.2.tar.gz


[FILE:25:manifests/plist.single]
%%LUA_MODLIBDIR%%/bit.so

