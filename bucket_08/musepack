# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		musepack
VERSION=		r475
REVISION=		1
KEYWORDS=		audio
VARIANTS=		std
SDESC[std]=		Decoder, encoder & replaygain for musepack (mpc)
HOMEPAGE=		https://www.musepack.net/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://files.musepack.net/source/
DISTFILE[1]=		musepack_src_r475.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			tools

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

EXRUN[tools]=		primary

USES=			autoreconf libtool

DISTNAME=		musepack_src_r475

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKDIR}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		audio/musepack

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		6.1.0

post-extract:
	${SED} -n '/mpc_decoder/!p;//q' ${WRKSRC}/libmpcdec/mpc_decoder.c > ${WRKDIR}/LICENSE

[FILE:454:descriptions/desc.primary]
Musepack is an audio compression format with a strong emphasis on high 
quality. It's not lossless, but it is designed for transparency, so that 
you won't be able to hear differences between the original wave file and 
the much smaller MPC file.

It is based on the MPEG-1 Layer-2 / MP2 algorithms, but since 1997 it has 
rapidly developed and vastly improved and is now at an advanced stage in 
which it contains heavily optimized and patentless code.


[FILE:88:descriptions/desc.tools]
This subpackage contains the tools (like encoder and decoder) that come 
with musepack.


[FILE:103:distinfo]
a4b1742f997f83e1056142d556a8c20845ba764b70365ff9ccf2e3f81c427b2b       188737 musepack_src_r475.tar.gz


[FILE:59:manifests/plist.primary]
lib/
 libmpcdec.so.%%SOMAJOR%%
 libmpcdec.so.%%SOVERSION%%


[FILE:127:manifests/plist.dev]
include/mpc/
 datatypes.h
 minimax.h
 mpc_types.h
 mpcdec.h
 mpcmath.h
 reader.h
 streaminfo.h
lib/
 libmpcdec.a
 libmpcdec.so


[FILE:46:manifests/plist.tools]
bin/
 mpc2sv8
 mpccut
 mpcdec
 mpcenc
 wavcmp


[FILE:583:patches/patch-common_tags.c]
--- common/tags.c.orig	2008-11-01 23:21:42 UTC
+++ common/tags.c
@@ -34,7 +34,7 @@
 #endif
 
 // Path separator
-#if defined __unix__  ||  defined __bsdi__  ||  defined __FreeBSD__  ||  defined __OpenBSD__  ||  defined __NetBSD__  ||  defined __APPLE__
+#if defined __unix__  ||  defined __bsdi__  ||  defined __FreeBSD__  ||  defined __OpenBSD__  ||  defined __NetBSD__  ||  defined __APPLE__ || defined __DragonFly__
 # define PATH_SEP               '/'
 # define DRIVE_SEP              '\0'
 #elif defined _WIN32  ||  defined __TURBOC__  ||  defined __ZTC__  ||  defined _MSC_VER


[FILE:320:patches/patch-configure.in]
--- configure.in.orig	2009-07-29 21:00:32 UTC
+++ configure.in
@@ -30,7 +30,8 @@ AC_ARG_ENABLE([mpcchap], [AS_HELP_STRING
 AM_CONDITIONAL([MPC_CHAP], [test "x$enable_mpcchap" = xyes])
 
 
-CHECK_VISIBILITY
+gl_VISIBILITY
+AM_CONDITIONAL([HAVE_VISIBILITY], [test "x$HAVE_VISIBILITY" = x1])
 
 AC_CONFIG_FILES([
 Makefile


[FILE:410:patches/patch-libmpcdec_Makefile.am]
Missing -lm, undef refs for log2(), log10(), pow()
--- libmpcdec/Makefile.am.orig	2009-07-29 21:00:32 UTC
+++ libmpcdec/Makefile.am
@@ -16,4 +16,4 @@ libmpcdec_la_SOURCES = huffman.c mpc_dec
 	mpc_bits_reader.h huffman.h decoder.h internal.h requant.h mpcdec_math.h \
 	$(common_sources)
 
-libmpcdec_la_LDFLAGS = -no-undefined -version-info 7:0:1
+libmpcdec_la_LDFLAGS = -no-undefined -version-info 7:0:1 -lm


[FILE:666:patches/patch-libmpcdec_requant.h]
--- libmpcdec/requant.h.orig	2009-02-23 18:44:04 UTC
+++ libmpcdec/requant.h
@@ -47,9 +47,9 @@ extern "C" {
 
 
 /* C O N S T A N T S */
-const mpc_uint8_t      Res_bit [18];     ///< Bits per sample for chosen quantizer
-const MPC_SAMPLE_FORMAT __Cc    [1 + 18]; ///< Requantization coefficients
-const mpc_int16_t       __Dc    [1 + 18]; ///< Requantization offset
+extern const mpc_uint8_t      Res_bit [18];     ///< Bits per sample for chosen quantizer
+extern const MPC_SAMPLE_FORMAT __Cc    [1 + 18]; ///< Requantization coefficients
+extern const mpc_int16_t       __Dc    [1 + 18]; ///< Requantization offset
 
 #define Cc (__Cc + 1)
 #define Dc (__Dc + 1)


[FILE:1109:patches/patch-libmpcpsy_ans.c]
--- libmpcpsy/ans.c.orig	2009-07-31 12:37:44 UTC
+++ libmpcpsy/ans.c
@@ -288,12 +288,12 @@ NS_Analyse ( PsyModel* m,
     // for L or M, respectively
     memset ( m->FIR_L,      0, sizeof m->FIR_L      );         // reset FIR
     memset ( m->NS_Order_L, 0, sizeof m->NS_Order_L );         // reset Flags
-	FindOptimalANS ( MaxBand, MSflag, ANSspec_L, ANSspec_M, m->NS_Order_L, m->SNR_comp_L, m->FIR_L, smr.L, smr.M, m->SCF_Index_L, Transient );
+	FindOptimalANS ( MaxBand, MSflag, ANSspec_L, ANSspec_M, m->NS_Order_L, m->SNR_comp_L, m->FIR_L, smr.L, smr.M, (const int (*)[3])m->SCF_Index_L, Transient );
 
     // for R or S, respectively
 	memset ( m->FIR_R,      0, sizeof m->FIR_R      );         // reset FIR
 	memset ( m->NS_Order_R, 0, sizeof m->NS_Order_R );         // reset Flags
-	FindOptimalANS ( MaxBand, MSflag, ANSspec_R, ANSspec_S, m->NS_Order_R, m->SNR_comp_R, m->FIR_R, smr.R, smr.S, m->SCF_Index_R, Transient );
+	FindOptimalANS ( MaxBand, MSflag, ANSspec_R, ANSspec_S, m->NS_Order_R, m->SNR_comp_R, m->FIR_R, smr.R, smr.S, (const int (*)[3])m->SCF_Index_R, Transient );
 
     return;
 }


[FILE:194:patches/patch-mpcenc_keyboard.c]
--- mpcenc/keyboard.c.orig	2006-12-19 19:39:02 UTC
+++ mpcenc/keyboard.c
@@ -52,6 +52,8 @@ CheckKey ( void )
 
 #else
 
+#include <sys/select.h>
+
 # ifdef USE_TERMIOS
 #  include <termios.h>
 


[FILE:1687:patches/patch-mpcenc_mpcenc.c]
--- mpcenc/mpcenc.c.orig	2009-08-26 20:39:06 UTC
+++ mpcenc/mpcenc.c
@@ -689,20 +689,20 @@ Quantisierung ( PsyModel * m,
 
         if ( *resL > 0 ) {
             if ( m->NS_Order_L [Band] > 0 ) {
-                QuantizeSubbandWithNoiseShaping ( subq[Band].L, subx[Band].L, *resL, errorL [Band], m->FIR_L [Band] );
+                QuantizeSubbandWithNoiseShaping ((unsigned int *) subq[Band].L, subx[Band].L, *resL, errorL [Band], m->FIR_L [Band] );
                 memcpy ( errorL [Band], errorL[Band] + 36, MAX_NS_ORDER * sizeof (**errorL) );
             } else {
-				QuantizeSubband                 ( subq[Band].L, subx[Band].L, *resL, errorL [Band], MAX_NS_ORDER );
+				QuantizeSubband ((unsigned int *) subq[Band].L, subx[Band].L, *resL, errorL [Band], MAX_NS_ORDER );
                 memcpy ( errorL [Band], errorL[Band] + 36, MAX_NS_ORDER * sizeof (**errorL) );
             }
         }
 
         if ( *resR > 0 ) {
             if ( m->NS_Order_R [Band] > 0 ) {
-                QuantizeSubbandWithNoiseShaping ( subq[Band].R, subx[Band].R, *resR, errorR [Band], m->FIR_R [Band] );
+                QuantizeSubbandWithNoiseShaping ((unsigned int *) subq[Band].R, subx[Band].R, *resR, errorR [Band], m->FIR_R [Band] );
                 memcpy ( errorR [Band], errorR [Band] + 36, MAX_NS_ORDER * sizeof (**errorL) );
             } else {
-				QuantizeSubband                 ( subq[Band].R, subx[Band].R, *resR, errorL [Band], MAX_NS_ORDER);
+				QuantizeSubband ((unsigned int *) subq[Band].R, subx[Band].R, *resR, errorL [Band], MAX_NS_ORDER);
                 memcpy ( errorR [Band], errorR [Band] + 36, MAX_NS_ORDER * sizeof (**errorL) );
             }
         }


[FILE:536:patches/patch-mpcenc_mpcenc.h]
--- mpcenc/mpcenc.h.orig	2009-02-23 18:15:46 UTC
+++ mpcenc/mpcenc.h
@@ -159,7 +159,7 @@
 #endif
 
 // Path separator
-#if defined __unix__  ||  defined __bsdi__  ||  defined __FreeBSD__  ||  defined __OpenBSD__  ||  defined __NetBSD__  ||  defined __APPLE__
+#if defined __unix__  ||  defined __bsdi__  ||  defined __FreeBSD__  ||  defined __OpenBSD__  ||  defined __NetBSD__  ||  defined __APPLE__ || defined __DragonFly__
 # define PATH_SEP               '/'
 # define DRIVE_SEP              '\0'
 # define EXE_EXT                ""

