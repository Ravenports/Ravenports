# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-dbus-python
VERSION=		1.3.2
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Python bindings for libdbus (3.11)
SDESC[v12]=		Python bindings for libdbus (3.12)
HOMEPAGE=		http://www.freedesktop.org/wiki/Software/DBusBindings/#python
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/d/dbus-python
DISTFILE[1]=		dbus-python-1.3.2.tar.gz:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

BROKEN[all]=		WIP (may have to fall back to autotools)

BUILD_DEPENDS=		dbus:dev:standard
BUILDRUN_DEPENDS=	dbus:primary:standard

USES=			meson pkgconfig
GNOME_COMPONENTS=	glib

DISTNAME=		dbus-python-1.3.2

GENERATED=		yes

[PY311].BUILDRUN_DEPENDS_ON=		python-meson-python:single:v11
[PY311].BUILD_DEPENDS_ON=		python-wheel:single:v11

[PY312].BUILDRUN_DEPENDS_ON=		python-meson-python:single:v12
[PY312].BUILD_DEPENDS_ON=		python-wheel:single:v12
					python-setuptools:single:v12

[FILE:1335:descriptions/desc.single]
=======================================
dbus-python_: Python bindings for D-Bus
=======================================

.. _dbus-python:
http://www.freedesktop.org/wiki/Software/DBusBindings#python

dbus-python is the original Python binding for dbus, the reference
implementation of the D-Bus protocol.

Online documentation can be found at
<http://dbus.freedesktop.org/doc/dbus-python/>.

Problems and alternatives
=========================

dbus-python might not be the best D-Bus binding for you to use. dbus-python
does not follow the principle of "In the face of ambiguity, refuse the
temptation to guess", and can't be changed to not do so without seriously
breaking compatibility.

In addition, it uses libdbus (which has known problems with multi-threaded
use) and attempts to be main-loop-agnostic (which means you have to select
a suitable main loop for your application).

Alternative ways to get your Python code onto D-Bus include:

* GDBus, part of the GIO module of `GLib`_, via GObject-Introspection and
  `PyGI`_ (uses the GLib main loop and object model)

* QtDBus, part of `Qt`_, via `PyQt`_ (uses the Qt main loop and object
model)

.. _GLib: http://developer.gnome.org/glib/
.. _PyGI: https://live.gnome.org/PyGObject
.. _Qt:   https://www.qt.io
.. _PyQT: http://www.riverbankcomputing.co.uk/software/pyqt/intro


[FILE:103:distinfo]
ad67819308618b5069537be237f8e68ca1c7fcc95ee4a121fe6845b1418248f8       605495 dbus-python-1.3.2.tar.gz

