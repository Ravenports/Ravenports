# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		binutils-gold
VERSION=		2.44
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		GNU binary tools
HOMEPAGE=		https://www.gnu.org/software/binutils/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SOURCEWARE/binutils/releases
DISTFILE[1]=		binutils-with-gold-2.44.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man
			nls
			info

OPTIONS_AVAILABLE=	NLS RELRO
OPTIONS_STANDARD=	NLS RELRO
OPT_ON[all]=		NLS

BUILD_DEPENDS=		mpfr:dev:std
			gmp:dev:std

USES=			cpe bison gmake libtool zlib:build c++:primary

DISTNAME=		binutils-with-gold-2.44

LICENSE=		GPLv3+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
LICENSE_AWK=		TERMS:"ifndef GAS"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/gas/as.h
LICENSE_SCHEME=		solo

CPE_PRODUCT=		binutils
CPE_VENDOR=		gnu
FPC_EQUIVALENT=		devel/binutils
INFO_SUBDIR=		.

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-werror
			--disable-shared
			--with-gmp={{LOCALBASE}}
			--with-mpfr={{LOCALBASE}}
			--with-system-zlib
			--with-lib-path=/usr/lib
			--enable-targets=all
			--enable-x86-relax-relocations=no
			--enable-gprofng=no

INSTALL_TARGET=		install-strip
PLIST_SUB=		PLUGINAPI={{PLUGINAPI}}
			LINKER={{LINKER}}
			ASSEMBLER={{ASSEMBLER}}
			GPROF={{GPROF}}
			TARGET={{CONFIGURE_TARGET}}

VAR_OPSYS[freebsd]=	VAR1=/libexec/ld-elf.so.1
			VAR2=/libexec/ld-elf.so.1
			MAKEFILE_LINE=BUILD_GOLD=yes
			MAKEFILE_LINE=GOLD_CONFIG=--enable-gold
VAR_OPSYS[sunos]=	VAR1=/lib/amd64/ld.so.1
			VAR2=/lib/ld.so.1
			MAKEFILE_LINE=BUILD_GOLD=yes
			MAKEFILE_LINE=GOLD_CONFIG=--enable-gold
VAR_OPSYS[linux]=	VAR1=/lib/ld64.so.1
			VAR2=/lib/ldx32.so.1
			MAKEFILE_LINE=BUILD_GOLD=yes
			MAKEFILE_LINE=GOLD_CONFIG=--enable-gold
VAR_OPSYS[darwin]=	VAR1=/libexec/ld-elf.so.1
			VAR2=/libexec/ld-elf.so.1
			MAKEFILE_LINE=LINKER="@comment "
			MAKEFILE_LINE=ASSEMBLER="@comment "
			MAKEFILE_LINE=GPROF="@comment "
VAR_OPSYS[openbsd]=	MAKEFILE_LINE=PLUGINAPI="@comment "
VAR_OPSYS[dragonfly]=	VAR1=/libexec/ld-elf.so.2
			VAR2=/libexec/ld-elf.so.2
			MAKEFILE_LINE=BUILD_GOLD=yes
			MAKEFILE_LINE=GOLD_CONFIG=--enable-gold
VAR_OPSYS[midnightbsd]=	VAR1=/libexec/ld-elf.so.1
			VAR2=/libexec/ld-elf.so.1
			MAKEFILE_LINE=BUILD_GOLD=yes
			MAKEFILE_LINE=GOLD_CONFIG=--enable-gold
			MAKEFILE_LINE=CONFIGURE_TARGET=x86_64-raven-freebsd12.3

[NLS].CONFIGURE_ENABLE_BOTH=		nls
[NLS].INFO_ON=				info:as
					info:binutils
					info:gprof
					info:bfd
					info:ld
					info:ctf-spec
					info:sframe-spec
					info:ldint
[NLS].USES_ON=				gettext
					makeinfo

[RELRO].DESCRIPTION=			enable -z relro in ELF linker by default
[RELRO].CONFIGURE_ARGS_OFF=		--enable-relro=no
[RELRO].CONFIGURE_ARGS_ON=		--enable-relro

post-patch:
	${REINPLACE_CMD} \
		-e 's|@ELF64_INTERPRETER@|${VAR1}|' \
		-e 's|@ELF32_INTERPRETER@|${VAR2}|' \
	${WRKSRC}/bfd/elfxx-x86.c \
	${WRKSRC}/gold/x86_64.cc

post-patch-NLS-OFF:
	${REINPLACE_CMD} -e '/INFO_DEPS =/d' \
		${WRKSRC}/ld/Makefile.in \
		${WRKSRC}/gprof/Makefile.in \
		${WRKSRC}/bfd/doc/Makefile.in \
		${WRKSRC}/binutils/doc/Makefile.in \
		${WRKSRC}/gas/doc/Makefile.in

post-install:
	${INSTALL_DATA} ${WRKSRC}/include/plugin-api.h \
		${STAGEDIR}${PREFIX}/include/
	${RM} ${STAGEDIR}${PREFIX}/include/ansidecl.h
	${SED} -i'' '/#include "ansidecl.h"/d' \
		${STAGEDIR}${PREFIX}/include/bfd.h
.for tool in coffdump dlltool dllwrap nlmconv srconv sysdump windmc windres
	${RM} ${STAGEDIR}${PREFIX}/bin/${BUTARGET}-${tool} \
		${STAGEDIR}${MANPREFIX}/man/man1/${BUTARGET}-${tool}.1 \
		${STAGEDIR}${PREFIX}/${BUTARGET}/bin/${tool}
.endfor
	# autoplist target files and ldscripts
	${FIND} ${STAGEDIR}${PREFIX}/${CONFIGURE_TARGET} ! -type d | \
		${SED} -e 's,^${STAGEDIR}${PREFIX}/,,' \
		>> ${WRKDIR}/.manifest.primary.mktmp

[FILE:311:descriptions/desc.primary]
The GNU Binutils are a collection of binary tools. The main ones are:

* ld - the GNU linker.
* as - the GNU assembler.

Most of these programs use BFD, the Binary File Descriptor library, to do
low-level manipulation. Many of them also use the opcodes library to
assemble and disassemble machine instructions.


[FILE:109:distinfo]
67be9198476cc37436e2801de649f4ad80bf0d02430d86aff63c6b59b6e23987     28548400 binutils-with-gold-2.44.tar.xz


[FILE:192:manifests/plist.primary]
%%ASSEMBLER%%bin/as
%%GOLD%%bin/
 dwp
 ld.gold
%%GPROF%%bin/gprof
%%LINKER%%bin/
 ld
 ld.bfd
bin/
 addr2line
 ar
 c++filt
 elfedit
 nm
 objcopy
 objdump
 ranlib
 readelf
 size
 strings
 strip


[FILE:232:manifests/plist.dev]
%%PLUGINAPI%%include/plugin-api.h
include/
 bfd.h
 bfdlink.h
 ctf-api.h
 ctf.h
 diagnostics.h
 dis-asm.h
 sframe-api.h
 sframe.h
 symcat.h
lib/
 libbfd.a
 libctf-nobfd.a
 libctf.a
 libopcodes.a
 libsframe.a
lib/bfd-plugins/libdep.a


[FILE:261:manifests/plist.man]
%%ASSEMBLER%%share/man/man1/as.1
%%GPROF%%share/man/man1/gprof.1
%%LINKER%%share/man/man1/ld.1
share/man/man1/
 addr2line.1
 ar.1
 c++filt.1
 dlltool.1
 elfedit.1
 nm.1
 objcopy.1
 objdump.1
 ranlib.1
 readelf.1
 size.1
 strings.1
 strip.1
 windmc.1
 windres.1


[FILE:4637:manifests/plist.nls]
%%ASSEMBLER%%share/locale/es/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/fi/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/fr/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/id/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/ja/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/ro/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/ru/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/rw/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/sv/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/tr/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/uk/LC_MESSAGES/gas.mo
%%ASSEMBLER%%share/locale/zh_CN/LC_MESSAGES/gas.mo
%%GOLD%%share/locale/es/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/fi/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/fr/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/id/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/it/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/ja/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/ka/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/ro/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/sr/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/sv/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/uk/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/vi/LC_MESSAGES/gold.mo
%%GOLD%%share/locale/zh_CN/LC_MESSAGES/gold.mo
%%GPROF%%share/locale/bg/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/da/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/de/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/eo/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/es/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/fi/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/fr/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/ga/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/hu/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/id/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/it/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/ja/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/ka/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/ms/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/nl/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/pt_BR/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/ro/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/ru/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/rw/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/sr/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/sv/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/tr/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/uk/LC_MESSAGES/gprof.mo
%%GPROF%%share/locale/vi/LC_MESSAGES/gprof.mo
%%LINKER%%share/locale/bg/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/da/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/de/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/es/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/fi/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/fr/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/ga/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/id/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/it/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/ja/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/ka/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/pt_BR/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/ro/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/ru/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/sr/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/sv/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/tr/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/uk/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/vi/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/zh_CN/LC_MESSAGES/ld.mo
%%LINKER%%share/locale/zh_TW/LC_MESSAGES/ld.mo
share/locale/bg/LC_MESSAGES/binutils.mo
share/locale/ca/LC_MESSAGES/binutils.mo
share/locale/da/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/de/LC_MESSAGES/opcodes.mo
share/locale/es/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/fi/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/fr/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/ga/LC_MESSAGES/opcodes.mo
share/locale/hr/LC_MESSAGES/
 bfd.mo
 binutils.mo
share/locale/id/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/it/LC_MESSAGES/
 binutils.mo
 opcodes.mo
share/locale/ja/LC_MESSAGES/
 bfd.mo
 binutils.mo
share/locale/ka/LC_MESSAGES/bfd.mo
share/locale/ms/LC_MESSAGES/bfd.mo
share/locale/nl/LC_MESSAGES/opcodes.mo
share/locale/pt/LC_MESSAGES/
 bfd.mo
 binutils.mo
share/locale/pt_BR/LC_MESSAGES/opcodes.mo
share/locale/ro/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/ru/LC_MESSAGES/
 bfd.mo
 binutils.mo
share/locale/rw/LC_MESSAGES/
 bfd.mo
 binutils.mo
share/locale/sk/LC_MESSAGES/binutils.mo
share/locale/sr/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/sv/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/tr/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/uk/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/vi/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/zh_CN/LC_MESSAGES/
 bfd.mo
 binutils.mo
 opcodes.mo
share/locale/zh_TW/LC_MESSAGES/binutils.mo


[FILE:424:patches/patch-bfd_config.bfd]
For loader.efi linking support.

--- bfd/config.bfd.orig	2025-02-02 00:00:00 UTC
+++ bfd/config.bfd
@@ -692,7 +692,7 @@ case "${targ}" in
     ;;
   x86_64-*-dragonfly*)
     targ_defvec=x86_64_elf64_vec
-    targ_selvecs="i386_elf32_vec iamcu_elf32_vec"
+    targ_selvecs="i386_elf32_vec iamcu_elf32_vec x86_64_pe_vec x86_64_pei_vec x86_64_elf64_vec"
     want64=true
     ;;
   x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)


[FILE:1047:patches/patch-bfd_elfnn-aarch64.c]
--- bfd/elfnn-aarch64.c.orig	2025-02-02 00:00:00 UTC
+++ bfd/elfnn-aarch64.c
@@ -5081,7 +5081,9 @@ aarch64_calculate_got_entry_vma (struct
       off = h->got.offset;
       BFD_ASSERT (off != (bfd_vma) - 1);
       if (!WILL_CALL_FINISH_DYNAMIC_SYMBOL (dyn, bfd_link_pic (info), h)
-	  || (bfd_link_pic (info)
+	  || ((bfd_link_pic (info)
+	      || (!bfd_link_relocatable (info)
+		  && (info->export_dynamic || info->dynamic)))
 	      && SYMBOL_REFERENCES_LOCAL (info, h))
 	  || (ELF_ST_VISIBILITY (h->other)
 	      && h->root.type == bfd_link_hash_undefweak))
@@ -10066,6 +10068,14 @@ elfNN_aarch64_finish_dynamic_symbol (bfd
 			   + h->root.u.def.section->output_section->vma
 			   + h->root.u.def.section->output_offset);
 	}
+      else if (!bfd_link_relocatable (info)
+	    && (info->export_dynamic || info->dynamic)
+	    && SYMBOL_REFERENCES_LOCAL (info, h))
+	{
+	  BFD_ASSERT ((h->got.offset & 1) != 0);
+	  rela.r_info = ELFNN_R_INFO (h->dynindx, AARCH64_R (GLOB_DAT));
+	  rela.r_addend = 0;
+	}
       else
 	{
 	do_glob_dat:


[FILE:426:patches/patch-bfd_elfxx-x86.c]
--- bfd/elfxx-x86.c.orig	2025-02-02 00:00:00 UTC
+++ bfd/elfxx-x86.c
@@ -26,8 +26,8 @@
    section.  */
 
 #define ELF32_DYNAMIC_INTERPRETER "/usr/lib/libc.so.1"
-#define ELF64_DYNAMIC_INTERPRETER "/lib/ld64.so.1"
-#define ELFX32_DYNAMIC_INTERPRETER "/lib/ldx32.so.1"
+#define ELF64_DYNAMIC_INTERPRETER "@ELF64_INTERPRETER@"
+#define ELFX32_DYNAMIC_INTERPRETER "@ELF32_INTERPRETER@"
 
 bool
 _bfd_x86_elf_mkobject (bfd *abfd)


[FILE:963:patches/patch-gold_x86__64.cc]
--- gold/x86_64.cc.orig	2025-02-02 00:00:00 UTC
+++ gold/x86_64.cc
@@ -1301,7 +1301,7 @@ const Target::Target_info Target_x86_64<
   true,			// is_default_stack_executable
   true,			// can_icf_inline_merge_sections
   '\0',			// wrap_char
-  "/lib/ld64.so.1",     // program interpreter
+  "@ELF64_INTERPRETER@",     // program interpreter
   0x400000,		// default_text_segment_address
   0x1000,		// abi_pagesize (overridable by -z max-page-size)
   0x1000,		// common_pagesize (overridable by -z common-page-size)
@@ -1330,7 +1330,7 @@ const Target::Target_info Target_x86_64<
   true,			// is_default_stack_executable
   true,			// can_icf_inline_merge_sections
   '\0',			// wrap_char
-  "/libx32/ldx32.so.1", // program interpreter
+  "@ELF32_INTERPRETER@", // program interpreter
   0x400000,		// default_text_segment_address
   0x1000,		// abi_pagesize (overridable by -z max-page-size)
   0x1000,		// common_pagesize (overridable by -z common-page-size)


[FILE:611:patches/patch-include__safe-ctype.h]
--- include/safe-ctype.h.orig	2025-02-02 00:00:00 UTC
+++ include/safe-ctype.h
@@ -119,6 +119,7 @@ extern const unsigned char  _sch_tolower
    including another system header (for instance gnulib's stdint.h).
    So we include ctype.h here and then immediately redefine its macros.  */
 
+#if 0
 #include <ctype.h>
 #undef isalpha
 #define isalpha(c) do_not_use_isalpha_with_safe_ctype
@@ -146,5 +147,6 @@ extern const unsigned char  _sch_tolower
 #define toupper(c) do_not_use_toupper_with_safe_ctype
 #undef tolower
 #define tolower(c) do_not_use_tolower_with_safe_ctype
+#endif
 
 #endif /* SAFE_CTYPE_H */


[FILE:417:files/special.mk]
.if defined(BUILD_GOLD)
CONFIGURE_ARGS+=	${GOLD_CONFIG}
CONFIGURE_ARGS+=	--enable-plugins
PLIST_SUB+=		GOLD=""
.else
CONFIGURE_ARGS+=	--disable-gold
CONFIGURE_ARGS+=	--disable-plugins
PLIST_SUB+=		GOLD="@comment "
.endif

# for non-GNU linkers, ensure DT_RPATH set instead of DT_RUNPATH
# See rtld man page, we need to be invulnerable to LD_LIBRARY_PATH
.if ${OPSYS} != SunOS
LDFLAGS+= -Wl,--disable-new-dtags
.endif

