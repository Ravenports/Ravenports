# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		shadowsocks-libev
VERSION=		3.3.5
REVISION=		4
KEYWORDS=		net
VARIANTS=		std
SDESC[std]=		Secure socks5 proxy
HOMEPAGE=		https://github.com/shadowsocks/shadowsocks-libev/blob/master/README.md
CONTACT=		nobody

DOWNLOAD_GROUPS=	main bloom cork ipset
SITES[main]=		GITHUB/shadowsocks:shadowsocks-libev:9afa3ca
SITES[bloom]=		GITHUB/shadowsocks:libbloom:437e1ad:libbloom
SITES[cork]=		GITHUB/shadowsocks:libcork:074e074:libcork
SITES[ipset]=		GITHUB/shadowsocks:ipset:3ea7fe3:libipset
DISTFILE[1]=		generated:main
DISTFILE[2]=		generated:bloom
DISTFILE[3]=		generated:cork
DISTFILE[4]=		generated:ipset
DF_INDEX=		1 2 3 4
SPKGS[std]=		set
			primary
			dev
			man
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		asciidoc:single:std
			libev:dev:std
			libsodium:dev:std
			xmlto:primary:std
			c-ares:dev:std
			mbedtls:dev:std
BUILDRUN_DEPENDS=	libev:primary:std
			mbedtls:primary:std
			libsodium:primary:std
			c-ares:primary:std

USES=			cpe cmake pcre

LICENSE=		GPLv3+:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/COPYING
LICENSE_FILE=		GPLv3+:stock
LICENSE_SCHEME=		solo

CPE_VENDOR=		shadowsocks
FPC_EQUIVALENT=		net/shadowsocks-libev

RC_SUBR=		shadowsocks_libev:primary

LDFLAGS=		-lpthread
CMAKE_ARGS=		-DCMAKE_POLICY_VERSION_MINIMUM=3.5

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/ss-*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libshadowsocks-libev.so
	${MKDIR} ${STAGEDIR}${PREFIX}/etc/shadowsocks-libev
	${INSTALL_DATA} ${WRKSRC}/debian/config.json \
		${STAGEDIR}${PREFIX}/etc/shadowsocks-libev/config.json.sample
	# bash support
	${MKDIR} ${STAGEDIR}${PREFIX}/share/bash-completion/completions
.for c in ss-local ss-manager ss-redir ss-server ss-tunnel
	${INSTALL_DATA} ${WRKSRC}/completions/bash/${c} \
		${STAGEDIR}${PREFIX}/share/bash-completion/completions/${c}
.endfor
	# zsh support
	${MKDIR} ${STAGEDIR}${PREFIX}/share/zsh/site-functions
.for c in _ss-local _ss-manager _ss-redir _ss-server _ss-tunnel
	${INSTALL_DATA} ${WRKSRC}/completions/zsh/${c} \
		${STAGEDIR}${PREFIX}/share/zsh/site-functions/${c}
.endfor

[FILE:879:descriptions/desc.primary]
Shadowsocks: A secure SOCKS5 proxy

Shadowsocks is a secure split proxy loosely based on SOCKS5.

 client <---> ss-local <--[encrypted]--> ss-remote <---> target

The Shadowsocks local component (ss-local) acts like a traditional SOCKS5
server and provides proxy service to clients. It encrypts and forwards data
streams and packets from the client to the Shadowsocks remote component
(ss-remote), which decrypts and forwards to the target. Replies from target
are similarly encrypted and relayed by ss-remote back to ss-local, which
decrypts and eventually returns to the original client.

Shadowsocks-libev is a lightweight secured SOCKS5 proxy for embedded
devices and low-end boxes.

Shadowsocks-libev is written in pure C and depends on libev. It's designed
to be a very simple implementation of shadowsocks protocol, in order to
keep the resource usage as low as possible.


[FILE:461:distinfo]
88c9bd32b4dfec9096ceea5ee0c22b58157c75b68a32bbec754ac49f0cced97c       313996 shadowsocks-shadowsocks-libev-9afa3ca.tar.gz
bc10f87b9f06711e2d2783dc53b04dceca7eed952fe0a89a35794952afa495d5      1208176 shadowsocks-libbloom-437e1ad.tar.gz
6bb33c93dcbb7fbbeb7d82994e769bb05cdd168d8ebf5c0e1921bd22327fe54e       186531 shadowsocks-libcork-074e074.tar.gz
e7b487c21a5352a3c9faef3256ed1a539f7ee46f38bf57922340c125c720da61        64895 shadowsocks-ipset-3ea7fe3.tar.gz


[FILE:310:manifests/plist.primary]
@sample etc/shadowsocks-libev/config.json.sample
bin/
 ss-local
 ss-manager
 ss-redir
 ss-server
 ss-tunnel
lib/libshadowsocks-libev.so
share/bash-completion/completions/
 ss-local
 ss-manager
 ss-redir
 ss-server
 ss-tunnel
share/zsh/site-functions/
 _ss-local
 _ss-manager
 _ss-redir
 _ss-server
 _ss-tunnel


[FILE:84:manifests/plist.dev]
include/shadowsocks.h
lib/libshadowsocks-libev.a
lib/pkgconfig/shadowsocks-libev.pc


[FILE:125:manifests/plist.man]
share/man/man1/
 ss-local.1
 ss-manager.1
 ss-nat.1
 ss-redir.1
 ss-server.1
 ss-tunnel.1
share/man/man8/shadowsocks-libev.8


[FILE:145:manifests/plist.docs]
share/doc/shadowsocks-libev/
 shadowsocks-libev.html
 ss-local.html
 ss-manager.html
 ss-nat.html
 ss-redir.html
 ss-server.html
 ss-tunnel.html


[FILE:284:patches/patch-libcork_include_libcork_config_bsd.h]
--- libcork/include/libcork/config/bsd.h.orig	2019-07-24 14:01:14 UTC
+++ libcork/include/libcork/config/bsd.h
@@ -27,7 +27,9 @@
 #error "Cannot determine system endianness"
 #endif
 
+#if !defined(__NetBSD__)
 #define CORK_HAVE_REALLOCF  1
+#endif
 #define CORK_HAVE_PTHREADS  1
 
 


[FILE:656:patches/patch-libcork_src_libcork_posix_env.c]
--- libcork/src/libcork/posix/env.c.orig	2019-07-24 14:01:14 UTC
+++ libcork/src/libcork/posix/env.c
@@ -194,12 +194,19 @@ cork_env_set_vars(void *user_data, struc
  *
  * [1] http://www.gnu.org/software/gnulib/manual/html_node/clearenv.html
  */
+
+#if (defined(__FreeBSD__) && (__FreeBSD__ < 14) && !defined(__MidnightBSD__)) || defined(__NetBSD__)
+/* Since FreeBSD 14.0-CURRENT, the clearenv(3) function was added to stdlib.
+ * See https://reviews.freebsd.org/R10:597b02675751e48dd04777f1e91fee382bf3a966
+ */
+
 static void
 clearenv(void)
 {
     *environ = NULL;
 }
 
+#endif
 #else
 /* Otherwise assume that we have clearenv available. */
 #endif


[FILE:418:patches/patch-src_redir.c]
--- src/redir.c.orig	2025-01-20 03:11:47 UTC
+++ src/redir.c
@@ -37,9 +37,15 @@
 #include <unistd.h>
 #include <getopt.h>
 #include <limits.h>
+#if defined(__linux__)
 #include <linux/if.h>
 #include <linux/netfilter_ipv4.h>
 #include <linux/netfilter_ipv6/ip6_tables.h>
+#else
+#define SOL_IP          IPPROTO_IP
+#define SOL_IPV6        IPPROTO_IPV6
+#define SO_ORIGINAL_DST 0
+#endif
 
 #include <libcork/core.h>
 


[FILE:405:patches/patch-src_udprelay.c]
--- src/udprelay.c.orig	2025-01-20 03:11:47 UTC
+++ src/udprelay.c
@@ -74,6 +74,11 @@
 #define EWOULDBLOCK EAGAIN
 #endif
 
+#if !defined(__linux__)
+#define SOL_IP   IPPROTO_IP
+#define SOL_IPV6 IPPROTO_IPV6
+#endif
+
 static void server_recv_cb(EV_P_ ev_io *w, int revents);
 static void remote_recv_cb(EV_P_ ev_io *w, int revents);
 static void remote_timeout_cb(EV_P_ ev_timer *watcher, int revents);


[FILE:807:files/shadowsocks_libev.in]
#!/bin/sh
#
# PROVIDE: shadowsocks-libev
# REQUIRE: LOGIN cleanvar
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf to enable shadowsocks-libev:
# shadowsocks_libev_enable (bool):  Set to "NO" by default.
#      Set to "YES" to enable shadowsocks-libev.
# shadowsocks_libev_config (path): Shadowsocks config file.
#      Defaults to "%%PREFIX%%/etc/shadowsocks-libev/config.json"


. /etc/rc.subr

name="shadowsocks_libev"
rcvar=shadowsocks_libev_enable


load_rc_config $name

: ${shadowsocks_libev_enable:="NO"}
: ${shadowsocks_libev_config="%%PREFIX%%/etc/shadowsocks-libev/config.json"}

command="%%PREFIX%%/bin/ss-server" 
pidfile="/var/run/shadowsocks-libev.pid"
required_files="${shadowsocks_libev_config}"

command_args="-f $pidfile -c $shadowsocks_libev_config"

run_rc_command "$1"

