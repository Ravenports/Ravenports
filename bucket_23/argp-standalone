# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		argp-standalone
VERSION=		1.5.0
REVISION=		1
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Arguments parsing functions from GLIBC
HOMEPAGE=		https://github.com/argp-standalone/argp-standalone/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/argp-standalone:argp-standalone:1.5.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

NOT_FOR_OPSYS=		linux

USES=			meson gettext

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:stock
LICENSE_AWK=		TERMS:"_ARGP_H"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/argp.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/argp-standalone
MESON_ARGS=		-Ddefault_library=both

post-install:
	${INSTALL_DATA} ${WRKSRC}/argp.h ${STAGEDIR}${PREFIX}/include

[FILE:103:descriptions/desc.primary]
It is standalone version of argp - part of glibc library.
It was separated off glibc by Niels Mueller.


[FILE:123:distinfo]
c29eae929dfebd575c38174f2c8c315766092cec99a8f987569d0cad3c6d64f6        65889 argp-standalone-argp-standalone-1.5.0.tar.gz


[FILE:37:manifests/plist.primary]
lib/
 libargp.so.0
 libargp.so.0.0.0


[FILE:43:manifests/plist.dev]
include/argp.h
lib/
 libargp.a
 libargp.so


[FILE:1500:patches/patch-meson.build]
From e4b42480f6fd63a117e1d8a3d90fb69434133c28 Mon Sep 17 00:00:00 2001
From: Daniel Engberg <daniel.engberg.lists@pyret.net>
Date: Thu, 5 May 2022 08:21:43 +0200
Subject: [PATCH] Allow both static and shared builds using Meson on non
 Windows platforms

Allow builds to be both or either static and shared instead of
hardcoding static and create symlinks for shared library as used
in multiple distributions
---
 meson.build | 26 +++++++++++++++++++++-----
 1 file changed, 21 insertions(+), 5 deletions(-)

--- meson.build.orig
+++ meson.build
@@ -17,6 +17,11 @@ conf_data = configuration_data()
 
 cc = meson.get_compiler('c')
 
+if host_machine.system() != 'windows' 
+	soversion = '0'
+	libversion = '0.0.0'
+endif
+
 conf_data.set10('HAVE_CONFIG_H', true)
 conf_data.set10('HAVE_ALLOCA_H', cc.check_header('alloca.h'))
 
@@ -68,12 +73,23 @@ if conf_data.get('HAVE_MEMPCPY') == 0
 	argp_source += files(['mempcpy.c'])
 endif
 
-argp_library = static_library('argp',
-	argp_source,
-	include_directories : '.',
-	dependencies : deps,
-	install : true
+if host_machine.system() != 'windows'
+	argp_library = library('argp',
+		argp_source,
+		include_directories : '.',
+		soversion: soversion,
+		version: libversion,
+		dependencies : deps,
+		install : true
+	)
+else	
+	argp_library = static_library('argp',
+		argp_source,
+		include_directories : '.',
+		dependencies : deps,
+		install : true
 )
+endif
 
 argp_dep = declare_dependency(link_with : argp_library,
 	include_directories : '.')

