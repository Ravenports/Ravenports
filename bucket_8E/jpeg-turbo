# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		jpeg-turbo
VERSION=		1.5.1
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	SIMD-accelerated JPEG codec which replaces libjpeg
HOMEPAGE=		http://libjpeg-turbo.virtualgl.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/libjpeg-turbo/1.5.1
DISTFILE[1]=		libjpeg-turbo-1.5.1.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			turbo
			docs
			examples

OPTIONS_AVAILABLE=	NASM
OPTIONS_STANDARD=	NASM
OPT_ON[x86_64]=		NASM
OPT_ON[i386]=		NASM

EXRUN[turbo]=		jpeg-turbo:primary:standard

USES=			cpe libtool

DISTNAME=		libjpeg-turbo-1.5.1

LICENSE=		BSD3CLAUSE:primary CUSTOM1:primary ZLIB:primary
LICENSE_NAME=		CUSTOM1:"Independent JPEG Group License"
LICENSE_SCHEME=		multi
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/turbojpeg.c
			ZLIB:{{WRKSRC}}/simd/jsimdext.inc
			CUSTOM1:{{WRKSRC}}/README.ijg

CPE_PRODUCT=		libjpeg-turbo
CPE_VENDOR=		d.r.commander
FPC_EQUIVALENT=		graphics/jpeg-turbo

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-jpeg8
			--with-pic

MAKE_ARGS=		docdir="{{STD_DOCDIR}}"
			exampledir="{{STD_EXAMPLESDIR}}"

INSTALL_TARGET=		install-strip

TEST_TARGET=		test

[NASM].DESCRIPTION=			Use nasm to construct optimized assembly
[NASM].BUILD_DEPENDS_ON=		nasm:primary:standard

[FILE:462:descriptions/desc.primary]
This is a drop-in replacement for the graphics/jpeg library.

libjpeg-turbo is a high-speed version of libjpeg for x86 and x86-64
processors which uses SIMD instructions (MMX, SSE2, etc.) to accelerate
baseline JPEG compression and decompression.  libjpeg-turbo is generally
2-4x as fast as the unmodified version of libjpeg, all else being equal.

This package contains the standard jpeg library and utilities.
The turbo subpackage contains jpeg-turbo library.


[FILE:902:descriptions/desc.turbo]
libjpeg-turbo is a high-speed version of libjpeg for x86 and x86-64
processors which uses SIMD instructions (MMX, SSE2, etc.) to accelerate
baseline JPEG compression and decompression.  libjpeg-turbo is generally
2-4x as fast as the unmodified version of libjpeg, all else being equal.

libjpeg-turbo was originally based on libjpeg/SIMD by Miyasaka Masaru,
but the TigerVNC and VirtualGL projects made numerous enhancements to
the codec, including improved support for Mac OS X, 64-bit support,
support for 32-bit and big endian pixel formats (RGBA, ABGR, etc.),
accelerated Huffman encoding/decoding, and various bug fixes.
The goal was to produce a fully open source codec that could replace
the partially closed source TurboJPEG/IPP codec used by VirtualGL and
TurboVNC. libjpeg-turbo generally achieves 80-120% of the performance
of TurboJPEG/IPP. It is faster in some areas but slower in others.


[FILE:105:distinfo]
41429d3d253017433f66e3d472b8c7d998491d2f41caa7306b8d9a6f2a2c666c      1650647 libjpeg-turbo-1.5.1.tar.gz


[FILE:272:manifests/plist.primary]
bin/
 cjpeg
 djpeg
 jpegtran
 rdjpgcom
 wrjpgcom
include/
 jconfig.h
 jerror.h
 jmorecfg.h
 jpeglib.h
lib/
 libjpeg.a
 libjpeg.so
 libjpeg.so.8
 libjpeg.so.8.1.2
lib/pkgconfig/libjpeg.pc
share/man/man1/
 cjpeg.1.gz
 djpeg.1.gz
 jpegtran.1.gz
 rdjpgcom.1.gz
 wrjpgcom.1.gz


[FILE:142:manifests/plist.turbo]
bin/tjbench
include/turbojpeg.h
lib/
 libturbojpeg.a
 libturbojpeg.so
 libturbojpeg.so.0
 libturbojpeg.so.0.1.0
lib/pkgconfig/libturbojpeg.pc


[FILE:425:patches/patch-configure]
--- configure.orig	2015-09-21 18:48:41 UTC
+++ configure
@@ -14514,7 +14514,7 @@ case "$host_os" in
   linux*aout*)
     objfmt='a.out'
   ;;
-  linux*)
+  dragonfly* | linux*)
     case "$host_cpu" in
       x86_64)
         objfmt='ELF64'
@@ -14712,7 +14712,7 @@ case "$host_os" in
   linux*aout*)
     objfmt='a.out'
   ;;
-  linux*)
+  dragonfly* | linux*)
     case "$host_cpu" in
       x86_64)
         objfmt='ELF64'


[FILE:335:patches/patch-md5_md5.c]
--- md5/md5.c.orig	2016-09-20 23:36:59 UTC
+++ md5/md5.c
@@ -45,6 +45,8 @@ static void MD5Transform(unsigned int [4
 #include <libkern/OSByteOrder.h>
 #define le32toh(x) OSSwapLittleToHostInt32(x)
 #define htole32(x) OSSwapHostToLittleInt32(x)
+#elif defined __FreeBSD__ || defined __DragonFly__
+#include <sys/endian.h>
 #endif
 
 /*

