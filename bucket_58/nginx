# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		nginx
VERSION=		1.13.12
KEYWORDS=		www
VARIANTS=		standard loaded
SDESC[standard]=	HTTP and reverse proxy server (basic options)
SDESC[loaded]=		HTTP and reverse proxy server (all options)
HOMEPAGE=		https://nginx.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main pgsql certrans ajp cpurge redis2 rdsjson geoip2 dynups fancyindex forminput fairload naxsi sesscrypt pam srcache iconv upprogress upcheck aws rdscsv echo subsfilter footer cslowfs morehead upload setmisc lua pushstrm zip letmath drizzle acclang push authdig davext arrayvar rtmp vod notice stubjson develkit xss eval njs memc
SITES[pgsql]=		GITHUB/FRiCKLE:ngx_postgres:1.0rc7
SITES[certrans]=	GITHUB/grahamedgecombe:nginx-ct:93e9884
SITES[ajp]=		GITHUB/yaoweibin:nginx_ajp_module:bf6cd93
SITES[cpurge]=		GITHUB/FRiCKLE:ngx_cache_purge:2.3
SITES[redis2]=		GITHUB/openresty:redis2-nginx-module:v0.14
SITES[rdsjson]=		GITHUB/openresty:rds-json-nginx-module:v0.14
SITES[geoip2]=		GITHUB/leev:ngx_http_geoip2_module:2.0
SITES[dynups]=		GITHUB/cubicdaiya:ngx_dynamic_upstream:v0.1.6
SITES[fancyindex]=	GITHUB/aperezdc:ngx-fancyindex:v0.4.2
SITES[forminput]=	GITHUB/calio:form-input-nginx-module:v0.12
SITES[fairload]=	GITHUB/cryptofuture:nginx-upstream-fair:b5be36f
SITES[naxsi]=		GITHUB/nbs-system:naxsi:0.55.3
SITES[main]=		http://nginx.org/download/
SITES[sesscrypt]=	GITHUB/openresty:encrypted-session-nginx-module:v0.06
SITES[pam]=		GITHUB/sto:ngx_http_auth_pam_module:v1.5.1
SITES[srcache]=		GITHUB/openresty:srcache-nginx-module:v0.31
SITES[iconv]=		GITHUB/calio:iconv-nginx-module:v0.14
SITES[upprogress]=	GITHUB/masterzen:nginx-upload-progress-module:afb2d31
SITES[upcheck]=		GITHUB/yaoweibin:nginx_upstream_check_module:31b1b42
SITES[aws]=		GITHUB/anomalizer:ngx_aws_auth:2.1.1
SITES[rdscsv]=		GITHUB/openresty:rds-csv-nginx-module:v0.07
SITES[echo]=		GITHUB/openresty:echo-nginx-module:v0.61
SITES[subsfilter]=	GITHUB/yaoweibin:ngx_http_substitutions_filter_module:v0.6.4
SITES[footer]=		GITHUB/alibaba:nginx-http-footer-filter:1.2.2
SITES[cslowfs]=		GITHUB/FRiCKLE:ngx_slowfs_cache:1.10
SITES[morehead]=	GITHUB/openresty:headers-more-nginx-module:v0.32
SITES[upload]=		GITHUB/Austinb:nginx-upload-module:72ec037
SITES[setmisc]=		GITHUB/openresty:set-misc-nginx-module:v0.31
SITES[lua]=		GITHUB/openresty:lua-nginx-module:v0.10.10
SITES[pushstrm]=	GITHUB/wandenberg:nginx-push-stream-module:0.5.2
SITES[zip]=		GITHUB/evanmiller:mod_zip:adf75e9
SITES[letmath]=		GITHUB/arut:nginx-let-module:v0.0.4
SITES[drizzle]=		GITHUB/openresty:drizzle-nginx-module:v0.1.10
SITES[acclang]=		GITHUB/giom:nginx_accept_language_module:2f69842
SITES[push]=		GITHUB/slact:nchan:v1.1.7
SITES[authdig]=		GITHUB/atomx:nginx-http-auth-digest:519dc2a
SITES[davext]=		GITHUB/arut:nginx-dav-ext-module:v0.1.0
SITES[arrayvar]=	GITHUB/openresty:array-var-nginx-module:v0.05
SITES[rtmp]=		GITHUB/arut:nginx-rtmp-module:v1.2.0
SITES[vod]=		GITHUB/kaltura:nginx-vod-module:1.19
SITES[notice]=		GITHUB/kr:nginx-notice:3c95966
SITES[stubjson]=	GITHUB/nginx-modules:ngx_http_json_status_module:0.1
SITES[develkit]=	GITHUB/simpl:ngx_devel_kit:v0.3.0
SITES[xss]=		GITHUB/openresty:xss-nginx-module:v0.05
SITES[eval]=		GITHUB/openresty:nginx-eval-module:2016.06.10
SITES[njs]=		GITHUB/nginx:njs:0.1.13
SITES[memc]=		GITHUB/openresty:memc-nginx-module:v0.18
DISTFILE[1]=		nginx-1.13.12.tar.gz:main
DISTFILE[2]=		generated:geoip2
DISTFILE[3]=		generated:notice
DISTFILE[4]=		generated:push
DISTFILE[5]=		generated:pushstrm
DISTFILE[6]=		generated:subsfilter
DISTFILE[7]=		generated:ajp
DISTFILE[8]=		generated:upcheck
DISTFILE[9]=		generated:acclang
DISTFILE[10]=		generated:authdig
DISTFILE[11]=		generated:pam
DISTFILE[12]=		generated:aws
DISTFILE[13]=		generated:certrans
DISTFILE[14]=		generated:echo
DISTFILE[15]=		generated:morehead
DISTFILE[16]=		generated:eval
DISTFILE[17]=		generated:drizzle
DISTFILE[18]=		generated:sesscrypt
DISTFILE[19]=		generated:lua
DISTFILE[20]=		generated:memc
DISTFILE[21]=		generated:rdscsv
DISTFILE[22]=		generated:rdsjson
DISTFILE[23]=		generated:redis2
DISTFILE[24]=		generated:setmisc
DISTFILE[25]=		generated:srcache
DISTFILE[26]=		generated:xss
DISTFILE[27]=		generated:arrayvar
DISTFILE[28]=		generated:develkit
DISTFILE[29]=		generated:njs
DISTFILE[30]=		generated:davext
DISTFILE[31]=		generated:footer
DISTFILE[32]=		generated:stubjson
DISTFILE[33]=		generated:upload
DISTFILE[34]=		generated:upprogress
DISTFILE[35]=		generated:fairload
DISTFILE[36]=		generated:zip
DISTFILE[37]=		generated:dynups
DISTFILE[38]=		generated:letmath
DISTFILE[39]=		generated:rtmp
DISTFILE[40]=		generated:vod
DISTFILE[41]=		generated:iconv
DISTFILE[42]=		generated:forminput
DISTFILE[43]=		generated:cpurge
DISTFILE[44]=		generated:pgsql
DISTFILE[45]=		generated:cslowfs
DISTFILE[46]=		generated:fancyindex
DISTFILE[47]=		generated:naxsi
DF_INDEX=		1
SPKGS[standard]=	single
SPKGS[loaded]=		single

OPTIONS_AVAILABLE=	LOADED
OPTIONS_STANDARD=	none
VOPTS[loaded]=		LOADED=ON

BUILD_DEPENDS=		pcre:static:standard
BUILDRUN_DEPENDS=	pcre:shared:standard

USERS=			{{WWWOWN}}
GROUPS=			{{WWWGRP}}
USERGROUP_SPKG=		single

USES=			cpe ssl zlib

CPE_PRODUCT=		nginx
CPE_VENDOR=		nginx
FPC_EQUIVALENT=		www/nginx

MUST_CONFIGURE=		yes
CONFIGURE_ARGS=		--prefix={{PREFIX}}/etc/nginx
			--with-cc-opt="-I{{LOCALBASE}}/include"
			--with-ld-opt="-L{{LOCALBASE}}/lib -Wl,-rpath,{{LOCALBASE}}/lib"
			--conf-path={{PREFIX}}/etc/nginx/nginx.conf
			--sbin-path={{PREFIX}}/sbin/nginx
			--pid-path=/var/run/nginx.pid
			--error-log-path=/var/log/nginx/error.log
			--user={{WWWOWN}}
			--group={{WWWGRP}}
			--with-pcre
			--modules-path={{PREFIX}}/libexec/nginx
			--with-file-aio
			--http-client-body-temp-path=/var/tmp/nginx/client_body_temp
			--http-fastcgi-temp-path=/var/tmp/nginx/fastcgi_temp
			--http-proxy-temp-path=/var/tmp/nginx/proxy_temp
			--http-scgi-temp-path=/var/tmp/nginx/scgi_temp
			--http-uwsgi-temp-path=/var/tmp/nginx/uwsgi_temp
			--http-log-path=/var/log/nginx/access.log
			--with-http_addition_module
			--with-http_auth_request_module
			--with-http_dav_module
			--with-http_flv_module
			--with-http_gzip_static_module
			--with-http_gunzip_module
			--with-http_mp4_module
			--with-http_random_index_module
			--with-http_realip_module
			--with-http_secure_link_module
			--with-http_slice_module
			--with-http_ssl_module
			--with-http_stub_status_module
			--with-http_sub_module
			--with-http_v2_module
			--with-mail=dynamic
			--with-mail_ssl_module
			--with-stream=dynamic
			--with-stream_ssl_module
			--with-stream_ssl_preread_module
			--with-threads

PLIST_SUB=		WWWOWN={{WWWOWN}}
			WWWGRP={{WWWGRP}}
			NGINX_TMPDIR=/var/tmp/nginx
			NGINX_LOGDIR=/var/log/nginx
RC_SUBR=		nginx:single
SUB_FILES=		pkg-message-single
SUB_LIST=		WWWOWN={{WWWOWN}}
			WWWGRP={{WWWGRP}}
			NGINX_TMPDIR=/var/tmp/nginx
			NGINX_LOGDIR=/var/log/nginx

[LOADED].DESCRIPTION=			All options enabled (heavy dependencies)
[LOADED].BUILDRUN_DEPENDS_ON=		libmaxminddb:single:standard
					libGD:single:standard
					expat:shared:standard
[LOADED].BUILD_DEPENDS_ON=		expat:static:standard
[LOADED].CONFIGURE_ARGS_OFF=		--without-mail_imap_module
					--without-mail_pop3_module
					--without-mail_smtp_module
[LOADED].CONFIGURE_ARGS_ON=		--with-http_perl_module=dynamic
					--with-http_xslt_module=dynamic
					--with-http_image_filter_module=dynamic
					--add-module={{WRKDIR}}/nginx-notice-3c95966
					--add-module={{WRKDIR}}/nchan-1.1.7
					--add-module={{WRKDIR}}/nginx-push-stream-module-0.5.2
					--add-module={{WRKDIR}}/ngx_http_substitutions_filter_module-0.6.4
					--add-module={{WRKDIR}}/nginx_ajp_module-bf6cd93
					--add-module={{WRKDIR}}/nginx_upstream_check_module-31b1b42
					--add-module={{WRKDIR}}/nginx_accept_language_module-2f69842
					--add-module={{WRKDIR}}/ngx_aws_auth-2.1.1
					--add-module={{WRKDIR}}/rds-csv-nginx-module-0.07
					--add-module={{WRKDIR}}/rds-json-nginx-module-0.14
					--add-module={{WRKDIR}}/redis2-nginx-module-0.14
					--add-module={{WRKDIR}}/srcache-nginx-module-0.31
					--add-module={{WRKDIR}}/ngx_devel_kit-0.3.0
					--add-module={{WRKDIR}}/encrypted-session-nginx-module-0.06
					--add-module={{WRKDIR}}/array-var-nginx-module-0.05
					--add-module={{WRKDIR}}/xss-nginx-module-0.05
					--add-module={{WRKDIR}}/nginx-dav-ext-module-0.1.0
					--add-module={{WRKDIR}}/nginx-http-footer-filter-1.2.2
					--add-module={{WRKDIR}}/ngx_http_json_status_module-0.1
					--add-module={{WRKDIR}}/nginx-upload-module-72ec037
					--add-module={{WRKDIR}}/nginx-upload-progress-module-afb2d31
					--add-module={{WRKDIR}}/nginx-let-module-0.0.4
					--add-module={{WRKDIR}}/ngx_slowfs_cache-1.10
					--add-module={{WRKDIR}}/ngx_cache_purge-2.3
					--add-module={{WRKDIR}}/ngx_postgres-1.0rc7
					--add-dynamic-module={{WRKDIR}}/ngx_http_geoip2_module-2.0
					--add-dynamic-module={{WRKDIR}}/nginx-http-auth-digest-519dc2a
					--add-dynamic-module={{WRKDIR}}/echo-nginx-module-0.61
					--add-dynamic-module={{WRKDIR}}/headers-more-nginx-module-0.32
					--add-dynamic-module={{WRKDIR}}/nginx-eval-module-2016.06.10
					--add-dynamic-module={{WRKDIR}}/memc-nginx-module-0.18
					--add-dynamic-module={{WRKDIR}}/set-misc-nginx-module-0.31
					--add-dynamic-module={{WRKDIR}}/njs-0.1.13/nginx
					--add-dynamic-module={{WRKDIR}}/nginx-upstream-fair-b5be36f
					--add-dynamic-module={{WRKDIR}}/mod_zip-adf75e9
					--add-dynamic-module={{WRKDIR}}/ngx_dynamic_upstream-0.1.6
					--add-dynamic-module={{WRKDIR}}/nginx-rtmp-module-1.2.0
					--add-dynamic-module={{WRKDIR}}/nginx-vod-module-1.19
					--add-dynamic-module={{WRKDIR}}/iconv-nginx-module-0.14
					--add-dynamic-module={{WRKDIR}}/form-input-nginx-module-0.12
					--add-dynamic-module={{WRKDIR}}/ngx-fancyindex-0.4.2
					--add-dynamic-module={{WRKDIR}}/naxsi-0.55.3/naxsi_src
[LOADED].DF_INDEX_ON=			2
					3
					4
					5
					6
					7
					8
					9
					10
					12
					14
					15
					16
					18
					20
					21
					22
					23
					24
					25
					26
					27
					28
					29
					30
					31
					32
					33
					34
					35
					36
					37
					38
					39
					40
					41
					42
					43
					44
					45
					46
					47
[LOADED].EXTRA_PATCHES_ON=		extra-patch-ngx_http_notice_module.c
					extra-patch-upstream-check-module
					extra-patch-iconv
					extra-patch-postgresql
[LOADED].GNOME_COMPONENTS_ON=		libxml2
					libxslt
[LOADED].KEYWORDS_ON=			perl
[LOADED].USES_ON=			perl
					pgsql

post-patch:
	${REINPLACE_CMD} 's!%%HTTP_PORT%%!80!; \
		s!%%PREFIX%%!${PREFIX}!; \
		s!%%NGINX_ERRORLOG%%!/var/log/nginx/error.log!' \
		${WRKSRC}/conf/nginx.conf

post-patch-LOADED-ON:
	${REINPLACE_CMD} -e "/ngx_feature_path/ \
	s|/usr/include/libxml2|${LOCALBASE}/include/libxml2 ${LOCALBASE}/include|" \
	${WRKSRC}/auto/lib/libxslt/conf
	${REINPLACE_CMD} 's!%%PREFIX%%!${LOCALBASE}!g' \
		${WRKDIR}/iconv-nginx-module-0.14/config
	${REINPLACE_CMD} 's!%%PREFIX%%!${LOCALBASE}!g' \
		${WRKDIR}/ngx_postgres-1.0rc7/config

do-build:
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD})

post-install:
	${CAT} ${WRKSRC}/conf/nginx.conf \
		>>${STAGEDIR}${PREFIX}/etc/nginx/nginx.conf-dist
	${INSTALL_MAN} ${WRKSRC}/objs/nginx.8 \
		${STAGEDIR}${MAN8PREFIX}/man/man8

do-install-LOADED-ON:
	@${MKDIR} ${STAGEDIR}${PREFIX}/${SITE_ARCH_REL}/auto/nginx
	${INSTALL_PROGRAM} ${WRKSRC}/objs/src/http/modules/perl/blib/arch/auto/nginx/nginx.so \
		${STAGEDIR}${PREFIX}/${SITE_ARCH_REL}/auto/nginx
	${INSTALL_DATA} ${WRKSRC}/objs/src/http/modules/perl/blib/lib/nginx.pm \
		${STAGEDIR}${PREFIX}/${SITE_ARCH_REL}/

do-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/etc/nginx \
		${STAGEDIR}${PREFIX}/libexec/nginx \
		${STAGEDIR}/var/tmp/nginx \
		${STAGEDIR}/var/log/nginx \
		${STAGEDIR}${PREFIX}/www/nginx-dist
	${INSTALL_PROGRAM} ${WRKSRC}/objs/nginx ${STAGEDIR}${PREFIX}/sbin
.for i in koi-utf koi-win win-utf
	${INSTALL_DATA} ${WRKSRC}/conf/${i} ${STAGEDIR}${PREFIX}/etc/nginx
.endfor
.for i in fastcgi_params mime.types scgi_params uwsgi_params
	${INSTALL_DATA} ${WRKSRC}/conf/${i} ${STAGEDIR}${PREFIX}/etc/nginx/${i}-dist
.endfor
.for i in index.html 50x.html
	${INSTALL_DATA} ${WRKSRC}/html/${i} ${STAGEDIR}${PREFIX}/www/nginx-dist
.endfor
	${ECHO_CMD} >> ${STAGEDIR}${PREFIX}/www/nginx-dist/EXAMPLE_DIRECTORY-DONT_ADD_OR_TOUCH_ANYTHING
	(cd ${WRKSRC}/objs/ && ${FIND} . -depth -maxdepth 1 -name '*.so' -type f \
		-exec ${INSTALL_PROGRAM} {} ${STAGEDIR}${PREFIX}/libexec/nginx \;)

[FILE:351:descriptions/desc.single.standard]
NGINX is a high performance edge web server with the lowest memory
footprint and the key features to build modern and efficient web
infrastructure.

NGINX functionality includes HTTP server, HTTP and mail reverse proxy,
caching, load balancing, compression, request throttling, connection
multiplexing and reuse, SSL offload and HTTP media streaming.


[FILE:3222:descriptions/desc.single.loaded]
NGINX is a high performance edge web server with the lowest memory
footprint and the key features to build modern and efficient web
infrastructure.

NGINX functionality includes HTTP server, HTTP and mail reverse proxy,
caching, load balancing, compression, request throttling, connection
multiplexing and reuse, SSL offload and HTTP media streaming.

This package contains additional modules over the standard nginx:
  geoip2          : handles maxmind geoip2 databases
  notice          : Ancient module for displaying downtime notices
  nchan           : pub/sub server using http push or websockets
  push stream     : Stream pushing using eventsource, websockets, polling
  substitutions   : Regex and fixed string substitutions filter
  AJP             : Direct connection to AJP port
  health          : Supports upstream health checks
  accept language : Parse Accept-Language header to determine locale
  AWS             : Proxy to authenticated AWS services
  RDB-CSV         : Resty-DBD Streams to Comma-Separated Values converter
  RDB-JSON        : Resty-DBD Streams to JSON format converter
  REDIS2          : Allows non-blocking connection to Redis 2.0 server
  SR cache        : Transparent subrequest-based caching layout
  XSS             : Cross-site scripting support
  session-crypt   : Encrypts and decrypts nginx variable values
  array variables : Support for array types in nginx config files
  DAV extension   : Rest of WebDAV support (PROPFIND and OPTIONS)
  Digest          : RFC 2617 Digest authentication support
  Echo goodies    : Add support for echo, sleep, time, exec, etc.
  more headers    : Set, add and clear arbitrary headers
  eval            : Experimental! Capture subrequest responses into vars
  memc            : Extend memcached module with additional commands
  set misc        : Add various set_xxx directives to rewrite module
  njs             : NginScript enables http and stream variable handlers
  xslt            : Transforms xml responses using xslt stylesheets
  footer          : Body filter that adds string to page footer
  stub status     : Version of stub status with json-formatted output
  upload          : file uploads - multipart/form-data encoding (RFC 1867)
  upload progress : Monitors RFC 1867 uploads during transmission
  fair balancer   : Enhancement of round-robin load balancer
  zip             : Low memory dynamic ZIP archive assembler
  dyn upstream    : Operates upstreams dynamically with HTTP APIs
  let (math)      : support for arithmetic operation
  rtmp            : Media Streaming Server
  VOD repackager  : On-the-fly repackaging of MP4 files to DASH, HDS, HLS, MSS
  iconv           : character encoding set converter
  forminput       : HTTP POST and PUT parser to populate nginx variables
  cache purge     : Enables content purging from fastcgi, proxy, scgi, uwsgi
  slowfs cache    : Enables fast caching of static files from slow FS
  postgresql      : Enabled direct communication with PostgreSQL database
  fancy index     : Enables autoindex with style (footers, headers, css)
  image filter    : Transforms images in JPEG, GIF, PNG, and WebP formats
  naxsi           : Web App Firewall, "Nginx Anti XSS & SQL Injection"


[FILE:5593:distinfo]
fb92f5602cdb8d3ab1ad47dbeca151b185d62eedb67d347bbe9d79c1438c85de      1016311 nginx-1.13.12.tar.gz
ebb4652c4f9a2e1ee31fddefc4c93ff78e651a4b2727d3453d026bccbd708d99         6766 leev-ngx_http_geoip2_module-2.0.tar.gz
e829fc94178cc8c91fef15a1fc44ee7ac162c13eddc0bba4c9427aaa23386885         3343 kr-nginx-notice-3c95966.tar.gz
c8ae7791560ef19a0fec459f424366a09e3baf52ab0fc4938ffce8d962b6abd6       608690 slact-nchan-1.1.7.tar.gz
1d07f38acdb8194bd49344b0ba21de101070de9b8731d27a8d22e928850bc199       182008 wandenberg-nginx-push-stream-module-0.5.2.tar.gz
ed4ddbcf0c434f4a1e97b61251a63ace759792764bd5cb79ff20efe348db8db3        92230 yaoweibin-ngx_http_substitutions_filter_module-0.6.4.tar.gz
9e3f78ea73e2d606a95ee64fd3affa4c249f9b342e66b6b11b63061791f28316       109704 yaoweibin-nginx_ajp_module-bf6cd93.tar.gz
d7225b92feb359b86cefd62915c69317ac7b6a40fd697999e94b7ca4e3882fc7       130039 yaoweibin-nginx_upstream_check_module-31b1b42.tar.gz
5534ca63cdfc2a7dc4e1cbf9c2d54d3ed3f0e6c86b4a95be48ec0a3f41cc1eb0         3393 giom-nginx_accept_language_module-2f69842.tar.gz
6ef8c81267cbb2f912fa3add846fddaaab06d604155de322dad83912410adafc        17778 atomx-nginx-http-auth-digest-519dc2a.tar.gz
77676842919134af88a7b4bfca4470223e3a00d287d17c0dbdc9a114a685b6e7         6863 sto-ngx_http_auth_pam_module-1.5.1.tar.gz
5b9a4f14bc8b665524a1c4c2c38cdd3ca9bfe711621add943b10b75bc3ca63f9        15344 anomalizer-ngx_aws_auth-2.1.1.tar.gz
72fdd125b9207cdda135f368095f85b943a78a4ff004d1cd217972e12b1571b2         7224 grahamedgecombe-nginx-ct-93e9884.tar.gz
2e6a03032555f5da1bdff2ae96c96486f447da3da37c117e0f964ae0753d22aa        53155 openresty-echo-nginx-module-0.61.tar.gz
c6d9dab8ea1fc997031007e2e8f47cced01417e203cd88d53a9fe9f6ae138720        28033 openresty-headers-more-nginx-module-0.32.tar.gz
6b91d3c2c2f254ebb37eb3dd6dd41048dfb18320bb98a3afdd1ad38b47f6d609        14188 openresty-nginx-eval-module-2016.06.10.tar.gz
4033b9af73241a695ff07162969ea2212f5401dd484f204b8e3e50f488f84a94        50674 openresty-drizzle-nginx-module-0.1.10.tar.gz
fa6537c406cee1dc7acd6152d16dba4581d53587860a0642f1b0f7c817ee006d        11128 openresty-encrypted-session-nginx-module-0.06.tar.gz
b4acb84e2d631035a516d61830c910ef6e6485aba86096221ec745e0dbb3fbc9       611973 openresty-lua-nginx-module-0.10.10.tar.gz
4e280d1dcb8b312bc7875604c1e35b17879279126d3d5fbf482aa9cc7c11276d        37113 openresty-memc-nginx-module-0.18.tar.gz
b204909c6fb194fe8fed7627a3733bc9598f64251dc04a5b6a5bbd612e925324        19444 openresty-rds-csv-nginx-module-0.07.tar.gz
99aedf222a9664484918392988cce41b1a6238240d42f8bd44f5ff102c05c36c        33496 openresty-rds-json-nginx-module-0.14.tar.gz
d830e072fcb4acee8490ba3e38eee6034fd884a954d17ad4efeb397032c58a71        27924 openresty-redis2-nginx-module-0.14.tar.gz
97946a68937b50ab8637e1a90a13198fe376d801dc3e7447052e43c28e9ee7de        29359 openresty-set-misc-nginx-module-0.31.tar.gz
3f9729e73a8340926fa9d9fc15707c2f287cd27b6a9fe42e83f660ca48a5972d        48310 openresty-srcache-nginx-module-0.31.tar.gz
958bd8de773601d8d3138501cc4be0420f1c818a3987a70cc9c0023371e432cf        11477 openresty-xss-nginx-module-0.05.tar.gz
c949d4be6f3442c8e2937046448dc8d8def25c0e0fa6f4e805144cea45eabe80        11280 openresty-array-var-nginx-module-0.05.tar.gz
88e05a99a8a7419066f5ae75966fb1efc409bad4522d14986da074554ae61619        66455 simpl-ngx_devel_kit-0.3.0.tar.gz
225596159cb8cbea30f0a2418bf9cfb8f3b154c083755d0644ebd53e6a08d952       203782 nginx-njs-0.1.13.tar.gz
6b004eed8ea16ad8de4d304027bf0413cc323a95914e58625a7dc066481aae3a         6614 arut-nginx-dav-ext-module-0.1.0.tar.gz
3493b54460c59370f9f60c6e662862752f1920fc6e684f7a66bb2b3260692813         3934 alibaba-nginx-http-footer-filter-1.2.2.tar.gz
a993a0f25b58d3b69aea709a7605de5f7f08e6a1e27f83c8ce5282e5a44e3a90         6738 nginx-modules-ngx_http_json_status_module-0.1.tar.gz
c6d4e38ad0712c898cc53721f492f8f73acf2753cc0a0769fa34d4d6ba4e8efd        28303 Austinb-nginx-upload-module-72ec037.tar.gz
6318851cc3a624aaad3b1f4cd9f51f79c86575c53dfe0c28bbdcf9470b6a33e6        17269 masterzen-nginx-upload-progress-module-afb2d31.tar.gz
e765afcaab6cd1601e914039a8d00ab18eb6fe01180c58e0e4e098bc5b4d8233        10174 cryptofuture-nginx-upstream-fair-b5be36f.tar.gz
1a754c94bdf2c5d4feabe8d1c7e07780965dbd1f1382e0a965bb5f2f80d16821        26164 evanmiller-mod_zip-adf75e9.tar.gz
056fcd63cab39c2f0144d6a8c3ce16e8ae2cfb6e02ad66e5972ffeeca6c6a4d3        11015 cubicdaiya-ngx_dynamic_upstream-0.1.6.tar.gz
cbf6fcddc00a7e30289134bdeace12565e000cc7d4efee2d2ebb8799d0b88270        20534 arut-nginx-let-module-0.0.4.tar.gz
a8026f5ade30b178a06f12c46dff053cfe12256016ad465a46646183086b16b0       519895 arut-nginx-rtmp-module-1.2.0.tar.gz
ea71c02fc9257463a3cb579db7dc2c76fbc4dd1b2657551bf6d78ec722be99bf       407765 kaltura-nginx-vod-module-1.19.tar.gz
b8b9f355c05c0790226512f6732348a2404d48531688a1fc04ce6768163bf462        13133 calio-iconv-nginx-module-0.14.tar.gz
5c1869d55897075adb3fdf840b21060dc54669a1f840a36d1539acc7e59dd106        11090 calio-form-input-nginx-module-0.12.tar.gz
cb7d5f22919c613f1f03341a1aeb960965269302e9eb23425ccaabd2f5dcbbec        11717 FRiCKLE-ngx_cache_purge-2.3.tar.gz
c942e674a7273ab87caab4dcad626ab54852be192c29b1add50d2cb535e3cbb9        40742 FRiCKLE-ngx_postgres-1.0rc7.tar.gz
aef0065bfdfdb4d2740a95311654bd8af218b1002a02e06f8129afbf9e17e195        11122 FRiCKLE-ngx_slowfs_cache-1.10.tar.gz
8327150864ca267b735d550d3304030efbbd863fdddfe0a94e970f249a8827ee        22047 aperezdc-ngx-fancyindex-0.4.2.tar.gz
0b3c95d250772dc89ad8b49e47c1e024c5ae2c76c0cffa445e9fe05c4dd13495       187416 nbs-system-naxsi-0.55.3.tar.gz


[FILE:777:manifests/plist.single.standard]
@dir %%NGINX_LOGDIR%%
@dir %%NGINX_TMPDIR%%
@sample etc/nginx/fastcgi_params-dist etc/nginx/fastcgi_params
@sample etc/nginx/mime.types-dist etc/nginx/mime.types
@sample etc/nginx/nginx.conf-dist etc/nginx/nginx.conf
@sample etc/nginx/scgi_params-dist etc/nginx/scgi_params
@sample etc/nginx/uwsgi_params-dist etc/nginx/uwsgi_params
etc/nginx/
 koi-utf
 koi-win
 win-utf
libexec/nginx/
 ngx_mail_module.so
 ngx_stream_module.so
sbin/nginx
share/man/man8/nginx.8.gz
www/nginx-dist/
 50x.html
 EXAMPLE_DIRECTORY-DONT_ADD_OR_TOUCH_ANYTHING
 index.html
@preexec mkdir -p -m 755 %D/www/nginx-dist
@preexec if [ ! -d %D/www/nginx/ ] ; then ln -fs %D/www/nginx-dist %D/www/nginx; fi
@preexec chmod a-w %D/www/nginx-dist
@postunexec if [ -L %D/www/nginx ]; then rm -f %D/www/nginx; fi


[FILE:1484:manifests/plist.single.loaded]
@dir %%NGINX_LOGDIR%%
@dir %%NGINX_TMPDIR%%
@sample etc/nginx/fastcgi_params-dist etc/nginx/fastcgi_params
@sample etc/nginx/mime.types-dist etc/nginx/mime.types
@sample etc/nginx/nginx.conf-dist etc/nginx/nginx.conf
@sample etc/nginx/scgi_params-dist etc/nginx/scgi_params
@sample etc/nginx/uwsgi_params-dist etc/nginx/uwsgi_params
etc/nginx/
 koi-utf
 koi-win
 win-utf
lib/perl5/site_perl/mach/5.26/auto/nginx/nginx.so
lib/perl5/site_perl/mach/5.26/nginx.pm
libexec/nginx/
 ngx_dynamic_upstream_module.so
 ngx_http_auth_digest_module.so
 ngx_http_echo_module.so
 ngx_http_eval_module.so
 ngx_http_fancyindex_module.so
 ngx_http_form_input_module.so
 ngx_http_geoip2_module.so
 ngx_http_headers_more_filter_module.so
 ngx_http_iconv_module.so
 ngx_http_image_filter_module.so
 ngx_http_js_module.so
 ngx_http_memc_module.so
 ngx_http_naxsi_module.so
 ngx_http_perl_module.so
 ngx_http_set_misc_module.so
 ngx_http_upstream_fair_module.so
 ngx_http_vod_module.so
 ngx_http_xslt_filter_module.so
 ngx_http_zip_module.so
 ngx_mail_module.so
 ngx_rtmp_module.so
 ngx_stream_js_module.so
 ngx_stream_module.so
 ngx_stream_geoip2_module.so
sbin/nginx
share/man/man8/nginx.8.gz
www/nginx-dist/
 50x.html
 EXAMPLE_DIRECTORY-DONT_ADD_OR_TOUCH_ANYTHING
 index.html
@preexec mkdir -p -m 755 %D/www/nginx-dist
@preexec if [ ! -d %D/www/nginx/ ] ; then ln -fs %D/www/nginx-dist %D/www/nginx; fi
@preexec chmod a-w %D/www/nginx-dist
@postunexec if [ -L %D/www/nginx ]; then rm -f %D/www/nginx; fi


[FILE:764:files/extra-patch-iconv]
--- ../iconv-nginx-module-0.14/config.orig	2013-04-16 17:57:17.000000000 -0700
+++ ../iconv-nginx-module-0.14/config	2013-05-01 17:16:28.134624745 -0700
@@ -39,12 +39,12 @@
     fi
 
     if [ $ngx_found = no ]; then
-        ngx_feature="libiconv in /usr/local/"
-        ngx_feature_path="/usr/local/include"
+        ngx_feature="libiconv in %%PREFIX%%/"
+        ngx_feature_path="%%PREFIX%%/include"
         if [ $NGX_RPATH = YES ]; then
-            ngx_feature_libs="-R/usr/local/lib -L/usr/local/lib -liconv"
+            ngx_feature_libs="-R%%PREFIX%%/lib -L%%PREFIX%%/lib -liconv"
         else
-            ngx_feature_libs="-L/usr/local/lib -liconv"
+            ngx_feature_libs="-L%%PREFIX%%/lib -liconv"
         fi
         . auto/feature
     fi


[FILE:842:files/extra-patch-nginx-ct]
--- ../nginx-ct-93e9884/ngx_ssl_ct_module.c.orig	2017-07-23 12:03:35 UTC
+++ ../nginx-ct-93e9884/ngx_ssl_ct_module.c
@@ -160,7 +160,7 @@ next:
 
 #ifndef OPENSSL_IS_BORINGSSL
     /* add OpenSSL TLS extension */
-#  if OPENSSL_VERSION_NUMBER >= 0x10101000L
+#  if OPENSSL_VERSION_NUMBER >= 0x10101000L && !defined(LIBRESSL_VERSION_NUMBER)
     int context = SSL_EXT_CLIENT_HELLO
                 | SSL_EXT_TLS1_2_SERVER_HELLO
                 | SSL_EXT_TLS1_3_CERTIFICATE;
@@ -184,7 +184,7 @@ next:
 }
 
 #ifndef OPENSSL_IS_BORINGSSL
-#  if OPENSSL_VERSION_NUMBER >= 0x10101000L
+#  if OPENSSL_VERSION_NUMBER >= 0x10101000L && !defined(LIBRESSL_VERSION_NUMBER)
 int ngx_ssl_ct_ext_cb(SSL *s, unsigned int ext_type, unsigned int context,
     const unsigned char **out, size_t *outlen, X509 *x, size_t chainidx,
     int *al, void *add_arg) {


[FILE:360:files/extra-patch-ngx_http_notice_module.c]
--- ../nginx-notice-3c95966/ngx_http_notice_module.c.orig	2009-07-16 18:37:57.000000000 +0200
+++ ../nginx-notice-3c95966/ngx_http_notice_module.c
@@ -153,7 +153,7 @@
         return NGX_HTTP_NOT_ALLOWED;
     }
 
-    rc = ngx_http_discard_body(r);
+    rc = ngx_http_discard_request_body(r);
 
     if (rc != NGX_OK && rc != NGX_AGAIN) {
         return rc;


[FILE:1241:files/extra-patch-postgresql]
--- ../ngx_postgres-1.0rc7/config.orig	2015-05-26 20:52:25.649166000 +0300
+++ ../ngx_postgres-1.0rc7/config
@@ -48,12 +48,12 @@
 
     if [ $ngx_found = no ]; then
         # FreeBSD
-        ngx_feature="libpq library in /usr/local/"
-        ngx_feature_path="/usr/local/include"
+        ngx_feature="libpq library in %%PREFIX%%/"
+        ngx_feature_path="%%PREFIX%%/include"
         if [ $NGX_RPATH = YES ]; then
-            ngx_feature_libs="-R/usr/local/lib -L/usr/local/lib -lpq"
+            ngx_feature_libs="-R%%PREFIX%%/lib -L%%PREFIX%%/lib -lpq"
         else
-            ngx_feature_libs="-L/usr/local/lib -lpq"
+            ngx_feature_libs="-L%%PREFIX%%/lib -lpq"
         fi
         . auto/feature
     fi
--- ../ngx_postgres-1.0rc7/src/ngx_postgres_module.c.orig	2016-11-20 15:34:25.763542000 -0500
+++ ../ngx_postgres-1.0rc7/src/ngx_postgres_module.c
@@ -1320,12 +1320,14 @@
             continue;
         }
 
+#if (nginx_version < 1011006)
         if (uscfp[i]->default_port && url->default_port
             && (uscfp[i]->default_port != url->default_port))
         {
             dd("default_port doesn't match");
             continue;
         }
+#endif
 
         dd("returning");
         return uscfp[i];


[FILE:7578:files/extra-patch-upstream-check-module]
--- src/http/modules/ngx_http_upstream_hash_module.c.orig	2017-08-08 15:00:13 UTC
+++ src/http/modules/ngx_http_upstream_hash_module.c
@@ -9,6 +9,9 @@
 #include <ngx_core.h>
 #include <ngx_http.h>
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+#include "ngx_http_upstream_check_module.h"
+#endif
 
 typedef struct {
     uint32_t                            hash;
@@ -235,6 +238,15 @@ ngx_http_upstream_get_hash_peer(ngx_peer
             goto next;
         }
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+        ngx_log_debug1(NGX_LOG_DEBUG_HTTP, pc->log, 0,
+            "get hash peer, check_index: %ui",
+             peer->check_index);
+        if (ngx_http_upstream_check_peer_down(peer->check_index)) {
+            goto next;
+        }
+#endif
+
         if (peer->max_fails
             && peer->fails >= peer->max_fails
             && now - peer->checked <= peer->fail_timeout)
@@ -538,6 +550,15 @@ ngx_http_upstream_get_chash_peer(ngx_pee
                 continue;
             }
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+            ngx_log_debug1(NGX_LOG_DEBUG_HTTP, pc->log, 0,
+                "get consistent_hash peer, check_index: %ui",
+                 peer->check_index);
+            if (ngx_http_upstream_check_peer_down(peer->check_index)) {
+                continue;
+            }
+#endif
+
             if (peer->server.len != server->len
                 || ngx_strncmp(peer->server.data, server->data, server->len)
                    != 0)
--- src/http/modules/ngx_http_upstream_ip_hash_module.c.orig	2017-08-08 15:00:13 UTC
+++ src/http/modules/ngx_http_upstream_ip_hash_module.c
@@ -9,6 +9,9 @@
 #include <ngx_core.h>
 #include <ngx_http.h>
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+#include "ngx_http_upstream_check_module.h"
+#endif
 
 typedef struct {
     /* the round robin data must be first */
@@ -205,6 +208,15 @@ ngx_http_upstream_get_ip_hash_peer(ngx_p
             goto next;
         }
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+        ngx_log_debug1(NGX_LOG_DEBUG_HTTP, pc->log, 0,
+            "get ip_hash peer, check_index: %ui",
+             peer->check_index);
+        if (ngx_http_upstream_check_peer_down(peer->check_index)) {
+            goto next;
+        }
+#endif
+
         if (peer->max_fails
             && peer->fails >= peer->max_fails
             && now - peer->checked <= peer->fail_timeout)
--- src/http/modules/ngx_http_upstream_least_conn_module.c.orig	2017-08-08 15:00:13 UTC
+++ src/http/modules/ngx_http_upstream_least_conn_module.c
@@ -9,6 +9,9 @@
 #include <ngx_core.h>
 #include <ngx_http.h>
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+#include "ngx_http_upstream_check_module.h"
+#endif
 
 static ngx_int_t ngx_http_upstream_init_least_conn_peer(ngx_http_request_t *r,
     ngx_http_upstream_srv_conf_t *us);
@@ -147,6 +150,16 @@ ngx_http_upstream_get_least_conn_peer(ng
             continue;
         }
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+        ngx_log_debug1(NGX_LOG_DEBUG_HTTP, pc->log, 0,
+                "get least_conn peer, check_index: %ui",
+                peer->check_index);
+
+        if (ngx_http_upstream_check_peer_down(peer->check_index)) {
+            continue;
+        }
+#endif
+
         if (peer->max_fails
             && peer->fails >= peer->max_fails
             && now - peer->checked <= peer->fail_timeout)
@@ -202,6 +215,16 @@ ngx_http_upstream_get_least_conn_peer(ng
                 continue;
             }
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+            ngx_log_debug1(NGX_LOG_DEBUG_HTTP, pc->log, 0,
+                    "get least_conn peer, check_index: %ui",
+                    peer->check_index);
+
+            if (ngx_http_upstream_check_peer_down(peer->check_index)) {
+                continue;
+            }
+#endif
+
             if (peer->conns * best->weight != best->conns * peer->weight) {
                 continue;
             }
--- src/http/ngx_http_upstream_round_robin.c.orig	2017-08-08 15:00:13 UTC
+++ src/http/ngx_http_upstream_round_robin.c
@@ -9,6 +9,9 @@
 #include <ngx_core.h>
 #include <ngx_http.h>
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+#include "ngx_http_upstream_check_module.h"
+#endif
 
 #define ngx_http_upstream_tries(p) ((p)->number                               \
                                     + ((p)->next ? (p)->next->number : 0))
@@ -97,7 +100,14 @@ ngx_http_upstream_init_round_robin(ngx_c
                 peer[n].fail_timeout = server[i].fail_timeout;
                 peer[n].down = server[i].down;
                 peer[n].server = server[i].name;
-
+#if (NGX_HTTP_UPSTREAM_CHECK)
+                if (!server[i].down) {
+                    peer[n].check_index =
+                        ngx_http_upstream_check_add_peer(cf, us, &server[i].addrs[j]);
+                } else {
+                    peer[n].check_index = (ngx_uint_t) NGX_ERROR;
+                }
+#endif
                 *peerp = &peer[n];
                 peerp = &peer[n].next;
                 n++;
@@ -161,7 +171,15 @@ ngx_http_upstream_init_round_robin(ngx_c
                 peer[n].fail_timeout = server[i].fail_timeout;
                 peer[n].down = server[i].down;
                 peer[n].server = server[i].name;
-
+#if (NGX_HTTP_UPSTREAM_CHECK)
+                if (!server[i].down) {
+                    peer[n].check_index =
+                        ngx_http_upstream_check_add_peer(cf, us, &server[i].addrs[j]);
+                }
+                else {
+                    peer[n].check_index = (ngx_uint_t) NGX_ERROR;
+                }
+#endif
                 *peerp = &peer[n];
                 peerp = &peer[n].next;
                 n++;
@@ -228,6 +246,9 @@ ngx_http_upstream_init_round_robin(ngx_c
         peer[i].max_conns = 0;
         peer[i].max_fails = 1;
         peer[i].fail_timeout = 10;
+#if (NGX_HTTP_UPSTREAM_CHECK)
+        peer[i].check_index = (ngx_uint_t) NGX_ERROR;
+#endif
         *peerp = &peer[i];
         peerp = &peer[i].next;
     }
@@ -344,6 +365,9 @@ ngx_http_upstream_create_round_robin_pee
         peer[0].max_conns = 0;
         peer[0].max_fails = 1;
         peer[0].fail_timeout = 10;
+#if (NGX_HTTP_UPSTREAM_CHECK)
+        peer[0].check_index = (ngx_uint_t) NGX_ERROR;
+#endif
         peers->peer = peer;
 
     } else {
@@ -378,6 +402,9 @@ ngx_http_upstream_create_round_robin_pee
             peer[i].max_conns = 0;
             peer[i].max_fails = 1;
             peer[i].fail_timeout = 10;
+#if (NGX_HTTP_UPSTREAM_CHECK)
+            peer[i].check_index = (ngx_uint_t) NGX_ERROR;
+#endif
             *peerp = &peer[i];
             peerp = &peer[i].next;
         }
@@ -443,6 +470,12 @@ ngx_http_upstream_get_round_robin_peer(n
             goto failed;
         }
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+        if (ngx_http_upstream_check_peer_down(peer->check_index)) {
+            goto failed;
+        }
+#endif
+
         rrp->current = peer;
 
     } else {
@@ -537,6 +570,12 @@ ngx_http_upstream_get_peer(ngx_http_upst
             continue;
         }
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+        if (ngx_http_upstream_check_peer_down(peer->check_index)) {
+            continue;
+        }
+#endif
+
         if (peer->max_fails
             && peer->fails >= peer->max_fails
             && now - peer->checked <= peer->fail_timeout)
--- src/http/ngx_http_upstream_round_robin.h.orig	2017-08-08 15:00:13 UTC
+++ src/http/ngx_http_upstream_round_robin.h
@@ -49,6 +49,10 @@ struct ngx_http_upstream_rr_peer_s {
     ngx_atomic_t                    lock;
 #endif
 
+#if (NGX_HTTP_UPSTREAM_CHECK)
+    ngx_uint_t                      check_index;
+#endif
+
     ngx_http_upstream_rr_peer_t    *next;
 
     NGX_COMPAT_BEGIN(32)


[FILE:3521:files/nginx.in]
#!/bin/sh
#
# PROVIDE: nginx
# REQUIRE: LOGIN cleanvar
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf to enable nginx:
# nginx_enable (bool):		Set to "NO" by default.
#				Set it to "YES" to enable nginx
# nginx_profiles (str):		Set to "" by default.
#				Define your profiles here.
# nginx_pid_prefix (str):	Set to "" by default.
#				When using profiles manually assign value to "nginx_"
#				for prevent collision with other PIDs names.
# nginxlimits_enable (bool):	Set to "NO" by default.
#				Set it to yes to run `limits $limits_args`
#				just before nginx starts.
# nginx_flags (str):		Set to "" by default.
#				Extra flags passed to start command.
# nginxlimits_args (str):	Default to "-e -U %%WWWOWN%%"
#				Arguments of pre-start limits run.

. /etc/rc.subr

name="nginx"
rcvar=nginx_enable

start_precmd="nginx_precmd"
restart_precmd="nginx_checkconfig"
reload_precmd="nginx_checkconfig"
configtest_cmd="nginx_checkconfig"
gracefulstop_cmd="nginx_gracefulstop"
upgrade_precmd="nginx_checkconfig"
upgrade_cmd="nginx_upgrade"
command="%%PREFIX%%/sbin/nginx"
_pidprefix="%%NGINX_RUNDIR%%"
pidfile="${_pidprefix}/${name}.pid"
_tmpprefix="%%NGINX_TMPDIR%%"
required_files=%%PREFIX%%/etc/nginx/nginx.conf
extra_commands="reload configtest upgrade gracefulstop"

[ -z "$nginx_enable" ]		&& nginx_enable="NO"
[ -z "$nginxlimits_enable" ]	&& nginxlimits_enable="NO"
[ -z "$nginxlimits_args" ]	&& nginxlimits_args="-e -U %%WWWOWN%%"

load_rc_config $name

if [ -n "$2" ]; then
	profile="$2"
	if [ "x${nginx_profiles}" != "x" ]; then
		pidfile="${_pidprefix}/${nginx_pid_prefix}${profile}.pid"
		eval nginx_configfile="\${nginx_${profile}_configfile:-}"
		if [ "x${nginx_configfile}" = "x" ]; then
			echo "You must define a configuration file (nginx_${profile}_configfile)"
			exit 1
		fi
		required_files="${nginx_configfile}"
		eval nginx_enable="\${nginx_${profile}_enable:-${nginx_enable}}"
		eval nginx_flags="\${nginx_${profile}_flags:-${nginx_flags}}"
		eval nginxlimits_enable="\${nginxlimits_${profile}_enable:-${nginxlimits_enable}}"
		eval nginxlimits_args="\${nginxlimits_${profile}_args:-${nginxlimits_args}}"
		nginx_flags="-c ${nginx_configfile} -g \"pid ${pidfile};\" ${nginx_flags}"
	else
		echo "$0: extra argument ignored"
	fi
else
	if [ "x${nginx_profiles}" != "x" -a "x$1" != "x" ]; then
		for profile in ${nginx_profiles}; do
			echo "===> nginx profile: ${profile}"
			%%PREFIX%%/etc/rc.d/nginx $1 ${profile}
			retcode="$?"
			if [ "0${retcode}" -ne 0 ]; then
				failed="${profile} (${retcode}) ${failed:-}"
			else
				success="${profile} ${success:-}"
			fi
		done
		exit 0
	fi
fi

# tmpfs(5)
nginx_checktmpdir()
{
	if [ ! -d ${_tmpprefix} ] ; then
		install -d -o %%WWWOWN%% -g %%WWWGRP%% -m 755 ${_tmpprefix}
	fi
}

nginx_checkconfig()
{
	nginx_checktmpdir

	echo "Performing sanity check on nginx configuration:"
	eval ${command} ${nginx_flags} -t
}

nginx_gracefulstop()
{
	echo "Performing a graceful stop:"
	sig_stop="QUIT"
	run_rc_command ${rc_prefix}stop $rc_extra_args || return 1
}

nginx_upgrade()
{
	echo "Upgrading nginx binary:"

	reload_precmd=""
	sig_reload="USR2"
	run_rc_command ${rc_prefix}reload $rc_extra_args || return 1

	sleep 1

	echo "Stopping old binary:"

	sig_reload="QUIT"
	pidfile="$pidfile.oldbin"
	run_rc_command ${rc_prefix}reload $rc_extra_args || return 1
}

nginx_precmd() 
{
	nginx_checkconfig

	if checkyesno nginxlimits_enable
	then
		eval `/usr/bin/limits ${nginxlimits_args}` 2>/dev/null
	else
		return 0
	fi
}

run_rc_command "$1"


[FILE:763:files/pkg-message-single.in]

===================================================================
A recent version of the NGINX introduced dynamic modules support.
To load a module at runtime, include the new `load_module'
directive in the main context, specifying the path to the shared
object file for the module, enclosed in quotation marks.  When you
reload the configuration or restart NGINX, the module is loaded in.
It is possible to specify a path relative to the source directory,
or a full path, please see
https://www.nginx.com/blog/dynamic-modules-nginx-1-9-11/ and
http://nginx.org/en/docs/ngx_core_module.html#load_module for
details.

Default path for the NGINX dynamic modules is

%%PREFIX%%/libexec/nginx.
===================================================================



[FILE:314:dragonfly/patch-src_core_ngx__config.h]
--- src/core/ngx_config.h.orig	2017-08-08 15:00:12 UTC
+++ src/core/ngx_config.h
@@ -12,8 +12,8 @@
 #include <ngx_auto_headers.h>
 
 
-#if defined __DragonFly__ && !defined __FreeBSD__
-#define __FreeBSD__        4
+#if defined __DragonFly__
+#undef  __FreeBSD_version
 #define __FreeBSD_version  480101
 #endif
 


[FILE:470:dragonfly/patch-src_event_modules_ngx__eventport__module.c]
--- src/event/modules/ngx_eventport_module.c.orig	2017-08-08 15:00:13 UTC
+++ src/event/modules/ngx_eventport_module.c
@@ -49,7 +49,7 @@ typedef struct  port_notify {
     void       *portnfy_user;   /* user defined */
 } port_notify_t;
 
-#if (__FreeBSD__ && __FreeBSD_version < 700005) || (NGX_DARWIN)
+#if (__FreeBSD_version < 700005) || (NGX_DARWIN)
 
 typedef struct itimerspec {     /* definition per POSIX.4 */
     struct timespec it_interval;/* timer period */


[FILE:532:dragonfly/patch-src_event_modules_ngx__kqueue__module.c]
--- src/event/modules/ngx_kqueue_module.c.orig	2017-08-08 15:00:13 UTC
+++ src/event/modules/ngx_kqueue_module.c
@@ -429,8 +429,7 @@ ngx_kqueue_set_event(ngx_event_t *ev, ng
     if (filter == EVFILT_VNODE) {
         kev->fflags = NOTE_DELETE|NOTE_WRITE|NOTE_EXTEND
                                  |NOTE_ATTRIB|NOTE_RENAME
-#if (__FreeBSD__ == 4 && __FreeBSD_version >= 430000) \
-    || __FreeBSD_version >= 500018
+#if __FreeBSD_version >= 500018
                                  |NOTE_REVOKE
 #endif
                       ;


[FILE:447:dragonfly/patch-src_os_unix_ngx__freebsd__init.c]
--- src/os/unix/ngx_freebsd_init.c.orig	2017-08-08 15:00:13 UTC
+++ src/os/unix/ngx_freebsd_init.c
@@ -162,8 +162,7 @@ ngx_os_specific_init(ngx_log_t *log)
      * to allow an old binary to run correctly on an updated FreeBSD system.
      */
 
-#if (__FreeBSD__ == 4 && __FreeBSD_version >= 460102) \
-    || __FreeBSD_version == 460002 || __FreeBSD_version >= 500039
+#if __FreeBSD_version >= 500039
 
     /* a new syscall without the bug */
 

