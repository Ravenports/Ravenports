# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		qpdf
VERSION=		11.6.4
KEYWORDS=		print
VARIANTS=		standard
SDESC[standard]=	Command-line tools for transforming PDF files
HOMEPAGE=		none
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/qpdf/qpdf/11.6.4
DISTFILE[1]=		qpdf-11.6.4.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			tools
			dev
			man
			docs
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

EXRUN[tools]=		qpdf:primary:standard

USES=			cpe cmake jpeg zlib c++:primary

LICENSE=		ART20:primary APACHE20:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/NOTICE.md
LICENSE_FILE=		ART20:{{WRKSRC}}/Artistic-2.0
			APACHE20:{{WRKSRC}}/LICENSE.txt
LICENSE_SCHEME=		dual

CPE_VENDOR=		qpdf_project
FPC_EQUIVALENT=		print/qpdf

SOVERSION=		29.6.4

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libqpdf.so
	# put examples in the correct spot
	${MKDIR} ${STAGEDIR}${STD_EXAMPLESDIR}
	${MV} ${STAGEDIR}${STD_DOCDIR}/examples/* ${STAGEDIR}${STD_EXAMPLESDIR}/
	${RMDIR} ${STAGEDIR}${STD_DOCDIR}/examples

[FILE:933:descriptions/desc.primary]
QPDF is a program that can be used to linearize (web-optimize), encrypt
(password-protect), decrypt, and inspect PDF files from the command-line. 
It does these and other structural, content-preserving transformations on
PDF files, reading a PDF file as input and creating a new one as output. 
It also provides many useful capabilities to developers of PDF-producing
software or for people who just want to look at the innards of a PDF file
to learn more about how they work.

QPDF understands PDF files that use compressed object streams (supported
by newer PDF applications) and can convert such files into those that can
be read with older viewers.  It can also be used for checking PDF files
for structural errors, inspecting stream contents, or extracting objects
from PDF files.  QPDF is not PDF content creation or viewing software --
it does not have the capability to create PDF files from scratch or to
display PDF files.


[FILE:34:descriptions/desc.tools]
This package contains qpdf tools.


[FILE:97:distinfo]
c4b59318d296c50ceb29881e28bb57c6fcc1f6ca675cf52480ceeca552d7b3f6     18655617 qpdf-11.6.4.tar.gz


[FILE:55:manifests/plist.primary]
lib/
 libqpdf.so.%%SOMAJOR%%
 libqpdf.so.%%SOVERSION%%


[FILE:32:manifests/plist.tools]
bin/
 fix-qdf
 qpdf
 zlib-flate


[FILE:1446:manifests/plist.dev]
include/qpdf/
 Buffer.hh
 BufferInputSource.hh
 ClosedFileInputSource.hh
 Constants.h
 DLL.h
 FileInputSource.hh
 InputSource.hh
 JSON.hh
 PDFVersion.hh
 Pipeline.hh
 Pl_Buffer.hh
 Pl_Concatenate.hh
 Pl_Count.hh
 Pl_DCT.hh
 Pl_Discard.hh
 Pl_Flate.hh
 Pl_Function.hh
 Pl_OStream.hh
 Pl_QPDFTokenizer.hh
 Pl_RunLength.hh
 Pl_StdioFile.hh
 Pl_String.hh
 PointerHolder.hh
 QIntC.hh
 QPDF.hh
 QPDFAcroFormDocumentHelper.hh
 QPDFAnnotationObjectHelper.hh
 QPDFCryptoImpl.hh
 QPDFCryptoProvider.hh
 QPDFDocumentHelper.hh
 QPDFEFStreamObjectHelper.hh
 QPDFEmbeddedFileDocumentHelper.hh
 QPDFExc.hh
 QPDFFileSpecObjectHelper.hh
 QPDFFormFieldObjectHelper.hh
 QPDFJob.hh
 QPDFLogger.hh
 QPDFMatrix.hh
 QPDFNameTreeObjectHelper.hh
 QPDFNumberTreeObjectHelper.hh
 QPDFObjGen.hh
 QPDFObject.hh
 QPDFObjectHandle.hh
 QPDFObjectHelper.hh
 QPDFOutlineDocumentHelper.hh
 QPDFOutlineObjectHelper.hh
 QPDFPageDocumentHelper.hh
 QPDFPageLabelDocumentHelper.hh
 QPDFPageObjectHelper.hh
 QPDFStreamFilter.hh
 QPDFSystemError.hh
 QPDFTokenizer.hh
 QPDFUsage.hh
 QPDFWriter.hh
 QPDFXRefEntry.hh
 QTC.hh
 QUtil.hh
 RandomDataProvider.hh
 Types.h
 auto_job_c_att.hh
 auto_job_c_copy_att.hh
 auto_job_c_enc.hh
 auto_job_c_main.hh
 auto_job_c_pages.hh
 auto_job_c_uo.hh
 qpdf-c.h
 qpdfjob-c.h
 qpdflogger-c.h
lib/
 libqpdf.a
 libqpdf.so
lib/cmake/qpdf/
 libqpdfTargets-release.cmake
 libqpdfTargets.cmake
 qpdfConfig.cmake
 qpdfConfigVersion.cmake
lib/pkgconfig/libqpdf.pc


[FILE:58:manifests/plist.man]
share/man/man1/
 fix-qdf.1.gz
 qpdf.1.gz
 zlib-flate.1.gz


[FILE:30:manifests/plist.docs]
share/doc/qpdf/README-doc.txt


[FILE:479:manifests/plist.examples]
share/examples/qpdf/
 pdf-attach-file.cc
 pdf-bookmarks.cc
 pdf-c-objects.c
 pdf-count-strings.cc
 pdf-create.cc
 pdf-custom-filter.cc
 pdf-double-page-size.cc
 pdf-filter-tokens.cc
 pdf-invert-images.cc
 pdf-linearize.c
 pdf-mod-info.cc
 pdf-name-number-tree.cc
 pdf-npages.cc
 pdf-overlay-page.cc
 pdf-parse-content.cc
 pdf-set-form-values.cc
 pdf-split-pages.cc
 qpdf-job.cc
 qpdfjob-c-save-attachment.c
 qpdfjob-c.c
 qpdfjob-remove-annotations.cc
 qpdfjob-save-attachment.cc


[FILE:520:patches/patch-libqpdf_QUtil.cc]
--- libqpdf/QUtil.cc.orig	2023-12-10 16:23:10 UTC
+++ libqpdf/QUtil.cc
@@ -896,6 +896,9 @@ QUtil::get_current_qpdf_time()
 # if HAVE_TM_GMTOFF
     // tm_gmtoff is seconds after UTC
     int tzoff = -static_cast<int>(ltime.tm_gmtoff / 60);
+# elif defined(__FreeBSD__)
+    // On FreeBSD, timezone is a character and the next line breaks
+    int tzoff = 0;
 # elif HAVE_EXTERN_LONG_TIMEZONE
     // timezone is seconds before UTC, not adjusted for daylight saving time
     int tzoff = static_cast<int>(timezone / 60);

