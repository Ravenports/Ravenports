# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-ansible-core
VERSION=		2.18.0
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Radically simple IT automation (3.11)
SDESC[v12]=		Radically simple IT automation (3.12)
HOMEPAGE=		https://ansible.com/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/73/14/c70341980b7636dfdbc03b0762102d2a69739bc5d7687a0476739007aad4
DISTFILE[1]=		ansible_core-2.18.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

USES=			cpe shebangfix

DISTNAME=		ansible_core-2.18.0.dist-info

CPE_PRODUCT=		ansible
CPE_VENDOR=		redhat
SHEBANG_FILES=		stage{{PYTHON_SITELIBDIR}}/ansible_test/_util/target/cli/ansible_test_cli_stub.py
GENERATED=		yes

[PY311].RUN_DEPENDS_ON=			python-Jinja2:single:v11
					python-PyYAML:single:v11
					python-cryptography:single:v11
					python-packaging:single:v11
					python-resolvelib:single:v11
[PY311].USES_ON=			python:v11,wheel

[PY312].RUN_DEPENDS_ON=			python-Jinja2:single:v12
					python-PyYAML:single:v12
					python-cryptography:single:v12
					python-packaging:single:v12
					python-resolvelib:single:v12
[PY312].USES_ON=			python:v12,wheel

[FILE:3463:descriptions/desc.single]
[PyPI version]
[Docs badge]
[Chat badge]
[Build Status]
[Ansible Code of Conduct]
[Ansible mailing lists]
[Repository License]
[Ansible CII Best Practices certification]

# Ansible

Ansible is a radically simple IT automation system. It handles
configuration management, application deployment, cloud provisioning,
ad-hoc task execution, network automation, and multi-node orchestration.
Ansible makes complex
changes like zero-downtime rolling updates with load balancers easy. More
information on the Ansible [website].

## Design Principles

* Have an extremely simple setup process with a minimal learning curve.
* Manage machines quickly and in parallel.
* Avoid custom-agents and additional open ports, be agentless by
  leveraging the existing SSH daemon.
* Describe infrastructure in a language that is both machine and human
  friendly.
* Focus on security and easy auditability/review/rewriting of content.
* Manage new remote machines instantly, without bootstrapping any
  software.
* Allow module development in any dynamic language, not just Python.
* Be usable as non-root.
* Be the easiest IT automation system to use, ever.

## Use Ansible

You can install a released version of Ansible with `pip` or a package
manager. See our
[installation guide] for details on installing Ansible
on a variety of platforms.

Power users and developers can run the `devel` branch, which has the latest
features and fixes, directly. Although it is reasonably stable, you are
more likely to encounter
breaking changes when running the `devel` branch. We recommend getting
involved
in the Ansible community if you want to run the `devel` branch.

## Communication

Join the Ansible forum to ask questions, get help, and interact with the
community.

* [Get Help]: Find help or share your Ansible knowledge to help others.
  Use tags to filter and subscribe to posts, such as the following:
  * Posts tagged with [ansible]
  * Posts tagged with [ansible-core]
  * Posts tagged with [playbook]
* [Social Spaces]: Meet and interact with fellow enthusiasts.
* [News & Announcements]: Track project-wide announcements including social
events.
* [Bullhorn newsletter]: Get release announcements and important changes.

For more ways to get in touch, see [Communicating with the Ansible
community].

## Contribute to Ansible

* Check out the [Contributor's Guide].
* Read [Community Information] for all
  kinds of ways to contribute to and interact with the project,
  including how to submit bug reports and code to Ansible.
* Submit a proposed code update through a pull request to the `devel`
branch.
* Talk to us before making larger changes
  to avoid duplicate efforts. This not only helps everyone
  know what is going on, but it also helps save time and effort if we
decide
  some changes are needed.

## Coding Guidelines

We document our Coding Guidelines in the [Developer Guide]. We particularly
suggest you review:

* [Contributing your module to Ansible]
* [Conventions, tips, and pitfalls]

## Branch Info

* The `devel` branch corresponds to the release actively under development.
* The `stable-2.X` branches correspond to stable releases.
* Create a branch based on `devel` and set up a [dev environment] if you
want to open a PR.
* See the [Ansible release and maintenance] page for information about
active branches.

## Roadmap

Based on team and community feedback, an initial roadmap will be published
for a major or minor version (ex: 2.7, 2.8).


[FILE:115:distinfo]
d28818df3741d6cd744dab5e4ff9c658daa94ba71c8e15a12dbe9eeab30a658f      2212552 ansible_core-2.18.0-py3-none-any.whl

