# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		bmake
VERSION=		20171118
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Portable version of NetBSD 'make' utility
HOMEPAGE=		http://www.crufty.net/help/sjg/bmake.html
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		ftp://ftp.netbsd.org/pub/NetBSD/misc/sjg/
DISTFILE[1]=		bmake-20171118.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	bmake-mk-files:single:standard

DISTNAME=		bmake

LICENSE=		BSD3CLAUSE:single
LICENSE_SCHEME=		solo
LICENSE_FILE=		BSD3CLAUSE:{{WRKDIR}}/LICENSE

FPC_EQUIVALENT=		devel/bmake

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-default-sys-path="/xports/Mk:{{PREFIX}}/share/mk"
			--with-machine-arch={{ARCH}}
			--with-mksrc=no

post-patch:
	${REINPLACE_CMD} 's/^\.Nx/NetBSD/' ${WRKDIR}/bmake/bmake.1
.for F in OSVERSION OSRELEASE OSMAJOR STDARCH
	newval=$$(${CAT} /usr/share/${F}); \
	${SED} -i.${F}.bak -e "s|@CFLAGS@|-D${F}=\\\\\"$${newval}\\\\\" @CFLAGS@|" \
	${WRKDIR}/bmake/make-bootstrap.sh.in
.endfor
	${REINPLACE_CMD} -e 's|@CFLAGS@|-DOSNAME=\\\"${OPSYS}\\\" -DOSARCH=\\\"${ARCH}\\\" @CFLAGS@|' \
		${WRKDIR}/bmake/make-bootstrap.sh.in

do-build:
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${SH} make-bootstrap.sh)

post-extract:
	${AWK} '/make.h --/ {exit}; {print $$0}' ${WRKSRC}/make.h \
		> ${WRKDIR}/LICENSE

do-install:
	${INSTALL_PROGRAM} ${WRKSRC}/bmake ${STAGEDIR}${PREFIX}/bin
	${INSTALL_MAN} ${WRKSRC}/bmake.1 ${STAGEDIR}${MAN1PREFIX}/man/man1

[FILE:193:descriptions/desc.single]
bmake is a portable version of NetBSD's make(1) utility,
conveniently packaged using a configure script, for other environments
which may lack NetBSD's libraries, regular expression code, etc.


[FILE:100:distinfo]
c379ed09ee64277a11296fa93545abf963a059c98630ddfc47dcef9572391a9d       555035 bmake-20171118.tar.gz


[FILE:36:manifests/plist.single]
bin/bmake
share/man/man1/bmake.1.gz


[FILE:697:patches/patch-main.c]
--- main.c.orig	2017-01-14 23:09:40 UTC
+++ main.c
@@ -1063,6 +1063,12 @@ main(int argc, char **argv)
 	    Var_Set(".MAKE.PID", tmp, VAR_GLOBAL, 0);
 	    snprintf(tmp, sizeof(tmp), "%u", getppid());
 	    Var_Set(".MAKE.PPID", tmp, VAR_GLOBAL, 0);
+	    Var_Set(".MAKE.OS.NAME",          OSNAME,    VAR_GLOBAL, 0);
+	    Var_Set(".MAKE.OS.VERSION",       OSVERSION, VAR_GLOBAL, 0);
+	    Var_Set(".MAKE.OS.RELEASE",       OSRELEASE, VAR_GLOBAL, 0);
+	    Var_Set(".MAKE.OS.MAJOR",         OSMAJOR,   VAR_GLOBAL, 0);
+	    Var_Set(".MAKE.OS.ARCHITECTURE",  OSARCH,    VAR_GLOBAL, 0);
+	    Var_Set(".MAKE.OS.ARCH.STANDARD", STDARCH,   VAR_GLOBAL, 0);
 	}
 	if (makelevel > 0) {
 		char pn[1024];

