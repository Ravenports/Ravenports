# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		tcsh
VERSION=		6.24.13
REVISION=		1
KEYWORDS=		shells
VARIANTS=		std
SDESC[std]=		Extended C-shell with many useful features
HOMEPAGE=		https://www.tcsh.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://astron.com/pub/tcsh/
DISTFILE[1]=		tcsh-6.24.13.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			ncurses:build

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/Copyright
LICENSE_SCHEME=		solo

MUST_CONFIGURE=		gnu
CONFIGURE_ENV=		ac_cv_search_tgetent="-ltinfo -lpthread"

LDFLAGS=		-static

[FILE:2424:descriptions/desc.primary]
tcsh is an enhanced but completely compatible version of the Berkeley UNIX
C shell, csh(1).  It is a command language interpreter usable both as an
interactive login shell and a shell script command processor.  It includes
a command-line editor, programmable word completion, spelling correction,
a history mechanism, job control and a C-like syntax.

These NEW FEATURES describes major enhancements of tcsh over csh(1):

* A command-line editor that supports GNU Emacs or vi-style key bindings.
* Programmable, interactive word completion and listing.
* Spelling correction of filenames, commands and variables.
* Editor commands which perform other useful functions in the middle of
  typed commands, including documentation lookup (run-help), quick editor
  restarting (run-fg-editor) and command resolution (which-command).
* An enhanced history mechanism. Events in the history list are
  time-stamped. See also the history command and its associated shell
  variables, the previously undocumented '#' event specifier and new
  modifiers under History substitution, the *-history, history-search-*,
  i-search-*, vi-search-* and toggle-literal-history editor commands and
  the histlit shell variable.
* Enhanced directory parsing and directory stack handling.
  See the cd, pushd, popd and dirs commands and their associated shell
  variables, the description of Directory stack substitution, the dirstack,
  owd and symlinks shell variables and the normalize-command and
  normalize-path editor commands.
* Negation in glob-patterns.
* New File inquiry operators and a filetest builtin which uses them.
* Variety of Automatic, periodic and timed events including scheduled
  events, special aliases, automatic logout and terminal locking, command
  timing and watching for logins and logouts.
* Support for the Native Language System, OS variant features and
  system-dependent file locations.
* Extensive terminal-management capabilities.
* New builtin commands including builtins, hup, ls-F, newgrp, printenv,
  which and where.
* New variables that make useful information easily available to the shell.
  See the gid, loginsh, oid, shlvl, tcsh, tty, uid and version shell
  variables and the HOST, REMOTEHOST, VENDOR, OSTYPE and MACHTYPE
  environment variables.
* A new syntax for including useful information in the prompt string.
  And special prompts for loops and spelling correction.
* Read-only variables.


[FILE:98:distinfo]
1e927d52e9c85d162bf985f24d13c6ccede9beb880d86fec492ed15480a5c71a       958563 tcsh-6.24.13.tar.gz


[FILE:9:manifests/plist.primary]
bin/tcsh


[FILE:22:manifests/plist.man]
share/man/man1/tcsh.1


[FILE:424:patches/patch-tc.alloc.c]
--- tc.alloc.c.orig	2024-04-05 06:39:59 UTC
+++ tc.alloc.c
@@ -670,6 +670,7 @@ showall(Char **v, struct command *c)
 }
 
 #ifndef SYSMALLOC
+# ifndef __FreeBSD__
 /* jemalloc defines these */
 void _malloc_prefork(void);
 void _malloc_postfork(void);
@@ -677,4 +678,5 @@ void _malloc_postfork_child(void);
 void _malloc_prefork(void) {}
 void _malloc_postfork(void) {}
 void _malloc_postfork_child(void) {}
+# endif
 #endif

