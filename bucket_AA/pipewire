# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		pipewire
VERSION=		1.2.3
KEYWORDS=		multimedia
VARIANTS=		std
SDESC[std]=		Low-latency audio/video router and processor
HOMEPAGE=		https://pipewire.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main jtsiomb
SITES[main]=		https://gitlab.freedesktop.org/pipewire/pipewire/-/archive/1.2.3/
SITES[jtsiomb]=		https://github.com/jtsiomb/c11threads/releases/download/v1.0/
DISTFILE[1]=		pipewire-1.2.3.tar.gz:main
DISTFILE[2]=		c11threads-1.0.tar.gz:jtsiomb
DF_INDEX=		1 2
SPKGS[std]=		set
			primary
			dev
			tools
			nls

OPTIONS_AVAILABLE=	BSD JACK C11THREADS
OPTIONS_STANDARD=	BSD JACK C11THREADS
OPT_ON[freebsd]=	BSD C11THREADS
OPT_ON[netbsd]=		BSD
OPT_ON[openbsd]=	BSD
OPT_ON[dragonfly]=	BSD

BUILD_DEPENDS=		video4linux:dev:std
			dbus:dev:std
			opus:dev:std
			libsndfile:dev:std
			webrtc-audio-processing0:dev:std
			gstreamer1:dev:std
			gstreamer1-plugins-base:dev:std
			evdev-proto:single:std
BUILDRUN_DEPENDS=	dbus:primary:std
			opus:primary:std
			libsndfile:primary:std
			webrtc-audio-processing0:primary:std
			gstreamer1:primary:std
			gstreamer1-plugins-base:primary:std
EXRUN[tools]=		primary

USES=			meson ncurses pkgconfig ssl shebangfix python:build
			gettext:build
GNOME_COMPONENTS=	glib

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		multimedia/pipewire
MESON_ARGS=		-Dgstreamer=enabled
			-Dgstreamer-device-provider=enabled
			-Dpw-cat=enabled
			-Dv4l2=enabled
			-Draop=enabled
			-Dsession-managers='[]'
			-Dalsa=disabled
			-Dpipewire-alsa=disabled
			-Davb=disabled
			-Dbluez5=disabled
			-Dman=disabled
			-Dlibcamera=disabled
			-Droc=disabled
			-Dsdl2=disabled
			-Dselinux=disabled
			-Dsystemd=disabled
			-Dpipewire-v4l2=disabled
			-Dlibmysofa=disabled
			-Dlibffado=disabled
			-Djack=disabled
			-Dpipewire-jack=disabled
			-Dtests=disabled
			-Dudevrulesdir="{{LOCALBASE}}/lib/udev/rules.d"
SHEBANG_FILES=		doc/*.py

INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		0.1203.0

[JACK].DESCRIPTION=			Add Jack audio server support
[JACK].BROKEN_ON=			Not yet supported

[C11THREADS].DESCRIPTION=		Install <threads.h> on platforms missing it

[BSD].DESCRIPTION=			BSD-specific build instructions
[BSD].BUILDRUN_DEPENDS_ON=		libinotify:primary:std
					libepoll-shim:primary:std
					libgudev-devd:primary:std
[BSD].BUILD_DEPENDS_ON=			libinotify:dev:std
					libepoll-shim:dev:std
					libgudev-devd:dev:std

post-install:
	${RM} ${LOCALBASE}/include/threads.h

pre-configure:
	${GREP} -rl "pw_init(" | ${XARGS} ${REINPLACE_CMD} -e 's|pw_init(|pipewire_init|g'

pre-configure-dragonfly:
	${REINPLACE_CMD} -e 's@freebsd@dragonfly@g' \
		${WRKSRC}/src/pipewire/meson.build \
		${WRKSRC}/meson.build
	${INSTALL_DATA} ${WRKDIR}/c11threads-1.0/c11threads.h ${LOCALBASE}/include/threads.h

[FILE:365:descriptions/desc.primary]
PipeWire is a server and user space API to deal with multimedia pipelines.
This includes:
- Making available sources of video (such as from a capture devices or
  application provided streams) and multiplexing this with clients.
- Accessing sources of video for consumption.
- Generating graphs for audio and video processing.

This package contains the libraries.


[FILE:63:descriptions/desc.tools]
This package contains all the executable programs of pipewire.


[FILE:200:distinfo]
f2645dda4294a46b58727bf81352f13180be232e74ff7fccbc44f30d31fa4766      2411289 pipewire-1.2.3.tar.gz
f445c5d2ea9cda887104ad24ae1c89b5145c412313d307c0794bb2de20f5c244         3472 c11threads-1.0.tar.gz


[FILE:1719:manifests/plist.primary]
lib/
 libpipewire-0.3.so
 libpipewire-0.3.so.%%SOMAJOR%%
 libpipewire-0.3.so.%%SOVERSION%%
lib/gstreamer-1.0/libgstpipewire.so
lib/pipewire-0.3/
 libpipewire-module-access.so
 libpipewire-module-adapter.so
 libpipewire-module-client-device.so
 libpipewire-module-client-node.so
 libpipewire-module-combine-stream.so
 libpipewire-module-echo-cancel.so
 libpipewire-module-fallback-sink.so
 libpipewire-module-filter-chain.so
 libpipewire-module-link-factory.so
 libpipewire-module-loopback.so
 libpipewire-module-metadata.so
 libpipewire-module-netjack2-driver.so
 libpipewire-module-netjack2-manager.so
 libpipewire-module-parametric-equalizer.so
 libpipewire-module-pipe-tunnel.so
 libpipewire-module-portal.so
 libpipewire-module-profiler.so
 libpipewire-module-protocol-native.so
 libpipewire-module-protocol-pulse.so
 libpipewire-module-protocol-simple.so
 libpipewire-module-raop-sink.so
 libpipewire-module-rt.so
 libpipewire-module-rtkit.so
 libpipewire-module-rtp-sap.so
 libpipewire-module-rtp-sink.so
 libpipewire-module-rtp-source.so
 libpipewire-module-session-manager.so
 libpipewire-module-spa-device-factory.so
 libpipewire-module-spa-device.so
 libpipewire-module-spa-node-factory.so
 libpipewire-module-spa-node.so
 libpipewire-module-vban-recv.so
 libpipewire-module-vban-send.so
lib/spa-0.2/aec/
 libspa-aec-null.so
 libspa-aec-webrtc.so
lib/spa-0.2/audioconvert/libspa-audioconvert.so
lib/spa-0.2/audiomixer/libspa-audiomixer.so
lib/spa-0.2/audiotestsrc/libspa-audiotestsrc.so
lib/spa-0.2/control/libspa-control.so
lib/spa-0.2/support/
 libspa-dbus.so
 libspa-support.so
lib/spa-0.2/v4l2/libspa-v4l2.so
lib/spa-0.2/videoconvert/libspa-videoconvert.so
lib/spa-0.2/videotestsrc/libspa-videotestsrc.so


[FILE:2872:manifests/plist.dev]
include/pipewire-0.3/pipewire/
 array.h
 buffers.h
 client.h
 conf.h
 context.h
 control.h
 core.h
 data-loop.h
 device.h
 factory.h
 filter.h
 global.h
 i18n.h
 impl-client.h
 impl-core.h
 impl-device.h
 impl-factory.h
 impl-link.h
 impl-metadata.h
 impl-module.h
 impl-node.h
 impl-port.h
 impl.h
 keys.h
 link.h
 log.h
 loop.h
 main-loop.h
 map.h
 mem.h
 module.h
 node.h
 permission.h
 pipewire.h
 port.h
 properties.h
 protocol.h
 proxy.h
 resource.h
 stream.h
 thread-loop.h
 thread.h
 type.h
 utils.h
 version.h
 work-queue.h
include/pipewire-0.3/pipewire/extensions/
 client-node.h
 metadata.h
 profiler.h
 protocol-native.h
 security-context.h
 session-manager.h
include/pipewire-0.3/pipewire/extensions/session-manager/
 impl-interfaces.h
 interfaces.h
 introspect-funcs.h
 introspect.h
 keys.h
include/spa-0.2/spa/buffer/
 alloc.h
 buffer.h
 meta.h
 type-info.h
include/spa-0.2/spa/control/
 control.h
 type-info.h
include/spa-0.2/spa/debug/
 buffer.h
 context.h
 dict.h
 file.h
 format.h
 log.h
 mem.h
 node.h
 pod.h
 types.h
include/spa-0.2/spa/graph/graph.h
include/spa-0.2/spa/interfaces/audio/aec.h
include/spa-0.2/spa/monitor/
 device.h
 event.h
 type-info.h
 utils.h
include/spa-0.2/spa/node/
 command.h
 event.h
 io.h
 keys.h
 node.h
 type-info.h
 utils.h
include/spa-0.2/spa/param/
 buffers-types.h
 buffers.h
 format-types.h
 format-utils.h
 format.h
 latency-types.h
 latency-utils.h
 latency.h
 param-types.h
 param.h
 port-config-types.h
 port-config.h
 profile-types.h
 profile.h
 profiler-types.h
 profiler.h
 props-types.h
 props.h
 route-types.h
 route.h
 tag-types.h
 tag-utils.h
 tag.h
 type-info.h
include/spa-0.2/spa/param/audio/
 aac-types.h
 aac-utils.h
 aac.h
 alac-utils.h
 alac.h
 amr-types.h
 amr-utils.h
 amr.h
 ape-utils.h
 ape.h
 compressed.h
 dsd-utils.h
 dsd.h
 dsp-utils.h
 dsp.h
 flac-utils.h
 flac.h
 format-utils.h
 format.h
 iec958-types.h
 iec958-utils.h
 iec958.h
 layout.h
 mp3-types.h
 mp3-utils.h
 mp3.h
 opus.h
 ra-utils.h
 ra.h
 raw-types.h
 raw-utils.h
 raw.h
 type-info.h
 vorbis-utils.h
 vorbis.h
 wma-types.h
 wma-utils.h
 wma.h
include/spa-0.2/spa/param/bluetooth/
 audio.h
 type-info.h
include/spa-0.2/spa/param/video/
 chroma.h
 color.h
 dsp-utils.h
 dsp.h
 encoded.h
 format-utils.h
 format.h
 h264-utils.h
 h264.h
 mjpg-utils.h
 mjpg.h
 multiview.h
 raw-types.h
 raw-utils.h
 raw.h
 type-info.h
include/spa-0.2/spa/pod/
 builder.h
 command.h
 compare.h
 dynamic.h
 event.h
 filter.h
 iter.h
 parser.h
 pod.h
 vararg.h
include/spa-0.2/spa/support/
 cpu.h
 dbus.h
 i18n.h
 log-impl.h
 log.h
 loop.h
 plugin-loader.h
 plugin.h
 system.h
 thread.h
include/spa-0.2/spa/utils/
 ansi.h
 atomic.h
 cleanup.h
 defs.h
 dict.h
 dll.h
 enum-types.h
 hook.h
 json-pod.h
 json.h
 keys.h
 list.h
 names.h
 ratelimit.h
 result.h
 ringbuffer.h
 string.h
 type-info.h
 type.h
lib/pkgconfig/
 libpipewire-0.3.pc
 libspa-0.2.pc


[FILE:1030:manifests/plist.tools]
bin/
 pipewire
 pipewire-aes67
 pipewire-avb
 pipewire-pulse
 pw-cat
 pw-cli
 pw-config
 pw-container
 pw-dot
 pw-dsdplay
 pw-dump
 pw-encplay
 pw-link
 pw-loopback
 pw-metadata
 pw-mididump
 pw-midiplay
 pw-midirecord
 pw-mon
 pw-play
 pw-profiler
 pw-record
 pw-reserve
 spa-inspect
 spa-json-dump
 spa-monitor
 spa-resample
etc/security/limits.d/25-pw-rlimits.conf
share/pipewire/
 client-rt.conf
 client.conf
 filter-chain.conf
 jack.conf
 minimal.conf
 pipewire-aes67.conf
 pipewire-avb.conf
 pipewire-pulse.conf
 pipewire.conf
share/pipewire/client-rt.conf.avail/20-upmix.conf
share/pipewire/client.conf.avail/20-upmix.conf
share/pipewire/filter-chain/
 demonic.conf
 sink-dolby-surround.conf
 sink-eq6.conf
 sink-make-LFE.conf
 sink-matrix-spatialiser.conf
 sink-mix-FL-FR.conf
 sink-virtual-surround-5.1-kemar.conf
 sink-virtual-surround-7.1-hesuvi.conf
 source-duplicate-FL.conf
 source-rnnoise.conf
share/pipewire/pipewire-pulse.conf.avail/20-upmix.conf
share/pipewire/pipewire.conf.avail/
 10-rates.conf
 20-upmix.conf


[FILE:2141:manifests/plist.nls]
share/locale/af/LC_MESSAGES/pipewire.mo
share/locale/as/LC_MESSAGES/pipewire.mo
share/locale/be/LC_MESSAGES/pipewire.mo
share/locale/bg/LC_MESSAGES/pipewire.mo
share/locale/bn_IN/LC_MESSAGES/pipewire.mo
share/locale/ca/LC_MESSAGES/pipewire.mo
share/locale/cs/LC_MESSAGES/pipewire.mo
share/locale/da/LC_MESSAGES/pipewire.mo
share/locale/de/LC_MESSAGES/pipewire.mo
share/locale/de_CH/LC_MESSAGES/pipewire.mo
share/locale/el/LC_MESSAGES/pipewire.mo
share/locale/eo/LC_MESSAGES/pipewire.mo
share/locale/es/LC_MESSAGES/pipewire.mo
share/locale/fi/LC_MESSAGES/pipewire.mo
share/locale/fr/LC_MESSAGES/pipewire.mo
share/locale/gl/LC_MESSAGES/pipewire.mo
share/locale/gu/LC_MESSAGES/pipewire.mo
share/locale/he/LC_MESSAGES/pipewire.mo
share/locale/hi/LC_MESSAGES/pipewire.mo
share/locale/hr/LC_MESSAGES/pipewire.mo
share/locale/hu/LC_MESSAGES/pipewire.mo
share/locale/id/LC_MESSAGES/pipewire.mo
share/locale/it/LC_MESSAGES/pipewire.mo
share/locale/ja/LC_MESSAGES/pipewire.mo
share/locale/ka/LC_MESSAGES/pipewire.mo
share/locale/kk/LC_MESSAGES/pipewire.mo
share/locale/kn/LC_MESSAGES/pipewire.mo
share/locale/ko/LC_MESSAGES/pipewire.mo
share/locale/lt/LC_MESSAGES/pipewire.mo
share/locale/ml/LC_MESSAGES/pipewire.mo
share/locale/mr/LC_MESSAGES/pipewire.mo
share/locale/my/LC_MESSAGES/pipewire.mo
share/locale/nl/LC_MESSAGES/pipewire.mo
share/locale/nn/LC_MESSAGES/pipewire.mo
share/locale/oc/LC_MESSAGES/pipewire.mo
share/locale/or/LC_MESSAGES/pipewire.mo
share/locale/pa/LC_MESSAGES/pipewire.mo
share/locale/pl/LC_MESSAGES/pipewire.mo
share/locale/pt/LC_MESSAGES/pipewire.mo
share/locale/pt_BR/LC_MESSAGES/pipewire.mo
share/locale/ro/LC_MESSAGES/pipewire.mo
share/locale/ru/LC_MESSAGES/pipewire.mo
share/locale/si/LC_MESSAGES/pipewire.mo
share/locale/sk/LC_MESSAGES/pipewire.mo
share/locale/sr/LC_MESSAGES/pipewire.mo
share/locale/sr@latin/LC_MESSAGES/pipewire.mo
share/locale/sv/LC_MESSAGES/pipewire.mo
share/locale/ta/LC_MESSAGES/pipewire.mo
share/locale/te/LC_MESSAGES/pipewire.mo
share/locale/tr/LC_MESSAGES/pipewire.mo
share/locale/uk/LC_MESSAGES/pipewire.mo
share/locale/zh_CN/LC_MESSAGES/pipewire.mo
share/locale/zh_TW/LC_MESSAGES/pipewire.mo


[FILE:391:patches/patch-spa_plugins_audioconvert_fmt-ops.h]
--- spa/plugins/audioconvert/fmt-ops.h.orig	2024-07-31 10:02:24 UTC
+++ spa/plugins/audioconvert/fmt-ops.h
@@ -3,7 +3,7 @@
 /* SPDX-License-Identifier: MIT */
 
 #include <math.h>
-#if defined(__FreeBSD__) || defined(__MidnightBSD__)
+#if defined(__FreeBSD__) || defined(__MidnightBSD__) || defined(__DragonFly__)
 #include <sys/endian.h>
 #define bswap_16 bswap16
 #define bswap_32 bswap32


[FILE:336:patches/patch-spa_plugins_meson.build]
--- spa/plugins/meson.build.orig	2024-07-31 10:02:24 UTC
+++ spa/plugins/meson.build
@@ -1,4 +1,4 @@
-if alsa_dep.found() and host_machine.system() == 'linux'
+if alsa_dep.found()
   subdir('alsa')
 endif
 if get_option('avb').require(host_machine.system() == 'linux', error_message: 'AVB support is only available on Linux').allowed()


[FILE:364:patches/patch-spa_plugins_support_logger.c]
--- spa/plugins/support/logger.c.orig	2024-07-31 10:02:24 UTC
+++ spa/plugins/support/logger.c
@@ -20,7 +20,7 @@
 #include <spa/utils/string.h>
 #include <spa/utils/ansi.h>
 
-#if defined(__FreeBSD__) || defined(__MidnightBSD__)
+#if defined(__FreeBSD__) || defined(__MidnightBSD__) || defined(__DragonFly__)
 #define CLOCK_MONOTONIC_RAW CLOCK_MONOTONIC
 #endif
 


[FILE:635:patches/patch-spa_plugins_support_meson.build]
--- spa/plugins/support/meson.build.orig	2024-07-31 10:02:24 UTC
+++ spa/plugins/support/meson.build
@@ -14,10 +14,12 @@ if have_sse
   simd_cargs += [sse_args, '-DHAVE_SSE']
 endif
 
+stdthreads_lib = cc.find_library('stdthreads', required: false)
+
 spa_support_lib = shared_library('spa-support',
   spa_support_sources,
   c_args : [ simd_cargs ],
-  dependencies : [ spa_dep, pthread_lib, epoll_shim_dep, mathlib ],
+  dependencies : [ spa_dep, pthread_lib, epoll_shim_dep, mathlib, stdthreads_lib ],
   install : true,
   install_dir : spa_plugindir / 'support')
 spa_support_dep = declare_dependency(link_with: spa_support_lib)


[FILE:323:patches/patch-spa_plugins_v4l2_v4l2-utils.c]
--- spa/plugins/v4l2/v4l2-utils.c.orig	2024-07-31 10:02:24 UTC
+++ spa/plugins/v4l2/v4l2-utils.c
@@ -15,6 +15,10 @@
 #include <spa/utils/cleanup.h>
 #include <spa/utils/result.h>
 
+typedef uint32_t __u32;
+typedef int32_t  __s32;
+typedef int64_t  __s64;
+
 static int xioctl(int fd, int request, void *arg)
 {
 	int err;


[FILE:363:patches/patch-src_modules_module-netjack2-manager.c]
--- src/modules/module-netjack2-manager.c.orig	2024-07-31 10:02:24 UTC
+++ src/modules/module-netjack2-manager.c
@@ -42,6 +42,10 @@
 #define ifr_ifindex ifr_index
 #endif
 
+#if defined(__FreeBSD__) || defined(__DragonFly__)
+#define ifr_ifindex ifr_index
+#endif
+
 #ifndef IPTOS_DSCP
 #define IPTOS_DSCP_MASK 0xfc
 #define IPTOS_DSCP(x) ((x) & IPTOS_DSCP_MASK)


[FILE:398:patches/patch-src_modules_module-netjack2_peer.c]
--- src/modules/module-netjack2/peer.c.orig	2024-07-31 10:02:24 UTC
+++ src/modules/module-netjack2/peer.c
@@ -1,5 +1,12 @@
 
+#if defined(__FreeBSD__) || defined(__MidnightBSD__) || defined(__DragonFly__)
+#include <sys/endian.h>
+#define bswap_16 bswap16
+#define bswap_32 bswap32
+#define bswap_64 bswap64
+#else
 #include <byteswap.h>
+#endif
 
 #ifdef HAVE_OPUS_CUSTOM
 #include <opus/opus.h>


[FILE:344:patches/patch-src_modules_module-protocol-pulse_message-handler.c]
--- src/modules/module-protocol-pulse/message-handler.c.orig	2024-07-31 10:02:24 UTC
+++ src/modules/module-protocol-pulse/message-handler.c
@@ -6,7 +6,9 @@
 #include <stdio.h>
 
 #include <regex.h>
+#if !defined(__DragonFly__) && !defined(__FreeBSD__)
 #include <malloc.h>
+#endif
 
 #include <spa/param/props.h>
 #include <spa/pod/builder.h>


[FILE:365:patches/patch-src_modules_module-rt.c]
--- src/modules/module-rt.c.orig	2024-07-31 10:02:24 UTC
+++ src/modules/module-rt.c
@@ -239,6 +239,8 @@ static pid_t _gettid(void)
 	return (pid_t) gettid();
 #elif defined(__linux__)
 	return syscall(SYS_gettid);
+#elif defined(__DragonFly__)
+	return syscall(SYS_lwp_gettid);
 #elif defined(__FreeBSD__) || defined(__MidnightBSD__)
 	long pid;
 	thr_self(&pid);


[FILE:385:patches/patch-src_modules_module-rtp-sap.c]
--- src/modules/module-rtp-sap.c.orig	2024-07-31 10:02:24 UTC
+++ src/modules/module-rtp-sap.c
@@ -33,6 +33,10 @@
 #define SO_PASSCRED LOCAL_CREDS_PERSISTENT
 #endif
 
+#if defined(__DragonFly__)
+#define ifr_ifindex ifr_index
+#endif
+
 /** \page page_module_rtp_sap SAP Announce and create RTP streams
  *
  * The `rtp-sap` module announces RTP streams that match the rules with the


[FILE:294:patches/patch-src_modules_module-rtp-source.c]
--- src/modules/module-rtp-source.c.orig	2024-07-31 10:02:24 UTC
+++ src/modules/module-rtp-source.c
@@ -32,7 +32,7 @@
 #include <module-rtp/stream.h>
 #include "network-utils.h"
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__DragonFly__)
 #define ifr_ifindex ifr_index
 #endif
 


[FILE:293:patches/patch-src_modules_module-vban-recv.c]
--- src/modules/module-vban-recv.c.orig	2024-07-31 10:02:24 UTC
+++ src/modules/module-vban-recv.c
@@ -32,7 +32,7 @@
 #include <module-vban/stream.h>
 #include "network-utils.h"
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__DragonFly__)
 #define ifr_ifindex ifr_index
 #endif
 


[FILE:356:patches/patch-src_pipewire_conf.c]
--- src/pipewire/conf.c.orig	2024-07-31 10:02:24 UTC
+++ src/pipewire/conf.c
@@ -18,7 +18,7 @@
 #ifdef HAVE_PWD_H
 #include <pwd.h>
 #endif
-#if defined(__FreeBSD__) || defined(__MidnightBSD__) || defined(__GNU__)
+#if defined(__FreeBSD__) || defined(__MidnightBSD__) || defined(__GNU__) || defined(__DragonFly__)
 #ifndef O_PATH
 #define O_PATH 0
 #endif


[FILE:290:patches/patch-src_pipewire_impl-node.c]
--- src/pipewire/impl-node.c.orig	2024-07-31 10:02:24 UTC
+++ src/pipewire/impl-node.c
@@ -8,7 +8,9 @@
 #include <unistd.h>
 #include <errno.h>
 #include <time.h>
+#if !defined(__DragonFly__) && !defined(__FreeBSD__)
 #include <malloc.h>
+#endif
 #include <limits.h>
 
 #include "config.h"


[FILE:1085:patches/patch-src_pipewire_mem.c]
--- src/pipewire/mem.c.orig	2024-07-31 10:02:24 UTC
+++ src/pipewire/mem.c
@@ -26,6 +26,7 @@ PW_LOG_TOPIC_EXTERN(log_mem);
 #define PW_LOG_TOPIC_DEFAULT log_mem
 
 #if !defined(__FreeBSD__) && !defined(__MidnightBSD__) && !defined(__GNU__) \
+       && !defined(__DragonFly__)
        && !defined(HAVE_MEMFD_CREATE)
 /*
  * No glibc wrappers exist for memfd_create(2), so provide our own.
@@ -43,7 +44,7 @@ static inline int memfd_create(const cha
 #define HAVE_MEMFD_CREATE 1
 #endif
 
-#if defined(__FreeBSD__) || defined(__MidnightBSD__) || defined(__GNU__)
+#if defined(__FreeBSD__) || defined(__MidnightBSD__) || defined(__GNU__) || defined(__DragonFly__)
 #define MAP_LOCKED 0
 #endif
 
@@ -556,7 +557,7 @@ struct pw_memblock * pw_mempool_alloc(st
 		pw_log_error("%p: Failed to create memfd: %m", pool);
 		goto error_free;
 	}
-#elif defined(__FreeBSD__) || defined(__MidnightBSD__)
+#elif defined(__FreeBSD__) || defined(__MidnightBSD__) || !defined(__DragonFly__)
 	b->this.fd = shm_open(SHM_ANON, O_CREAT | O_RDWR | O_CLOEXEC, 0);
 	if (b->this.fd == -1) {
 		res = -errno;


[FILE:954:patches/patch-src_pipewire_pipewire.c]
--- src/pipewire/pipewire.c.orig	2024-07-31 10:02:24 UTC
+++ src/pipewire/pipewire.c
@@ -7,7 +7,7 @@
 #include <unistd.h>
 #include <limits.h>
 #include <stdio.h>
-#if !defined(__FreeBSD__) && !defined(__MidnightBSD__) && !defined(__GNU__)
+#if !defined(__FreeBSD__) && !defined(__MidnightBSD__) && !defined(__GNU__) && !defined(__DragonFly__)
 #include <sys/prctl.h>
 #endif
 #include <pwd.h>
@@ -659,7 +659,7 @@ static void init_prgname(void)
 		}
 	}
 #endif
-#if defined __FreeBSD__ || defined(__MidnightBSD__)
+#if defined __FreeBSD__ || defined(__MidnightBSD__) || defined(__DragonFly__)
 	{
 		ssize_t len;
 
@@ -669,7 +669,7 @@ static void init_prgname(void)
 		}
 	}
 #endif
-#if !defined(__FreeBSD__) && !defined(__MidnightBSD__) && !defined(__GNU__)
+#if !defined(__FreeBSD__) && !defined(__MidnightBSD__) && !defined(__GNU__) && !defined(__DragonFly__)
 	{
 		if (prctl(PR_GET_NAME, (unsigned long) name, 0, 0, 0) == 0) {
 			prgname = name;


[FILE:277:patches/patch-src_pipewire_thread.c]
--- src/pipewire/thread.c.orig	2024-07-31 10:02:24 UTC
+++ src/pipewire/thread.c
@@ -6,6 +6,9 @@
 #include <unistd.h>
 #include <sys/types.h>
 #include <pthread.h>
+#ifdef __FreeBSD__
+#include <pthread_np.h>
+#endif
 
 #include <spa/utils/dict.h>
 #include <spa/utils/defs.h>


[FILE:344:patches/patch-src_tools_pw-cli.c]
--- src/tools/pw-cli.c.orig	2024-07-31 10:02:24 UTC
+++ src/tools/pw-cli.c
@@ -10,7 +10,7 @@
 #include <signal.h>
 #include <string.h>
 #include <ctype.h>
-#if !defined(__FreeBSD__) && !defined(__MidnightBSD__)
+#if !defined(__FreeBSD__) && !defined(__MidnightBSD__) && !defined(__DragonFly__)
 #include <alloca.h>
 #endif
 #include <getopt.h>


[FILE:362:patches/patch-test_meson.build]
--- test/meson.build.orig	2024-07-31 10:02:24 UTC
+++ test/meson.build
@@ -79,7 +79,7 @@ test('test-loop',
     executable('test-loop',
                'test-loop.c',
                include_directories: pwtest_inc,
-               dependencies: [ spa_dep ],
+               dependencies: [ spa_dep, epoll_shim_dep ],
                link_with: pwtest_lib)
 )
 


[FILE:198:patches/patch-test_test-functional.c]
--- test/test-functional.c.orig	2024-07-31 10:02:24 UTC
+++ test/test-functional.c
@@ -4,6 +4,8 @@
 
 #include "config.h"
 
+#include <sys/wait.h>
+
 #include "pwtest.h"
 
 PWTEST(openal_info_test)


[FILE:1657:patches/patch-zulu-libutil-clash]
PipeWire exports a function named "pw_init". FreeBSD also has the libutil.so
library, which exports a function with the same name. To workaround the
conflict, rename the PipeWire init function into "pipewire_init".

Upstream issue: https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/1819

--- src/pipewire/pipewire.c.orig	2022-04-27 17:59:21 UTC
+++ src/pipewire/pipewire.c
@@ -580,7 +580,7 @@ SPA_EXPORT
  * This function can be called multiple times.
  */
 SPA_EXPORT
-void pw_init(int *argc, char **argv[])
+void pipewire_init(int *argc, char **argv[])
 {
 	const char *str;
 	struct spa_dict_item items[6];
@@ -683,7 +683,7 @@ SPA_EXPORT
  * used again after being deinitialized with a new pw_init() call.
  */
 SPA_EXPORT
-void pw_deinit(void)
+void pipewire_deinit(void)
 {
 	struct support *support = &global_support;
 	struct registry *registry = &support->registry;
@@ -712,6 +712,21 @@ done:
 	pthread_mutex_unlock(&init_lock);
 
 }
+
+#if !defined(__FreeBSD__) && !defined(__DragonFly__)
+#undef pw_init
+SPA_EXPORT
+void pw_init(int *argc, char **argv[])
+{
+	pipewire_init(argc, argv);
+}
+#undef pw_deinit
+SPA_EXPORT
+void pw_deinit(void)
+{
+	pipewire_deinit();
+}
+#endif
 
 /** Check if a debug category is enabled
  *
--- src/pipewire/pipewire.h.orig	2022-04-27 17:59:21 UTC
+++ src/pipewire/pipewire.h
@@ -69,9 +69,12 @@ void
  * \{
  */
 void
-pw_init(int *argc, char **argv[]);
+pipewire_init(int *argc, char **argv[]);
+void pipewire_deinit(void);
 
-void pw_deinit(void);
+/* BSD has pw_init already */
+#define pw_init pipewire_init
+#define pw_deinit pipewire_deinit
 
 bool
 pw_debug_is_category_enabled(const char *name);

