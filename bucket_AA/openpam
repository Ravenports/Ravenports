# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		openpam
VERSION=		20230627
KEYWORDS=		security
VARIANTS=		std
SDESC[std]=		Open-source Pluggable Authentication Module
HOMEPAGE=		https://www.openpam.org/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://www.openpam.org/downloads/
DISTFILE[1]=		openpam-20230627.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

B_DEPS[sunos]=		libbsd4sol:single:std

USES=			libtool pkgconfig

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-pam-unix
			--with-modules-dir={{PREFIX}}/lib/openpam

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		2.0.0

SET_DEBUGGING_ON=	yes
OPTIMIZER_LEVEL=	0
VAR_OPSYS[freebsd]=	VAR1="/usr/lib/security",
VAR_OPSYS[sunos]=	VAR1="/usr/lib/security",
			CFLAGS=-I{{PREFIX}}/include/bsd
VAR_OPSYS[linux]=	VAR1="/lib/{{ARCH_STANDARD}}-linux-gnu/security",
VAR_OPSYS[netbsd]=	CONFIGURE_ENV=ac_cv_lib_dl_dlopen=false
			VAR1="/usr/lib/security",
VAR_OPSYS[dragonfly]=	VAR1="/usr/lib/security",

post-patch:
	${REINPLACE_CMD} \
		-e 's|@PREFIX@|${PREFIX}|' \
		-e 's|@SYSTEM_MODULES@|${VAR1}|' \
		${WRKSRC}/lib/libpam/openpam_constants.c

[FILE:365:descriptions/desc.primary]
OpenPAM is an open source PAM library that focuses on simplicity,
correctness, and cleanliness. Its aim is to gather the best features of
Solaris PAM, XSSO and Linux-PAM, plus some innovations of its own. In
areas where these implementations disagree, OpenPAM tries to remain
compatible with Solaris, at the expense of XSSO conformance and Linux-PAM
compatibility.


[FILE:102:distinfo]
0d9ac8f5b55a6241f5073f13eff1e95461422c45ac1a30445d7e1068e91db4fd       539095 openpam-20230627.tar.gz


[FILE:282:manifests/plist.primary]
lib/
 libpam.so.%%SOMAJOR%%
 libpam.so.%%SOVERSION%%
lib/openpam/
 pam_deny.so.%%SOMAJOR%%
 pam_deny.so.%%SOVERSION%%
 pam_permit.so.%%SOMAJOR%%
 pam_permit.so.%%SOVERSION%%
 pam_return.so.%%SOMAJOR%%
 pam_return.so.%%SOVERSION%%
 pam_unix.so.%%SOMAJOR%%
 pam_unix.so.%%SOVERSION%%


[FILE:204:manifests/plist.dev]
include/security/
 openpam.h
 openpam_attr.h
 openpam_version.h
 pam_appl.h
 pam_constants.h
 pam_modules.h
 pam_types.h
lib/libpam.so
lib/openpam/
 pam_deny.so
 pam_permit.so
 pam_return.so
 pam_unix.so


[FILE:924:manifests/plist.man]
share/man/man3/
 openpam.3
 openpam_borrow_cred.3
 openpam_free_data.3
 openpam_free_envlist.3
 openpam_get_feature.3
 openpam_get_option.3
 openpam_log.3
 openpam_nullconv.3
 openpam_readline.3
 openpam_readlinev.3
 openpam_readword.3
 openpam_restore_cred.3
 openpam_set_feature.3
 openpam_set_option.3
 openpam_straddch.3
 openpam_subst.3
 openpam_ttyconv.3
 pam.3
 pam_acct_mgmt.3
 pam_authenticate.3
 pam_chauthtok.3
 pam_close_session.3
 pam_conv.3
 pam_end.3
 pam_error.3
 pam_get_authtok.3
 pam_get_data.3
 pam_get_item.3
 pam_get_user.3
 pam_getenv.3
 pam_getenvlist.3
 pam_info.3
 pam_open_session.3
 pam_prompt.3
 pam_putenv.3
 pam_set_data.3
 pam_set_item.3
 pam_setcred.3
 pam_setenv.3
 pam_sm_acct_mgmt.3
 pam_sm_authenticate.3
 pam_sm_chauthtok.3
 pam_sm_close_session.3
 pam_sm_open_session.3
 pam_sm_setcred.3
 pam_start.3
 pam_strerror.3
 pam_verror.3
 pam_vinfo.3
 pam_vprompt.3
share/man/man5/pam.conf.5


[FILE:289:patches/patch-bin_su_su.c]
--- bin/su/su.c.orig	2022-10-02 14:45:45 UTC
+++ bin/su/su.c
@@ -52,6 +52,10 @@
 #include <security/pam_appl.h>
 #include <security/openpam.h>	/* for openpam_ttyconv() */
 
+#ifndef MAXHOSTNAMELEN
+#define MAXHOSTNAMELEN	256
+#endif
+
 extern char **environ;
 
 static pam_handle_t *pamh;


[FILE:255:patches/patch-lib_libpam_openpam__configure.c]
--- lib/libpam/openpam_configure.c.orig	2022-10-02 14:45:45 UTC
+++ lib/libpam/openpam_configure.c
@@ -43,6 +43,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <limits.h>	/* for PATH_MAX */
 
 #include <security/pam_appl.h>
 


[FILE:565:patches/patch-lib_libpam_openpam__constants.c]
--- lib/libpam/openpam_constants.c.orig	2022-10-02 14:45:45 UTC
+++ lib/libpam/openpam_constants.c
@@ -167,17 +167,13 @@ const char *pam_sm_func_name[PAM_NUM_PRI
 const char *openpam_policy_path[] = {
 	"/etc/pam.d/",
 	"/etc/pam.conf",
-	"/usr/local/etc/pam.d/",
-	"/usr/local/etc/pam.conf",
+	"@PREFIX@/etc/pam.d/",
+	"@PREFIX@/etc/pam.conf",
 	NULL
 };
 
 const char *openpam_module_path[] = {
-#ifdef OPENPAM_MODULES_DIRECTORY
-	OPENPAM_MODULES_DIRECTORY,
-#else
-	"/usr/lib",
-	"/usr/local/lib",
-#endif
+	"@PREFIX@/lib/openpam",
+	@SYSTEM_MODULES@
 	NULL
 };


[FILE:252:patches/patch-lib_libpam_openpam__dynamic.c]
--- lib/libpam/openpam_dynamic.c.orig	2022-10-02 14:45:45 UTC
+++ lib/libpam/openpam_dynamic.c
@@ -46,6 +46,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
+#include <limits.h>	/* for PATH_MAX */
 
 #include <security/pam_appl.h>
 


[FILE:888:patches/patch-lib_libpam_openpam__ttyconv.c]
--- lib/libpam/openpam_ttyconv.c.orig	2022-10-02 14:45:45 UTC
+++ lib/libpam/openpam_ttyconv.c
@@ -55,6 +55,30 @@
 #include "openpam_impl.h"
 #include "openpam_strlset.h"
 
+#ifndef timeradd
+#define timeradd(tvp, uvp, vvp)						\
+	do {								\
+		(vvp)->tv_sec = (tvp)->tv_sec + (uvp)->tv_sec;		\
+		(vvp)->tv_usec = (tvp)->tv_usec + (uvp)->tv_usec;	\
+		if ((vvp)->tv_usec >= 1000000) {			\
+			(vvp)->tv_sec++;				\
+			(vvp)->tv_usec -= 1000000;			\
+		}							\
+	} while (0)
+#endif
+
+#ifndef timersub
+#define timersub(tvp, uvp, vvp)						\
+	do {								\
+		(vvp)->tv_sec = (tvp)->tv_sec - (uvp)->tv_sec;		\
+		(vvp)->tv_usec = (tvp)->tv_usec - (uvp)->tv_usec;	\
+		if ((vvp)->tv_usec < 0) {				\
+			(vvp)->tv_sec--;				\
+			(vvp)->tv_usec += 1000000;			\
+		}							\
+	} while (0)
+#endif
+
 int openpam_ttyconv_timeout = 0;
 
 static volatile sig_atomic_t caught_signal;

