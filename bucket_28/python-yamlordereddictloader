# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-yamlordereddictloader
VERSION=		0.4.0
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Ordered YAML loader and dump for PyYAML (3.10)
SDESC[v11]=		Ordered YAML loader and dump for PyYAML (3.11)
HOMEPAGE=		https://github.com/fmenabe/python-yamlordereddictloader
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/y/yamlordereddictloader
DISTFILE[1]=		yamlordereddictloader-0.4.0.tar.gz:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		yamlordereddictloader-0.4.0

GENERATED=		yes

[PY310].BUILDRUN_DEPENDS_ON=		python-PyYAML:single:py310
[PY310].USES_ON=			python:py310,sutools

[PY311].BUILDRUN_DEPENDS_ON=		python-PyYAML:single:v11
[PY311].USES_ON=			python:v11,sutools

[FILE:1849:descriptions/desc.single]
python-yamlordereddictloader
============================

           :alt: License

           :alt: Versions

           :alt: PyPi

           :alt: Code repo

           :alt: Code Health

This module provide a loader and a dumper for PyYAML allowing to keep items
order
when loading a file (by putting them in OrderedDict objects) and to manage
OrderedDict objects when dumping to a file.

The loader is based on stackoverflow topic (thanks to Eric Naeseth):
http://stackoverflow.com/questions/5121931/in-python-how-can-you-load-yaml-mappings-as-ordereddicts#answer-5121963

Self promotion: I use it a lot with [clg], which
allows to generate command-line definition from a configuration file, for
keeping
order of subcommands, options and arguments in the help message!

To install it
-------------

.. code-block:: bash

    $ pip install yamlordereddictloader

Loader usage
------------

.. code-block:: python

    import yaml
    import yamlordereddictloader

    data = yaml.load(open('myfile.yml'),
Loader=yamlordereddictloader.Loader)

**Note:** For using the safe loader (which want standard YAML tags and does
not construct arbitrary Python objects), replace
``yamlorderdictloader.Loader by
yamlorderedictloader.SafeLoader``.

Dumper usage
------------

.. code-block:: python

    import yaml
    import yamlordereddictloader
    from collections import OrderedDict

    data = OrderedDict([
        ('key1', 'val1'),
        ('key2', OrderedDict([('key21', 'val21'), ('key22', 'val22')]))
   ])
    yaml.dump(
        data,
        open('myfile.yml', 'w'),
        Dumper=yamlordereddictloader.Dumper,
        default_flow_style=False)

**Note:** For using the safe dumper (which produce standard YAML tags and
does
not represent arbitrary Python objects), replace
``yamlorderdictloader.Dumper by
yamlorderedictloader.SafeDumper``.


[FILE:113:distinfo]
7f30f0b99ea3f877f7cb340c570921fa9d639b7f69cba18be051e27f8de2080e         3322 yamlordereddictloader-0.4.0.tar.gz

