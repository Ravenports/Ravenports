# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libcanberra
VERSION=		0.30
REVISION=		3
KEYWORDS=		audio
VARIANTS=		std
SDESC[std]=		Implementation of the XDG sound theme specs
HOMEPAGE=		http://0pointer.de/lennart/projects/libcanberra/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://0pointer.de/lennart/projects/libcanberra/
DISTFILE[1]=		libcanberra-0.30.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			docs
			gtk2
			gtk3

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		at-spi2-core:dev:std
			gstreamer1:dev:std
			gtk2:set:std
			gtk3:set:std
			harfbuzz:dev:std
			libvorbis:dev:std
			tdb:dev:std
BUILDRUN_DEPENDS=	gstreamer1:primary:std
			libltdl:single:std
			libvorbis:primary:std
			tdb:primary:std
RUN_DEPENDS=		sound-theme-freedesktop:single:std
EXRUN[gtk2]=		primary
			gtk2:primary:std
EXRUN[gtk3]=		primary
			gtk3:primary:std

USES=			gmake libtool pkgconfig mbsdfix
GNOME_COMPONENTS=	glib intltool

LICENSE=		LGPL21:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21:{{WRKSRC}}/LGPL
LICENSE_AWK=		TERMS:"types.h"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/canberra.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		audio/libcanberra

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-lynx

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		0.2.5
PLIST_SUB=		SOVER_GTK=0.1.9
			SOMAJ_GTK=0

CFLAGS=			-D_PUBLIC_=

post-install:
	${MV} ${STAGEDIR}${PREFIX}/share/gtk-doc/html/libcanberra \
		${STAGEDIR}${PREFIX}/share/doc/libcanberra
	${RM} -r ${STAGEDIR}${PREFIX}/share/gtk-doc

post-patch-sunos:
	${REINPLACE_CMD} -e '/as-needed/d' ${WRKSRC}/configure

[FILE:249:descriptions/desc.primary]
libcanberra is an implementation of the XDG Sound Theme and Name 
Specifications, for generating event sounds on free desktops, such as 
GNOME. It comes with several backends (ALSA, PulseAudio, OSS, GStreamer, 
null) and is designed to be portable.


[FILE:59:descriptions/desc.gtk2]
This subpackage contains the libcanberra GTK+2 components.


[FILE:59:descriptions/desc.gtk3]
This subpackage contains the libcanberra GTK+3 components.


[FILE:102:distinfo]
c2b671e67e0c288a69fc33dc1b6f1b534d07882c2aceed37004bf48c601afa72       318960 libcanberra-0.30.tar.xz


[FILE:470:manifests/plist.primary]
%%ONLY-DRAGONFLY%%lib/libcanberra-0.30/libcanberra-oss.so
%%ONLY-FREEBSD%%lib/libcanberra-0.30/libcanberra-oss.so
%%ONLY-LINUX%%lib/libcanberra-0.30/libcanberra-oss.so
%%ONLY-MIDNIGHTBSD%%lib/libcanberra-0.30/libcanberra-oss.so
%%ONLY-NETBSD%%lib/libcanberra-0.30/libcanberra-oss.so
lib/
 libcanberra.so.%%SOMAJOR%%
 libcanberra.so.%%SOVERSION%%
lib/libcanberra-0.30/
 libcanberra-gstreamer.so
 libcanberra-multi.so
 libcanberra-null.so
share/vala/vapi/libcanberra.vapi


[FILE:171:manifests/plist.dev]
include/
 canberra-gtk.h
 canberra.h
lib/
 libcanberra-gtk.so
 libcanberra-gtk3.so
 libcanberra.so
lib/pkgconfig/
 libcanberra-gtk.pc
 libcanberra-gtk3.pc
 libcanberra.pc


[FILE:229:manifests/plist.docs]
share/doc/libcanberra/README
share/doc/libcanberra/libcanberra/
 ch01.html
 home.png
 index.html
 index.sgml
 left.png
 libcanberra-canberra-gtk.html
 libcanberra-canberra.html
 libcanberra.devhelp2
 right.png
 style.css
 up.png


[FILE:415:manifests/plist.gtk2]
bin/canberra-gtk-play
lib/
 libcanberra-gtk.so.%%SOMAJ_GTK%%
 libcanberra-gtk.so.%%SOVER_GTK%%
lib/gnome-settings-daemon-3.0/gtk-modules/canberra-gtk-module.desktop
lib/gtk-2.0/modules/libcanberra-gtk-module.so
share/gdm/autostart/LoginWindow/libcanberra-ready-sound.desktop
share/gnome/autostart/libcanberra-login-sound.desktop
share/gnome/shutdown/libcanberra-logout-sound.sh
share/vala/vapi/libcanberra-gtk.vapi


[FILE:151:manifests/plist.gtk3]
lib/
 libcanberra-gtk3.so.%%SOMAJ_GTK%%
 libcanberra-gtk3.so.%%SOVER_GTK%%
lib/gtk-3.0/modules/
 libcanberra-gtk-module.so
 libcanberra-gtk3-module.so


[FILE:360:patches/patch-src_oss.c]
--- src/oss.c.orig	2011-02-23 01:51:00 UTC
+++ src/oss.c
@@ -259,7 +259,7 @@ static int open_oss(ca_context *c, struc
                 val = AFMT_S16_NE;
                 break;
         case CA_SAMPLE_S16RE:
-#if __BYTE_ORDER == __LITTLE_ENDIAN
+#if _BYTE_ORDER == _LITTLE_ENDIAN
                 val = AFMT_S16_BE;
 #else
                 val = AFMT_S16_LE;

