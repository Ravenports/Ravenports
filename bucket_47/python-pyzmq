# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pyzmq
VERSION=		25.1.1
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Python bindings for 0MQ (3.11)
SDESC[v12]=		Python bindings for 0MQ (3.12)
HOMEPAGE=		https://pyzmq.readthedocs.org
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/pyzmq
DISTFILE[1]=		pyzmq-25.1.1.tar.gz:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

BUILD_DEPENDS=		python-packaging:single:python_used
BUILDRUN_DEPENDS=	zeromq:single:standard

DISTNAME=		pyzmq-25.1.1

PYD_CONFIGUREARGS=	--zmq={{LOCALBASE}}
GENERATED=		yes

INSTALL_REQ_TOOLCHAIN=	yes

[PY311].USES_ON=			python:v11,sutools

[PY312].USES_ON=			python:v12,sutools

post-patch:
	${ECHO_CMD} "Replace with dummy ASCII" > ${WRKSRC}/README.md

[FILE:2722:descriptions/desc.single]
# PyZMQ: Python bindings for ØMQ

This package contains Python bindings for [ZeroMQ].
ØMQ is a lightweight and fast messaging implementation.

PyZMQ should work with any reasonable version of Python (≥ 3.4),
as well as Python 2.7 and 3.3, as well as PyPy.
The Cython backend used by CPython supports libzmq ≥ 2.1.4 (including
3.2.x and 4.x),
but the CFFI backend used by PyPy only supports libzmq ≥ 3.2.2 (including
4.x).

For a summary of changes to pyzmq, see our
[changelog].

### ØMQ 3.x, 4.x

PyZMQ fully supports the 3.x and 4.x APIs of libzmq,
developed at [zeromq/libzmq].
No code to change, no flags to pass,
just build pyzmq against the latest and it should work.

PyZMQ does not support the old libzmq 2 API on PyPy.

## Documentation

See PyZMQ's Sphinx-generated
documentation [on Read the Docs] for API
details, and some notes on Python and Cython development. If you want to
learn about using ØMQ in general, the excellent [ØMQ
Guide] is the place to start, which has a
Python version of every example. We also have some information on our
[wiki].

## Downloading

Unless you specifically want to develop PyZMQ, we recommend downloading
the PyZMQ source code or wheels from
[PyPI],
or install with conda.

You can also get the latest source code from our GitHub repository, but
building from the repository will require that you install recent Cython.

## Building and installation

For more detail on building pyzmq, see [our Wiki].

We build wheels for macOS, Windows, and Linux, so you can get a binary on
those platforms with:

`
pip install pyzmq
`

but compiling from source with `pip install pyzmq` should work in most
environments.
Especially on macOS, make sure you are using the latest pip (≥ 8), or it
may not find the right wheels.

If the wheel doesn't work for some reason, or you want to force pyzmq to be
compiled
(this is often preferable if you already have libzmq installed and
configured the way you want it),
you can force installation with:

```
pip install --no-binary=:all: pyzmq
```

When compiling pyzmq (e.g. installing with pip on Linux),
it is generally recommended that zeromq be installed separately,
via homebrew, apt, yum, etc:

```
# Debian-based
sudo apt-get install libzmq3-dev

# RHEL-based
sudo yum install libzmq3-devel
```

If this is not available, pyzmq will _try_ to build libzmq as a Python
Extension,
though this is not guaranteed to work.

Building pyzmq from the git repo (including release tags on GitHub)
requires Cython.

## Old versions

pyzmq 16 drops support Python 2.6 and 3.2.
If you need to use one of those Python versions, you can pin your pyzmq
version to before 16:

```
pip install 'pyzmq<16'
```

For libzmq 2.0.x, use 'pyzmq\<2.1'


[FILE:98:distinfo]
259c22485b71abacdfa8bf79720cd7bcf4b9d128b30ea554f01ae71fdbfdaa23      1365724 pyzmq-25.1.1.tar.gz

