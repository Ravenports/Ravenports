# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		abseil-cpp
VERSION=		20250512.1
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Abseil C++ Common Libraries
HOMEPAGE=		https://abseil.io/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/abseil:abseil-cpp:20250512.1
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cmake c++:primary

LICENSE=		APACHE20:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		APACHE20:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"^\/\/ File"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/absl/algorithm/algorithm.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/abseil

SOVERSION=		2505.0.0

CMAKE_ARGS=		-DBUILD_SHARED_LIBS:BOOL=ON

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.so

[FILE:511:descriptions/desc.primary]
Abseil is an open source collection of C++ libraries drawn from the
most fundamental pieces of Google's internal codebase.  These libraries
are the nuts-and-bolts that underpin almost everything Google runs.
Bits and pieces of these APIs are embedded in most of our open source
projects, and Abseil aims to bring them together into one comprehensive
project.  Abseil encompasses the most basic building blocks of Google's
codebase: code that is production-tested and will be fully maintained
for years to come.


[FILE:114:distinfo]
9b7a064305e9fd94d124ffa6cc358592eb42b5da588fb4e07d09254aa40086db      2221441 abseil-abseil-cpp-20250512.1.tar.gz


[FILE:3862:manifests/plist.primary]
lib/
 libabsl_base.so.%%SOVERSION%%
 libabsl_city.so.%%SOVERSION%%
 libabsl_civil_time.so.%%SOVERSION%%
 libabsl_cord.so.%%SOVERSION%%
 libabsl_cord_internal.so.%%SOVERSION%%
 libabsl_cordz_functions.so.%%SOVERSION%%
 libabsl_cordz_handle.so.%%SOVERSION%%
 libabsl_cordz_info.so.%%SOVERSION%%
 libabsl_cordz_sample_token.so.%%SOVERSION%%
 libabsl_crc32c.so.%%SOVERSION%%
 libabsl_crc_cord_state.so.%%SOVERSION%%
 libabsl_crc_cpu_detect.so.%%SOVERSION%%
 libabsl_crc_internal.so.%%SOVERSION%%
 libabsl_debugging_internal.so.%%SOVERSION%%
 libabsl_decode_rust_punycode.so.%%SOVERSION%%
 libabsl_demangle_internal.so.%%SOVERSION%%
 libabsl_demangle_rust.so.%%SOVERSION%%
 libabsl_die_if_null.so.%%SOVERSION%%
 libabsl_examine_stack.so.%%SOVERSION%%
 libabsl_exponential_biased.so.%%SOVERSION%%
 libabsl_failure_signal_handler.so.%%SOVERSION%%
 libabsl_flags_commandlineflag.so.%%SOVERSION%%
 libabsl_flags_commandlineflag_internal.so.%%SOVERSION%%
 libabsl_flags_config.so.%%SOVERSION%%
 libabsl_flags_internal.so.%%SOVERSION%%
 libabsl_flags_marshalling.so.%%SOVERSION%%
 libabsl_flags_parse.so.%%SOVERSION%%
 libabsl_flags_private_handle_accessor.so.%%SOVERSION%%
 libabsl_flags_program_name.so.%%SOVERSION%%
 libabsl_flags_reflection.so.%%SOVERSION%%
 libabsl_flags_usage.so.%%SOVERSION%%
 libabsl_flags_usage_internal.so.%%SOVERSION%%
 libabsl_graphcycles_internal.so.%%SOVERSION%%
 libabsl_hash.so.%%SOVERSION%%
 libabsl_hashtablez_sampler.so.%%SOVERSION%%
 libabsl_int128.so.%%SOVERSION%%
 libabsl_kernel_timeout_internal.so.%%SOVERSION%%
 libabsl_leak_check.so.%%SOVERSION%%
 libabsl_log_flags.so.%%SOVERSION%%
 libabsl_log_globals.so.%%SOVERSION%%
 libabsl_log_initialize.so.%%SOVERSION%%
 libabsl_log_internal_check_op.so.%%SOVERSION%%
 libabsl_log_internal_conditions.so.%%SOVERSION%%
 libabsl_log_internal_fnmatch.so
 libabsl_log_internal_fnmatch.so.%%SOVERSION%%
 libabsl_log_internal_format.so.%%SOVERSION%%
 libabsl_log_internal_globals.so.%%SOVERSION%%
 libabsl_log_internal_log_sink_set.so.%%SOVERSION%%
 libabsl_log_internal_message.so.%%SOVERSION%%
 libabsl_log_internal_nullguard.so.%%SOVERSION%%
 libabsl_log_internal_proto.so.%%SOVERSION%%
 libabsl_log_internal_structured_proto.so.%%SOVERSION%%
 libabsl_log_severity.so.%%SOVERSION%%
 libabsl_log_sink.so.%%SOVERSION%%
 libabsl_low_level_hash.so.%%SOVERSION%%
 libabsl_malloc_internal.so.%%SOVERSION%%
 libabsl_periodic_sampler.so.%%SOVERSION%%
 libabsl_poison.so.%%SOVERSION%%
 libabsl_random_distributions.so.%%SOVERSION%%
 libabsl_random_internal_distribution_test_util.so.%%SOVERSION%%
 libabsl_random_internal_entropy_pool.so.%%SOVERSION%%
 libabsl_random_internal_platform.so.%%SOVERSION%%
 libabsl_random_internal_randen.so.%%SOVERSION%%
 libabsl_random_internal_randen_hwaes.so.%%SOVERSION%%
 libabsl_random_internal_randen_hwaes_impl.so.%%SOVERSION%%
 libabsl_random_internal_randen_slow.so.%%SOVERSION%%
 libabsl_random_internal_seed_material.so.%%SOVERSION%%
 libabsl_random_seed_gen_exception.so.%%SOVERSION%%
 libabsl_random_seed_sequences.so.%%SOVERSION%%
 libabsl_raw_hash_set.so.%%SOVERSION%%
 libabsl_raw_logging_internal.so.%%SOVERSION%%
 libabsl_scoped_set_env.so.%%SOVERSION%%
 libabsl_spinlock_wait.so.%%SOVERSION%%
 libabsl_stacktrace.so.%%SOVERSION%%
 libabsl_status.so.%%SOVERSION%%
 libabsl_statusor.so.%%SOVERSION%%
 libabsl_str_format_internal.so.%%SOVERSION%%
 libabsl_strerror.so.%%SOVERSION%%
 libabsl_string_view.so.%%SOVERSION%%
 libabsl_strings.so.%%SOVERSION%%
 libabsl_strings_internal.so.%%SOVERSION%%
 libabsl_symbolize.so.%%SOVERSION%%
 libabsl_synchronization.so.%%SOVERSION%%
 libabsl_throw_delegate.so.%%SOVERSION%%
 libabsl_time.so.%%SOVERSION%%
 libabsl_time_zone.so.%%SOVERSION%%
 libabsl_tracing_internal.so.%%SOVERSION%%
 libabsl_utf8_for_code_point.so.%%SOVERSION%%
 libabsl_vlog_config_internal.so
 libabsl_vlog_config_internal.so.%%SOVERSION%%


[FILE:15354:manifests/plist.dev]
include/absl/algorithm/
 algorithm.h
 container.h
include/absl/base/
 attributes.h
 call_once.h
 casts.h
 config.h
 const_init.h
 dynamic_annotations.h
 fast_type_id.h
 log_severity.h
 macros.h
 no_destructor.h
 nullability.h
 optimization.h
 options.h
 policy_checks.h
 port.h
 prefetch.h
 thread_annotations.h
include/absl/base/internal/
 atomic_hook.h
 atomic_hook_test_helper.h
 cycleclock.h
 cycleclock_config.h
 direct_mmap.h
 dynamic_annotations.h
 endian.h
 errno_saver.h
 exception_safety_testing.h
 exception_testing.h
 hide_ptr.h
 identity.h
 iterator_traits.h
 iterator_traits_test_helper.h
 low_level_alloc.h
 low_level_scheduling.h
 nullability_deprecated.h
 per_thread_tls.h
 poison.h
 pretty_function.h
 raw_logging.h
 scheduling_mode.h
 scoped_set_env.h
 spinlock.h
 spinlock_akaros.inc
 spinlock_linux.inc
 spinlock_posix.inc
 spinlock_wait.h
 spinlock_win32.inc
 strerror.h
 sysinfo.h
 thread_identity.h
 throw_delegate.h
 tracing.h
 tsan_mutex_interface.h
 unaligned_access.h
 unscaledcycleclock.h
 unscaledcycleclock_config.h
include/absl/cleanup/cleanup.h
include/absl/cleanup/internal/cleanup.h
include/absl/container/
 btree_map.h
 btree_set.h
 btree_test.h
 fixed_array.h
 flat_hash_map.h
 flat_hash_set.h
 hash_container_defaults.h
 inlined_vector.h
 node_hash_map.h
 node_hash_set.h
include/absl/container/internal/
 btree.h
 btree_container.h
 common.h
 common_policy_traits.h
 compressed_tuple.h
 container_memory.h
 hash_function_defaults.h
 hash_generator_testing.h
 hash_policy_testing.h
 hash_policy_traits.h
 hashtable_control_bytes.h
 hashtable_debug.h
 hashtable_debug_hooks.h
 hashtablez_sampler.h
 inlined_vector.h
 layout.h
 node_slot_policy.h
 raw_hash_map.h
 raw_hash_set.h
 raw_hash_set_resize_impl.h
 test_allocator.h
 test_instance_tracker.h
 tracked.h
 unordered_map_constructor_test.h
 unordered_map_lookup_test.h
 unordered_map_members_test.h
 unordered_map_modifiers_test.h
 unordered_set_constructor_test.h
 unordered_set_lookup_test.h
 unordered_set_members_test.h
 unordered_set_modifiers_test.h
include/absl/crc/crc32c.h
include/absl/crc/internal/
 cpu_detect.h
 crc.h
 crc32_x86_arm_combined_simd.h
 crc32c.h
 crc32c_inline.h
 crc_cord_state.h
 crc_internal.h
 crc_memcpy.h
 non_temporal_arm_intrinsics.h
 non_temporal_memcpy.h
include/absl/debugging/
 failure_signal_handler.h
 leak_check.h
 stacktrace.h
 symbolize.h
 symbolize_darwin.inc
 symbolize_elf.inc
 symbolize_emscripten.inc
 symbolize_unimplemented.inc
 symbolize_win32.inc
include/absl/debugging/internal/
 address_is_readable.h
 addresses.h
 bounded_utf8_length_sequence.h
 decode_rust_punycode.h
 demangle.h
 demangle_rust.h
 elf_mem_image.h
 examine_stack.h
 stack_consumption.h
 stacktrace_aarch64-inl.inc
 stacktrace_arm-inl.inc
 stacktrace_config.h
 stacktrace_emscripten-inl.inc
 stacktrace_generic-inl.inc
 stacktrace_powerpc-inl.inc
 stacktrace_riscv-inl.inc
 stacktrace_unimplemented-inl.inc
 stacktrace_win32-inl.inc
 stacktrace_x86-inl.inc
 symbolize.h
 utf8_for_code_point.h
 vdso_support.h
include/absl/flags/
 commandlineflag.h
 config.h
 declare.h
 flag.h
 marshalling.h
 parse.h
 reflection.h
 usage.h
 usage_config.h
include/absl/flags/internal/
 commandlineflag.h
 flag.h
 parse.h
 path_util.h
 private_handle_accessor.h
 program_name.h
 registry.h
 sequence_lock.h
 usage.h
include/absl/functional/
 any_invocable.h
 bind_front.h
 function_ref.h
 overload.h
include/absl/functional/internal/
 any_invocable.h
 front_binder.h
 function_ref.h
include/absl/hash/
 hash.h
 hash_testing.h
include/absl/hash/internal/
 city.h
 hash.h
 hash_test.h
 low_level_hash.h
 spy_hash_state.h
 weakly_mixed_integer.h
include/absl/log/
 absl_check.h
 absl_log.h
 absl_vlog_is_on.h
 check.h
 check_test_impl.inc
 die_if_null.h
 flags.h
 globals.h
 initialize.h
 log.h
 log_basic_test_impl.inc
 log_entry.h
 log_sink.h
 log_sink_registry.h
 log_streamer.h
 scoped_mock_log.h
 structured.h
 vlog_is_on.h
include/absl/log/internal/
 append_truncated.h
 check_impl.h
 check_op.h
 conditions.h
 config.h
 flags.h
 fnmatch.h
 globals.h
 log_format.h
 log_impl.h
 log_message.h
 log_sink_set.h
 nullguard.h
 nullstream.h
 proto.h
 strip.h
 structured.h
 structured_proto.h
 test_actions.h
 test_helpers.h
 test_matchers.h
 vlog_config.h
 voidify.h
include/absl/memory/memory.h
include/absl/meta/type_traits.h
include/absl/numeric/
 bits.h
 int128.h
 int128_have_intrinsic.inc
 int128_no_intrinsic.inc
include/absl/numeric/internal/
 bits.h
 representation.h
include/absl/profiling/internal/
 exponential_biased.h
 periodic_sampler.h
 sample_recorder.h
include/absl/random/
 bernoulli_distribution.h
 beta_distribution.h
 bit_gen_ref.h
 discrete_distribution.h
 distributions.h
 exponential_distribution.h
 gaussian_distribution.h
 log_uniform_int_distribution.h
 mock_distributions.h
 mocking_bit_gen.h
 poisson_distribution.h
 random.h
 seed_gen_exception.h
 seed_sequences.h
 uniform_int_distribution.h
 uniform_real_distribution.h
 zipf_distribution.h
include/absl/random/internal/
 chi_square.h
 distribution_caller.h
 distribution_test_util.h
 entropy_pool.h
 explicit_seed_seq.h
 fast_uniform_bits.h
 fastmath.h
 generate_real.h
 iostream_state_saver.h
 mock_helpers.h
 mock_overload_set.h
 mock_validators.h
 nanobenchmark.h
 nonsecure_base.h
 pcg_engine.h
 platform.h
 randen.h
 randen_detect.h
 randen_engine.h
 randen_hwaes.h
 randen_slow.h
 randen_traits.h
 salted_seed_seq.h
 seed_material.h
 sequence_urbg.h
 traits.h
 uniform_helper.h
 wide_multiply.h
include/absl/status/
 status.h
 status_matchers.h
 status_payload_printer.h
 statusor.h
include/absl/status/internal/
 status_internal.h
 status_matchers.h
 statusor_internal.h
include/absl/strings/
 ascii.h
 charconv.h
 charset.h
 cord.h
 cord_analysis.h
 cord_buffer.h
 cord_test_helpers.h
 cordz_test_helpers.h
 escaping.h
 has_absl_stringify.h
 has_ostream_operator.h
 match.h
 numbers.h
 str_cat.h
 str_format.h
 str_join.h
 str_replace.h
 str_split.h
 string_view.h
 strip.h
 substitute.h
include/absl/strings/internal/
 charconv_bigint.h
 charconv_parse.h
 cord_data_edge.h
 cord_internal.h
 cord_rep_btree.h
 cord_rep_btree_navigator.h
 cord_rep_btree_reader.h
 cord_rep_consume.h
 cord_rep_crc.h
 cord_rep_flat.h
 cord_rep_test_util.h
 cordz_functions.h
 cordz_handle.h
 cordz_info.h
 cordz_sample_token.h
 cordz_statistics.h
 cordz_update_scope.h
 cordz_update_tracker.h
 damerau_levenshtein_distance.h
 escaping.h
 escaping_test_common.h
 memutil.h
 numbers_test_common.h
 ostringstream.h
 pow10_helper.h
 resize_uninitialized.h
 stl_type_traits.h
 str_join_internal.h
 str_split_internal.h
 string_constant.h
 stringify_sink.h
 utf8.h
include/absl/strings/internal/str_format/
 arg.h
 bind.h
 checker.h
 constexpr_parser.h
 extension.h
 float_conversion.h
 output.h
 parser.h
include/absl/synchronization/
 barrier.h
 blocking_counter.h
 mutex.h
 notification.h
include/absl/synchronization/internal/
 create_thread_identity.h
 futex.h
 futex_waiter.h
 graphcycles.h
 kernel_timeout.h
 per_thread_sem.h
 pthread_waiter.h
 sem_waiter.h
 stdcpp_waiter.h
 thread_pool.h
 waiter.h
 waiter_base.h
 win32_waiter.h
include/absl/time/
 civil_time.h
 clock.h
 time.h
include/absl/time/internal/
 get_current_time_chrono.inc
 get_current_time_posix.inc
 test_util.h
include/absl/time/internal/cctz/include/cctz/
 civil_time.h
 civil_time_detail.h
 time_zone.h
 zone_info_source.h
include/absl/time/internal/cctz/src/
 time_zone_fixed.h
 time_zone_if.h
 time_zone_impl.h
 time_zone_info.h
 time_zone_libc.h
 time_zone_posix.h
 tzfile.h
include/absl/types/
 any.h
 compare.h
 optional.h
 span.h
 variant.h
include/absl/types/internal/span.h
include/absl/utility/utility.h
lib/
 libabsl_base.so
 libabsl_city.so
 libabsl_civil_time.so
 libabsl_cord.so
 libabsl_cord_internal.so
 libabsl_cordz_functions.so
 libabsl_cordz_handle.so
 libabsl_cordz_info.so
 libabsl_cordz_sample_token.so
 libabsl_crc32c.so
 libabsl_crc_cord_state.so
 libabsl_crc_cpu_detect.so
 libabsl_crc_internal.so
 libabsl_debugging_internal.so
 libabsl_decode_rust_punycode.so
 libabsl_demangle_internal.so
 libabsl_demangle_rust.so
 libabsl_die_if_null.so
 libabsl_examine_stack.so
 libabsl_exponential_biased.so
 libabsl_failure_signal_handler.so
 libabsl_flags_commandlineflag.so
 libabsl_flags_commandlineflag_internal.so
 libabsl_flags_config.so
 libabsl_flags_internal.so
 libabsl_flags_marshalling.so
 libabsl_flags_parse.so
 libabsl_flags_private_handle_accessor.so
 libabsl_flags_program_name.so
 libabsl_flags_reflection.so
 libabsl_flags_usage.so
 libabsl_flags_usage_internal.so
 libabsl_graphcycles_internal.so
 libabsl_hash.so
 libabsl_hashtablez_sampler.so
 libabsl_int128.so
 libabsl_kernel_timeout_internal.so
 libabsl_leak_check.so
 libabsl_log_flags.so
 libabsl_log_globals.so
 libabsl_log_initialize.so
 libabsl_log_internal_check_op.so
 libabsl_log_internal_conditions.so
 libabsl_log_internal_format.so
 libabsl_log_internal_globals.so
 libabsl_log_internal_log_sink_set.so
 libabsl_log_internal_message.so
 libabsl_log_internal_nullguard.so
 libabsl_log_internal_proto.so
 libabsl_log_internal_structured_proto.so
 libabsl_log_severity.so
 libabsl_log_sink.so
 libabsl_low_level_hash.so
 libabsl_malloc_internal.so
 libabsl_periodic_sampler.so
 libabsl_poison.so
 libabsl_random_distributions.so
 libabsl_random_internal_distribution_test_util.so
 libabsl_random_internal_entropy_pool.so
 libabsl_random_internal_platform.so
 libabsl_random_internal_randen.so
 libabsl_random_internal_randen_hwaes.so
 libabsl_random_internal_randen_hwaes_impl.so
 libabsl_random_internal_randen_slow.so
 libabsl_random_internal_seed_material.so
 libabsl_random_seed_gen_exception.so
 libabsl_random_seed_sequences.so
 libabsl_raw_hash_set.so
 libabsl_raw_logging_internal.so
 libabsl_scoped_set_env.so
 libabsl_spinlock_wait.so
 libabsl_stacktrace.so
 libabsl_status.so
 libabsl_statusor.so
 libabsl_str_format_internal.so
 libabsl_strerror.so
 libabsl_string_view.so
 libabsl_strings.so
 libabsl_strings_internal.so
 libabsl_symbolize.so
 libabsl_synchronization.so
 libabsl_throw_delegate.so
 libabsl_time.so
 libabsl_time_zone.so
 libabsl_tracing_internal.so
 libabsl_utf8_for_code_point.so
lib/cmake/absl/
 abslConfig.cmake
 abslConfigVersion.cmake
 abslTargets-release.cmake
 abslTargets.cmake
lib/pkgconfig/
 absl_absl_check.pc
 absl_absl_log.pc
 absl_absl_vlog_is_on.pc
 absl_algorithm.pc
 absl_algorithm_container.pc
 absl_any.pc
 absl_any_invocable.pc
 absl_atomic_hook.pc
 absl_bad_any_cast.pc
 absl_bad_optional_access.pc
 absl_bad_variant_access.pc
 absl_base.pc
 absl_base_internal.pc
 absl_bind_front.pc
 absl_bits.pc
 absl_bounded_utf8_length_sequence.pc
 absl_btree.pc
 absl_charset.pc
 absl_check.pc
 absl_city.pc
 absl_civil_time.pc
 absl_cleanup.pc
 absl_cleanup_internal.pc
 absl_common_policy_traits.pc
 absl_compare.pc
 absl_compressed_tuple.pc
 absl_config.pc
 absl_container_common.pc
 absl_container_memory.pc
 absl_cord.pc
 absl_cord_internal.pc
 absl_cordz_functions.pc
 absl_cordz_handle.pc
 absl_cordz_info.pc
 absl_cordz_sample_token.pc
 absl_cordz_statistics.pc
 absl_cordz_update_scope.pc
 absl_cordz_update_tracker.pc
 absl_core_headers.pc
 absl_crc32c.pc
 absl_crc_cord_state.pc
 absl_crc_cpu_detect.pc
 absl_crc_internal.pc
 absl_debugging.pc
 absl_debugging_internal.pc
 absl_decode_rust_punycode.pc
 absl_demangle_internal.pc
 absl_demangle_rust.pc
 absl_die_if_null.pc
 absl_dynamic_annotations.pc
 absl_endian.pc
 absl_errno_saver.pc
 absl_examine_stack.pc
 absl_exponential_biased.pc
 absl_failure_signal_handler.pc
 absl_fast_type_id.pc
 absl_fixed_array.pc
 absl_flags.pc
 absl_flags_commandlineflag.pc
 absl_flags_commandlineflag_internal.pc
 absl_flags_config.pc
 absl_flags_internal.pc
 absl_flags_marshalling.pc
 absl_flags_parse.pc
 absl_flags_path_util.pc
 absl_flags_private_handle_accessor.pc
 absl_flags_program_name.pc
 absl_flags_reflection.pc
 absl_flags_usage.pc
 absl_flags_usage_internal.pc
 absl_flat_hash_map.pc
 absl_flat_hash_set.pc
 absl_function_ref.pc
 absl_graphcycles_internal.pc
 absl_has_ostream_operator.pc
 absl_hash.pc
 absl_hash_container_defaults.pc
 absl_hash_function_defaults.pc
 absl_hash_policy_traits.pc
 absl_hashtable_control_bytes.pc
 absl_hashtable_debug.pc
 absl_hashtable_debug_hooks.pc
 absl_hashtablez_sampler.pc
 absl_inlined_vector.pc
 absl_inlined_vector_internal.pc
 absl_int128.pc
 absl_iterator_traits_internal.pc
 absl_iterator_traits_test_helper_internal.pc
 absl_kernel_timeout_internal.pc
 absl_layout.pc
 absl_leak_check.pc
 absl_log.pc
 absl_log_entry.pc
 absl_log_flags.pc
 absl_log_globals.pc
 absl_log_initialize.pc
 absl_log_internal_append_truncated.pc
 absl_log_internal_check_impl.pc
 absl_log_internal_check_op.pc
 absl_log_internal_conditions.pc
 absl_log_internal_config.pc
 absl_log_internal_flags.pc
 absl_log_internal_fnmatch.pc
 absl_log_internal_format.pc
 absl_log_internal_globals.pc
 absl_log_internal_log_impl.pc
 absl_log_internal_log_sink_set.pc
 absl_log_internal_message.pc
 absl_log_internal_nullguard.pc
 absl_log_internal_nullstream.pc
 absl_log_internal_proto.pc
 absl_log_internal_strip.pc
 absl_log_internal_structured.pc
 absl_log_internal_structured_proto.pc
 absl_log_internal_voidify.pc
 absl_log_severity.pc
 absl_log_sink.pc
 absl_log_sink_registry.pc
 absl_log_streamer.pc
 absl_log_structured.pc
 absl_low_level_hash.pc
 absl_malloc_internal.pc
 absl_memory.pc
 absl_meta.pc
 absl_no_destructor.pc
 absl_node_hash_map.pc
 absl_node_hash_set.pc
 absl_node_slot_policy.pc
 absl_non_temporal_arm_intrinsics.pc
 absl_non_temporal_memcpy.pc
 absl_nullability.pc
 absl_numeric.pc
 absl_numeric_representation.pc
 absl_optional.pc
 absl_overload.pc
 absl_periodic_sampler.pc
 absl_poison.pc
 absl_prefetch.pc
 absl_pretty_function.pc
 absl_random_bit_gen_ref.pc
 absl_random_distributions.pc
 absl_random_internal_distribution_caller.pc
 absl_random_internal_distribution_test_util.pc
 absl_random_internal_entropy_pool.pc
 absl_random_internal_fast_uniform_bits.pc
 absl_random_internal_fastmath.pc
 absl_random_internal_generate_real.pc
 absl_random_internal_iostream_state_saver.pc
 absl_random_internal_mock_helpers.pc
 absl_random_internal_nonsecure_base.pc
 absl_random_internal_pcg_engine.pc
 absl_random_internal_platform.pc
 absl_random_internal_randen.pc
 absl_random_internal_randen_engine.pc
 absl_random_internal_randen_hwaes.pc
 absl_random_internal_randen_hwaes_impl.pc
 absl_random_internal_randen_slow.pc
 absl_random_internal_salted_seed_seq.pc
 absl_random_internal_seed_material.pc
 absl_random_internal_traits.pc
 absl_random_internal_uniform_helper.pc
 absl_random_internal_wide_multiply.pc
 absl_random_random.pc
 absl_random_seed_gen_exception.pc
 absl_random_seed_sequences.pc
 absl_raw_hash_map.pc
 absl_raw_hash_set.pc
 absl_raw_hash_set_resize_impl.pc
 absl_raw_logging_internal.pc
 absl_sample_recorder.pc
 absl_scoped_set_env.pc
 absl_span.pc
 absl_spinlock_wait.pc
 absl_stacktrace.pc
 absl_status.pc
 absl_statusor.pc
 absl_str_format.pc
 absl_str_format_internal.pc
 absl_strerror.pc
 absl_string_view.pc
 absl_strings.pc
 absl_strings_internal.pc
 absl_symbolize.pc
 absl_synchronization.pc
 absl_throw_delegate.pc
 absl_time.pc
 absl_time_zone.pc
 absl_tracing_internal.pc
 absl_type_traits.pc
 absl_utf8_for_code_point.pc
 absl_utility.pc
 absl_variant.pc
 absl_vlog_config_internal.pc
 absl_vlog_is_on.pc
 absl_weakly_mixed_integer.pc


[FILE:1092:patches/patch-absl_base_config.h]
--- absl/base/config.h.orig	2025-06-17 14:48:08 UTC
+++ absl/base/config.h
@@ -373,6 +373,7 @@ static_assert(ABSL_INTERNAL_INLINE_NAMES
 #ifdef ABSL_HAVE_MMAP
 #error ABSL_HAVE_MMAP cannot be directly set
 #elif defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__) ||    \
+    defined(__DragonFly__) ||                                                \
     defined(_AIX) || defined(__ros__) || defined(__native_client__) ||       \
     defined(__asmjs__) || defined(__EMSCRIPTEN__) || defined(__Fuchsia__) || \
     defined(__sun) || defined(__myriad2__) || defined(__HAIKU__) ||          \
@@ -388,6 +389,7 @@ static_assert(ABSL_INTERNAL_INLINE_NAMES
 #ifdef ABSL_HAVE_PTHREAD_GETSCHEDPARAM
 #error ABSL_HAVE_PTHREAD_GETSCHEDPARAM cannot be directly set
 #elif defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__) || \
+    defined(__DragonFly__) ||                                             \
     defined(_AIX) || defined(__ros__) || defined(__OpenBSD__) ||          \
     defined(__NetBSD__) || defined(__VXWORKS__)
 #define ABSL_HAVE_PTHREAD_GETSCHEDPARAM 1


[FILE:1021:patches/patch-absl_base_internal_sysinfo.cc]
--- absl/base/internal/sysinfo.cc.orig	2025-06-17 14:48:08 UTC
+++ absl/base/internal/sysinfo.cc
@@ -26,11 +26,19 @@
 #include <unistd.h>
 #endif
 
-#ifdef __linux__
+#if defined(__linux__) || defined(__DragonFly__)
 #include <sys/syscall.h>
 #endif
 
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__NetBSD__)
+#include <lwp.h> // For _lwp_self()
+#endif
+
+#if defined(__MidnightBSD__)
+#include <pthread_np.h>
+#endif
+
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__DragonFly__)
 #include <sys/sysctl.h>
 #endif
 
@@ -456,6 +464,24 @@ pid_t GetTID() { return getthrid(); }
 
 pid_t GetTID() { return static_cast<pid_t>(_lwp_self()); }
 
+#elif defined(__DragonFly__)
+
+pid_t GetTID() {
+  return syscall(SYS_lwp_gettid);
+}
+
+#elif defined(__NetBSD__)
+
+pid_t GetTID() {
+  return static_cast<pid_t>(_lwp_self());
+}
+
+#elif defined(__MidnightBSD__)
+
+pid_t GetTID() {
+  return static_cast<pid_t>(pthread_getthreadid_np());
+}
+
 #elif defined(__native_client__)
 
 pid_t GetTID() {


[FILE:387:patches/patch-absl_debugging_internal_vdso__support.cc]
--- absl/debugging/internal/vdso_support.cc.orig	2025-06-17 14:48:08 UTC
+++ absl/debugging/internal/vdso_support.cc
@@ -54,7 +54,7 @@
 using Elf32_auxv_t = Aux32Info;
 using Elf64_auxv_t = Aux64Info;
 #endif
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__DragonFly__)
 #if defined(__ELF_WORD_SIZE) && __ELF_WORD_SIZE == 64
 using Elf64_auxv_t = Elf64_Auxinfo;
 #endif


[FILE:1689:patches/patch-absl_debugging_stacktrace.cc]
--- absl/debugging/stacktrace.cc.orig	2025-06-17 14:48:08 UTC
+++ absl/debugging/stacktrace.cc
@@ -61,7 +61,7 @@
 #include <alloca.h>
 #define ABSL_INTERNAL_HAVE_ALLOCA 1
 #elif !defined(alloca)
-static void* alloca(size_t) noexcept { return nullptr; }
+static void* __builtin_alloca(size_t) noexcept { return nullptr; }
 #endif
 #endif
 #endif
@@ -158,8 +158,8 @@ ABSL_ATTRIBUTE_NOINLINE ABSL_ATTRIBUTE_N
     if constexpr (kHaveAlloca) {
       const size_t nmax = static_cast<size_t>(max_depth);
       uintptr_t* frames =
-          static_cast<uintptr_t*>(alloca(nmax * sizeof(*frames)));
-      int* sizes = static_cast<int*>(alloca(nmax * sizeof(*sizes)));
+          static_cast<uintptr_t*>(__builtin_alloca(nmax * sizeof(*frames)));
+      int* sizes = static_cast<int*>(__builtin_alloca(nmax * sizeof(*sizes)));
       size_t depth = static_cast<size_t>(Unwind<true, false>(
           result, frames, sizes, max_depth, skip_count, nullptr, nullptr));
       internal_stacktrace::FixUpStack(result, frames, sizes, nmax, depth);
@@ -178,8 +178,8 @@ GetStackTraceWithContext(void** result,
     if constexpr (kHaveAlloca) {
       const size_t nmax = static_cast<size_t>(max_depth);
       uintptr_t* frames =
-          static_cast<uintptr_t*>(alloca(nmax * sizeof(*frames)));
-      int* sizes = static_cast<int*>(alloca(nmax * sizeof(*sizes)));
+          static_cast<uintptr_t*>(__builtin_alloca(nmax * sizeof(*frames)));
+      int* sizes = static_cast<int*>(__builtin_alloca(nmax * sizeof(*sizes)));
       size_t depth = static_cast<size_t>(
           Unwind<true, true>(result, frames, sizes, max_depth, skip_count, uc,
                              min_dropped_frames));


[FILE:501:patches/patch-absl_time_internal_cctz_src_time__zone__format.cc]
--- absl/time/internal/cctz/src/time_zone_format.cc.orig	2025-06-17 14:48:08 UTC
+++ absl/time/internal/cctz/src/time_zone_format.cc
@@ -19,7 +19,7 @@
 #endif
 
 #if defined(HAS_STRPTIME) && HAS_STRPTIME
-#if !defined(_XOPEN_SOURCE) && !defined(__FreeBSD__) && !defined(__OpenBSD__)
+#if !defined(_XOPEN_SOURCE) && !defined(__FreeBSD__) && !defined(__OpenBSD__) && !defined(__NetBSD__) && !defined(__DragonFly__)
 #define _XOPEN_SOURCE 500  // Exposes definitions for SUSv2 (UNIX 98).
 #endif
 #endif


[FILE:698:patches/patch-absl_time_internal_cctz_src_time__zone__lookup__test.cc]
--- absl/time/internal/cctz/src/time_zone_lookup_test.cc.orig	2025-06-17 14:48:08 UTC
+++ absl/time/internal/cctz/src/time_zone_lookup_test.cc
@@ -927,7 +927,7 @@ TEST(MakeTime, SysSecondsLimits) {
     const time_zone cut = LoadZone("libc:UTC");
     const year_t max_tm_year = year_t{std::numeric_limits<int>::max()} + 1900;
     tp = convert(civil_second(max_tm_year, 12, 31, 23, 59, 59), cut);
-#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__EMSCRIPTEN__)
+#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__EMSCRIPTEN__) || defined(__DragonFly__)
     // Some gmtime_r() impls fail on extreme positive values.
 #else
     EXPECT_EQ("2147485547-12-31T23:59:59+00:00",

