# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		jq
VERSION=		1.6
KEYWORDS=		textproc
VARIANTS=		standard
SDESC[standard]=	Command-line JSON processor
HOMEPAGE=		https://stedolan.github.io/jq/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/stedolan:jq:jq-1.6
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	oniguruma:primary:standard

USES=			cpe autoreconf gmake libtool ruby:build

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

CPE_VENDOR=		jq_project
FPC_EQUIVALENT=		textproc/jq

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-docs
			--docdir="{{STD_DOCDIR}}"
			--with-oniguruma="{{LOCALBASE}}"
			--disable-maintainer-mode

INSTALL_TARGET=		install-strip
SOVERSION=		1.0.4

post-install:
	${RM} -r ${STAGEDIR}${STD_DOCDIR}

[FILE:179:descriptions/desc.single]
jq is like sed for JSON data - you can use it to slice and
filter and map and transform structured data with the same
ease that sed, awk, grep and friends let you play with text.


[FILE:104:distinfo]
158182b85f3be9e23ab1dc50cfcc24e415aade2a0b8a5d9f709e0b587666d61b       417405 stedolan-jq-jq-1.6.tar.gz


[FILE:121:manifests/plist.single]
bin/jq
include/
 jq.h
 jv.h
lib/
 libjq.a
 libjq.so
 libjq.so.%%SOMAJOR%%
 libjq.so.%%SOVERSION%%
share/man/man1/jq.1.gz

