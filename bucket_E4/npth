# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		npth
VERSION=		1.7
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	New Portable Threads Library (nPth)
HOMEPAGE=		https://www.gnupg.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNUPG/npth
DISTFILE[1]=		npth-1.7.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			libtool

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING.LIB
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/npth.h.in
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/npth

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		0.2.0

[FILE:411:descriptions/desc.primary]
nPth - The New GNU Portable Threads Library

This is a library to provide the GNU Pth API and thus a non-preemptive
threads implementation.

In contrast to GNU Pth, it is based on the system's standard threads
implementation.  This allows the use of libraries which are not compatible
to GNU Pth.  Experience with a Windows Pth emulation showed that this is a
solid way to provide a co-routine based framework.


[FILE:95:distinfo]
8589f56937b75ce33b28d312fccbf302b3b71ec3f3945fde6aaa74027914ad05       313213 npth-1.7.tar.bz2


[FILE:55:manifests/plist.primary]
lib/
 libnpth.so.%%SOMAJOR%%
 libnpth.so.%%SOVERSION%%


[FILE:74:manifests/plist.dev]
include/npth.h
lib/libnpth.so
lib/pkgconfig/npth.pc
share/aclocal/npth.m4


[FILE:1325:patches/patch-configure]
--- configure.orig	2024-02-23 10:09:34 UTC
+++ configure
@@ -7101,7 +7101,7 @@ darwin* | rhapsody*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-freebsd* | dragonfly*)
+freebsd* | dragonfly* | midnight*)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     case $host_cpu in
     i*86 )
@@ -11428,7 +11428,7 @@ fi
       ;;
 
     # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
-    freebsd* | dragonfly*)
+    freebsd* | dragonfly* | midnight*)
       archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
       hardcode_libdir_flag_spec='-R$libdir'
       hardcode_direct=yes
@@ -12396,7 +12396,7 @@ dgux*)
   shlibpath_var=LD_LIBRARY_PATH
   ;;
 
-freebsd* | dragonfly*)
+freebsd* | dragonfly* | midnight*)
   # DragonFly does not have aout.  When/if they implement a new
   # versioning mechanism, adjust this.
   if test -x /usr/bin/objformat; then
@@ -13906,7 +13906,7 @@ fi
     *-*-aix*)
         have_fork_unsafe_semaphore=yes
         ;;
-    *-*-dragonfly*|*-*-freebsd*|*-*-netbsd*|*-*-hpux*)
+    *-*-dragonfly*|*-*-freebsd*|*-*-netbsd*|*-*-midnight*)
         LIBS="-lpthread $LIBS"
         { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for library containing sem_init" >&5
 printf %s "checking for library containing sem_init... " >&6; }

