# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gmid
VERSION=		2.1
KEYWORDS=		net
VARIANTS=		std
SDESC[std]=		Simple and secure Gemini server
HOMEPAGE=		https://gmid.omarpolo.com/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/omar-polo:gmid:2.1
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		libevent:dev:std
BUILDRUN_DEPENDS=	libevent:primary:std

USERS=			_gmid
GROUPS=			_gmid
USERGROUP_SPKG=		primary

USES=			pkgconfig ssl

LICENSE=		ISCL:primary
LICENSE_FILE=		ISCL:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		net/gmid

MUST_CONFIGURE=		yes
CONFIGURE_ARGS=		--prefix={{PREFIX}}
			MANDIR={{PREFIX}}/share/man

RC_SUBR=		gmid:primary
SUB_FILES=		gmid.conf.sample

post-stage:
	${INSTALL_DATA} ${WRKDIR}/gmid.conf.sample \
		${STAGEDIR}${PREFIX}/etc/

[FILE:416:descriptions/desc.primary]
Gmid is an Internet server that uses the Gemini protocol. Some of its 
features are:

* Sandboxed by default on OpenBSD, FreeBSD and Linux
* Ability to reload the configuration on-the-fly without losing connections
* Punycode and IRI support
* Reverse proxying
* Support for CGI and FastCGI
* Virtual hosts and per-location rules
* Low memory footprint
* Event-based asynchronous I/O model
* Rich configuration file


[FILE:104:distinfo]
f83a44b54954cad9fb45a09588a086cbd185f522162c5f54f6028e20d01fd28a       209799 omar-polo-gmid-2.1.tar.gz


[FILE:59:manifests/plist.primary]
@sample etc/gmid.conf.sample
bin/
 gemexp
 gg
 gmid
 titan


[FILE:90:manifests/plist.man]
share/man/man1/
 gemexp.1
 gg.1
 titan.1
share/man/man5/gmid.conf.5
share/man/man8/gmid.8


[FILE:698:files/gmid.conf.sample.in]
# drop privileges
user "_gmid"

# it's a good idea to enable chroot, but
# beware that can make CGI scripting harder
chroot "/var/gemini"

# An example of a server block:
server "localhost" {
	# set the directory to serve; it's relative to the
	# chroot (if enabled)
	root "/localhost"

	# Set self-signed TLS cert and key.  It's better to keep
	# the keys outside the chroot.
	#
	# You should generate them manually, for example:
	# openssl req -x509 -newkey rsa:4096 -nodes		\
	#	-out %%PREFIX%%/etc/ssl/gmid/localhost.crt	\
	#	-keyout %%PREFIX%%/etc/ssl/gmid/localhost.key	\
	# 	-subj "/CN=localhost"
	cert "%%PREFIX%%/etc/ssl/gmid/localhost.crt"
	key  "%%PREFIX%%/etc/ssl/gmid/localhost.key"
}


[FILE:773:files/gmid.in]
#!/bin/sh
#

# PROVIDE: gmid
# REQUIRE: SERVERS
# KEYWORD: shutdown

#
# Add the following lines to /etc/rc.conf to enable gmid:
# gmid_enable (bool):	Set it to "YES" to enable gmid
#			Default is "NO".
# gmid_config (string):	Path to gmid configuration file.
#			Default is "%%PREFIX%%/etc/gmid.conf"
#
#

. /etc/rc.subr

name="gmid"
rcvar="gmid_enable"

start_precmd="gmid_checkconfig"
configtest_cmd="gmid_checkconfig"
extra_commands="configtest"

: ${gmid_enable:="NO"}
: ${gmid_config:="%%PREFIX%%/etc/gmid.conf"}

load_rc_config $name

command="%%PREFIX%%/bin/${name}"
gmid_flags="-c ${gmid_config}"

required_files="${gmid_config}"

gmid_checkconfig()
{
	echo "Performing sanity check on gmid configuration:"
	eval ${command} -n ${gmid_flags}
}

run_rc_command "$1"

