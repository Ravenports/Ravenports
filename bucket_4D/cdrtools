# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		cdrtools
VERSION=		3.01
REVISION=		2
KEYWORDS=		sysutils audio
VARIANTS=		standard
SDESC[standard]=	CD/DVD/BluRay command line recording software
HOMEPAGE=		https://cdrtools.sourceforge.net/private/cdrecord.html
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/cdrtools
DISTFILE[1]=		cdrtools-3.01.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			mp3
			ogg
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

EXRUN[ogg]=		vorbis-tools:primary:standard
EXRUN[mp3]=		lame:complete:standard

USES=			cpe gmake iconv

LICENSE=		CDDL:primary GPLv2:primary LGPL21:primary
			BSD2CLAUSE:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/COPYING
LICENSE_FILE=		CDDL:{{WRKSRC}}/CDDL.Schily.txt
			GPLv2:{{WRKSRC}}/GPL-2.0.txt
			LGPL21:{{WRKSRC}}/LGPL-2.1.txt
			BSD2CLAUSE:{{WRKSRC}}/libfile/LEGAL.NOTICE
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		sysutils/cdrtools

MAKE_ENV=		CCOM=cc
			GMAKE_NOWARN=true
			INS_BASE="{{LOCALBASE}}"
			DEFOSINCDIRS="{{LOCALBASE}}/include"
			LDPATH="-L{{LOCALBASE}}/lib -Wl,-rpath,{{LOCALBASE}}/lib"
SINGLE_JOB=		yes

post-patch:
	(cd ${WRKSRC}/RULES && \
	 ${LN} -sf i386-freebsd-cc.rul amd64-freebsd-cc.rul && \
	 ${LN} -sf i386-freebsd-cc.rul x86_64-dragonfly-cc.rul && \
	 ${LN} -sf i586-linux-cc.rul x86_64-linux-cc.rul)
	${REINPLACE_CMD} -e 's|.(C_ARCH)|gcc|; /VOLMGT/d' \
	 ${WRKSRC}/RULES/i86pc-sunos5-gcc.rul
	${RM} ${WRKSRC}/TARGETS/55scgskeleton ${WRKSRC}/TARGETS/85man
	${RM} ${WRKSRC}/TARGETS/55rscsi
	(cd ${WRKSRC} && ${REINPLACE_CMD} -e \
	 's|\/opt\/schily|${PREFIX}|g; \
	  s|\/usr\/local|${PREFIX}|g; s|\/etc\/default|${PREFIX}\/etc|g; \
	  s|\/var\/adm\/messages|\/var\/run\/dmesg.boot|g; \
	  s|^CDDA2WAV=|&${PREFIX}\/bin\/|g; \
	  s|^MP_CODER=|&${LOCALBASE}\/bin\/|g' ${RPTARGETS})
	${MV} -f ${WRKSRC}/libparanoia/cdda_paranoia.h \
		${WRKSRC}/libparanoia/js_cdda_paranoia.h
	(cd ${WRKSRC} && ${REINPLACE_CMD} -e \
	 's|cdda_paranoia\.h|js_cdda_paranoia.h|g' ${RPTARGETS2})
	${REINPLACE_CMD} -e '/LDPATH=/d; /DEFOSINCDIRS=/d' \
		${WRKSRC}/DEFAULTS/Defaults.${OPSYS:tl:S/sunos/sunos5/}

do-install:
	${INSTALL_SCRIPT} \
		${WRKSRC}/cdda2wav/cdda2mp3 \
		${WRKSRC}/cdda2wav/cdda2ogg \
		${STAGEDIR}${PREFIX}/bin
	${INSTALL_PROGRAM} \
		${WRKSRC}/btcflash/OBJ/*-cc/btcflash \
		${WRKSRC}/cdda2wav/OBJ/*-cc/cdda2wav \
		${WRKSRC}/mkisofs/diag/OBJ/*-cc/devdump \
		${WRKSRC}/mkisofs/diag/OBJ/*-cc/isodebug \
		${WRKSRC}/mkisofs/diag/OBJ/*-cc/isodump \
		${WRKSRC}/mkisofs/diag/OBJ/*-cc/isoinfo \
		${WRKSRC}/mkisofs/diag/OBJ/*-cc/isovfy \
		${WRKSRC}/mkisofs/OBJ/*-cc/mkisofs \
		${WRKSRC}/readcd/OBJ/*-cc/readcd \
		${WRKSRC}/scgcheck/OBJ/*-cc/scgcheck \
		${WRKSRC}/cdrecord/OBJ/*-cc/cdrecord \
		${STAGEDIR}${PREFIX}/bin
	${LN} -sf mkisofs ${STAGEDIR}${PREFIX}/bin/mkhybrid
	${LN} -sf cdda2wav ${STAGEDIR}${PREFIX}/bin/list_audio_tracks
	${INSTALL_MAN} \
		${WRKSRC}/btcflash/btcflash.1 \
		${WRKSRC}/cdda2wav/cdda2wav.1 \
		${WRKSRC}/cdrecord/cdrecord.1 \
		${WRKSRC}/readcd/readcd.1 \
		${WRKSRC}/cdda2wav/cdda2ogg.1 \
		${WRKSRC}/scgcheck/scgcheck.1 \
		${STAGEDIR}${MANPREFIX}/man/man1
	${INSTALL_MAN} ${WRKSRC}/cdda2wav/cdda2ogg.1 \
		${STAGEDIR}${MANPREFIX}/man/man1/cdda2mp3.1
	${INSTALL_MAN} \
		${WRKSRC}/mkisofs/mkisofs.8 \
		${WRKSRC}/mkisofs/diag/isoinfo.8 \
		${STAGEDIR}${MANPREFIX}/man/man8
	${INSTALL_DATA} ${WRKSRC}/cdrecord/cdrecord.dfl \
		${STAGEDIR}${PREFIX}/etc/cdrecord.sample
	# SICONVTABLES
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/siconv
	(cd ${WRKSRC}/libsiconv/tables && ${INSTALL_DATA} ${SICONVTABLES} \
		${STAGEDIR}${PREFIX}/lib/siconv)
	# Documentation package
	${MKDIR} \
		${STAGEDIR}${STD_DOCDIR}/cdda2wav \
		${STAGEDIR}${STD_DOCDIR}/cdrecord \
		${STAGEDIR}${STD_DOCDIR}/mkisofs
	(cd ${WRKSRC} && ${INSTALL_DATA} ${DOCS} ${STAGEDIR}${STD_DOCDIR})
	(cd ${WRKSRC}/cdda2wav && ${INSTALL_DATA} ${CDDA2WAVDOCS} \
		 ${STAGEDIR}${STD_DOCDIR}/cdda2wav)
	(cd ${WRKSRC}/cdrecord && ${INSTALL_DATA} ${CDRECORDDOCS} \
		${STAGEDIR}${STD_DOCDIR}/cdrecord)
	(cd ${WRKSRC}/mkisofs && ${INSTALL_DATA} ${MKISOFSDOCS} \
		${STAGEDIR}${STD_DOCDIR}/mkisofs)

[FILE:962:descriptions/desc.primary]
The cdrtools software includes tools to create and/or extract
ISO-9660 filesystems, verify their integrity, and write them to
disc.

This package contains the following programs:
 - btcflash (a firmware flash utility for BTC DRW1008 DVD+/-RW recorder)
 - cdda2wav (a digital CD audio extraction program)
 - cdrecord (a CD/DVD/BluRay recording program)
 - devdump (dump a device or file in hex)
 - isodebug (show debug info contained in an ISO-9660 image)
 - isodump (dump a device or file based on ISO-9660)
 - isoinfo (analyze or list an ISO-9660 image)
 - isovfy (verify an ISO-9660 image)
 - mkisofs (an ISO-9660 filesystem image creator)
 - mkhybrid (an ISO-9660/HFS filesystem image creator)
   Link to mkisofs.
 - readcd (a data CD reading and recording program)
   May be used to write to DVD-RAM and to copy Solaris boot CD's.
 - scgcheck (checks and validates the ABI of libscg)
 - rscsi (daemon providing access to local SCSI-devices over the network)


[FILE:245:descriptions/desc.mp3]
The cdrtools software includes tools to create and/or extract
ISO-9660 filesystems, verify their integrity, and write them to
disc.

This package contains the following programs:
 - cdda2mp3 (a digital CD audio extraction program to mp3 format)


[FILE:245:descriptions/desc.ogg]
The cdrtools software includes tools to create and/or extract
ISO-9660 filesystems, verify their integrity, and write them to
disc.

This package contains the following programs:
 - cdda2ogg (a digital CD audio extraction program to ogg format)


[FILE:99:distinfo]
a9261273b5a1a2da51bebc70584e63291b28ac6836237a4963865c50a9a026bb      2652621 cdrtools-3.01.tar.gz


[FILE:734:manifests/plist.primary]
@sample etc/cdrecord.sample
bin/
 btcflash
 cdda2wav
 cdrecord
 devdump
 isodebug
 isodump
 isoinfo
 isovfy
 list_audio_tracks
 mkhybrid
 mkisofs
 readcd
 scgcheck
lib/siconv/
 cp10000
 cp10006
 cp10007
 cp10029
 cp10079
 cp10081
 cp1250
 cp1251
 cp1252
 cp1253
 cp1254
 cp1255
 cp1256
 cp1257
 cp1258
 cp437
 cp737
 cp775
 cp850
 cp852
 cp855
 cp857
 cp860
 cp861
 cp862
 cp863
 cp864
 cp865
 cp866
 cp869
 cp874
 iso8859-1
 iso8859-10
 iso8859-11
 iso8859-13
 iso8859-14
 iso8859-15
 iso8859-16
 iso8859-2
 iso8859-3
 iso8859-4
 iso8859-5
 iso8859-6
 iso8859-7
 iso8859-8
 iso8859-9
 koi8-r
 koi8-u
share/man/man1/
 btcflash.1.gz
 cdda2wav.1.gz
 cdrecord.1.gz
 readcd.1.gz
 scgcheck.1.gz
share/man/man8/
 isoinfo.8.gz
 mkisofs.8.gz


[FILE:42:manifests/plist.mp3]
bin/cdda2mp3
share/man/man1/cdda2mp3.1.gz


[FILE:42:manifests/plist.ogg]
bin/cdda2ogg
share/man/man1/cdda2ogg.1.gz


[FILE:661:manifests/plist.docs]
share/doc/cdrtools/
 README.FreeBSD
 README.mkisofs
share/doc/cdrtools/cdda2wav/
 FAQ
 Frontends
 HOWTOUSE
 OtherProgs
 README
 THANKS
 TODO
share/doc/cdrtools/cdrecord/
 README
 README.ATAPI
 README.DiskT@2
 README.WORM
 README.audio
 README.cdplus
 README.cdrw
 README.cdtext
 README.clone
 README.copy
 README.multi
 README.raw
 README.rscsi
 README.sony
 README.verify
share/doc/cdrtools/mkisofs/
 README
 README.compression
 README.eltorito
 README.graft_dirs
 README.hfs_boot
 README.hfs_magic
 README.hide
 README.joliet
 README.macosx
 README.mkhybrid
 README.prep_boot
 README.rootinfo
 README.session
 README.sort
 README.sparcboot
 README.sunx86boot


[FILE:3127:patches/patch-RULES__cc-gcc.rul]
###########################################################################
# This patch was contributed by Marius Strobl.
###########################################################################
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# See the file CDDL.Schily.txt in this distribution for details.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file CDDL.Schily.txt from this distribution.
###########################################################################
# The file CDDL.Schily.txt can be found in the original cdrtools tarball,
# which is mirrored at ftp://ftp.freebsd.org/pub/FreeBSD/distfiles/.
###########################################################################

--- RULES/cc-gcc.rul.orig	2014-03-31 15:52:08 UTC
+++ RULES/cc-gcc.rul
@@ -24,11 +24,12 @@
 GCC_OPT=
 GCC_OPT32=	-m32
 GCC_OPT64=	-m64
-GCC_OPTXX=	$(GCC_OPT$(C_ARCH:gcc%=%))
+GCC_OPTXX=
 
 CPPFLAGS=	-DSCHILY_BUILD $(CPPOPTS) $(CPPOPTX) $(OSINCDIRS:%=-I%) $(OSDEFS) $(OSDEFSX)
-CFLAGS=		$(COPTS) $(CWARNOPTS) $(COPTOPT) $(GCCOPTOPT) $(COPTX)
-C++FLAGS=	$(C++OPTS) $(C++WARNOPTS) $(C++OPTOPT) $(G++OPTOPT) $(C++OPTX)
+XCFLAGS:=	$(CFLAGS)
+CFLAGS=		$(COPTS) $(CWARNOPTS) $(XCFLAGS) $(GCCOPTOPT) $(COPTX)
+C++FLAGS=	$(C++OPTS) $(C++WARNOPTS) $(CXXFLAGS) $(G++OPTOPT) $(C++OPTX)
 
 CPPOPTS=	-I$(ARCHDIR) -I$(OINCSDIR) $(INCDIRS:%=-I%) $(INCDIRSX:%=-I%)
 COPTS=		$(GCC_OPTXX)
@@ -36,12 +37,10 @@ COPTS=		$(GCC_OPTXX)
 CWOPTS=		-Wall -Wtraditional
 CWOPTS=		-Wall -Wno-unknown-pragmas \
 		-Wshadow -Wmissing-prototypes -Wstrict-prototypes
-COPTOPT=	-O
 COPTDYN=	-fpic
 COPTGPROF=	-pg
 C++OPTS=	$(GCC_OPTXX)
 C++WOPTS=	$(CWOPTS)
-C++OPTOPT=	$(COPTOPT)
 C++OPTDYN=	-fpic
 C++OPTGPROF=	-pg
 
@@ -61,28 +60,18 @@ LNDYNLIB=	@$(RM) $(RM_FORCE) $(PTARGET_B
 
 FLOAT_OPTIONS=	
 
-__CC_COM=	$(_UNIQ)$(CC)
-___CC_COM=	$(__CC_COM:$(_UNIQ)=$(CC_COM_DEF))
-CC_COM=		$(___CC_COM:$(_UNIQ)%=%)
-
-__CC++_COM=	$(_UNIQ)$(CCC)
-___CC++_COM=	$(__CC++_COM:$(_UNIQ)=$(CC++_COM_DEF))
-CC++_COM=	$(___CC++_COM:$(_UNIQ)%=%)
-
-CC_COM_DEF=	gcc
-CC++_COM_DEF=	g++
-CC=		$(CC_COM_DEF)
-CCC=		$(CC++_COM_DEF)
-
-CCCC=		@echo "	==> COMPILING \"$@\""; $(CC_COM) $(GCC_OPTXX)
-CC++ =		@echo "	==> COMPILING \"$@\""; $(CC++_COM) $(GCC_OPTXX)
-LDCC=		@echo "	==> LINKING \"$@\""; $(CC_COM) $(GCC_OPTXX)
-LDCC++ =	@echo "	==> LINKING \"$@\""; $(CC++_COM) $(GCC_OPTXX)
-DYNLD=		@echo "	==> LINKING dynamic library \"$@\""; $(CC_COM) $(GCC_OPTXX)
-DYNLDC++ =	@echo "	==> LINKING dynamic library \"$@\""; $(CC++_COM) $(GCC_OPTXX)
+CC_COM=		$(CC)
+CC++_COM=	$(CXX)
+
+CCCC =		$(CC_COM)
+CC++ =		$(CC++_COM)
+LDCC=		$(CC_COM)
+LDCC++ =	$(CC++_COM)
+DYNLD=		$(CC_COM)
+DYNLDC++ =	$(CC++_COM)
 
 RMDEP=		:
-MKDEP=		@echo "	==> MAKING DEPENDENCIES \"$@\""; $(RMDEP); $(CC_COM) $(GCC_OPTXX) -M
+MKDEP=		$(CC_COM) -M
 MKDEP_OUT=
-MKC++DEP=	@echo "	==> MAKING DEPENDENCIES \"$@\""; $(RMDEP); $(CC++_COM) $(GCC_OPTXX) -M
+MKC++DEP=	$(CC++_COM) -M
 MKC++DEP_OUT=


[FILE:241:patches/patch-btcflash__btcflash.1]
--- btcflash/btcflash.1.orig	2014-12-03 21:04:39 UTC
+++ btcflash/btcflash.1
@@ -346,7 +346,6 @@ using an account that has been created w
 login shell.
 .SH "SEE ALSO"
 .BR cdrecord (1),
-.BR scg (7),
 .BR rcmd (3),
 .BR ssh (1).
 .SH NOTES


[FILE:1382:patches/patch-cdrecord__README.rscsi]
--- cdrecord/README.rscsi.orig	2004-05-19 14:12:05 UTC
+++ cdrecord/README.rscsi
@@ -18,24 +18,21 @@ There are three possible ways to control
 		NOTE: In this case, rscsi must be installed suid root. 
 		**** This is the preferred method ****
 
-To enable remote SCSI via the login shell method you should do the following:
-
-	-	Add an entry to /etc/passwd in the form:
+		The FreeBSD port automatically installs the rscsi binary suid
+		root and creates the user "rscsi".
 
-		rscsi:x:1999:1000:Tape:/export/home/rscsi:/opt/schily/sbin/rscsi
-
-		(modify this according to your OS). And don't forget to
-		modify /etc/shadow the way it needs to be on your OS.
+To enable remote SCSI via the login shell method you should do the following:
 
-	-	Create a  home directory for this user and add a .rhosts file
-		to allow access to all users you like.
+	-	Make sure that there is an entry for rshd(8) in /etc/inetd.conf
+		and inetd(8) is running.
 
-	-	Install rscsi suid root into /opt/schily/sbin
+	-	Edit /usr/local/rscsi/.rhosts to allow access to all users you
+		like.
 
-	-	Install a file /etc/default/rscsi and define access rights.
+	-	Edit /usr/local/etc/rscsi and define access rights.
 		Without this file, rscsi will not work at all.
 
-		The template for this file is: rscsi/rscsi.dfl
+		The template for this file is: /usr/local/etc/rscsi.sample
 
 RSCSI Security:
 


[FILE:1183:patches/patch-cdrecord__cdrecord.1]
###########################################################################
# This patch was contributed by Marius Strobl.
###########################################################################
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# See the file CDDL.Schily.txt in this distribution for details.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file CDDL.Schily.txt from this distribution.
###########################################################################
# The file CDDL.Schily.txt can be found in the original cdrtools tarball,
# which is mirrored at ftp://ftp.freebsd.org/pub/FreeBSD/distfiles/.
###########################################################################

--- cdrecord/cdrecord.1.orig	2014-12-03 19:13:13 UTC
+++ cdrecord/cdrecord.1
@@ -3113,8 +3113,6 @@ There must be at least one track per fil
 .SH SEE ALSO
 .BR cdda2wav (1),
 .BR readcd (1),
-.BR scg (7),
-.BR fbk (7),
 .BR mkisofs (8),
 .BR rcmd (3),
 .BR ssh (1).


[FILE:1997:patches/patch-cdrecord__cdrecord.dfl]
--- cdrecord/cdrecord.dfl.orig	2014-01-03 21:59:27 UTC
+++ cdrecord/cdrecord.dfl
@@ -3,7 +3,7 @@
 # This file is /etc/default/cdrecord
 # It contains defaults that are used if no command line option
 # or environment is present.
-# 
+#
 # The default device, if not specified elswhere
 # Note that since Sommer 2006, cdrecord by default searches for a
 # single CD-ROM device. You should set CDR_DEVICE= together with
@@ -11,15 +11,14 @@
 # one CR-ROM drive in your system.
 #
 #CDR_DEVICE=yamaha
-#CDR_DEVICE=default
 
-# 
+#
 # The default speed (speed=), if not specified elswhere
 #
 # Note that newer cdrecord versions do not default
 # to speed=1. For MMC compliant drives, the default
 # is to write at maximum speed, so it in general does
-# not make sense to set up a default speed in /etc/default/cdrecord 
+# not make sense to set up a default speed in /etc/default/cdrecord
 #
 #CDR_SPEED=40
 
@@ -34,7 +33,7 @@
 # Linux and Solaris have problems with bigger transfer sizes.
 # If you are on FreeBSD, it is recommened to set CDR_TRANSFERSIZE=126k
 #
-#CDR_TRANSFERSIZE=32k
+CDR_TRANSFERSIZE=126k
 
 #
 # The following definitions allow abstract device names.
@@ -56,14 +55,14 @@
 #
 # drive name	device		speed	fifosize driveropts	transfersize
 #
-my-default=	1,0,0		-1	-1	burnfree	63k
-sol-default=	USCSI:1,0,0	-1	-1	burnfree
-ricoh-u=	USCSI:0,2,0	-1	-1	burnfree
-teac=		1,3,0		-1	-1	""
-teac-max-ts=	1,3,0		-1	-1	""		32k
-panasonic=	1,4,0		-1	-1	""
-plextor=	1,4,0		-1	-1	""
-sanyo=		1,4,0		-1	-1	burnfree
-yamaha=		1,5,0		-1	-1	""
-cdrom=		0,6,0		2	1m	""
-remote=	REMOTE:rscsi@somehost:1,0,0 16	16m	burnfree
+#my-default=	1,0,0		-1	-1	burnfree	63k
+#sol-default=	USCSI:1,0,0	-1	-1	burnfree
+#ricoh-u=	USCSI:0,2,0	-1	-1	burnfree
+#teac=		1,3,0		-1	-1	""
+#teac-max-ts=	1,3,0		-1	-1	""		32k
+#panasonic=	1,4,0		-1	-1	""
+#plextor=	1,4,0		-1	-1	""
+#sanyo=		1,4,0		-1	-1	burnfree
+#yamaha=		1,5,0		-1	-1	""
+#cdrom=		0,6,0		2	1m	""
+#remote=	REMOTE:rscsi@somehost:1,0,0 16	16m	burnfree


[FILE:1161:patches/patch-inc_avoffset.c]
###########################################################################
# This patch was contributed by Dimitry Andric.
###########################################################################
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# See the file CDDL.Schily.txt in this distribution for details.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file CDDL.Schily.txt from this distribution.
###########################################################################
# The file CDDL.Schily.txt can be found in the original cdrtools tarball,
# which is mirrored at ftp://ftp.freebsd.org/pub/FreeBSD/distfiles/.
###########################################################################

--- inc/avoffset.c.orig	2011-11-28 19:28:41 UTC
+++ inc/avoffset.c
@@ -60,7 +60,7 @@ main(ac, av)
 {
 	int		stdir;
 #ifdef	HAVE_SCANSTACK
-	register struct frame *fp;
+	volatile struct frame *fp;
 	register int	i = 0;
 	register int	o = 0;
 


[FILE:1375:patches/patch-inc_getfp.c]
###########################################################################
# This patch was contributed by Dimitry Andric.
###########################################################################
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# See the file CDDL.Schily.txt in this distribution for details.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file CDDL.Schily.txt from this distribution.
###########################################################################
# The file CDDL.Schily.txt can be found in the original cdrtools tarball,
# which is mirrored at ftp://ftp.freebsd.org/pub/FreeBSD/distfiles/.
###########################################################################

--- inc/getfp.c.orig	2008-06-13 22:32:03 UTC
+++ inc/getfp.c
@@ -52,7 +52,7 @@
 
 EXPORT	void	**___fpoff	__PR((char *cp));
 
-EXPORT void **
+EXPORT __attribute__ ((noinline)) void **
 getfp()
 {
 		long	**dummy[1];
@@ -69,7 +69,7 @@ getfp()
  * We need this function to fool GCCs check for returning addresses
  * from outside the functions local address space.
  */
-EXPORT void **
+EXPORT __attribute__ ((noinline)) void **
 ___fpoff(cp)
 	char	*cp;
 {


[FILE:598:patches/patch-include__schily__sha2.h]
--- include/schily/sha2.h.orig	2010-08-27 10:41:30 UTC
+++ include/schily/sha2.h
@@ -104,10 +104,12 @@ extern char *SHA256Data		__PR((const UIn
 
 #ifdef	HAVE_LONGLONG
 extern void SHA384Init		__PR((SHA2_CTX *));
+#ifndef	HAVE_PRAGMA_WEAK
 extern void SHA384Transform	__PR((UInt64_t state[8],
 					const UInt8_t [SHA384_BLOCK_LENGTH]));
 extern void SHA384Update	__PR((SHA2_CTX *, const UInt8_t *, size_t));
 extern void SHA384Pad		__PR((SHA2_CTX *));
+#endif
 extern void SHA384Final		__PR((UInt8_t [SHA384_DIGEST_LENGTH],
 					SHA2_CTX *));
 extern char *SHA384End		__PR((SHA2_CTX *, char *));


[FILE:423:patches/patch-libscg_scsihack.c]
--- libscg/scsihack.c.orig	2013-07-30 18:37:09 UTC
+++ libscg/scsihack.c
@@ -138,8 +138,7 @@ EXPORT scg_ops_t scg_std_ops = {
 
 #endif	/* linux */
 
-#if	defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || \
-	defined(__NetBSD__) || defined(__OpenBSD__) || defined(__DragonFly__)
+#if	defined(__NetBSD__) || defined(__OpenBSD__)
 #define	SCSI_IMPL		/* We have a SCSI implementation for *BSD */
 
 #include "scsi-bsd.c"


[FILE:1387:patches/patch-libschily_getfp.c]
###########################################################################
# This patch was contributed by Dimitry Andric.
###########################################################################
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# See the file CDDL.Schily.txt in this distribution for details.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file CDDL.Schily.txt from this distribution.
###########################################################################
# The file CDDL.Schily.txt can be found in the original cdrtools tarball,
# which is mirrored at ftp://ftp.freebsd.org/pub/FreeBSD/distfiles/.
###########################################################################

--- libschily/getfp.c.orig	2008-06-13 22:32:03 UTC
+++ libschily/getfp.c
@@ -52,7 +52,7 @@
 
 EXPORT	void	**___fpoff	__PR((char *cp));
 
-EXPORT void **
+EXPORT __attribute__ ((noinline)) void **
 getfp()
 {
 		long	**dummy[1];
@@ -69,7 +69,7 @@ getfp()
  * We need this function to fool GCCs check for returning addresses
  * from outside the functions local address space.
  */
-EXPORT void **
+EXPORT __attribute__ ((noinline)) void **
 ___fpoff(cp)
 	char	*cp;
 {


[FILE:546:patches/patch-mkisofs__mkisofs.8]
--- mkisofs/mkisofs.8.orig	2014-12-03 21:21:11 UTC
+++ mkisofs/mkisofs.8
@@ -2674,7 +2674,7 @@ but is kept to be compatible with
 The format of the
 .I magic
 file is almost identical to the
-.BR magic (4)
+.BR magic (5)
 file used by the Linux
 .BR file (1)
 command - the routines for reading and decoding the
@@ -2713,7 +2713,7 @@ l l l l .
 .TE
 .PP
 The format of the file is described in the
-.BR magic (4)
+.BR magic (5)
 man page. The only difference here is that for each entry in the magic file, the
 .I message
 for the initial offset


[FILE:1130:patches/patch-readcd__readcd.1]
###########################################################################
# This patch was contributed by Marius Strobl.
###########################################################################
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# See the file CDDL.Schily.txt in this distribution for details.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file CDDL.Schily.txt from this distribution.
###########################################################################
# The file CDDL.Schily.txt can be found in the original cdrtools tarball,
# which is mirrored at ftp://ftp.freebsd.org/pub/FreeBSD/distfiles/.
###########################################################################

--- readcd/readcd.1.orig	2015-03-25 19:14:30 UTC
+++ readcd/readcd.1
@@ -604,8 +604,6 @@ login shell.
 .SH SEE ALSO
 .BR cdrecord (1),
 .BR mkisofs (8),
-.BR scg (7),
-.BR fbk (7),
 .BR rcmd (3),
 .BR ssh (1).
 


[FILE:695:patches/patch-rscsi__rscsi.dfl]
--- rscsi/rscsi.dfl.orig	2005-08-09 13:19:20 UTC
+++ rscsi/rscsi.dfl
@@ -25,14 +25,13 @@
 # Each USER= entry adds the listed user to the users who may run rscsi
 #
 # A typical passwd entry looks like this:
-# rscsi:x:1999:1000:Remote SCSI:/export/home/rscsi:/opt/schily/sbin/rscsi
+# rscsi:*:99:99::0:0:Remote SCSI:/usr/local/rscsi:/opt/schily/sbin/rscsi
 #
-# Add entries for all valid remote users to /export/home/rscsi/.rhosts
+# Add entries for all valid remote users to /usr/local/rscsi/.rhosts
 #
 # USER= entries are checked with a pattern matcher. USER=* matches all users.
 #
 USER=rscsi
-#USER=joerg
 
 #
 # Each ACCESS= entry adds a target or group of targets to the list of visible


[FILE:1173:patches/patch-scgcheck__scgcheck.1]
###########################################################################
# This patch was contributed by Marius Strobl.
###########################################################################
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# See the file CDDL.Schily.txt in this distribution for details.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file CDDL.Schily.txt from this distribution.
###########################################################################
# The file CDDL.Schily.txt can be found in the original cdrtools tarball,
# which is mirrored at ftp://ftp.freebsd.org/pub/FreeBSD/distfiles/.
###########################################################################

--- scgcheck/scgcheck.1.orig	2014-12-03 21:20:04 UTC
+++ scgcheck/scgcheck.1
@@ -269,8 +269,7 @@ Specify the log file to be used instead
 .SH SEE ALSO
 .BR cdrecord (1),
 .BR readcd (1),
-.BR mkisofs (1),
-.BR scg (7).
+.BR mkisofs (8).
 
 .SH NOTES
 .PP


[FILE:1477:files/special.mk]
DOCS=		README.FreeBSD README.mkisofs
CDDA2WAVDOCS=	FAQ Frontends HOWTOUSE OtherProgs README THANKS TODO
CDRECORDDOCS=	README README.ATAPI README.DiskT@2 README.WORM README.audio \
		README.cdplus README.cdrw README.cdtext README.clone \
		README.copy README.multi README.raw README.rscsi README.sony \
		README.verify
MKISOFSDOCS=	README README.compression README.eltorito README.graft_dirs \
		README.hfs_boot README.hfs_magic README.hide README.joliet \
		README.macosx README.mkhybrid README.prep_boot README.rootinfo \
		README.session README.sort README.sparcboot README.sunx86boot
SICONVTABLES=	cp10000 cp10006 cp10007 cp10029 cp10079 cp10081 cp1250 \
		cp1251 cp1252 cp1253 cp1254 cp1255 cp1256 cp1257 cp1258 \
		cp437 cp737 cp775 cp850 cp852 cp855 cp857 cp860 cp861 \
		cp862 cp863 cp864 cp865 cp866 cp869 cp874 iso8859-1 \
		iso8859-10 iso8859-11 iso8859-13 iso8859-14 iso8859-15 \
		iso8859-16 iso8859-2 iso8859-3 iso8859-4 iso8859-5 \
		iso8859-6 iso8859-7 iso8859-8 iso8859-9 koi8-r koi8-u
RPTARGETS=	btcflash/btcflash.1 cdda2wav/cdda2mp3 cdda2wav/cdda2ogg \
		cdda2wav/cdda2ogg.1 cdda2wav/cdda2wav.1 cdrecord/README.rscsi \
		cdrecord/cdrecord.1 cdrecord/cdrecord.dfl include/schily/deflts.h \
		libcdrdeflt/cdrdeflt.c librscg/scsi-remote.c readcd/readcd.1 \
		rscsi/rscsi.1 rscsi/rscsi.c rscsi/rscsi.dfl scgcheck/scgcheck.1
RPTARGETS2=	cdda2wav/cdda2wav.c cdda2wav/global.h libparanoia/gap.c \
		libparanoia/overlap.c libparanoia/p_block.c libparanoia/paranoia.c

