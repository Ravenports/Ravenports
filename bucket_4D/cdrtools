# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		cdrtools
VERSION=		2024-03-21
REVISION=		1
KEYWORDS=		sysutils audio
VARIANTS=		std
SDESC[std]=		CD/DVD/BluRay command line recording software
HOMEPAGE=		https://codeberg.org/schilytools/schilytools
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://codeberg.org/schilytools/schilytools/releases/download/2024-03-21/
DISTFILE[1]=		schily-2024-03-21.tar.bz2:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			mp3
			ogg
			docs
			man
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

EXRUN[ogg]=		vorbis-tools:primary:std
EXRUN[mp3]=		lame:primary:std

USES=			cpe gmake

DISTNAME=		schily-2024-03-21

LICENSE=		CDDL:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/Schily.Copyright
LICENSE_FILE=		CDDL:{{WRKSRC}}/CDDL.Schily.txt
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		sysutils/cdrtools

MAKE_ARGS=		DESTDIR={{STAGEDIR}}
			INS_BASE={{PREFIX}}
			INS_RBASE={{PREFIX}}
			STRIPFLAGS={{STRIP}}
			CCOM=cc

post-patch:
	(cd ${WRKSRC}/RULES && \
	 ${LN} -sf i386-freebsd-cc.rul amd64-freebsd-cc.rul && \
	 ${LN} -sf i386-freebsd-cc.rul x86_64-dragonfly-cc.rul && \
	 ${LN} -sf i386-freebsd-cc.rul x86_64-midnightbsd-cc.rul && \
	 ${LN} -sf i386-freebsd-cc.rul x86_64-netbsd-cc.rul && \
	 ${LN} -sf i586-linux-cc.rul x86_64-linux-cc.rul && \
	 ${LN} -sf os-freebsd.id os-midnightbsd.id)

pre-build:
.for component in libschily libscg librscg libparanoia libmdigest libdeflt libscgcmd libcdrdeflt libedc libfile libsiconv libfind libhfs_iso
	@${ECHO_MSG} "<=============== Prebuild ${component} ===============>"
	cd ${WRKSRC}/${component} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS} all
.endfor

do-build:
.for component in cdda2wav cdrecord mkisofs mkisofs/diag readcd scgcheck scgskeleton
	cd ${WRKSRC}/${component} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS} all
.endfor

do-configure:
	@${ECHO_MSG} "=> building a bootstrap smake"
	cd ${WRKSRC}/psmake && ${SETENV} ${MAKE_ENV} ${SH} ./MAKE-all

do-install:
.for component in libschily libscg librscg libparanoia libmdigest libdeflt libscgcmd libcdrdeflt libedc libfile libsiconv libfind libhfs_iso cdda2wav cdrecord mkisofs mkisofs/diag readcd scgcheck scgskeleton
	cd ${WRKSRC}/${component} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS} install
.endfor
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so
	# relocate doc pages
	${MKDIR} ${STAGEDIR}${STD_DOCDIR}
	${RM} ${STAGEDIR}${PREFIX}/share/doc/cdrecord/README.rscsi
	${MV} ${STAGEDIR}${PREFIX}/share/doc/cdrecord ${STAGEDIR}${STD_DOCDIR}/
	${MV} ${STAGEDIR}${PREFIX}/share/doc/mkisofs ${STAGEDIR}${STD_DOCDIR}/
	${MV} ${STAGEDIR}${PREFIX}/share/doc/cdda2wav ${STAGEDIR}${STD_DOCDIR}/
	# remove setuid
	(cd ${STAGEDIR}${PREFIX}/bin && ${CHMOD} 755 cdda2wav cdrecord readcd)

[FILE:1140:descriptions/desc.primary]
The schilytools are a collection of tools originally written or managed
by Joerg Schilling.  This project is an effort to continue work on this
tool collection with the goal to preserve compatibility with existing
platforms, extending portability to new platforms and fixing bugs.  New
features and tools are also accepted if they are a good fit with the
existing tool set.

The cdrtools are a subset of the schilytools including:
 - btcflash (a firmware flash utility for BTC DRW1008 DVD+/-RW recorder)
 - cdda2wav (a digital CD audio extraction program)
 - cdrecord (a CD/DVD/BluRay recording program)
 - devdump (dump a device or file in hex)
 - isodebug (show debug info contained in an ISO-9660 image)
 - isodump (dump a device or file based on ISO-9660)
 - isoinfo (analyze or list an ISO-9660 image)
 - isovfy (verify an ISO-9660 image)
 - mkisofs (an ISO-9660 filesystem image creator)
 - mkhybrid (an ISO-9660/HFS filesystem image creator)
   Link to mkisofs.
 - readcd (a data CD reading and recording program)
   May be used to write to DVD-RAM and to copy Solaris boot CD's.
 - scgcheck (checks and validates the ABI of libscg)


[FILE:245:descriptions/desc.mp3]
The cdrtools software includes tools to create and/or extract
ISO-9660 filesystems, verify their integrity, and write them to
disc.

This package contains the following programs:
 - cdda2mp3 (a digital CD audio extraction program to mp3 format)


[FILE:245:descriptions/desc.ogg]
The cdrtools software includes tools to create and/or extract
ISO-9660 filesystems, verify their integrity, and write them to
disc.

This package contains the following programs:
 - cdda2ogg (a digital CD audio extraction program to ogg format)


[FILE:104:distinfo]
76db022e450c1791a00e69780b55d18a2e3fc39b5ff870996433f87312032024      4869239 schily-2024-03-21.tar.bz2


[FILE:406:manifests/plist.primary]
bin/
 cdda2wav
 cdrecord
 devdump
 isodebug
 isodump
 isoinfo
 isovfy
 mkhybrid
 mkisofs
 readcd
 scgcheck
 scgskeleton
etc/default/cdrecord
lib/
 libcdrdeflt.so.1.0
 libdeflt.so.1.0
 libedc_ecc.so.1.0
 libedc_ecc_dec.so.1.0
 libfile.so.1.0
 libfind.so.4.0
 libhfs.a
 libhfs.so.1.0
 libmdigest.so.1.0
 libparanoia.so.1.0
 librscg.so.1.0
 libscg.so.1.0
 libscgcmd.so.1.0
 libschily.so.2.0
 libsiconv.so.1.0


[FILE:13:manifests/plist.mp3]
bin/cdda2mp3


[FILE:13:manifests/plist.ogg]
bin/cdda2ogg


[FILE:706:manifests/plist.docs]
share/doc/cdrtools/cdda2wav/README
share/doc/cdrtools/cdrecord/
 README
 README.ATAPI
 README.DiskT@2
 README.WORM
 README.audio
 README.cdplus
 README.cdrw
 README.cdtext
 README.clone
 README.copy
 README.multi
 README.parallel
 README.raw
 README.solaris-x86-ATAPI-DMA
 README.solaris-x86-ata-DMA
 README.sony
 README.sun-lofi
 README.verify
 README.volmgt
share/doc/cdrtools/mkisofs/
 README
 README.compression
 README.eltorito
 README.graft_dirs
 README.hfs_boot
 README.hfs_magic
 README.hide
 README.joliet
 README.macosx
 README.mkhybrid
 README.prep_boot
 README.rootinfo
 README.session
 README.sort
 README.sparcboot
 README.sunx86boot
share/doc/libparanoia/
 README.interface
 README.paranoia


[FILE:1031:manifests/plist.man]
share/man/man1/
 cdda2mp3.1
 cdda2ogg.1
 cdda2wav.1
 cdrecord.1
 readcd.1
 scgcheck.1
 scgskeleton.1
share/man/man3/
 absfpath.3
 absnpath.3
 abspath.3
 astoi.3
 astol.3
 breakline.3
 cmpbytes.3
 comerr.3
 comerrno.3
 errmsg.3
 errmsgno.3
 error.3
 fdown.3
 fdup.3
 fexecl.3
 fexecle.3
 fexecv.3
 fexecve.3
 file_raise.3
 fileclose.3
 fileluopen.3
 fileopen.3
 filepos.3
 fileread.3
 filereopen.3
 fileseek.3
 filesize.3
 filestat.3
 filewrite.3
 findline.3
 flush.3
 fnmatch.3
 format.3
 fpipe.3
 fprintf.3
 getallargs.3
 getargerror.3
 getarginit.3
 getargs.3
 geterrno.3
 getfiles.3
 getlallargs.3
 getlargs.3
 getlfiles.3
 getvallargs.3
 getvargs.3
 getvfiles.3
 handlecond.3
 js_fgetline.3
 js_getline.3
 movebytes.3
 ofindline.3
 patcompile.3
 patmatch.3
 peekc.3
 printf.3
 raisecond.3
 resolvefpath.3
 resolvenpath.3
 resolvepath.3
 spawnl.3
 spawnv.3
 sprintf.3
 starthandlecond.3
 strcatl.3
 streql.3
 strlen.3
 unhandlecond.3
share/man/man8/
 devdump.8
 isodebug.8
 isodump.8
 isoinfo.8
 isovfy.8
 mkhybrid.8
 mkisofs.8


[FILE:563:manifests/plist.dev]
lib/
 libcdrdeflt.a
 libcdrdeflt.so
 libdeflt.a
 libdeflt.so
 libedc_ecc.a
 libedc_ecc.so
 libedc_ecc_dec.a
 libedc_ecc_dec.so
 libfile.a
 libfile.so
 libfind.a
 libfind.so
 libhfs.so
 libmdigest.a
 libmdigest.so
 libparanoia.a
 libparanoia.so
 librscg.a
 librscg.so
 libscg.a
 libscg.so
 libscgcmd.a
 libscgcmd.so
 libschily.a
 libschily.so
 libsiconv.a
 libsiconv.so
lib/profiled/
 libcdrdeflt.a
 libdeflt.a
 libedc_ecc.a
 libedc_ecc_dec.a
 libfile.a
 libfind.a
 libhfs.a
 libmdigest.a
 libparanoia.a
 librscg.a
 libscg.a
 libscgcmd.a
 libschily.a
 libsiconv.a


[FILE:396:patches/patch-DEFAULTS_Defaults.dragonfly]
--- DEFAULTS/Defaults.dragonfly.orig	2024-03-21 13:19:57 UTC
+++ DEFAULTS/Defaults.dragonfly
@@ -18,7 +18,7 @@ DEFCCOM=	cc
 # If DEFLINKMODE is set to "dynamic", dynamic linking will be used
 #
 ###########################################################################
-DEFLINKMODE=	static
+DEFLINKMODE=	dynamic
 
 ###########################################################################
 #


[FILE:388:patches/patch-DEFAULTS_Defaults.linux]
--- DEFAULTS/Defaults.linux.orig	2024-03-21 13:19:57 UTC
+++ DEFAULTS/Defaults.linux
@@ -18,7 +18,7 @@ DEFCCOM=	cc
 # If DEFLINKMODE is set to "dynamic", dynamic linking will be used
 #
 ###########################################################################
-DEFLINKMODE=	static
+DEFLINKMODE=	dynamic
 
 ###########################################################################
 #


[FILE:390:patches/patch-DEFAULTS_Defaults.netbsd]
--- DEFAULTS/Defaults.netbsd.orig	2024-03-21 13:19:57 UTC
+++ DEFAULTS/Defaults.netbsd
@@ -18,7 +18,7 @@ DEFCCOM=	cc
 # If DEFLINKMODE is set to "dynamic", dynamic linking will be used
 #
 ###########################################################################
-DEFLINKMODE=	static
+DEFLINKMODE=	dynamic
 
 ###########################################################################
 #

