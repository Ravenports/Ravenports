# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gcab
VERSION=		1.1
KEYWORDS=		archivers
VARIANTS=		standard
SDESC[standard]=	Cabinet file library and tool
HOMEPAGE=		https://wiki.gnome.org/msitools
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNOME/gcab/1.1
DISTFILE[1]=		gcab-1.1.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		vala:single:standard
			gtk-doc:single:standard

USES=			cpe gettext-tools gmake libtool pkgconfig meson
GNOME_COMPONENTS=	glib intltool introspection

CPE_VENDOR=		gnome
FPC_EQUIVALENT=		archivers/gcab
MESON_ARGS=		-Dtests=false
MESON_INSERT_RPATH=	libgcab/meson.build
			src/meson.build

post-install:
	${MKDIR} ${STAGEDIR}${STD_DOCDIR:H}
	${MV} ${STAGEDIR}${PREFIX}/share/gtk-doc/html/gcab \
		${STAGEDIR}${STD_DOCDIR:H}
	${RM} -r ${STAGEDIR}${PREFIX}/share/gtk-doc

[FILE:226:descriptions/desc.primary]
Gcab is a utility and library mainly made to create Cabinet files, using
GObject/GIO API and provides GIR bindings.
 - creation supports plain and basic MSZIP compression
 - can open and list files from cabinet, no extraction


[FILE:94:distinfo]
192b2272c2adfde43595e5c62388854bca8a404bc796585b638e81774dd62950        76132 gcab-1.1.tar.xz


[FILE:1380:manifests/plist.primary]
bin/gcab
include/libgcab-1.0/libgcab.h
include/libgcab-1.0/libgcab/
 gcab-cabinet.h
 gcab-enums.h
 gcab-file.h
 gcab-folder.h
lib/
 libgcab-1.0.so
 libgcab-1.0.so.0
 libgcab-1.0.so.0.0.0
lib/girepository-1.0/GCab-1.0.typelib
lib/pkgconfig/libgcab-1.0.pc
share/gir-1.0/GCab-1.0.gir
share/locale/bs/LC_MESSAGES/gcab.mo
share/locale/cs/LC_MESSAGES/gcab.mo
share/locale/da/LC_MESSAGES/gcab.mo
share/locale/de/LC_MESSAGES/gcab.mo
share/locale/el/LC_MESSAGES/gcab.mo
share/locale/es/LC_MESSAGES/gcab.mo
share/locale/eu/LC_MESSAGES/gcab.mo
share/locale/fi/LC_MESSAGES/gcab.mo
share/locale/fr/LC_MESSAGES/gcab.mo
share/locale/fur/LC_MESSAGES/gcab.mo
share/locale/gl/LC_MESSAGES/gcab.mo
share/locale/hu/LC_MESSAGES/gcab.mo
share/locale/id/LC_MESSAGES/gcab.mo
share/locale/lt/LC_MESSAGES/gcab.mo
share/locale/lv/LC_MESSAGES/gcab.mo
share/locale/nb/LC_MESSAGES/gcab.mo
share/locale/oc/LC_MESSAGES/gcab.mo
share/locale/pl/LC_MESSAGES/gcab.mo
share/locale/pt/LC_MESSAGES/gcab.mo
share/locale/pt_BR/LC_MESSAGES/gcab.mo
share/locale/ru/LC_MESSAGES/gcab.mo
share/locale/sl/LC_MESSAGES/gcab.mo
share/locale/sr/LC_MESSAGES/gcab.mo
share/locale/sr@latin/LC_MESSAGES/gcab.mo
share/locale/sv/LC_MESSAGES/gcab.mo
share/locale/tg/LC_MESSAGES/gcab.mo
share/locale/tr/LC_MESSAGES/gcab.mo
share/locale/zh_CN/LC_MESSAGES/gcab.mo
share/man/man1/gcab.1.gz
share/vala/vapi/
 libgcab-1.0.deps
 libgcab-1.0.vapi


[FILE:353:manifests/plist.docs]
share/doc/gcab/
 annotation-glossary.html
 api-index-0-5.html
 api-index-0-6.html
 api-index-1-0.html
 api-index-deprecated.html
 api-index-full.html
 ch01.html
 gcab-GCabCabinet.html
 gcab-GCabFile.html
 gcab-GCabFolder.html
 home.png
 index.html
 left-insensitive.png
 left.png
 right-insensitive.png
 right.png
 style.css
 up-insensitive.png
 up.png


[FILE:1591:patches/patch-meson.build]
--- meson.build.orig	2018-02-09 12:44:30 UTC
+++ meson.build
@@ -5,7 +5,6 @@ project('gcab', 'c',
   default_options : ['warning_level=2', 'c_std=c99'],
 )
 
-git_version = run_command(['git', 'describe', '--abbrev=4', 'HEAD']).stdout().strip().split('-')
 
 # libtool versioning
 lt_current = '0'
@@ -15,7 +14,6 @@ lt_version = '@0@.@1@.@2@'.format(lt_cur
 
 # get suported warning flags
 test_args = [
-  '-fstack-protector-strong',
   '-Waggregate-return',
   '-Wunused',
   '-Warray-bounds',
@@ -72,10 +70,7 @@ endforeach
 # enable full RELRO where possible
 # FIXME: until https://github.com/mesonbuild/meson/issues/1140 is fixed
 global_link_args = []
-test_link_args = [
-  '-Wl,-z,relro',
-  '-Wl,-z,now',
-]
+test_link_args = []
 foreach arg: test_link_args
   if cc.has_argument(arg)
     global_link_args += arg
@@ -95,11 +90,7 @@ i18n = import('i18n')
 conf = configuration_data()
 conf.set_quoted('GETTEXT_PACKAGE', meson.project_name())
 conf.set_quoted('PACKAGE_NAME', meson.project_name())
-if git_version.length() == 3
-  conf.set_quoted('PACKAGE_STRING', '@0@ @1@.@2@-@3@'.format(meson.project_name(), git_version[0], git_version[1], git_version[2]))
-else
-  conf.set_quoted('PACKAGE_STRING', '@0@ v@1@'.format(meson.project_name(), meson.project_version()))
-endif
+conf.set_quoted('PACKAGE_STRING', '@0@ v@1@'.format(meson.project_name(), meson.project_version()))
 
 conf.set_quoted('LOCALEDIR', join_paths(get_option('prefix'), get_option('localedir')))
 conf.set_quoted('PACKAGE_BUGREPORT', 'https://bugzilla.gnome.org/enter_bug.cgi?product=msitools&component=gcab')

