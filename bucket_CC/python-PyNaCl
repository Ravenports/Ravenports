# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-PyNaCl
VERSION=		1.3.0
KEYWORDS=		python
VARIANTS=		py27 py38 py37
SDESC[py37]=		Binding to NaCl Cryptography library (PY 37)
SDESC[py38]=		Binding to NaCl Cryptography library (PY 38)
SDESC[py27]=		Binding to NaCl Cryptography library (PY 27)
HOMEPAGE=		https://github.com/pyca/pynacl/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/P/PyNaCl
DISTFILE[1]=		PyNaCl-1.3.0.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY27=OFF PY38=OFF PY37=ON
VOPTS[py38]=		PY27=OFF PY38=ON PY37=OFF
VOPTS[py27]=		PY27=ON PY38=OFF PY37=OFF

BUILDRUN_DEPENDS=	libsodium:single:standard

DISTNAME=		PyNaCl-1.3.0

GENERATED=		yes

INSTALL_REQ_TOOLCHAIN=	yes

[PY37].BUILDRUN_DEPENDS_ON=		python-six:single:py37
					python-cffi:single:py37
[PY37].USES_ON=				python:py37

[PY38].BUILDRUN_DEPENDS_ON=		python-six:single:py38
					python-cffi:single:py38
[PY38].USES_ON=				python:py38

[PY27].BUILDRUN_DEPENDS_ON=		python-six:single:py27
					python-cffi:single:py27
[PY27].USES_ON=				python:py27

post-patch:
	${REINPLACE_CMD} -e 's|with-pic"|with-pic", "--build=${CONFIGURE_TARGET}"|'\
		${WRKSRC}/setup.py

post-patch-sunos:
	# fails one library test
	${SED} -i.bak.sunos -e '/make.*check/d' ${WRKSRC}/setup.py

[FILE:3246:descriptions/desc.single]
===============================================
PyNaCl: Python binding to the libsodium library
===============================================

.. image:: https://img.shields.io/pypi/v/pynacl.svg
    :target: https://pypi.org/project/PyNaCl/
    :alt: Latest Version

.. image:: https://travis-ci.org/pyca/pynacl.svg?branch=master
    :target: https://travis-ci.org/pyca/pynacl

.. image:: https://codecov.io/github/pyca/pynacl/coverage.svg?branch=master
    :target: https://codecov.io/github/pyca/pynacl?branch=master

PyNaCl is a Python binding to `libsodium`_, which is a fork of the
`Networking and Cryptography library`_. These libraries have a stated goal
of
improving usability, security and speed. It supports Python 2.7 and 3.4+ as
well as PyPy 2.6+.

.. _libsodium: https://github.com/jedisct1/libsodium
.. _Networking and Cryptography library: https://nacl.cr.yp.to/

Features
--------

* Digital signatures
* Secret-key encryption
* Public-key encryption
* Hashing and message authentication
* Password based key derivation and password hashing

Installation
============

Binary wheel install
--------------------

PyNaCl ships as a binary wheel on OS X, Windows and Linux ``manylinux1``
[#many]_ ,
so all dependencies are included. Make sure you have an up-to-date pip
and run:

.. code-block:: console

    $ pip install pynacl

Linux source build
------------------

PyNaCl relies on `libsodium`_, a portable C library. A copy is bundled
with PyNaCl so to install you can run:

.. code-block:: console

    $ pip install pynacl

If you'd prefer to use the version of ``libsodium`` provided by your
distribution, you can disable the bundled copy during install by running:

.. code-block:: console

    $ SODIUM_INSTALL=system pip install pynacl

.. warning:: Usage of the legacy ``easy_install`` command provided by
setuptools
   is generally discouraged, and is completely unsupported in PyNaCl's
case.

.. _libsodium: https://github.com/jedisct1/libsodium

.. [#many] `manylinux1 wheels <https://www.python.org/dev/peps/pep-0513/>`_
    are built on a baseline linux environment based on Centos 5.11
    and should work on most x86 and x86_64 glibc based linux environments.

Changelog
=========

1.3.0 2018-09-26
----------------

* Added support for Python 3.7.
* Update ``libsodium`` to 1.0.16.
* Run and test all code examples in PyNaCl docs through sphinx's
  doctest builder.
* Add low-level bindings for chacha20-poly1305 AEAD constructions.
* Add low-level bindings for the chacha20-poly1305 secretstream
constructions.
* Add low-level bindings for ed25519ph pre-hashed signing construction.
* Add low-level bindings for constant-time increment and addition
  on fixed-precision big integers represented as little-endian
  byte sequences.
* Add low-level bindings for the ISO/IEC 7816-4 compatible padding API.
* Add low-level bindings for libsodium's crypto_kx... key exchange
  construction.
* Set hypothesis deadline to None in tests/test_pwhash.py to avoid
  incorrect test failures on slower processor architectures.  GitHub
  issue #370

1.2.1 - 2017-12-04
------------------

* Update hypothesis minimum allowed version.
* Infrastructure: add proper configuration for readthedocs builder
  runtime environment.


[FILE:98:distinfo]
0c6100edd16fefd1557da078c7a31e7b7d7a52ce39fdca2bec29d4f7b6e7600c      3351016 PyNaCl-1.3.0.tar.gz

