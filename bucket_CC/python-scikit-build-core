# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-scikit-build-core
VERSION=		0.11.3
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Build backend for CMake based projects (3.12)
SDESC[v13]=		Build backend for CMake based projects (3.13)
HOMEPAGE=		https://github.com/scikit-build/scikit-build-core
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/81/23/323e0375505afaea953044f28b2976c64eb9facf339261eb8cfa287515e7
DISTFILE[1]=		scikit_build_core-0.11.3-py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		scikit_build_core-0.11.3.dist-info

GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-packaging:single:v12
					python-pathspec:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-packaging:single:v13
					python-pathspec:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:3638:descriptions/desc.single]
# scikit-build-core

[![Documentation Status][rtd-badge]][rtd-link]
[![GitHub Discussion][github-discussions-badge]][github-discussions-link]
[![Discord][discord-badge]][discord-link]

[![Actions Status][actions-badge]][actions-link]
[![codecov][codecov-badge]][codecov-link]

[![PyPI version][pypi-version]][pypi-link]
[![Conda-Forge][conda-badge]][conda-link]
[![PyPI platforms][pypi-platforms]][pypi-link]
[![Downloads][download-badge]][download-link]

> [!NOTE]
>
> We have a public Scikit-build community meeting every month!
> [Join us on Google Meet] on the third
> Friday of every month at 12:00 PM EST. We also have a developer's meeting
on
> the first Friday of every month at the same time. Our past meeting
minutes are
> [available here].

<!-- SPHINX-START -->

Scikit-build-core is a build backend for Python that uses CMake to build
extension modules. It has a simple yet powerful static configuration system
in
pyproject.toml, and supports almost unlimited flexibility via CMake. It was
initially developed to support the demanding needs of scientific users, but
can
build any sort of package that uses CMake.

Scikit-build-core is a ground-up rewrite of the classic Scikit-build. The
key
features of scikit-build classic (which is setuptools based) are also
present
here:

- Great support for or by most OSs, compilers, IDEs, and libraries
- Support for C++ features and other languages like Fortran
- Support for multithreaded builds
- Simple CMakeFiles.txt instead of up to thousands of lines of fragile
  setuptools/distutils code
- Cross-compile support for Apple Silicon and Windows ARM

Scikit-build-core was built using Python packaging standards developed
after
scikit-build (classic) was written. Using it directly provides the
following
features over classic Scikit-build:

- Better warnings, errors, and logging
- No warning about unused variables
- Automatically adds Ninja and/or CMake only as required
- No dependency on setuptools, distutils, or wheel
- Powerful config system, including config options support
- Automatic inclusion of site-packages in `CMAKE_PREFIX_PATH`
- FindPython is backported if running on CMake < 3.26.1 (configurable),
supports
  PyPY SOABI & Limited API / Stable ABI
- Limited API / Stable ABI and pythonless tags supported via config option
- No slow generator search, ninja/make or MSVC used by default, respects
  `CMAKE_GENERATOR`
- SDists are reproducible by default (UNIX, Python 3.9+, uncompressed
comparison
  recommended)
- Support for caching between builds (opt-in by setting `build-dir`)
- Support for writing out to extra wheel folders (scripts, headers, data)
- Support for selecting install components and build targets
- Dedicated entrypoints for module and prefix directories
- Several integrated dynamic metadata plugins (proposing standardized
support
  soon)
- Experimental editable mode support, with optional experimental auto
rebuilds
  on import and optional in-place mode
- Supports WebAssembly (Emscripten/[Pyodide]).
- Supports [free-threaded Python 3.13].

The following limitations are present compared to classic scikit-build:

- The minimum supported CMake is 3.15
- The minimum supported Python is 3.8 (3.7+ for 0.10.x and older)

Some known missing features that will be developed soon:

- Wheels are not fully reproducible yet (nor are they in most others
systems,
  including setuptools)
- Several editable mode caveats (mentioned in the docs).

Other backends are also planned:

- Setuptools integration highly experimental
- Hatchling plugin highly experimental

The recommended interface is the native pyproject builder. There is also a
WIP


[FILE:131:distinfo]
9f222e10021734367a749c8062ed12119bea82d451d07674a2de9bff4832bbea       186294 python-src/scikit_build_core-0.11.3-py3-none-any.whl

