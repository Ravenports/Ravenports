# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-certifi
VERSION=		2018.1.18
KEYWORDS=		python
VARIANTS=		py27 py35 py36
SDESC[py35]=		Python package for providing Mozilla's CA  (PY 35)
SDESC[py36]=		Python package for providing Mozilla's CA  (PY 36)
SDESC[py27]=		Python package for providing Mozilla's CA  (PY 27)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/c/certifi
DISTFILE[1]=		certifi-2018.1.18.tar.gz:main
DF_INDEX=		1
SPKGS[py35]=		single
SPKGS[py36]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY35 PY36
OPTIONS_STANDARD=	none
VOPTS[py35]=		PY27=OFF PY35=ON PY36=OFF
VOPTS[py36]=		PY27=OFF PY35=OFF PY36=ON
VOPTS[py27]=		PY27=ON PY35=OFF PY36=OFF

DISTNAME=		certifi-2018.1.18

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"MPL-2.0"
LICENSE_SCHEME=		solo
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE

GENERATED=		yes

[PY35].USES_ON=				python:py35

[PY36].USES_ON=				python:py36

[PY27].USES_ON=				python:py27

[FILE:1678:descriptions/desc.single]
Certifi: Python SSL Certificates
================================

`Certifi`_ is a carefully curated collection of Root Certificates for
validating the trustworthiness of SSL certificates while verifying the
identity
of TLS hosts. It has been extracted from the `Requests`_ project.

Installation
------------

``certifi`` is available on PyPI. Simply install it with ``pip``::

    $ pip install certifi

Usage
-----

To reference the installed certificate authority (CA) bundle, you can use
the
built-in function::

    >>> import certifi

    >>> certifi.where()
    '/usr/local/lib/python2.7/site-packages/certifi/cacert.pem'

Enjoy!

1024-bit Root Certificates
~~~~~~~~~~~~~~~~~~~~~~~~~~

Browsers and certificate authorities have concluded that 1024-bit keys are
unacceptably weak for certificates, particularly root certificates. For
this
reason, Mozilla has removed any weak (i.e. 1024-bit key) certificate from
its
bundle, replacing it with an equivalent strong (i.e. 2048-bit or greater
key)
certificate from the same CA. Because Mozilla removed these certificates
from
its bundle, ``certifi`` removed them as well.

In previous versions, ``certifi`` provided the ``certifi.old_where()``
function
to intentionally re-add the 1024-bit roots back into your bundle. This was
not
recommended in production and therefore was removed. To assist in
migrating old
code, the function ``certifi.old_where()`` continues to exist as an alias
of
``certifi.where()``. Please update your code to use ``certifi.where()``
instead. ``certifi.old_where()`` will be removed in 2018.

.. _`Certifi`: http://certifi.io/en/latest/
.. _`Requests`: http://docs.python-requests.org/en/latest/



[FILE:103:distinfo]
edbc3f203427eef571f79a7692bb160a2b0f7ccaa31953e99bd17e307cf63f7d       151258 certifi-2018.1.18.tar.gz

