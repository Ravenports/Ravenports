# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-certifi
VERSION=		2020.4.5.1
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		Collection of SSL Root Certificates (PY37)
SDESC[py38]=		Collection of SSL Root Certificates (PY38)
HOMEPAGE=		https://certifiio.readthedocs.io/en/latest/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/c/certifi
DISTFILE[1]=		certifi-2020.4.5.1.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		certifi-2020.4.5.1

GENERATED=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[FILE:1576:descriptions/desc.single]
Certifi: Python SSL Certificates
================================

`Certifi`_ is a carefully curated collection of Root Certificates for
validating the trustworthiness of SSL certificates while verifying the
identity
of TLS hosts. It has been extracted from the `Requests`_ project.

Installation
------------

certifi is available on PyPI. Simply install it with pip::

    $ pip install certifi

Usage
-----

To reference the installed certificate authority (CA) bundle, you can use
the
built-in function::

    >>> import certifi

    >>> certifi.where()
    '/usr/local/lib/python2.7/site-packages/certifi/cacert.pem'

Or from the command line::

    $ python -m certifi
    /usr/local/lib/python2.7/site-packages/certifi/cacert.pem

Enjoy!

1024-bit Root Certificates
~~~~~~~~~~~~~~~~~~~~~~~~~~

Browsers and certificate authorities have concluded that 1024-bit keys are
unacceptably weak for certificates, particularly root certificates. For
this
reason, Mozilla has removed any weak (i.e. 1024-bit key) certificate from
its
bundle, replacing it with an equivalent strong (i.e. 2048-bit or greater
key)
certificate from the same CA. Because Mozilla removed these certificates
from
its bundle, certifi removed them as well.

In previous versions, certifi provided the ``certifi.old_where()`` function
to intentionally re-add the 1024-bit roots back into your bundle. This was
not
recommended in production and therefore was removed at the end of 2018.

.. _`Certifi`: https://certifiio.readthedocs.io/en/latest/
.. _`Requests`: https://requests.readthedocs.io/en/master/


[FILE:104:distinfo]
51fcb31174be6e6664c5f69e3e1691a2d72a1a12e90f872cbdb1567eb47b6519       158038 certifi-2020.4.5.1.tar.gz

