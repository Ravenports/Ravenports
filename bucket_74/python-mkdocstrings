# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-mkdocstrings
VERSION=		0.19.1
KEYWORDS=		python
VARIANTS=		py310 py311
SDESC[py310]=		Documentation from sources for MkDocs (3.10)
SDESC[py311]=		Documentation from sources for MkDocs (3.11)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/f1/b3/67004de33f860586d27301fc12d949f56026a5fc42f8004566e454659985
DISTFILE[1]=		mkdocstrings-0.19.1-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py311]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[py311]=		PY310=OFF PY311=ON

DISTNAME=		mkdocstrings-0.19.1.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-Jinja2:single:py310
					python-Markdown:single:py310
					python-MarkupSafe:single:py310
					python-mkdocs-autorefs:single:py310
					python-mkdocs:single:py310
					python-pymdown-extensions:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-Jinja2:single:py311
					python-Markdown:single:py311
					python-MarkupSafe:single:py311
					python-mkdocs-autorefs:single:py311
					python-mkdocs:single:py311
					python-pymdown-extensions:single:py311
[PY311].USES_ON=			python:py311,wheel

[FILE:2824:descriptions/desc.single]
# mkdocstrings

[ci]
[documentation]
[pypi version]
[conda version]
[gitpod]
[gitter]

Automatic documentation from sources, for [MkDocs].
Come have a chat or ask questions on our [Gitter channel].

---

**[Features]** - **[Requirements]** - **[Installation]** - **[Quick
usage]**

![mkdocstrings_gif1]

## Features

- [**Language-agnostic:**]
  just like *MkDocs*, *mkdocstrings* is written in Python but is
language-agnostic.
  It means you can use it with any programming language, as long as there
is a
  [**handler**] for it.
  We currently have [handlers]
  for the [Crystal] and [Python] languages.
  Maybe you'd like to add another one to the list? :wink:

- [**Multiple themes support:**]
  each handler can offer multiple themes. Currently, we offer the
  :star: [Material theme] :star:
  as well as basic support for the ReadTheDocs and MkDocs themes for the
Python handler.

- [**Cross-references across pages:**]
  *mkdocstrings* makes it possible to reference headings in other Markdown
files with the classic Markdown linking
  syntax: `[identifier][]` or `[title][identifier]` -- and you don't need
to remember which exact page this object was
  on. This works for any heading that's produced by a *mkdocstrings*
language handler, and you can opt to include
  *any* Markdown heading into the global referencing scheme.

    **Note**: in versions prior to 0.15 *all* Markdown headers were
included, but now you need to
    [opt in].

- [**Cross-references across sites:**]
  similarly to [Sphinx's intersphinx extension],
  *mkdocstrings* can reference API items from other libraries, given they
provide an inventory and you load
  that inventory in your MkDocs configuration.

- [**Inline injection in Markdown:**]
  instead of generating Markdown files, *mkdocstrings* allows you to inject
  documentation anywhere in your Markdown contents. The syntax is simple:
`::: identifier` followed by a 4-spaces
  indented YAML block. The identifier and YAML configuration will be passed
to the appropriate handler
  to collect and render documentation.

- [**Global and local configuration:**]
  each handler can be configured globally in `mkdocs.yml`, and locally for
each
  "autodoc" instruction.

- [**Watch source code directories:**]
  you can tell *mkdocstrings* to add directories to be watched by *MkDocs*
when
  serving the documentation, for auto-reload.

- **Reasonable defaults:**
  you should be able to just drop the plugin in your configuration and
enjoy your auto-generated docs.

## Installation

With `pip`:
`bash
pip install mkdocstrings
`

You can install support for specific languages using extras, for example:

```bash
pip install mkdocstrings[crystal,python]
```

See the [available language handlers].

With `conda`:
```bash
conda install -c conda-forge mkdocstrings
```

## Quick usage



[FILE:115:distinfo]
32a38d88f67f65b264184ea71290f9332db750d189dea4200cbbe408d304c261        25624 mkdocstrings-0.19.1-py3-none-any.whl

