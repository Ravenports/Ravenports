# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		openvpn
VERSION=		2.4.5
KEYWORDS=		security
VARIANTS=		standard
SDESC[standard]=	Secure and highly configurable VPN solution
HOMEPAGE=		https://openvpn.net
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://swupdate.openvpn.org/community/releases/
DISTFILE[1]=		openvpn-2.4.5.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			docs
			primary

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

NOT_FOR_OPSYS=		linux

BUILD_DEPENDS=		lz4:complete:standard
			lzo:complete:standard
BUILDRUN_DEPENDS=	libressl:single:standard
			openpam:single:standard
RUN_DEPENDS=		lz4:shared:standard
			lzo:shared:standard

USES=			autoreconf libtool pkgconfig

FPC_EQUIVALENT=		security/openvpn

MUST_CONFIGURE=		gnu
CONFIGURE_ENV=		ac_cv_prog_CMAKE=
			CMAKE=

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/openvpn/plugins/openvpn-plugin-auth-pam.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/openvpn/plugins/openvpn-plugin-down-root.so

[FILE:968:descriptions/desc.primary]
OpenVPN is a full-featured open source SSL VPN solution that accommodates 
a wide range of configurations, including remote access, site-to-site 
VPNs, Wi-Fi security, and enterprise-scale remote access solutions with 
load balancing, failover, and fine-grained access-controls. Starting with 
the fundamental premise that complexity is the enemy of security, OpenVPN 
offers a cost-effective, lightweight alternative to other VPN technologies.

The OpenVPN security model is based on SSL, the industry standard for 
secure communications via the internet. OpenVPN implements OSI layer 2 or 
3 secure network extension using the SSL/TLS protocol, supports flexible 
client authentication methods based on certificates, smart cards, and/or 
2-factor authentication, and allows user or group-specific access control 
policies using firewall rules applied to the VPN virtual interface. 
OpenVPN is not a web application proxy and does not operate through a web 
browser.


[FILE:99:distinfo]
43c0a363a332350f620d1cd93bb431e082bedbc93d4fb872f758650d53c1d29e       942696 openvpn-2.4.5.tar.xz


[FILE:150:manifests/plist.docs]
share/doc/openvpn/
 COPYING
 README.down-root
 README.auth-pam
 COPYRIGHT.GPL
 README.IPv6
 README
 management-notes.txt
 Changes.rst
 README.mbedtls


[FILE:161:manifests/plist.primary]
include/
 openvpn-plugin.h
 openvpn-msg.h
sbin/openvpn
lib/openvpn/plugins/
 openvpn-plugin-down-root.so
 openvpn-plugin-auth-pam.so
share/man/man8/openvpn.8.gz


[FILE:1030:patches/patch-configure.ac]
--- configure.ac.orig	2018-04-24 16:16:35.435817000 +0200
+++ configure.ac	2018-04-24 16:23:24.996296000 +0200
@@ -310,6 +310,8 @@
 		AC_DEFINE([TARGET_SOLARIS], [1], [Are we running on Solaris?])
 		AC_DEFINE_UNQUOTED([TARGET_PREFIX], ["S"], [Target prefix])
 		CPPFLAGS="$CPPFLAGS -D_XPG4_2"
+		ROUTE="/sbin/route"
+		IFCONFIG="/sbin/ifconfig"
 		;;
 	*-*-openbsd*)
 		AC_DEFINE([TARGET_OPENBSD], [1], [Are we running on OpenBSD?])
@@ -318,6 +320,8 @@
 	*-*-freebsd*)
 		AC_DEFINE([TARGET_FREEBSD], [1], [Are we running on FreeBSD?])
 		AC_DEFINE_UNQUOTED([TARGET_PREFIX], ["F"], [Target prefix])
+		ROUTE="/sbin/route"
+		IFCONFIG="/sbin/ifconfig"
 		;;
 	*-*-netbsd*)
 		AC_DEFINE([TARGET_NETBSD], [1], [Are we running NetBSD?])
@@ -341,6 +345,8 @@
 	*-*-dragonfly*)
 		AC_DEFINE([TARGET_DRAGONFLY], [1], [Are we running on DragonFlyBSD?])
 		AC_DEFINE_UNQUOTED([TARGET_PREFIX], ["D"], [Target prefix])
+		ROUTE="/sbin/route"
+		IFCONFIG="/sbin/ifconfig"
 		;;
 	*-aix*)
 		AC_DEFINE([TARGET_AIX], [1], [Are we running AIX?])


[FILE:812:patches/patch-src_openvpn_openssl__compat.h]
--- ./src/openvpn/openssl_compat.h	2018-03-01 07:22:19.000000000 +0000
+++ ./src/openvpn/openssl_compat.h	2018-03-12 10:44:08.876010487 +0000
@@ -711,7 +711,7 @@
 }
 #endif /* SSL_CTX_get_max_proto_version */
 
-#ifndef SSL_CTX_set_min_proto_version
+#if !defined(SSL_CTX_set_min_proto_version) && !defined(LIBRESSL_VERSION_NUMBER)
 /** Mimics SSL_CTX_set_min_proto_version for OpenSSL < 1.1 */
 static inline int
 SSL_CTX_set_min_proto_version(SSL_CTX *ctx, long tls_ver_min)
@@ -740,7 +740,7 @@
 }
 #endif /* SSL_CTX_set_min_proto_version */
 
-#ifndef SSL_CTX_set_max_proto_version
+#if !defined(SSL_CTX_set_max_proto_version) && !defined(LIBRESSL_VERSION_NUMBER)
 /** Mimics SSL_CTX_set_max_proto_version for OpenSSL < 1.1 */
 static inline int
 SSL_CTX_set_max_proto_version(SSL_CTX *ctx, long tls_ver_max)

