# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libftdi1
VERSION=		1.5
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Library (using libusb) to talk to FTDI chips
HOMEPAGE=		https://www.intra2net.com/en/developer/libftdi/index.php
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://www.intra2net.com/en/developer/libftdi/download/
DISTFILE[1]=		libftdi1-1.5.tar.bz2:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			tools

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		libconfuse:dev:std
BUILDRUN_DEPENDS=	libconfuse:primary:std
B_DEPS[linux]=		libusb:dev:std
B_DEPS[netbsd]=		libusb:dev:std
BR_DEPS[linux]=		libusb:primary:std
BR_DEPS[netbsd]=	libusb:primary:std
EXRUN[tools]=		primary

USES=			cmake pkgconfig gettext

LICENSE=		GPLv2:primary LGPL21:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/TERMS
LICENSE_FILE=		GPLv2:{{WRKSRC}}/COPYING.GPL
			LGPL21:{{WRKSRC}}/COPYING.LIB
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/ftdi.c
LICENSE_SCHEME=		dual

FPC_EQUIVALENT=		devel/libftdi1

SOVERSION=		2.5.0

CMAKE_ARGS=		-DDOCUMENTATION:BOOL=OFF
			-DEXAMPLES:BOOL=OFF
			-DCMAKE_POLICY_VERSION_MINIMUM=3.5

post-install:
	# remove installed example.conf
	${RM} -rf ${STAGEDIR}${STD_DOCDIR}
	# strip stuff
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/ftdi_eeprom
	# ${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so

[FILE:387:descriptions/desc.primary]
libFTDI1 is an open source library to talk to FTDI chips:

    FT230X
    FT4232H / FT2232H
    FT232R / FT245R
    FT2232L / FT2232D / FT2232C
    FT232BM / FT245BM (and the BL/BQ variants)
    FT8U232AM / FT8U245AM

The library is linked with your program in userspace, no kernel driver required.
libFTDI works perfectly with Linux, Windows, MacOS X and BSD variants thanks to
libusb.


[FILE:47:descriptions/desc.tools]
This package contains tools based on libFTDI1.


[FILE:99:distinfo]
7c7091e9c86196148bd41177b4590dccb1510bfe6cea5bf7407ff194482eb049       116297 libftdi1-1.5.tar.bz2


[FILE:57:manifests/plist.primary]
lib/
 libftdi1.so.%%SOMAJOR%%
 libftdi1.so.%%SOVERSION%%


[FILE:207:manifests/plist.dev]
bin/libftdi1-config
include/libftdi1/ftdi.h
lib/
 libftdi1.a
 libftdi1.so
lib/cmake/libftdi1/
 LibFTDI1Config.cmake
 LibFTDI1ConfigVersion.cmake
 UseLibFTDI1.cmake
lib/pkgconfig/
 libftdi1.pc
 libftdipp1.pc


[FILE:16:manifests/plist.tools]
bin/ftdi_eeprom


[FILE:426:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2020-07-07 19:32:55 UTC
+++ CMakeLists.txt
@@ -52,7 +52,7 @@ set(CPACK_COMPONENT_HEADERS_GROUP    "De
 
 # guess LIB_SUFFIX, don't take debian multiarch into account 
 if ( NOT DEFINED LIB_SUFFIX )
-  if( CMAKE_SYSTEM_NAME MATCHES "Linux"
+  if( CMAKE_SYSTEM_NAME MATCHES "xxx"
       AND NOT CMAKE_CROSSCOMPILING
       AND NOT EXISTS "/etc/debian_version"
       AND NOT EXISTS "/etc/arch-release" )


[FILE:432:patches/patch-cmake__FindUSB1.cmake]
--- cmake/FindUSB1.cmake.orig	2020-07-07 19:32:55 UTC
+++ cmake/FindUSB1.cmake
@@ -26,7 +26,7 @@ else (LIBUSB_INCLUDE_DIR AND LIBUSB_LIBR
     PATH_SUFFIXES libusb-1.0
     PATHS ${PC_LIBUSB_INCLUDEDIR} ${PC_LIBUSB_INCLUDE_DIRS})
 
-  FIND_LIBRARY(LIBUSB_LIBRARIES NAMES usb-1.0
+  FIND_LIBRARY(LIBUSB_LIBRARIES NAMES usb-1.0 usb
     PATHS ${PC_LIBUSB_LIBDIR} ${PC_LIBUSB_LIBRARY_DIRS})
 
   include(FindPackageHandleStandardArgs)


[FILE:444:patches/patch-src_ftdi.c]
--- src/ftdi.c.orig	2020-07-07 19:32:55 UTC
+++ src/ftdi.c
@@ -619,8 +619,11 @@ int ftdi_usb_open_dev(struct ftdi_contex
     }
     else if (ftdi->module_detach_mode == AUTO_DETACH_REATACH_SIO_MODULE)
     {
+#ifndef __DragonFly__
+	/* XXX */
         if (libusb_set_auto_detach_kernel_driver(ftdi->usb_dev, 1) != LIBUSB_SUCCESS)
             detach_errno = errno;
+#endif
     }
 
     if (libusb_get_configuration (ftdi->usb_dev, &cfg) < 0)

