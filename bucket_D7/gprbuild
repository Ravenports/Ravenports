# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gprbuild
VERSION=		2018
KEYWORDS=		devel ada
VARIANTS=		standard
SDESC[standard]=	Adacore multi-language software build tool
HOMEPAGE=		http://docs.adacore.com/live/wave/gprbuild/html/gprbuild_ug/gprbuild_ug.html
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://downloads.dragonlace.net/src/
DISTFILE[1]=		gprbuild-gpl-2018-20180524-src.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		xmlada:primary:standard
			python-Sphinx:single:python_default

DISTNAME=		gprbuild-gpl-2018-src

LICENSE=		GPLv3+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/gprbuild.ads
LICENSE_SCHEME=		solo

BUILD_WRKSRC=		{{WRKSRC}}/construction
BUILD_TARGET=		all gen-docs
MAKE_ARGS=		PROCESSORS={{MAKE_JOBS_NUMBER}}

INSTALL_WRKSRC=		{{BUILD_WRKSRC}}
INSTALL_TARGET=		install install-docs

post-patch:
	${MKDIR} ${WRKDIR}/trash ${BUILD_WRKSRC}
	${INSTALL_DATA} ${FILESDIR}/Makefile.BSD ${BUILD_WRKSRC}/Makefile
	${SED} -i"" -e "s|@LOCALBASE@|${LOCALBASE}|" \
		${WRKSRC}/share/gprconfig/compilers.xml

[FILE:532:descriptions/desc.primary]
GPRbuild is an advanced software tool designed to help automate the
construction of multi-language systems.  It removes the complexity from
multi-language development by allowing developers to quickly and easily
compile and link software written in a combination of languages including
Ada, Assembler, C, C++, and Fortran.  Easily extendable by users to cover
new toolchains and languages it is primarily aimed at projects of all
sizes organized into subsystems and libraries and is particularly well
suited for compiled languages.


[FILE:116:distinfo]
a06b7ee6ddc00a927db9b6207a4bd44e670ff2cceb9879a5baa98f4a38f552a1      2479651 gprbuild-gpl-2018-20180524-src.tar.gz


[FILE:344:manifests/plist.primary]
bin/
 gprbuild
 gprclean
 gprconfig
 gprinstall
 gprls
 gprname
 gprslave
libexec/gprbuild/
 gprbind
 gprlib
share/gpr/_default.gpr
share/gprconfig/
 0_default.xml
 asm.xml
 baselined.xml
 c.xml
 clean.xml
 compilers.xml
 cpp.xml
 cross.xml
 fallback_targets.xml
 fortran.xml
 gnat.xml
 gprconfig.xsd
 linker.xml
 nocompiler.xml
 targetset.xml


[FILE:1200:patches/patch-share_gprconfig_compilers.xml]
--- share/gprconfig/compilers.xml.orig	2018-03-24 08:46:37 UTC
+++ share/gprconfig/compilers.xml
@@ -177,17 +177,15 @@
     </version>
     <languages>Ada</languages>
     <variable name="gcc_version">
-      <external>${PREFIX}gcc -v</external>
+      <external>ada -v</external>
       <grep regexp="^[-\w]*gcc \S+ (\S+)" group="1"></grep>
     </variable>
     <runtimes default="default,kernel,native">
-       <directory group="default" >\.\./lib/gcc(-lib)?/$TARGET/$gcc_version/adalib/</directory>
-       <directory group="default" contents="^rts-">\.\./lib/gcc(-lib)?/$TARGET/$gcc_version/ada_object_path</directory>
-       <directory group="2" >\.\./lib/gcc(-lib)?/$TARGET/$gcc_version/rts-(.*)/adalib/</directory>
-       <directory group="1" >\.\./$TARGET/lib/gnat/(.*)/adalib/</directory>
+       <directory group="default">\.\./lib/gcc/$TARGET/$gcc_version/adalib</directory>
+       <directory group="0">/raven/toolchain/gcc6/lib/gcc/$TARGET/$gcc_version/adalib</directory>
     </runtimes>
     <target>
-      <external>${PREFIX}gcc -dumpmachine</external>
+      <external>ada -dumpmachine</external>
       <grep regexp="[^\r\n]+"></grep>
     </target>
   </compiler_description>


[FILE:486:patches/patch-share_gprconfig_gnat.xml]
--- share/gprconfig/gnat.xml.orig	2018-03-06 13:23:50 UTC
+++ share/gprconfig/gnat.xml
@@ -60,7 +60,7 @@
    &filter_gnat;
    <config>
    package Compiler is
-      for Driver                   ("Ada") use "${PATH(ada)}${PREFIX(ada)}gcc";
+      for Driver                   ("Ada") use "${PATH(ada)}ada";
       for Language_Kind            ("Ada") use "unit_based";
       for Dependency_Kind          ("Ada") use "ALI_File";
       for Leading_Required_Switches        ("Ada") use


[FILE:1228:patches/patch-share_gprconfig_linker.xml]
--- share/gprconfig/linker.xml.orig	2018-05-24 06:18:29 UTC
+++ share/gprconfig/linker.xml
@@ -951,11 +951,14 @@
     </config>
   </configuration>
 
-  <!-- linux, freebsd, Irix, QNX -->
+  <!-- linux, bsd, Irix, QNX -->
   <configuration>
     <targets>
        <target name="^.*linux.*$" />
        <target name="^.*freebsd.*$" />
+       <target name="^.*dragonfly.*$" />
+       <target name="^.*openbsd.*$" />
+       <target name="^.*netbsd.*$" />
        <target name="^.*irix.*$" />
        <target name="^.*qnx[0-9]*$" />
     </targets>
@@ -1061,10 +1064,13 @@
     </config>
   </configuration>
 
-  <!-- freebsd -->
+  <!-- bsd -->
   <configuration>
     <targets>
        <target name="^.*freebsd.*$" />
+       <target name="^.*dragonfly.*$" />
+       <target name="^.*openbsd.*$" />
+       <target name="^.*netbsd.*$" />
     </targets>
     <config>
    for Run_Path_Option  use ("-Wl,-rpath,");
@@ -1519,6 +1525,9 @@
        <target name="^.*mingw.*$" />
        <target name="^.*linux.*$" />
        <target name="^.*freebsd.*$" />
+       <target name="^.*dragonfly.*$" />
+       <target name="^.*openbsd.*$" />
+       <target name="^.*netbsd.*$" />
      </targets>
     <config>
    package Linker is


[FILE:1092:patches/patch-share_gprconfig_targetset.xml]
--- share/gprconfig/targetset.xml.orig	2018-05-24 06:18:29 UTC
+++ share/gprconfig/targetset.xml
@@ -92,8 +92,8 @@
 
   <!-- x86-solaris -->
   <targetset canonical="x86-solaris">
-    <target>x86-solaris</target>
-    <target>i.86-(pc-)?solaris.*</target>
+    <target>i.86-.*-solaris.*</target>
+    <target>x86_64-.*-solaris.*</target>
   </targetset>
 
   <!-- x86-windows (mingw) -->
@@ -214,6 +214,26 @@
     <target>amd64-.*freebsd.*</target>
   </targetset>
 
+  <!-- x86_64 DragonFly -->
+  <targetset canonical="x86_64-dragonfly">
+    <target>x86_64-dragonfly</target>
+    <target>x86_64-.*dragonfly.*</target>
+  </targetset>
+
+  <!-- x86_64 NetBSD -->
+  <targetset canonical="x86_64-netbsd">
+    <target>x86_64-netbsd</target>
+    <target>x86_64-.*netbsd.*</target>
+    <target>amd64-.*netbsd.*</target>
+  </targetset>
+
+  <!-- x86_64 OpenBSD -->
+  <targetset canonical="x86_64-openbsd">
+    <target>x86_64-openbsd</target>
+    <target>x86_64-.*openbsd.*</target>
+    <target>amd64-.*openbsd.*</target>
+  </targetset>
+
 <!-- Cross Ports -->
 <!-- *********** -->
 


[FILE:626:patches/patch-src_gprbuild-post__compile.adb]
--- src/gprbuild-post_compile.adb.orig	2018-05-25 06:23:18 UTC
+++ src/gprbuild-post_compile.adb
@@ -1890,11 +1890,7 @@ package body Gprbuild.Post_Compile is
                      end if;
 
                      if not OK then
-                        Error_Msg
-                          (Msg           => "unknown object file " &
-                                             Name_Buffer (1 .. Name_Len),
-                           Flag_Location => Library_Options.Location);
-                        Success := False;
+                        null;
                      end if;
 
                      List := Elem.Next;


[FILE:2281:patches/patch-src_gprlib.adb]
--- src/gprlib.adb.orig	2018-05-25 06:23:18 UTC
+++ src/gprlib.adb
@@ -271,6 +271,11 @@ procedure Gprlib is
 
    Separate_Run_Path_Options     : Boolean := False;
 
+   --  If -R is passed through the library options for the linker, it will
+   --  prevent the implemented libraries portion of the rpath switch from
+   --  being built, even if the linker is capable of supporting rpath.
+   Rpath_Disabled                : Boolean := False;
+
    Rpath_Origin                  : String_Access := null;
 
    Rpath                         : String_Vectors.Vector;
@@ -720,7 +725,7 @@ procedure Gprlib is
 
       for Dir of Imported_Library_Directories loop
          Library_Switches_Table.Append ("-L" & Dir);
-         if Path_Option /= null then
+         if not Rpath_Disabled and then Path_Option /= null then
             Add_Rpath (Dir);
          end if;
       end loop;
@@ -1468,9 +1473,7 @@ procedure Gprlib is
                if Is_Regular_File (Object_Path) then
                   Object_Files.Append (Object_Path);
                else
-                  Fail_Program
-                    (null,
-                     "unknown object file """ & Object_Path & """");
+                  Put_Line ("WARNING: unknown object '" & Object_Path & "'");
                end if;
             end;
          end loop;
@@ -1872,7 +1875,11 @@ procedure Gprlib is
                   Use_GNAT_Lib := False;
                end if;
 
-               Library_Options_Table.Append (Line (1 .. Last));
+               if Line (1 .. Last) = "-R" then
+                  Rpath_Disabled := True;
+               else
+                  Library_Options_Table.Append (Line (1 .. Last));
+               end if;
 
             when Gprexch.Library_Rpath_Options =>
                Library_Rpath_Options_Table.Append (Line (1 .. Last));
@@ -2002,10 +2009,10 @@ procedure Gprlib is
 
                      Libgnat :=
                        new String'
-                         ("-lgnat-" & Line (6 .. Last));
+                         ("-lgnat-" & Line (6));
                      Libgnarl :=
                        new String'
-                         ("-lgnarl-" & Line (6 .. Last));
+                         ("-lgnarl-" & Line (6));
                   end if;
 
                else


[FILE:2561:files/Makefile.BSD]
.PATH:		../src
.PATH:		../gpr/src

STATIC_FLAGS=	-gnat12 -gnaty -gnatQ -O2 -gnatpn -gnatws -g1

PREFIX?=	/usr/local
GPRLIB_INC=	-I${PREFIX}/include/xmlada -I../gpr/src
LOOK=		-aL${PREFIX}/lib/xmlada/static -aI${PREFIX}/include/xmlada

libgpr_csrc=	gpr_imports.c

LARGS=		 ${libgpr_csrc:S/^/-largs /:.c=.o} \
		-largs ${PREFIX}/lib/xmlada/static/libxmlada_dom.a \
		-largs ${PREFIX}/lib/xmlada/static/libxmlada_input_sources.a \
		-largs ${PREFIX}/lib/xmlada/static/libxmlada_sax.a \
		-largs ${PREFIX}/lib/xmlada/static/libxmlada_schema.a \
		-largs ${PREFIX}/lib/xmlada/static/libxmlada_unicode.a

APPS=		gprclean/gprclean-main.adb \
		gprconfig/gprconfig-main.adb \
		gprbuild/gprbuild-main.adb \
		gprbind/gprbind.adb \
		gprlib/gprlib.adb \
		gprinstall/gprinstall-main.adb \
		gprslave/gprslave.adb \
		gprname/gprname-main.adb \
		gprls/gprls-main.adb

all:		${APPS:H}

gprclean: gprclean-main.adb ${libgpr_csrc:.c=.o}
	gnatmake -o ${.TARGET} -j${PROCESSORS} \
		${STATIC_FLAGS} ${GPRLIB_INC} ${LOOK} \
		${.ALLSRC:M*adb} ${LARGS}

.for app in ${APPS:Ngprclean*}
${app:H}: gprclean ${app:T} ${libgpr_csrc:.c=.o}
	gnatmake -o ${.TARGET} ${STATIC_FLAGS} ${GPRLIB_INC} ${LOOK} \
		${.ALLSRC:M*adb} ${LARGS}
.endfor

clean:
	rm -f *.o *.ali b~* ${APP:H}

gen-docs:
	${MAKE} -e -C ${.CURDIR:H}/doc html txt

install:
	mkdir -p ${DESTDIR}${PREFIX}/bin \
		${DESTDIR}${PREFIX}/libexec/gprbuild \
		${DESTDIR}${PREFIX}/share/gpr \
		${DESTDIR}${PREFIX}/share/gprconfig
	${BSD_INSTALL_PROGRAM} \
		${.CURDIR}/gprclean \
		${.CURDIR}/gprinstall \
		${.CURDIR}/gprconfig \
		${.CURDIR}/gprslave \
		${.CURDIR}/gprls \
		${.CURDIR}/gprname \
		${.CURDIR}/gprbuild \
			${DESTDIR}${PREFIX}/bin
	${BSD_INSTALL_PROGRAM} \
		${.CURDIR}/gprbind \
		${.CURDIR}/gprlib \
			${DESTDIR}${PREFIX}/libexec/gprbuild
	${BSD_INSTALL_DATA} \
		${.CURDIR}/../share/_default.gpr \
			${DESTDIR}${PREFIX}/share/gpr
	${BSD_INSTALL_DATA} \
		${.CURDIR}/../share/gprconfig/gprconfig.xsd \
			${DESTDIR}${PREFIX}/share/gprconfig
.for X in asm baselined c clean compilers cpp cross fallback_targets \
	fortran gnat linker nocompiler targetset 0_default
	${BSD_INSTALL_DATA} \
		${.CURDIR}/../share/gprconfig/${X}.xml \
			${DESTDIR}${PREFIX}/share/gprconfig
.endfor

install-docs:
	mkdir -p ${DESTDIR}${PREFIX}/share/doc/gprbuild/txt
	${BSD_INSTALL_DATA} ${.CURDIR}/../doc/txt/gprbuild_ug.txt \
		${DESTDIR}${PREFIX}/share/doc/gprbuild/txt
	rm -rf ${.CURDIR}/../doc/html/_sources
	rm -f ${.CURDIR}/../doc/html/.buildinfo
	cp -a ${.CURDIR}/../doc/html ${DESTDIR}${PREFIX}/share/doc/gprbuild

