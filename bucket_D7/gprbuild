# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gprbuild
VERSION=		23.0.0
REVISION=		3
EPOCH=			1
KEYWORDS=		devel ada
VARIANTS=		standard
SDESC[standard]=	Adacore multi-language software build tool
HOMEPAGE=		https://docs.adacore.com/live/wave/gprbuild/html/gprbuild_ug/gprbuild_ug.html
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main kbase xmlada
SITES[main]=		GITHUB/AdaCore:gprbuild:67cc535
SITES[kbase]=		GITHUB/AdaCore:gprconfig_kb:v23.0.0:gprconfig_kbase
SITES[xmlada]=		GITHUB/AdaCore:xmlada:v23.0.0
DISTFILE[1]=		generated:main
DISTFILE[2]=		generated:xmlada
DISTFILE[3]=		generated:kbase
DF_INDEX=		1 2 3
SPKGS[standard]=	complete
			primary
			dev
			gprlib
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		xmlada:dev:standard
BUILDRUN_DEPENDS=	xmlada:primary:standard

USES=			gmake

LICENSE=		GPLv3+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/gprbuild.ads
LICENSE_SCHEME=		solo

BUILD_TARGET=		all libgpr.build
MAKE_ARGS=		prefix={{STAGEDIR}}{{PREFIX}}
			ENABLE_SHARED=yes
			BUILD=production
			PROCESSORS={{MAKE_JOBS_NUMBER}}
			TARGET={{CONFIGURE_TARGET}}

INSTALL_TARGET=		install libgpr.install
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		23.0.0
PLIST_SUB=		JQUERY=3.6.0
			UNDERSCORE=1.13.1

post-install:
	${RM} ${STAGEDIR}${PREFIX}/doinstall
	${RM} -r ${STAGEDIR}${PREFIX}/share/gpr/manifests
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/libexec/gprbuild/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/gpr/relocatable/gpr/libgpr.so

do-configure:
	# create bootstrap version of gprbuild
	${MKDIR} ${WRKDIR}/bootstrap_construction
	(cd ${WRKDIR}/bootstrap_construction && ${WRKSRC}/bootstrap.sh \
	  --with-xmlada=${WRKDIR}/xmlada-23.0.0 \
	  --with-kb=${WRKSRC}/gprconfig_kbase \
	  --srcdir=${WRKSRC} \
	  --prefix=${WRKDIR}/bootstrap)
	# establish setup variables
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS} setup)

pre-configure:
	${RM} ${WRKSRC}/gprconfig_kbase/db/*.orig
	${FIND} ${WRKSRC}/examples -name '.cvsignore' -delete
	${REINPLACE_CMD} -e 's|"-gnatwe", ||' ${WRKSRC}/gprbuild.gpr
	${REINPLACE_CMD} -e 's|make -C|gmake -C|' ${WRKSRC}/Makefile
	${REINPLACE_CMD} -e 's|%%SOVERSION%%|23.0.0|' ${WRKSRC}/gpr/gpr.gpr

[FILE:532:descriptions/desc.primary]
GPRbuild is an advanced software tool designed to help automate the
construction of multi-language systems.  It removes the complexity from
multi-language development by allowing developers to quickly and easily
compile and link software written in a combination of languages including
Ada, Assembler, C, C++, and Fortran.  Easily extendable by users to cover
new toolchains and languages it is primarily aimed at projects of all
sizes organized into subsystems and libraries and is particularly well
suited for compiled languages.


[FILE:190:descriptions/desc.gprlib]
GPRbuild is an advanced software tool designed to help automate the
construction of multi-language systems.

This package contains a standalone library to accomplish the same
functionality.


[FILE:330:distinfo]
1ddbe1c9edb41c4bd77a43b04b3f4cc7d3deb07b24d9b80c7cd7e1c1a115f0bc       959076 AdaCore-gprbuild-67cc535.tar.gz
66245a68f2e391c8dc8dc50d6d5f109eb3b371e261d095d2002dff3927dd5253      1053370 AdaCore-xmlada-23.0.0.tar.gz
182d9108c91390ddd67c841e45a3fc9dd23a94b33d4a1f05ed2788c1fb9b7dd2        42132 AdaCore-gprconfig_kb-23.0.0.tar.gz


[FILE:1240:manifests/plist.primary]
bin/
 gprbuild
 gprclean
 gprconfig
 gprinstall
 gprls
 gprname
 gprslave
libexec/gprbuild/
 gprbind
 gprlib
share/gpr/_default.gpr
share/gprconfig/
 0_default.xml
 aamp.xml
 aamp_compilers.xml
 aarch64-vx7.xml
 aarch64-vx7r2.xml
 arm-vx6.xml
 arm-vx7.xml
 arm-vx7r2.xml
 asis.xml
 asm.xml
 baselined.xml
 bin_img.xml
 c.xml
 clean.xml
 compilers-arm-vx7.xml
 compilers-asis.xml
 compilers-baselined.xml
 compilers-e500v2-vx6.xml
 compilers-e500v2-vx653.xml
 compilers-e500v2-vx7.xml
 compilers-e500v2-vx7r2.xml
 compilers-ppc-vx653.xml
 compilers-ppc-vx7.xml
 compilers-ppc-vx7r2.xml
 compilers-ppc64-vx7.xml
 compilers-ppc64-vx7r2.xml
 compilers-vxworks.xml
 compilers-x86-vx7.xml
 compilers-x86_64-vx7.xml
 compilers.xml
 cpp.xml
 cross.xml
 e500v2-vx6.xml
 e500v2-vx653.xml
 e500v2-vx7.xml
 e500v2-vx7r2.xml
 env.ent
 fallback_targets.xml
 fortran.xml
 gnat.xml
 gprconfig.xsd
 linker.xml
 nocompiler.xml
 ppc-vx6.xml
 ppc-vx653.xml
 ppc-vx7.xml
 ppc-vx7r2.xml
 ppc64-vx7.xml
 ppc64-vx7r2.xml
 shortcuts.ent
 targetset.xml
 tricore-compilers.xml
 tricore-configuration.xml
 tricore-target.xml
 vx6.ent
 vx653.ent
 vx7.ent
 vxworks.ent
 vxworks.xml
 windres.xml
 x86-vx6.xml
 x86-vx7.xml
 x86-vx7r2.xml
 x86_64-vx7.xml
 x86_64-vx7r2.xml


[FILE:6678:manifests/plist.dev]
include/gpr/gpr.relocatable/
 gpr-ali.adb
 gpr-ali.ads
 gpr-attr-pm.adb
 gpr-attr-pm.ads
 gpr-attr.adb
 gpr-attr.ads
 gpr-com.ads
 gpr-compilation-process-waiter.adb
 gpr-compilation-process-waiter.ads
 gpr-compilation-process.adb
 gpr-compilation-process.ads
 gpr-compilation-protocol.adb
 gpr-compilation-protocol.ads
 gpr-compilation-slave.adb
 gpr-compilation-slave.ads
 gpr-compilation-sync.adb
 gpr-compilation-sync.ads
 gpr-compilation.adb
 gpr-compilation.ads
 gpr-conf.adb
 gpr-conf.ads
 gpr-cset.adb
 gpr-cset.ads
 gpr-debug.adb
 gpr-debug.ads
 gpr-dect.adb
 gpr-dect.ads
 gpr-env.adb
 gpr-env.ads
 gpr-err-scanner.adb
 gpr-err.adb
 gpr-err.ads
 gpr-erroutc.adb
 gpr-erroutc.ads
 gpr-ext.adb
 gpr-ext.ads
 gpr-jobserver.adb
 gpr-jobserver.ads
 gpr-knowledge.adb
 gpr-knowledge.ads
 gpr-names.adb
 gpr-names.ads
 gpr-nmsc.adb
 gpr-nmsc.ads
 gpr-opt.ads
 gpr-osint.adb
 gpr-osint.ads
 gpr-output.adb
 gpr-output.ads
 gpr-part.adb
 gpr-part.ads
 gpr-pp.adb
 gpr-pp.ads
 gpr-proc.adb
 gpr-proc.ads
 gpr-scans.adb
 gpr-scans.ads
 gpr-script.adb
 gpr-script.ads
 gpr-sdefault.adb
 gpr-sdefault.ads
 gpr-sinput.adb
 gpr-sinput.ads
 gpr-snames.adb
 gpr-snames.ads
 gpr-strt.adb
 gpr-strt.ads
 gpr-tempdir.adb
 gpr-tempdir.ads
 gpr-tree.adb
 gpr-tree.ads
 gpr-util-aux.adb
 gpr-util-aux.ads
 gpr-util-knowledge.adb
 gpr-util-put_resource_usage__unix.adb
 gpr-util.adb
 gpr-util.ads
 gpr-version.adb
 gpr-version.ads
 gpr.adb
 gpr.ads
 gpr_build_util.adb
 gpr_build_util.ads
 gpr_imports.c
include/gpr/gpr.static/
 gpr-ali.adb
 gpr-ali.ads
 gpr-attr-pm.adb
 gpr-attr-pm.ads
 gpr-attr.adb
 gpr-attr.ads
 gpr-com.ads
 gpr-compilation-process-waiter.adb
 gpr-compilation-process-waiter.ads
 gpr-compilation-process.adb
 gpr-compilation-process.ads
 gpr-compilation-protocol.adb
 gpr-compilation-protocol.ads
 gpr-compilation-slave.adb
 gpr-compilation-slave.ads
 gpr-compilation-sync.adb
 gpr-compilation-sync.ads
 gpr-compilation.adb
 gpr-compilation.ads
 gpr-conf.adb
 gpr-conf.ads
 gpr-cset.adb
 gpr-cset.ads
 gpr-debug.adb
 gpr-debug.ads
 gpr-dect.adb
 gpr-dect.ads
 gpr-env.adb
 gpr-env.ads
 gpr-err-scanner.adb
 gpr-err.adb
 gpr-err.ads
 gpr-erroutc.adb
 gpr-erroutc.ads
 gpr-ext.adb
 gpr-ext.ads
 gpr-jobserver.adb
 gpr-jobserver.ads
 gpr-knowledge.adb
 gpr-knowledge.ads
 gpr-names.adb
 gpr-names.ads
 gpr-nmsc.adb
 gpr-nmsc.ads
 gpr-opt.ads
 gpr-osint.adb
 gpr-osint.ads
 gpr-output.adb
 gpr-output.ads
 gpr-part.adb
 gpr-part.ads
 gpr-pp.adb
 gpr-pp.ads
 gpr-proc.adb
 gpr-proc.ads
 gpr-scans.adb
 gpr-scans.ads
 gpr-script.adb
 gpr-script.ads
 gpr-sdefault.adb
 gpr-sdefault.ads
 gpr-sinput.adb
 gpr-sinput.ads
 gpr-snames.adb
 gpr-snames.ads
 gpr-strt.adb
 gpr-strt.ads
 gpr-tempdir.adb
 gpr-tempdir.ads
 gpr-tree.adb
 gpr-tree.ads
 gpr-util-aux.adb
 gpr-util-aux.ads
 gpr-util-knowledge.adb
 gpr-util-put_resource_usage__unix.adb
 gpr-util.adb
 gpr-util.ads
 gpr-version.adb
 gpr-version.ads
 gpr.adb
 gpr.ads
 gpr_build_util.adb
 gpr_build_util.ads
 gpr_imports.c
include/gpr/gpr.static-pic/
 gpr-ali.adb
 gpr-ali.ads
 gpr-attr-pm.adb
 gpr-attr-pm.ads
 gpr-attr.adb
 gpr-attr.ads
 gpr-com.ads
 gpr-compilation-process-waiter.adb
 gpr-compilation-process-waiter.ads
 gpr-compilation-process.adb
 gpr-compilation-process.ads
 gpr-compilation-protocol.adb
 gpr-compilation-protocol.ads
 gpr-compilation-slave.adb
 gpr-compilation-slave.ads
 gpr-compilation-sync.adb
 gpr-compilation-sync.ads
 gpr-compilation.adb
 gpr-compilation.ads
 gpr-conf.adb
 gpr-conf.ads
 gpr-cset.adb
 gpr-cset.ads
 gpr-debug.adb
 gpr-debug.ads
 gpr-dect.adb
 gpr-dect.ads
 gpr-env.adb
 gpr-env.ads
 gpr-err-scanner.adb
 gpr-err.adb
 gpr-err.ads
 gpr-erroutc.adb
 gpr-erroutc.ads
 gpr-ext.adb
 gpr-ext.ads
 gpr-jobserver.adb
 gpr-jobserver.ads
 gpr-knowledge.adb
 gpr-knowledge.ads
 gpr-names.adb
 gpr-names.ads
 gpr-nmsc.adb
 gpr-nmsc.ads
 gpr-opt.ads
 gpr-osint.adb
 gpr-osint.ads
 gpr-output.adb
 gpr-output.ads
 gpr-part.adb
 gpr-part.ads
 gpr-pp.adb
 gpr-pp.ads
 gpr-proc.adb
 gpr-proc.ads
 gpr-scans.adb
 gpr-scans.ads
 gpr-script.adb
 gpr-script.ads
 gpr-sdefault.adb
 gpr-sdefault.ads
 gpr-sinput.adb
 gpr-sinput.ads
 gpr-snames.adb
 gpr-snames.ads
 gpr-strt.adb
 gpr-strt.ads
 gpr-tempdir.adb
 gpr-tempdir.ads
 gpr-tree.adb
 gpr-tree.ads
 gpr-util-aux.adb
 gpr-util-aux.ads
 gpr-util-knowledge.adb
 gpr-util-put_resource_usage__unix.adb
 gpr-util.adb
 gpr-util.ads
 gpr-version.adb
 gpr-version.ads
 gpr.adb
 gpr.ads
 gpr_build_util.adb
 gpr_build_util.ads
 gpr_imports.c
lib/libgpr.so
lib/gpr/relocatable/gpr/
 gpr-ali.ali
 gpr-attr-pm.ali
 gpr-attr.ali
 gpr-com.ali
 gpr-compilation-process-waiter.ali
 gpr-compilation-process.ali
 gpr-compilation-protocol.ali
 gpr-compilation-slave.ali
 gpr-compilation-sync.ali
 gpr-compilation.ali
 gpr-conf.ali
 gpr-cset.ali
 gpr-debug.ali
 gpr-dect.ali
 gpr-env.ali
 gpr-err.ali
 gpr-erroutc.ali
 gpr-ext.ali
 gpr-jobserver.ali
 gpr-knowledge.ali
 gpr-names.ali
 gpr-nmsc.ali
 gpr-opt.ali
 gpr-osint.ali
 gpr-output.ali
 gpr-part.ali
 gpr-pp.ali
 gpr-proc.ali
 gpr-scans.ali
 gpr-script.ali
 gpr-sdefault.ali
 gpr-sinput.ali
 gpr-snames.ali
 gpr-strt.ali
 gpr-tempdir.ali
 gpr-tree.ali
 gpr-util-aux.ali
 gpr-util.ali
 gpr-version.ali
 gpr.ali
 gpr_build_util.ali
 libgpr.so
lib/gpr/static-pic/gpr/
 gpr-ali.ali
 gpr-attr-pm.ali
 gpr-attr.ali
 gpr-com.ali
 gpr-compilation-process-waiter.ali
 gpr-compilation-process.ali
 gpr-compilation-protocol.ali
 gpr-compilation-slave.ali
 gpr-compilation-sync.ali
 gpr-compilation.ali
 gpr-conf.ali
 gpr-cset.ali
 gpr-debug.ali
 gpr-dect.ali
 gpr-env.ali
 gpr-err.ali
 gpr-erroutc.ali
 gpr-ext.ali
 gpr-jobserver.ali
 gpr-knowledge.ali
 gpr-names.ali
 gpr-nmsc.ali
 gpr-opt.ali
 gpr-osint.ali
 gpr-output.ali
 gpr-part.ali
 gpr-pp.ali
 gpr-proc.ali
 gpr-scans.ali
 gpr-script.ali
 gpr-sdefault.ali
 gpr-sinput.ali
 gpr-snames.ali
 gpr-strt.ali
 gpr-tempdir.ali
 gpr-tree.ali
 gpr-util-aux.ali
 gpr-util.ali
 gpr-version.ali
 gpr.ali
 gpr_build_util.ali
 libgpr.a
lib/gpr/static/gpr/
 gpr-ali.ali
 gpr-attr-pm.ali
 gpr-attr.ali
 gpr-com.ali
 gpr-compilation-process-waiter.ali
 gpr-compilation-process.ali
 gpr-compilation-protocol.ali
 gpr-compilation-slave.ali
 gpr-compilation-sync.ali
 gpr-compilation.ali
 gpr-conf.ali
 gpr-cset.ali
 gpr-debug.ali
 gpr-dect.ali
 gpr-env.ali
 gpr-err.ali
 gpr-erroutc.ali
 gpr-ext.ali
 gpr-jobserver.ali
 gpr-knowledge.ali
 gpr-names.ali
 gpr-nmsc.ali
 gpr-opt.ali
 gpr-osint.ali
 gpr-output.ali
 gpr-part.ali
 gpr-pp.ali
 gpr-proc.ali
 gpr-scans.ali
 gpr-script.ali
 gpr-sdefault.ali
 gpr-sinput.ali
 gpr-snames.ali
 gpr-strt.ali
 gpr-tempdir.ali
 gpr-tree.ali
 gpr-util-aux.ali
 gpr-util.ali
 gpr-version.ali
 gpr.ali
 gpr_build_util.ali
 libgpr.a
share/gpr/gpr.gpr


[FILE:76:manifests/plist.gprlib]
lib/libgpr.so.%%SOVERSION%%
lib/gpr/relocatable/gpr/libgpr.so.%%SOVERSION%%


[FILE:2207:manifests/plist.examples]
share/examples/gprbuild/Makefile
share/examples/gprbuild/ada_cpp/
 Makefile
 animals.gpr
 except.gpr
share/examples/gprbuild/ada_cpp/src1/
 ada_main.adb
 call_cpp.adb
 call_cpp.ads
 cpp_main.cpp
 cpp_routine.cpp
 cpp_routine.h
share/examples/gprbuild/ada_cpp/src2/
 animals.adb
 animals.ads
 animals.h
 animals_c.cc
 animals_interfaces.ads
 main.adb
share/examples/gprbuild/ada_f77/
 Makefile
 ess.f
 fm.gpr
 ft.gpr
share/examples/gprbuild/ada_f77/src/
 fm-interfac.adb
 fm-interfac.ads
 fm-locks.adb
 fm-locks.ads
 fm-protected_queue.adb
 fm-protected_queue.ads
 fm-system_dependant.adb
 fm-system_dependant.ads
 fm-tuple_manager.adb
 fm-tuple_manager.ads
 fm-types.ads
 fm.adb
 fm.ads
share/examples/gprbuild/extended_projects/
 Makefile
 new_ada_main.gpr
 new_common_subsystem.gpr
share/examples/gprbuild/extended_projects/new_ada_src/ada_main.adb
share/examples/gprbuild/extended_projects/new_util_src/
 c_lib.ads
 lib2.c
share/examples/gprbuild/first_steps/
 Makefile
 ada_main.gpr
 c_main.gpr
share/examples/gprbuild/first_steps/ada_src/ada_main.adb
share/examples/gprbuild/first_steps/c_src/c_main.c
share/examples/gprbuild/first_steps/util_src/
 ada_lib.adb
 ada_lib.ads
 c_lib.ads
 lib.c
 lib.h
share/examples/gprbuild/libraries/
 Makefile
 ada_main.adb
 c_main.c
 dynamic_lib.gpr
 extern_lib.gpr
 main0.gpr
 main1.gpr
 main2.gpr
 main3.gpr
 main4.gpr
 sa_lib.gpr
 static_lib.gpr
share/examples/gprbuild/libraries/lib_src/
 ada_lib.adb
 ada_lib.ads
 c_lib.ads
 lib.c
 lib.h
share/examples/gprbuild/matrix/
 Makefile
 matrix.gpr
share/examples/gprbuild/matrix/src/
 initmat.c
 main.adb
 multmat.f
share/examples/gprbuild/namings/
 Makefile
 _print2.ada
 _print3.adb
 main.adb
 my_routine.c1
 my_routine2.c1
 namings.gpr
 util-case1.ada
 util-case2.ada
 util.ads
share/examples/gprbuild/namings/src1/main.adb
share/examples/gprbuild/scenarios/
 Makefile
 general_lib.gpr
 main.gpr
share/examples/gprbuild/subsystems/
 Makefile
 ada_main.gpr
 attribute_sharing.gpr
 c_main.gpr
 common_subsystem.gpr
share/examples/gprbuild/subsystems/ada_src/ada_main.adb
share/examples/gprbuild/subsystems/c_src/c_main.c
share/examples/gprbuild/subsystems/util_src/
 ada_lib.adb
 ada_lib.ads
 c_lib.ads
 lib.c
 lib.h


[FILE:455:patches/patch-bootstrap.sh]
--- bootstrap.sh.orig	2023-07-13 10:29:21 UTC
+++ bootstrap.sh
@@ -1,6 +1,8 @@
 #!/bin/sh
 # bootstrap.sh - a simple bootstrap for building gprbuild with xmlada
 
+set -x
+
 progname=bootstrap
 
 prefix=/usr/local
@@ -96,7 +98,7 @@ if [ "$UName" = "CYGWI" ] || [ "$UName"
 then
 	cp ${PutUsage}__null.adb ${PutUsage}.adb
 else
-	ln -s $PWD/${PutUsage}__unix.adb ${PutUsage}.adb
+	ln -s $srcdir/${PutUsage}__unix.adb $srcdir/${PutUsage}.adb
 fi
 
 # Build


[FILE:646:patches/patch-gpr_gpr.gpr]
--- gpr/gpr.gpr.orig	2023-07-13 10:29:21 UTC
+++ gpr/gpr.gpr
@@ -16,7 +16,7 @@
 --                                                                          --
 ------------------------------------------------------------------------------
 
-with "xmlada";
+with "xmlada_schema";
 
 library project GPR is
 
@@ -42,6 +42,9 @@ library project GPR is
    for Object_Dir use "libobj/" & Bld & "/" & Gnat_Lib_Type;
    for Library_Dir use "lib/" & Bld & "/" & Gnat_Lib_Type;
 
+   for Library_Version use "libgpr.so.%%SOVERSION%%";
+   for Library_Options use Xmlada_schema'Library_options;
+
    --------------
    -- Compiler --
    --------------


[FILE:2282:patches/patch-gpr_src_gpr-compilation-protocol.adb]
Revert to older code compatible with gcc

--- gpr/src/gpr-compilation-protocol.adb.orig	2023-07-13 10:29:21 UTC
+++ gpr/src/gpr-compilation-protocol.adb
@@ -22,7 +22,7 @@
 --                                                                          --
 ------------------------------------------------------------------------------
 
-with Ada.Calendar.Conversions;   use Ada.Calendar;
+with Ada.Calendar.Time_Zones;    use Ada.Calendar;
 with Ada.Calendar.Formatting;    use Ada.Calendar.Formatting;
 with Ada.Characters.Handling;
 with Ada.Directories;            use Ada.Directories;
@@ -971,18 +971,29 @@ package body GPR.Compilation.Protocol is
    procedure Set_File_Stamp
      (Path_Name : String; Time_Stamp : Time_Stamp_Type)
    is
-      function TS (First, Last : Positive) return Integer is
-        (Integer'Value (String (Time_Stamp (First .. Last))));
-      --  Converts substring from Time_Stamp to Integer
+      use type Time_Zones.Time_Offset;
+
+      TS : constant String (Time_Stamp_Type'Range) := String (Time_Stamp);
+
+      T  : constant Time :=
+             Time_Of (Year      => Year_Number'Value (TS (1 .. 4)),
+                      Month     => Month_Number'Value (TS (5 .. 6)),
+                      Day       => Day_Number'Value (TS (7 .. 8)),
+                      Hour      => Hour_Number'Value (TS (9 .. 10)),
+                      Minute    => Minute_Number'Value (TS (11 .. 12)),
+                      Second    => Second_Number'Value (TS (13 .. 14)),
+                      Time_Zone => -Time_Zones.UTC_Time_Offset);
+      --  Time_Zone is negative to translate the UTC Time_Stamp to local time
    begin
       Set_File_Last_Modify_Time_Stamp
         (Path_Name,
-         To_Ada
-           (time_t
-              (Conversions.To_Unix_Time
-                 (Time_Of
-                    (TS (1, 4), TS (5, 6), TS (7, 8),
-                     TS (9, 10), TS (11, 12), TS (13, 14))))));
+         GM_Time_Of
+           (Year   => Formatting.Year (T),
+            Month  => Formatting.Month (T),
+            Day    => Formatting.Day (T),
+            Hour   => Formatting.Hour (T),
+            Minute => Formatting.Minute (T),
+            Second => Formatting.Second (T)));
    end Set_File_Stamp;
 
    -----------------------


[FILE:1517:patches/patch-gprconfig__kbase_db_compilers.xml]
--- gprconfig_kbase/db/compilers.xml.orig	2022-09-22 17:09:05 UTC
+++ gprconfig_kbase/db/compilers.xml
@@ -180,21 +180,19 @@
     </version>
     <languages>Ada</languages>
     <variable name="gcc_version">
-      <external>${PREFIX}gcc -v</external>
+      <external>ada -v</external>
       <grep regexp="^[-\w]*gcc \S+ (\S+)" group="1"></grep>
     </variable>
     <variable name="gcc_version_major">
-      <external>${PREFIX}gcc -v</external>
+      <external>ada -v</external>
       <grep regexp="^[-\w]*gcc \S+ (\d+)\.\d+\.\d+" group="1"></grep>
     </variable>
     <runtimes default="default,kernel,native">
-       <directory group="default" >\.\./lib(32|64)?/gcc(-lib)?/$TARGET/($gcc_version|$gcc_version_major)/adalib/</directory>
-       <directory group="default" contents="^rts-">\.\./lib(32|64)?/gcc(-lib)?/$TARGET/($gcc_version|$gcc_version_major)/ada_object_path</directory>
-       <directory group="4" >\.\./lib(32|64)?/gcc(-lib)?/$TARGET/($gcc_version|$gcc_version_major)/rts-(.*)/adalib/</directory>
-       <directory group="2" >\.\./$TARGET/lib(32|64)?/gnat/(.*)/adalib/</directory>
+       <directory group="default">\.\./lib/gcc/$TARGET/$gcc_version/adalib</directory>
+       <directory group="0">/raven/toolchain/ravensys-gcc/lib/gcc/$TARGET/$gcc_version/adalib</directory>
     </runtimes>
     <target>
-      <external>${PREFIX}gcc -dumpmachine</external>
+      <external>ada -dumpmachine</external>
       <grep regexp="[^\r\n]+"></grep>
     </target>
   </compiler_description>


[FILE:492:patches/patch-gprconfig__kbase_db_gnat.xml]
--- gprconfig_kbase/db/gnat.xml.orig	2022-09-22 17:09:05 UTC
+++ gprconfig_kbase/db/gnat.xml
@@ -10,7 +10,7 @@
    &filter_gnat;
    <config>
    package Compiler is
-      for Driver                   ("Ada") use "${PATH(ada)}${PREFIX(ada)}gcc";
+      for Driver                   ("Ada") use "${PATH(ada)}ada";
       for Language_Kind            ("Ada") use "unit_based";
       for Dependency_Kind          ("Ada") use "ALI_File";
       for Leading_Required_Switches        ("Ada") use


[FILE:2303:patches/patch-gprconfig__kbase_db_linker.xml]
--- gprconfig_kbase/db/linker.xml.orig	2022-09-22 17:09:05 UTC
+++ gprconfig_kbase/db/linker.xml
@@ -1127,6 +1127,7 @@
        <target name="^.*openbsd.*$" />
        <target name="^.*netbsd.*$" />
        <target name="^.*dragonfly.*$" />
+       <target name="^.*midnightbsd.*$" />
        <target name="^.*qnx[0-9]*$" />
     </targets>
     <config>
@@ -1188,6 +1189,7 @@
        <target name="^.*openbsd.*$" />
        <target name="^.*netbsd.*$" />
        <target name="^.*dragonfly.*$" />
+       <target name="^.*midnightbsd.*$" />
     </targets>
     <config>
    for Run_Path_Option  use ("-Wl,-z,origin,-rpath,");
@@ -1200,13 +1202,34 @@
     </config>
   </configuration>
 
+  <!-- linux and bsd -->
+  <configuration>
+    <compilers>
+       <compiler language="Ada" />
+    </compilers>
+    <targets>
+       <target name="^.*freebsd.*$" />
+       <target name="^.*dragonfly.*$" />
+       <target name="^.*openbsd.*$" />
+       <target name="^.*netbsd.*$" />
+       <target name="^.*midnightbsd.*$" />
+       <target name="^.*linux.*$" />
+    </targets>
+    <config>
+   package Linker is
+      for Required_Switches use
+        Linker'Required_Switches
+        &amp; ("-Wl,-rpath,${RUNTIME_DIR(ada)}adalib");
+   end Linker;
+    </config>
+  </configuration>
+
   <!-- Cross linux, QNX: add rpath-link to the runtime -->
   <configuration>
     <compilers>
        <compiler language="Ada" />
     </compilers>
      <targets>
-       <target name="^.*-linux.*$" />
        <target name="^.*-qnx[0-9]*"/>
      </targets>
     <config>
@@ -1668,6 +1691,7 @@
        <target name="^.*openbsd.*$" />
        <target name="^.*netbsd.*$" />
        <target name="^.*dragonfly.*$" />
+       <target name="^.*midnightbsd.*$" />
        <target name="^.*-qnx[0-9]*"/>
      </targets>
     <config>
@@ -1719,6 +1743,7 @@
        <target name="^.*openbsd.*$" />
        <target name="^.*netbsd.*$" />
        <target name="^.*dragonfly.*$" />
+       <target name="^.*midnightbsd.*$" />
      </targets>
     <config>
    package Linker is
@@ -1758,6 +1783,7 @@
        <target name="^.*openbsd.*$" />
        <target name="^.*netbsd.*$" />
        <target name="^.*dragonfly.*$" />
+       <target name="^.*midnightbsd.*$" />
      </targets>
     <config>
    package Linker is


[FILE:1582:patches/patch-gprconfig__kbase_db_targetset.xml]
--- gprconfig_kbase/db/targetset.xml.orig	2022-09-22 17:09:05 UTC
+++ gprconfig_kbase/db/targetset.xml
@@ -102,9 +102,10 @@
   </targetset>
 
   <!-- x86-solaris -->
-  <targetset canonical="x86-solaris">
-    <target>x86-solaris</target>
-    <target>i.86-(pc-)?solaris.*</target>
+  <targetset canonical="x86_64-solaris">
+    <target>x86_64-solaris</target>
+    <target>x86_64-.*solaris.*</target>
+    <target>i.86-.*solaris.*</target>
   </targetset>
 
   <!-- x86-windows (mingw) -->
@@ -226,6 +227,9 @@
     <target>x86_64-freebsd</target>
     <target>x86_64-.*freebsd.*</target>
     <target>amd64-.*freebsd.*</target>
+    <target>x86_64-midnightbsd</target>
+    <target>x86_64-.*midnightbsd.*</target>
+    <target>amd64-.*midnightbsd.*</target>
   </targetset>
 
   <!-- x86 NetBSD -->
@@ -274,11 +278,23 @@
     <target>riscv64-.*netbsd.*</target>
   </targetset>
 
-  <!-- x86_64 DragonflyBSD -->
+  <!-- x86_64 DragonFly -->
   <targetset canonical="x86_64-dragonfly">
     <target>x86_64-dragonfly</target>
-    <target>x86_64-.*dragonlfy.*</target>
-    <target>amd64-.*dragonfly.*</target>
+    <target>x86_64-.*dragonfly.*</target>
+  </targetset>
+
+  <!-- x86_64 OpenBSD -->
+  <targetset canonical="x86_64-openbsd">
+    <target>x86_64-openbsd</target>
+    <target>x86_64-.*openbsd.*</target>
+    <target>amd64-.*openbsd.*</target>
+  </targetset>
+
+  <!-- x86_64 MidnightBSD -->
+  <targetset canonical="x86_64-midnightbsd">
+    <target>x86_64-.*midnightbsd.*</target>
+    <target>amd64-.*midnightbsd.*</target>
   </targetset>
 
 <!-- Cross Ports -->


[FILE:452:patches/patch-src_gprbuild-link.adb]
--- src/gprbuild-link.adb.orig	2023-07-13 10:29:21 UTC
+++ src/gprbuild-link.adb
@@ -3135,8 +3135,6 @@ package body Gprbuild.Link is
          if Opt.Run_Path_Option
            and then Main_Proj.Config.Run_Path_Option /= No_Name_List
          then
-            Add_Rpath_From_Arguments (Rpaths, Arguments, Main_Proj);
-            Add_Rpath_From_Arguments (Rpaths, Other_Arguments, Main_Proj);
             Add_Run_Path_Options;
          end if;
 


[FILE:1602:patches/patch-src_gprlib.adb]
--- src/gprlib.adb.orig	2023-07-13 10:29:21 UTC
+++ src/gprlib.adb
@@ -721,9 +721,6 @@ procedure Gprlib is
 
       for Dir of Imported_Library_Directories loop
          Library_Switches_Table.Append ("-L" & Dir);
-         if not Path_Option.Is_Empty then
-            Add_Rpath (Dir);
-         end if;
       end loop;
 
       for Libname of Imported_Library_Names loop
@@ -865,12 +862,6 @@ procedure Gprlib is
               Shared_Lib_Suffix.all);
       end if;
 
-      if not Path_Option.Is_Empty then
-         for Path of Library_Rpath_Options_Table loop
-            Add_Rpath (Path);
-         end loop;
-      end if;
-
       if not Path_Option.Is_Empty and then not Rpath.Is_Empty then
          if Separate_Run_Path_Options then
             for J in 1 .. Rpath.Last_Index loop
@@ -1409,7 +1400,7 @@ procedure Gprlib is
             end if;
 
          elsif Partial_Linker_Path = null then
-            Fail_Program (null, "unknown object file """ & Opt & """");
+            Put_Line ("WARNING: unknown object '" & Opt & "'");
          else
             Trailing_PL_Options.Append (Opt);
          end if;
@@ -2250,8 +2241,8 @@ procedure Gprlib is
 
                      Free (Libgnat);
                      Free (Libgnarl);
-                     Libgnat  := new String'("-lgnat-" & Line (6 .. Last));
-                     Libgnarl := new String'("-lgnarl-" & Line (6 .. Last));
+                     Libgnat  := new String'("-lgnat-" & Line (6 .. 7));
+                     Libgnarl := new String'("-lgnarl-" & Line (6 .. 7));
                   end if;
 
                else


[FILE:38:files/special.mk]
PREPEND_PATH=	${WRKDIR}/bootstrap/bin

