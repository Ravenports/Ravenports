# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		harfbuzz
VERSION=		1.6.1
KEYWORDS=		print
VARIANTS=		standard
SDESC[standard]=	OpenType text shaping engine
HOMEPAGE=		http://www.freedesktop.org/wiki/Software/HarfBuzz
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.freedesktop.org/software/harfbuzz/release/
DISTFILE[1]=		harfbuzz-1.6.1.tar.bz2:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	graphite:single:standard

USES=			gmake libtool pkgconfig c++:primary
GNOME_COMPONENTS=	cairo glib introspection

FPC_EQUIVALENT=		print/harfbuzz

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-graphite2
			--with-gobject=yes
			--without-icu

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
PLIST_SUB=		LIBVER=0.10600.1

TEST_TARGET=		check

post-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/share/doc
	${MV} ${STAGEDIR}${PREFIX}/share/gtk-doc/html/harfbuzz \
		${STAGEDIR}${PREFIX}/share/doc
	${RM} -r ${STAGEDIR}${PREFIX}/share/gtk-doc

[FILE:45:descriptions/desc.primary]
HarfBuzz is an OpenType text shaping engine.


[FILE:101:distinfo]
31d33cdb22f3b6623665bfcd263efc897cce1af44dba5f8e2f6fdcf823ae1129      1638550 harfbuzz-1.6.1.tar.bz2


[FILE:671:manifests/plist.primary]
bin/
 hb-ot-shape-closure
 hb-shape
 hb-view
include/harfbuzz/
 hb-blob.h
 hb-buffer.h
 hb-common.h
 hb-deprecated.h
 hb-face.h
 hb-font.h
 hb-ft.h
 hb-glib.h
 hb-gobject-enums.h
 hb-gobject-structs.h
 hb-gobject.h
 hb-graphite2.h
 hb-ot-font.h
 hb-ot-layout.h
 hb-ot-math.h
 hb-ot-shape.h
 hb-ot-tag.h
 hb-ot-var.h
 hb-ot.h
 hb-set.h
 hb-shape-plan.h
 hb-shape.h
 hb-unicode.h
 hb-version.h
 hb.h
lib/girepository-1.0/HarfBuzz-0.0.typelib
lib/
 libharfbuzz-gobject.so
 libharfbuzz-gobject.so.0
 libharfbuzz-gobject.so.%%LIBVER%%
 libharfbuzz.so
 libharfbuzz.so.0
 libharfbuzz.so.%%LIBVER%%
lib/pkgconfig/
 harfbuzz-gobject.pc
 harfbuzz.pc
share/gir-1.0/HarfBuzz-0.0.gir


[FILE:2075:manifests/plist.docs]
share/doc/harfbuzz/
 HarfBuzz.png
 a-clustering-example-for-levels-0-and-1.html
 adding-text-to-the-buffer.html
 annotation-glossary.html
 api-index-0-9-10.html
 api-index-0-9-11.html
 api-index-0-9-2.html
 api-index-0-9-20.html
 api-index-0-9-22.html
 api-index-0-9-28.html
 api-index-0-9-30.html
 api-index-0-9-31.html
 api-index-0-9-38.html
 api-index-0-9-39.html
 api-index-0-9-41.html
 api-index-0-9-42.html
 api-index-0-9-5.html
 api-index-0-9-7.html
 api-index-0-9-8.html
 api-index-1-0-5.html
 api-index-1-1-2.html
 api-index-1-1-3.html
 api-index-1-2-3.html
 api-index-1-3-3.html
 api-index-1-4-2.html
 api-index-1-4-3.html
 api-index-1-5-0.html
 api-index-1-6-0.html
 api-index-full.html
 buffers-language-script-and-direction.html
 building.html
 ch08.html
 clusters.html
 customizing-unicode-functions.html
 deprecated-api-index.html
 fonts-and-faces.html
 harfbuzz-Buffers.html
 harfbuzz-Shaping.html
 harfbuzz-hb-blob.html
 harfbuzz-hb-common.html
 harfbuzz-hb-coretext.html
 harfbuzz-hb-deprecated.html
 harfbuzz-hb-face.html
 harfbuzz-hb-font.html
 harfbuzz-hb-ft.html
 harfbuzz-hb-glib.html
 harfbuzz-hb-gobject.html
 harfbuzz-hb-graphite2.html
 harfbuzz-hb-icu.html
 harfbuzz-hb-ot-font.html
 harfbuzz-hb-ot-layout.html
 harfbuzz-hb-ot-math.html
 harfbuzz-hb-ot-shape.html
 harfbuzz-hb-ot-tag.html
 harfbuzz-hb-ot.html
 harfbuzz-hb-set.html
 harfbuzz-hb-shape-plan.html
 harfbuzz-hb-unicode.html
 harfbuzz-hb-uniscribe.html
 harfbuzz-hb-version.html
 harfbuzz-hb.html
 harfbuzz.devhelp2
 hello-harfbuzz.html
 home.png
 index.html
 install-harfbuzz.html
 left-insensitive.png
 left.png
 level-2.html
 object-tree.html
 plans-and-caching.html
 pt01.html
 pt02.html
 reordering-in-levels-0-and-1.html
 right-insensitive.png
 right.png
 setting-buffer-properties.html
 shaping-and-shape-plans.html
 style.css
 the-distinction-between-levels-0-and-1.html
 up-insensitive.png
 up.png
 using-harfbuzzs-native-opentype-implementation.html
 using-your-own-font-functions.html
 what-about-the-other-scripts.html
 what-is-harfbuzz.html
 why-is-it-called-harfbuzz.html


[FILE:1494:patches/patch-src_hb-set-private.hh]
--- src/hb-set-private.hh.orig	2017-10-22 20:57:33 UTC
+++ src/hb-set-private.hh
@@ -369,7 +369,7 @@ struct hb_set_t
       return *codepoint != INVALID;
     }
 
-    page_map_t map = {major (*codepoint), 0};
+    page_map_t map = {get_major (*codepoint), 0};
     unsigned int i;
     page_map.bfind (&map, &i);
     if (i < page_map.len)
@@ -441,7 +441,7 @@ struct hb_set_t
 
   page_t *page_for_insert (hb_codepoint_t g)
   {
-    page_map_t map = {major (g), pages.len};
+    page_map_t map = {get_major (g), pages.len};
     unsigned int i;
     if (!page_map.bfind (&map, &i))
     {
@@ -456,7 +456,7 @@ struct hb_set_t
   }
   page_t *page_for (hb_codepoint_t g)
   {
-    page_map_t key = {major (g)};
+    page_map_t key = {get_major (g)};
     const page_map_t *found = page_map.bsearch (&key);
     if (found)
       return &pages[found->index];
@@ -464,7 +464,7 @@ struct hb_set_t
   }
   const page_t *page_for (hb_codepoint_t g) const
   {
-    page_map_t key = {major (g)};
+    page_map_t key = {get_major (g)};
     const page_map_t *found = page_map.bsearch (&key);
     if (found)
       return &pages[found->index];
@@ -472,7 +472,7 @@ struct hb_set_t
   }
   page_t &page_at (unsigned int i) { return pages[page_map[i].index]; }
   const page_t &page_at (unsigned int i) const { return pages[page_map[i].index]; }
-  unsigned int major (hb_codepoint_t g) const { return g / PAGE_SIZE; }
+  unsigned int get_major (hb_codepoint_t g) const { return g / PAGE_SIZE; }
 };
 
 

