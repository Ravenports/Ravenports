# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		lld
VERSION=		17.0.4
KEYWORDS=		lang sysutils
VARIANTS=		standard
SDESC[standard]=	Linker from the LLVM project
HOMEPAGE=		http://llvm.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/llvm/llvm-project/releases/download/llvmorg-17.0.4/
			http://llvm.org/releases/17.0.4/
DISTFILE[1]=		lld-17.0.4.src.tar.xz:main
DISTFILE[2]=		libunwind-17.0.4.src.tar.xz:main
DISTFILE[3]=		cmake-17.0.4.src.tar.xz:main
DF_INDEX=		1 2 3
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		llvm:dev:standard
			llvm:tools:standard
BUILDRUN_DEPENDS=	llvm:primary:standard

USES=			cpe cmake c++:primary solaris-funcs zlib:build

DISTNAME=		lld-17.0.4.src

LICENSE=		CUSTOM1:primary
LICENSE_NAME=		CUSTOM1:"University of Illinois/NCSA Open Source License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE.TXT
LICENSE_SCHEME=		solo

CMAKE_BUILD_TYPE=	Release
CPE_PRODUCT=		llvm
CPE_VENDOR=		llvm
SOL_FUNCTIONS=		strnlen:lib/ReaderWriter/MachO/MachONormalizedFileBinaryUtils.h

LDFLAGS=		-lpthread
CMAKE_ARGS=		-DLLVM_COMMON_CMAKE_UTILS={{WRKDIR}}/cmake-17.0.4.src
VAR_OPSYS[sunos]=	VAR1=socket;nsl;

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*
	# remove libunwind header hack
	${RM} -r ${STAGEDIR}${PREFIX}/include/mach-o

pre-configure:
	# statically link zlib
	${RM} ${LOCALBASE}/lib/libz.so
	${MV} ${LOCALBASE}/lib/libz_pic.a ${LOCALBASE}/lib/libz.a

post-extract:
	# issues with 12.0.0 - 14.0.3; might not be necessary in future
	${MV} ${WRKDIR}/libunwind-17.0.4.src/include/mach-o \
		${WRKSRC}/include/

[FILE:308:descriptions/desc.primary]
LLD is a linker from the LLVM project. That is a drop-in replacement for
system linkers and runs much faster than them. It also provides features
that are useful for toolchain developers.

The linker supports ELF (Unix), PE/COFF (Windows), Mach-O (macOS) and
WebAssembly in descending order of completeness.


[FILE:308:distinfo]
47f5da4d28c60d69ab134c028ece0af8a5e18aca940d26a672265a381cafdc50      1505900 lld-17.0.4.src.tar.xz
77414d001c3b309ddf0f200a25e53d2de297d8de00608c28314905f35aacb44f       115104 libunwind-17.0.4.src.tar.xz
1a5cbe4a1fcda56ecdd80f42c3437060a28c97ec31de1748f6ba6aa84948fb0f         8712 cmake-17.0.4.src.tar.xz


[FILE:47:manifests/plist.primary]
bin/
 ld.lld
 ld64.lld
 lld
 lld-link
 wasm-ld


[FILE:393:manifests/plist.dev]
include/lld/Common/
 Args.h
 Arrays.h
 CommonLinkerContext.h
 DWARF.h
 Driver.h
 ErrorHandler.h
 Filesystem.h
 LLVM.h
 Memory.h
 Reproduce.h
 Strings.h
 TargetOptionsCommandFlags.h
 Timer.h
 Version.h
lib/
 liblldCOFF.a
 liblldCommon.a
 liblldELF.a
 liblldMachO.a
 liblldMinGW.a
 liblldWasm.a
lib/cmake/lld/
 LLDConfig.cmake
 LLDConfigVersion.cmake
 LLDTargets-release.cmake
 LLDTargets.cmake


[FILE:503:patches/patch-MachO_ExportTrie.cpp]
--- MachO/ExportTrie.cpp.orig	2023-10-17 06:20:52 UTC
+++ MachO/ExportTrie.cpp
@@ -34,6 +34,22 @@
 //
 //===----------------------------------------------------------------------===//
 
+#ifdef __sun__
+#include <string.h>
+
+extern "C" {
+  static size_t
+  strnlen(const char *s, size_t maxlen)
+  {
+       size_t len;
+       for (len = 0; len < maxlen; len++, s++) {
+               if (!*s) break;
+       }
+       return (len);
+  }
+}
+#endif
+
 #include "ExportTrie.h"
 #include "Symbols.h"
 


[FILE:521:patches/patch-MachO_InputFiles.cpp]
--- MachO/InputFiles.cpp.orig	2023-10-17 06:20:52 UTC
+++ MachO/InputFiles.cpp
@@ -41,6 +41,22 @@
 //
 //===----------------------------------------------------------------------===//
 
+#ifdef __sun__
+#include <string.h>
+
+extern "C" {
+  static size_t
+  strnlen(const char *s, size_t maxlen)
+  {
+       size_t len;
+       for (len = 0; len < maxlen; len++, s++) {
+               if (!*s) break;
+       }
+       return (len);
+  }
+}
+#endif
+
 #include "InputFiles.h"
 #include "Config.h"
 #include "Driver.h"

