# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-tornado
VERSION=		6.0.3
KEYWORDS=		python
VARIANTS=		py27 py38 py37
SDESC[py37]=		Web framework and asynchronous networking (PY 37)
SDESC[py38]=		Web framework and asynchronous networking (PY 38)
SDESC[py27]=		Web framework and asynchronous networking (PY 27)
HOMEPAGE=		http://www.tornadoweb.org/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/t/tornado
DISTFILE[1]=		tornado-6.0.3.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY27=OFF PY38=OFF PY37=ON
VOPTS[py38]=		PY27=OFF PY38=ON PY37=OFF
VOPTS[py27]=		PY27=ON PY38=OFF PY37=OFF

DISTNAME=		tornado-6.0.3

GENERATED=		yes

INVALID_RPATH=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[PY27].USES_ON=				python:py27

[FILE:1571:descriptions/desc.single]
Tornado Web Server
==================

.. image:: https://badges.gitter.im/Join%20Chat.svg
   :alt: Join the chat at https://gitter.im/tornadoweb/tornado
   :target:
https://gitter.im/tornadoweb/tornado?utm_source=badge&utm_medium=badge&utm_
campaign=pr-badge&utm_content=badge

`Tornado <http://www.tornadoweb.org>`_ is a Python web framework and
asynchronous networking library, originally developed at `FriendFeed
<http://friendfeed.com>`_.  By using non-blocking network I/O, Tornado
can scale to tens of thousands of open connections, making it ideal for
`long polling
<http://en.wikipedia.org/wiki/Push_technology#Long_Polling>`_,
`WebSockets <http://en.wikipedia.org/wiki/WebSocket>`_, and other
applications that require a long-lived connection to each user.

Hello, world
------------

Here is a simple "Hello, world" example web app for Tornado:

.. code-block:: python

    import tornado.ioloop
    import tornado.web

    class MainHandler(tornado.web.RequestHandler):
        def get(self):
            self.write("Hello, world")

    def make_app():
        return tornado.web.Application([
            (r"/", MainHandler),
        ])

    if __name__ == "__main__":
        app = make_app()
        app.listen(8888)
        tornado.ioloop.IOLoop.current().start()

This example does not use any of Tornado's asynchronous features; for
that see this `simple chat room
<https://github.com/tornadoweb/tornado/tree/stable/demos/chat>`_.

Documentation
-------------

Documentation and links to additional resources are available at
http://www.tornadoweb.org



[FILE:99:distinfo]
c845db36ba616912074c5b1ee897f8e0124df269468f25e4fe21fe72f6edd7a9       482444 tornado-6.0.3.tar.gz

