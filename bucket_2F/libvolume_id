# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libvolume_id
VERSION=		0.81.1
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Library to provide file system type information
HOMEPAGE=		none
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.marcuscom.com/downloads/
DISTFILE[1]=		libvolume_id-0.81.1.tar.bz2:main
DF_INDEX=		1
SPKGS[std]=		single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			gmake

LICENSE=		GPLv2:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2:stock
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/libvolume_id.h
LICENSE_SCHEME=		solo

MAKE_ENV=		E={{TRUE}}
			RANLIB=ranlib
			AR={{AR}}
			Q=
			prefix={{PREFIX}}

[FILE:173:descriptions/desc.single]
Libvolume_id is a library that provides file system information for a 
given volume device (like file system type, label, etc.). It supports all 
of the major file systems.


[FILE:106:distinfo]
45bb18e80b456499d26a5d2f2fc222be990d256590a7cafc4354f7de36013f09        23399 libvolume_id-0.81.1.tar.bz2


[FILE:94:manifests/plist.single]
include/libvolume_id.h
lib/
 libvolume_id.so
 libvolume_id.so.0
lib/pkgconfig/libvolume_id.pc


[FILE:388:patches/patch-ddf__raid.c]
--- ddf_raid.c.orig	2007-12-27 01:05:32 UTC
+++ ddf_raid.c
@@ -22,9 +22,9 @@
 #include <string.h>
 #include <errno.h>
 #include <ctype.h>
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__DragonFly__) || defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/endian.h>
-#else
+#elif !defined(__APPLE__) && !defined(__sun__)
 #include <byteswap.h>
 #endif /* __FreeBSD__ */
 


[FILE:392:patches/patch-linux__raid.c]
--- linux_raid.c.orig	2007-12-27 01:03:43 UTC
+++ linux_raid.c
@@ -22,9 +22,9 @@
 #include <string.h>
 #include <errno.h>
 #include <ctype.h>
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__DragonFly__) || defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/endian.h>
-#else
+#elif !defined(__APPLE__) && !defined(__sun__)
 #include <byteswap.h>
 #endif /* __FreeBSD__ */
 


[FILE:435:patches/patch-util.c]
--- util.c.orig	2009-03-02 18:17:35 UTC
+++ util.c
@@ -28,9 +28,9 @@
 #include "libvolume_id.h"
 #include "util.h"
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__DragonFly__) || defined(__NetBSD__)
 #include <sys/param.h>
-#if __FreeBSD_version < 800067
+#if __FreeBSD_version < 800067 && __DragonFly_version < 200202 && __NetBSD_Version__ < 599001100
 static size_t strnlen (const char *s, size_t maxlen)
 {
 	size_t i;


[FILE:1217:patches/patch-util.h]
--- util.h.orig	2007-12-27 00:51:05 UTC
+++ util.h
@@ -19,7 +19,7 @@
 #  include <config.h>
 #endif
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__DragonFly__) || defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/endian.h>
 
 #define __BYTE_ORDER            _BYTE_ORDER
@@ -29,6 +29,33 @@
 #define bswap_16                bswap16
 #define bswap_32                bswap32
 #define bswap_64                bswap64
+#elif defined(__APPLE__)
+#include <machine/endian.h>
+#include <libkern/OSByteOrder.h>
+
+#define __BYTE_ORDER            BYTE_ORDER
+#define __LITTLE_ENDIAN         LITTLE_ENDIAN
+#define __BIG_ENDIAN            BIG_ENDIAN
+
+#define bswap_16                OSSwapInt16
+#define bswap_32                OSSwapInt32
+#define bswap_64                OSSwapInt64
+#elif defined(__sun__)
+#include <sys/isa_defs.h>
+#include <sys/byteorder.h>
+
+#define __LITTLE_ENDIAN		1234
+#define __BIG_ENDIAN		4321
+#if defined(_BIG_ENDIAN)
+#define	__BYTE_ORDER		__BIG_ENDIAN
+#elif defined(_LITTLE_ENDIAN)
+#define __BYTE_ORDER		__LITTLE_ENDIAN
+#endif
+
+#define bswap_16		BSWAP_16
+#define bswap_32		BSWAP_32
+#define bswap_64		BSWAP_64
+
 #else
 #include <endian.h>
 #include <byteswap.h>

