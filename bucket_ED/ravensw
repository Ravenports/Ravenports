# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		ravensw
VERSION=		1.11.1
REVISION=		15
KEYWORDS=		raven
VARIANTS=		standard
SDESC[standard]=	Ravenports binary package manager
HOMEPAGE=		https://github.com/ravenports/ravensw/blob/master/README.md
CONTACT=		nobody

DOWNLOAD_GROUPS=	main sqlite
SITES[main]=		GITHUB/ravenports:ravensw:1.11.1_rev15
SITES[sqlite]=		https://www.sqlite.org/2019/
			http://www2.sqlite.org/2019/
DISTFILE[1]=		generated:main
DISTFILE[2]=		sqlite-autoconf-3280000.tar.gz:sqlite
DF_INDEX=		1 2
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	RUNTESTS
OPTIONS_STANDARD=	RUNTESTS

BUILD_DEPENDS=		libarchive:dev:ravensw
			libucl:single:ravensw
			fetch:single:library
			linenoise:single:standard
			libb2:single:standard
			elftoolchain:libraries:standard
			uthash:primary:standard
			picosat:single:standard
			autoconf:single:standard
			automake:single:standard
B_DEPS[sunos]=		musl-fts:single:standard

USES=			pkgconfig ssl:build zstd:build expat:build

LICENSE=		BSD2CLAUSE:single
LICENSE_FILE=		BSD2CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

MUST_CONFIGURE=		yes
CONFIGURE_ARGS=		--mandir={{MANPREFIX}}/man
			--pkgconfigdir={{PREFIX}}/lib/pkgconfig
			--prefix={{PREFIX}}

INFRASTRUCTURE=		yes
SET_DEBUGGING_ON=	yes
CFLAGS=			-Wno-error
OPTIMIZER_LEVEL=	0
VAR_OPSYS[sunos]=	CFLAGS=-DUSE_ESTREAM

[RUNTESTS].DESCRIPTION=			Run kyua tests after build
[RUNTESTS].BUILD_DEPENDS_ON=		kyua:single:standard
					zstd:primary:standard

post-build-RUNTESTS-ON:
	# All the tests are hardcoded with "pkg" executable
	(cd ${WRKSRC}/src && ${LN} -s ravensw pkg)
	${ECHO} "#!/bin/sh"                  >> ${WRKSRC}/tests/exec_test.sh
.if "${OPSYS}" == "Linux"
	${ECHO} "export -n RAVENSW_CACHEDIR" >> ${WRKSRC}/tests/exec_test.sh
	${ECHO} "export -n RAVENSW_DBDIR"    >> ${WRKSRC}/tests/exec_test.sh
.else
	${ECHO} "unset RAVENSW_CACHEDIR"     >> ${WRKSRC}/tests/exec_test.sh
	${ECHO} "unset RAVENSW_DBDIR"        >> ${WRKSRC}/tests/exec_test.sh
.endif
	${ECHO} "kyua test"                  >> ${WRKSRC}/tests/exec_test.sh
	${CHMOD} ${BINMODE} ${WRKSRC}/tests/exec_test.sh
	(cd ${WRKSRC}/tests && ./exec_test.sh ||:)

post-extract:
	# Install SQLite source
	(cd ${WRKDIR}/sqlite-autoconf-3280000/ && \
		cp sqlite3.[ch] shell.c ${WRKSRC}/external/sqlite/)
	${REINPLACE_CMD} -e 's|SQLITE_CDECL main|SQLITE_CDECL sqlite3_shell|'\
		${WRKSRC}/external/sqlite/shell.c

[FILE:473:descriptions/desc.single]
The ravensw program is the package management tool used by Ravenports.
It handles the manipulation of both locally built and remotely available
binary packages.

It is a fork of FreeBSD's pkg program.  It behaves identically in most
cases, and documentation written for pkg is probably valid for ravensw
as well (after substituting the name).

The primary reason for changing the name is to avoid confusion with
"pkg", the package manager used by some Solaris derivatives.


[FILE:226:distinfo]
0408156d2b8e8b11103cbf94378ccfd66b4494035ca1189d29ef924c8e89c558       668767 ravenports-ravensw-1.11.1_rev15.tar.gz
d61b5286f062adfce5125eaf544d495300656908e61fca143517afcc0a89b7c3      2810415 sqlite-autoconf-3280000.tar.gz


[FILE:1059:manifests/plist.single]
@sample etc/ravensw.conf.sample
etc/bash_completion.d/_ravensw.bash
etc/periodic/daily/
 411.ravensw-backup
 490.status-ravensw-changes
etc/periodic/security/
 410.ravensw-audit
 460.ravensw-checksum
etc/periodic/weekly/400.status-ravensw
sbin/ravensw
share/man/man5/
 ravensw-repository.5.gz
 ravensw.conf.5.gz
share/man/man8/
 ravensw-add.8.gz
 ravensw-alias.8.gz
 ravensw-annotate.8.gz
 ravensw-audit.8.gz
 ravensw-autoremove.8.gz
 ravensw-backup.8.gz
 ravensw-check.8.gz
 ravensw-clean.8.gz
 ravensw-config.8.gz
 ravensw-create.8.gz
 ravensw-delete.8.gz
 ravensw-fetch.8.gz
 ravensw-info.8.gz
 ravensw-install.8.gz
 ravensw-lock.8.gz
 ravensw-query.8.gz
 ravensw-register.8.gz
 ravensw-remove.8.gz
 ravensw-repo.8.gz
 ravensw-rquery.8.gz
 ravensw-search.8.gz
 ravensw-set.8.gz
 ravensw-shell.8.gz
 ravensw-shlib.8.gz
 ravensw-ssh.8.gz
 ravensw-stats.8.gz
 ravensw-unlock.8.gz
 ravensw-update.8.gz
 ravensw-updating.8.gz
 ravensw-upgrade.8.gz
 ravensw-version.8.gz
 ravensw-which.8.gz
 ravensw.8.gz
share/zsh/site-functions/_ravensw
@dir etc/ravensw/repos

