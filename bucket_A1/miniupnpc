# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		miniupnpc
VERSION=		2.2.1
KEYWORDS=		net
VARIANTS=		standard
SDESC[standard]=	UPnP client library for Internet Gateway Devices
HOMEPAGE=		http://miniupnp.free.fr/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://miniupnp.free.fr/files/
DISTFILE[1]=		miniupnpc-2.2.1.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			gmake

LICENSE=		BSD3CLAUSE:single
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		net/miniupnpc

MUST_CONFIGURE=		yes
CONFIGURE_SCRIPT=	updateminiupnpcstrings.sh

MAKE_ENV=		INSTALLPREFIX={{PREFIX}}

RC_SUBR=		miniupnpc:single

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/upnpc \
		${STAGEDIR}${PREFIX}/lib/libminiupnpc.so

[FILE:274:descriptions/desc.single]
UPnP IGD client lightweight library

The usage of the miniUPnP client library is useful whenever an application
needs to listen for incoming connections.

Examples : P2P applications, FTP clients for active mode, IRC (for DCC)
or IM applications, network games, any server.


[FILE:101:distinfo]
3a3167e57727bf1d2a7b4861f7c7b57a663f58b9cf68227762ed2fc64e8ea11f        99595 miniupnpc-2.2.1.tar.gz


[FILE:321:manifests/plist.single]
bin/
 external-ip
 upnpc
include/miniupnpc/
 igd_desc_parse.h
 miniupnpc.h
 miniupnpc_declspec.h
 miniupnpctypes.h
 miniwget.h
 portlistingparse.h
 upnpcommands.h
 upnpdev.h
 upnperrors.h
 upnpreplyparse.h
lib/
 libminiupnpc.a
 libminiupnpc.so
 libminiupnpc.so.17
lib/pkgconfig/miniupnpc.pc
share/man/man3/miniupnpc.3.gz


[FILE:1334:patches/patch-Makefile]
--- Makefile.orig	2020-11-27 18:25:02 UTC
+++ Makefile
@@ -44,7 +44,7 @@ CFLAGS += -D_DEFAULT_SOURCE
 ifneq (, $(findstring netbsd, $(OS)))
 CFLAGS += -D_NETBSD_SOURCE
 endif
-ifeq (, $(findstring freebsd, $(OS))$(findstring darwin, $(OS)))
+ifeq (, $(findstring freebsd, $(OS))$(findstring darwin, $(OS))$(findstring dragonfly, $(OS)))
 #CFLAGS += -D_POSIX_C_SOURCE=200112L
 CFLAGS += -D_XOPEN_SOURCE=600
 endif
@@ -145,7 +145,6 @@ TESTMINIWGETOBJS := $(TESTMINIWGETOBJS)
 TESTIGDDESCPARSE := $(TESTIGDDESCPARSE) minissdpc.o
 endif
 
-LIBDIR ?= lib
 # install directories
 ifeq ($(strip $(PREFIX)),)
 INSTALLPREFIX ?= /usr
@@ -153,7 +152,7 @@ else
 INSTALLPREFIX ?= $(PREFIX)
 endif
 INSTALLDIRINC = $(INSTALLPREFIX)/include/miniupnpc
-INSTALLDIRLIB = $(INSTALLPREFIX)/$(LIBDIR)
+INSTALLDIRLIB = $(INSTALLPREFIX)/lib
 INSTALLDIRBIN = $(INSTALLPREFIX)/bin
 INSTALLDIRMAN = $(INSTALLPREFIX)/share/man
 PKGCONFIGDIR = $(INSTALLDIRLIB)/pkgconfig
@@ -240,7 +239,7 @@ distclean: clean
 
 updateversion:	miniupnpc.h
 	cp miniupnpc.h miniupnpc.h.bak
-	sed 's/\(.*MINIUPNPC_API_VERSION\s\+\)[0-9]\+/\1$(APIVERSION)/' < miniupnpc.h.bak > miniupnpc.h
+	sed -E 's/(.*MINIUPNPC_API_VERSION[[:space:]]+)[0-9]+/\1$(APIVERSION)/' < miniupnpc.h.bak > miniupnpc.h
 
 install:	updateversion $(FILESTOINSTALL)
 	$(INSTALL) -d $(DESTDIR)$(INSTALLDIRINC)


[FILE:335:patches/patch-setup.py]
--- setup.py.orig	2020-05-10 18:11:12 UTC
+++ setup.py
@@ -30,6 +30,6 @@ setup(name="miniupnpc",
       cmdclass={'build_ext': make_then_build_ext},
       ext_modules=[
          Extension(name="miniupnpc", sources=["miniupnpcmodule.c"],
-                   extra_objects=EXT)
+                   libraries=["miniupnpc"])
       ])
 


[FILE:691:files/miniupnpc.in]
#!/bin/sh
# PROVIDE: miniupnpc
# REQUIRE: NETWORKING SERVERS DAEMON ldconfig resolv
# KEYWORD: shutdown

. /etc/rc.subr

# Add the following lines to /etc/rc.conf to enable miniupnpc
# miniupnpc_enable="YES"
# miniupnpc_config="port protocol [port2 protocol2] [...]"

name="miniupnpc"
rcvar=miniupnpc_enable

load_rc_config $name

miniupnpc_enable=${miniupnpc_enable:-"NO"}

command="%%PREFIX%%/bin/upnpc"
start_cmd="miniupnpc_start"
stop_cmd="miniupnpc_stop"

miniupnpc_start() {
	eval "${command} -r ${miniupnpc_config} | grep duration"
}

miniupnpc_stop() {
	echo "Remove redirections" ${miniupnpc_config}
	eval ${command} -d ${miniupnpc_config} > /dev/null
}

run_rc_command "$1"

# eof

