# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		db6
VERSION=		6.2.38
KEYWORDS=		databases java
VARIANTS=		standard
SDESC[standard]=	Oracle Berkeley DB, revision 6
HOMEPAGE=		https://www.oracle.com/database/berkeley-db/db.html
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://download.oracle.com/berkeley-db/
DISTFILE[1]=		db-6.2.38.tar.gz:main
DIST_SUBDIR=		bdb
DF_INDEX=		1
SPKGS[standard]=	complete
			shared
			static
			docs

OPTIONS_AVAILABLE=	CRYPTO TCL JAVA
OPTIONS_STANDARD=	CRYPTO TCL JAVA
OPT_ON[all]=		CRYPTO

USES=			gmake libtool c++:shared

DISTNAME=		db-6.2.38

LICENSE=		AGPLv3:shared
LICENSE_TERMS=		shared:{{WRKDIR}}/TERMS
LICENSE_FILE=		AGPLv3:stock
LICENSE_AWK=		TERMS:"^ \*$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		databases/db6

INVALID_RPATH=		yes
MUST_CONFIGURE=		gnu
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_WRKSRC=	{{WRKSRC}}/build_unix
CONFIGURE_SCRIPT=	dist/configure
CONFIGURE_ARGS=		--enable-cxx
			--enable-stl
			--enable-sql
			--enable-sql_codegen
			--includedir={{PREFIX}}/include/db6
			--libdir={{PREFIX}}/lib/db6
			--bindir={{PREFIX}}/bin/db6

MAKE_ARGS=		docdir={{STD_DOCDIR}}

INSTALL_TARGET=		install_include install_lib install_utilities
			install_docs
PLIST_SUB=		BDBMAJ=6
			BDBVER=6.2

[TCL].CONFIGURE_ARGS_OFF=		--disable-tcl
[TCL].CONFIGURE_ARGS_ON=		--with-tcl={{TCL_LIBDIR}}

[JAVA].CONFIGURE_ENABLE_BOTH=		java
[JAVA].CONFIGURE_ENV_ON=		JAVAC="{{JAVAC}}"
					JAR="{{JAR}}"
					JAVA="{{JAVA}}"
[JAVA].CPPFLAGS_ON=			-I"{{JAVA_HOME}}/include"

[CRYPTO].DESCRIPTION=			Cryptography support
[CRYPTO].CONFIGURE_WITH_BOTH=		cryptography=yes

post-install-TCL-OFF:
.for i in api_reference/TCL
	${RM} -r ${STAGEDIR}${STD_DOCDIR}/${i}
.endfor

post-patch:
	${REINPLACE_CMD} -e '/^DOCLIST/{s/csharp//;}' \
		${WRKSRC}/dist/Makefile.in
	${REINPLACE_CMD} -Ee 's/([^[:alnum:]])atomic_init([^[:alnum:]])/\1db_atomic_init\2/g' \
		${WRKSRC}/src/mp/mp_* \
		${WRKSRC}/src/mutex/mut_* \
		${WRKSRC}/src/dbinc/atomic.h
	${REINPLACE_CMD} -e 's/%%BDBVER%%/6.2/' \
		${WRKSRC}/lang/sql/upgrade61.sh

post-install-TCL-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/db6/libdb_tcl-6.2.so
	${LN} -s -f db6/libdb_tcl-6.2.so ${STAGEDIR}${PREFIX}/lib
	${LN} -s -f libdb_tcl-6.2.a \
		${STAGEDIR}${PREFIX}/lib/db6/libdb_tcl.a
	echo "package ifneeded Db_tcl 6.2 \
	      [list load [file join $$dir libdb_tcl-6.2.so]] \
	     " > ${STAGEDIR}${PREFIX}/lib/db6/pkgIndex.tcl

post-install-JAVA-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/db6/libdb_java-6.2.so
	${LN} -s -f db6/libdb_java-6.2.so ${STAGEDIR}${PREFIX}/lib
	${LN} -s -f libdb_java-6.2.a \
		${STAGEDIR}${PREFIX}/lib/db6/libdb_java.a

post-install-JAVA-OFF:
	${RM} -r ${STAGEDIR}${STD_DOCDIR}/java
.for i in gsg gsg_db_rep gsg_txn
	${RM} -r ${STAGEDIR}${STD_DOCDIR}/${i}/JAVA
.endfor

post-install:
.for i in libdb libdb_cxx libdb_stl libdb_sql
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/db6/${i}-6.2.so
	${LN} -s -f db6/${i}-6.2.so ${STAGEDIR}${PREFIX}/lib
	${LN} -s -f ${i}-6.2.a ${STAGEDIR}${PREFIX}/lib/db6/${i}.a
.endfor
	cd ${STAGEDIR}${PREFIX}/bin/db6; \
	for i in *; do ${LN} -s -f db6/$$i ../$$i-6.2 ; done
	${INSTALL_SCRIPT} ${WRKSRC}/lang/sql/upgrade61.sh \
		${STAGEDIR}${PREFIX}/bin/db6-upgrade61.sh

[FILE:392:descriptions/desc.shared]
Oracle Berkeley DB is a family of open source embeddable databases
that allows developers to incorporate within their applications a
fast, scalable, transactional database engine with industrial grade
reliability and availability.

Note that Berkeley DB 6 changed license to the Affero GNU General
Public License v3 (AGPL v3).

This package contains the executables and the shared libraries.


[FILE:700:descriptions/desc.static]
Oracle Berkeley DB is a family of open source embeddable databases
that allows developers to incorporate within their applications a
fast, scalable, transactional database engine with industrial grade
reliability and availability. As a result, customers and end-users
will experience an application that simply works, reliably manages
data, can scale under extreme load, but requires no ongoing database
administration. As a developer, you can focus on your application and
be confident that Oracle Berkeley DB will manage your persistence
needs.

Note that Berkeley DB 6 changed license to the Affero GNU General
Public License v3 (AGPL v3).

This package contains the headers and static libraries.


[FILE:99:distinfo]
99ccd944ffcccc88c0f404b4f3d8cb10747e1e3dfe9ec566f518725f986ca2fd     41298311 bdb/db-6.2.38.tar.gz


[FILE:1282:manifests/plist.shared]
%%JAVA-ON%%lib/libdb_java-%%BDBVER%%.so
%%JAVA-ON%%lib/db%%BDBMAJ%%/
 libdb_java-%%BDBMAJ%%.so
 libdb_java-%%BDBVER%%.so
 libdb_java-%%BDBVER%%_g.so
 libdb_java.so
%%TCL-ON%%lib/libdb_tcl-%%BDBVER%%.so
%%TCL-ON%%lib/db6/
 libdb_tcl-%%BDBVER%%.so
 libdb_tcl-6.so
 libdb_tcl.so
bin/
 db%%BDBMAJ%%-upgrade61.sh
 db_archive-%%BDBVER%%
 db_checkpoint-%%BDBVER%%
 db_convert-%%BDBVER%%
 db_deadlock-%%BDBVER%%
 db_dump-%%BDBVER%%
 db_hotbackup-%%BDBVER%%
 db_load-%%BDBVER%%
 db_log_verify-%%BDBVER%%
 db_printlog-%%BDBVER%%
 db_recover-%%BDBVER%%
 db_replicate-%%BDBVER%%
 db_sql_codegen-%%BDBVER%%
 db_stat-%%BDBVER%%
 db_tuner-%%BDBVER%%
 db_upgrade-%%BDBVER%%
 db_verify-%%BDBVER%%
 dbsql-%%BDBVER%%
bin/db%%BDBMAJ%%/
 db_archive
 db_checkpoint
 db_convert
 db_deadlock
 db_dump
 db_hotbackup
 db_load
 db_log_verify
 db_printlog
 db_recover
 db_replicate
 db_sql_codegen
 db_stat
 db_tuner
 db_upgrade
 db_verify
 dbsql
lib/
 libdb-%%BDBVER%%.so
 libdb_cxx-%%BDBVER%%.so
 libdb_sql-%%BDBVER%%.so
 libdb_stl-%%BDBVER%%.so
lib/db%%BDBMAJ%%/
 libdb-%%BDBMAJ%%.so
 libdb-%%BDBVER%%.so
 libdb.so
 libdb_cxx-%%BDBMAJ%%.so
 libdb_cxx-%%BDBVER%%.so
 libdb_cxx.so
 libdb_sql-%%BDBMAJ%%.so
 libdb_sql-%%BDBVER%%.so
 libdb_sql.so
 libdb_stl-%%BDBMAJ%%.so
 libdb_stl-%%BDBVER%%.so
 libdb_stl.so


[FILE:583:manifests/plist.static]
%%JAVA-ON%%lib/db%%BDBMAJ%%/
 db.jar
 libdb_java-%%BDBVER%%.a
 libdb_java.a
%%TCL-ON%%lib/db6/
 libdb_tcl-%%BDBVER%%.a
 libdb_tcl.a
 pkgIndex.tcl
include/db%%BDBMAJ%%/
 db.h
 db_cxx.h
 dbsql.h
 dbstl_base_iterator.h
 dbstl_common.h
 dbstl_container.h
 dbstl_dbc.h
 dbstl_dbt.h
 dbstl_element_ref.h
 dbstl_exception.h
 dbstl_inner_utility.h
 dbstl_map.h
 dbstl_resource_manager.h
 dbstl_set.h
 dbstl_utility.h
 dbstl_vector.h
lib/db%%BDBMAJ%%/
 libdb-%%BDBVER%%.a
 libdb.a
 libdb_cxx-%%BDBVER%%.a
 libdb_cxx.a
 libdb_sql-%%BDBVER%%.a
 libdb_sql.a
 libdb_stl-%%BDBVER%%.a
 libdb_stl.a


[FILE:742:patches/patch-dist_configure]
--- dist/configure.orig	2019-01-30 16:46:19 UTC
+++ dist/configure
@@ -27779,7 +27779,7 @@ fi
 if test "$db_cv_debug" = "yes"; then
   CPPFLAGS="$CPPFLAGS -g"
 fi
-(cd sql && eval "\$SHELL ../$sqlite_dir/configure --disable-option-checking $ac_sub_configure_args CPPFLAGS=\"-I.. $CPPFLAGS\" --enable-amalgamation=$db_cv_sql_amalgamation --enable-readline=$with_readline " && cat build_config.h >> config.h) || exit 1
+(cd sql && eval "\$SHELL $sqlite_dir/configure --disable-option-checking $ac_sub_configure_args CPPFLAGS=\"-I.. $CPPFLAGS\" --enable-amalgamation=$db_cv_sql_amalgamation --enable-readline=$with_readline " && cat build_config.h >> config.h) || exit 1
 
 # Configure JDBC if --enable-jdbc
 if test "$db_cv_jdbc" != "no"; then


[FILE:827:patches/patch-lang_sql_upgrade61.sh]
--- lang/sql/upgrade61.sh.orig	2019-01-30 16:46:21 UTC
+++ lang/sql/upgrade61.sh
@@ -1,12 +1,19 @@
 #!/bin/sh
 # This script upgrades SQL databases from BDB 5.0 to early 6.1
 # to late 6.1 and up by reindexing them.
+# 
+# Originally provided by Oracle as part of the Oracle BerkeleyDB
+# 12.1.6.* tarballs.
 #
+# Bugfixed for proper quoting and error checking
+# by Matthias Andree <mandree@FreeBSD.org>
 
-for var in $@
+rc=0
+for var in "$@"
 do
-    echo Recovering database $var
-    db_recover -f -h ${var}-journal
-    echo Reindexing database $var
-    echo .quit | dbsql -cmd REINDEX  $var
+    echo "Recovering database $var"
+    db_recover-%%BDBVER%% -f -h "${var}-journal" || { rc=1 ; continue ; }
+    echo "Reindexing database $var"
+    echo .quit | dbsql-%%BDBVER%% -cmd REINDEX "$var" || rc=1
 done
+exit $rc


[FILE:847:patches/patch-src_dbinc_mutex__int.h]
--- src/dbinc/mutex_int.h.orig	2019-01-30 16:46:22 UTC
+++ src/dbinc/mutex_int.h
@@ -9,6 +9,10 @@
 #ifndef _DB_MUTEX_INT_H_
 #define	_DB_MUTEX_INT_H_
 
+#if defined __DragonFly__ || defined __FreeBSD__
+#include <machine/atomic.h>
+#endif
+
 #include "dbinc/atomic.h"
 
 #if defined(__cplusplus)
@@ -487,11 +491,11 @@ typedef unsigned int tsl_t;
 #define	MUTEX_UNSET(tsl)	(*(volatile tsl_t *)(tsl) = 0)
 #define	MUTEX_INIT(tsl)         (MUTEX_UNSET(tsl), 0)
 #define	MUTEX_MEMBAR(x) \
-	({ __asm__ volatile ("dsb"); })
+	dsb(x)
 #define	MEMBAR_ENTER() \
-	({ __asm__ volatile ("dsb"); })
+	dsb()
 #define	MEMBAR_EXIT() \
-	({ __asm__ volatile ("dsb"); })
+	dsb()
 #endif
 #endif
 
@@ -633,7 +637,7 @@ MUTEX_SET(int *tsl)  {
 	 : "=&r" (__r), "+r" (tsl)
 	 :
 	 : "cr0", "memory");
-	 return (int)tsl;
+	 return (tsl != 0);
 }
 
 static inline int

