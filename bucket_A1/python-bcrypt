# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-bcrypt
VERSION=		4.0.0
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Modern password hashing based on blowfish (3.10)
SDESC[py39]=		Modern password hashing based on blowfish (3.9)
HOMEPAGE=		https://github.com/pyca/bcrypt/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/b/bcrypt
DISTFILE[1]=		bcrypt-4.0.0.tar.gz:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

DISTNAME=		bcrypt-4.0.0

GENERATED=		yes

[PY39].USES_ON=				python:py39,sutools

[PY310].USES_ON=			python:py310,sutools

[FILE:2683:descriptions/desc.single]
bcrypt
======

    :alt: Latest Version

Acceptable password hashing for your software and your servers

Installation
============

To install bcrypt, simply:

.. code:: bash

    $ pip install bcrypt

Note that bcrypt should build very easily on Linux provided you have a C
compiler and a Rust compiler (the minimum supported Rust version is
1.56.0).

For Debian and Ubuntu, the following command will ensure that the required
dependencies are installed:

.. code:: bash

    $ sudo apt-get install build-essential cargo

For Fedora and RHEL-derivatives, the following command will ensure that the
required dependencies are installed:

.. code:: bash

    $ sudo yum install gcc cargo

For Alpine, the following command will ensure that the required
dependencies are installed:

.. code:: bash

    $ apk add --update musl-dev gcc cargo

Alternatives
============

While bcrypt remains an acceptable choice for password storage, depending
on your specific use case you may also want to consider using scrypt
(either via `standard library`_ or `cryptography`_) or argon2id via
`argon2_cffi`_.

Changelog
=========

4.0.0
-----

* bcrypt is now implemented in Rust. Users building from source will need
  to have a Rust compiler available. Nothing will change for users
downloading
  wheels.
* We no longer ship manylinux2010 wheels. Users should upgrade to the
latest
  pip to ensure this doesnâ€™t cause issues downloading wheels on their
  platform. We now ship manylinux_2_28 wheels for users on new enough
platforms.
* NUL bytes are now allowed in inputs.

3.2.2
-----

* Fixed packaging of ``py.typed files in wheels so that mypy`` works.

3.2.1
-----

* Added support for compilation on z/OS
* The next release of bcrypt with be 4.0 and it will require Rust at
  compile time, for users building from source. There will be no additional
  requirement for users who are installing from wheels. Users on most
  platforms will be able to obtain a wheel by making sure they have an up
to
  date pip. The minimum supported Rust version will be 1.56.0.
* This will be the final release for which we ship manylinux2010 wheels.
  Going forward the minimum supported manylinux ABI for our wheels will be
  manylinux2014. The vast majority of users will continue to receive
  manylinux wheels provided they have an up to date pip.

3.2.0
-----

* Added typehints for library functions.
* Dropped support for Python versions less than 3.6 (2.7, 3.4, 3.5).
* Shipped abi3 Windows wheels (requires pip >= 20).

3.1.7
-----

* Set a setuptools lower bound for PEP517 wheel building.
* We no longer distribute 32-bit manylinux1 wheels. Continuing to produce
  them was a maintenance burden.



[FILE:98:distinfo]
c59c170fc9225faad04dde1ba61d85b413946e8ce2e5f5f5ff30dfd67283f319        25200 bcrypt-4.0.0.tar.gz

