# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		flite
VERSION=		2.2
KEYWORDS=		audio
VARIANTS=		std
SDESC[std]=		Small run-time speech synthesis engine
HOMEPAGE=		https://github.com/festvox/flite/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/festvox:flite:v2.2
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			tools
			man
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		alsa-lib:dev:std
BUILDRUN_DEPENDS=	alsa-lib:primary:std
EXRUN[tools]=		primary

USES=			cpe gmake

LICENSE=		BSD4CLAUSE:primary
LICENSE_FILE=		BSD4CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		audio/flite

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-shared=yes

PLIST_SUB=		SOVERSION=2.2
			SOMAJOR=1

post-patch:
	${REINPLACE_CMD} -e 's|-pd|-pR|g' ${WRKSRC}/main/Makefile
	${REINPLACE_CMD} -e "/-shared -Wl/s/)$$/ -lm)/g" \
		${WRKSRC}/config/common_make_rules

post-install:
	${MKDIR} ${STAGEDIR}${STD_DOCDIR}
	${INSTALL_DATA} ${WRKSRC}/README.md ${STAGEDIR}${STD_DOCDIR}
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.so

[FILE:495:descriptions/desc.primary]
Flite is a small fast run-time speech synthesis engine.  It is the
latest addition to the suite of free software synthesis tools
including University of Edinburgh's Festival Speech Synthesis System
and Carnegie Mellon University's FestVox project, tools, scripts and
documentation for building synthetic voices.  However, flite itself
does not require either of these systems to compile and run.

Flite is the answer to the complaint that Festival is too big, too slow,
and not portable enough.


[FILE:42:descriptions/desc.tools]
This package contains the flite programs.


[FILE:103:distinfo]
ab1555fe5adc3f99f1d4a1a0eb1596d329fd6d74f1464a0097c81f53c0cf9e5c     20233792 festvox-flite-2.2.tar.gz


[FILE:983:manifests/plist.primary]
lib/
 libflite.so.%%SOMAJOR%%
 libflite.so.%%SOVERSION%%
 libflite_cmu_grapheme_lang.so.%%SOMAJOR%%
 libflite_cmu_grapheme_lang.so.%%SOVERSION%%
 libflite_cmu_grapheme_lex.so.%%SOMAJOR%%
 libflite_cmu_grapheme_lex.so.%%SOVERSION%%
 libflite_cmu_indic_lang.so.%%SOMAJOR%%
 libflite_cmu_indic_lang.so.%%SOVERSION%%
 libflite_cmu_indic_lex.so.%%SOMAJOR%%
 libflite_cmu_indic_lex.so.%%SOVERSION%%
 libflite_cmu_time_awb.so.%%SOMAJOR%%
 libflite_cmu_time_awb.so.%%SOVERSION%%
 libflite_cmu_us_awb.so.%%SOMAJOR%%
 libflite_cmu_us_awb.so.%%SOVERSION%%
 libflite_cmu_us_kal.so.%%SOMAJOR%%
 libflite_cmu_us_kal.so.%%SOVERSION%%
 libflite_cmu_us_kal16.so.%%SOMAJOR%%
 libflite_cmu_us_kal16.so.%%SOVERSION%%
 libflite_cmu_us_rms.so.%%SOMAJOR%%
 libflite_cmu_us_rms.so.%%SOVERSION%%
 libflite_cmu_us_slt.so.%%SOMAJOR%%
 libflite_cmu_us_slt.so.%%SOVERSION%%
 libflite_cmulex.so.%%SOMAJOR%%
 libflite_cmulex.so.%%SOVERSION%%
 libflite_usenglish.so.%%SOMAJOR%%
 libflite_usenglish.so.%%SOVERSION%%


[FILE:1212:manifests/plist.dev]
include/flite/
 cst_alloc.h
 cst_args.h
 cst_audio.h
 cst_cart.h
 cst_cg.h
 cst_clunits.h
 cst_diphone.h
 cst_endian.h
 cst_error.h
 cst_features.h
 cst_ffeatures.h
 cst_file.h
 cst_hrg.h
 cst_item.h
 cst_lexicon.h
 cst_lts.h
 cst_lts_rewrites.h
 cst_math.h
 cst_phoneset.h
 cst_regex.h
 cst_relation.h
 cst_sigpr.h
 cst_socket.h
 cst_ss.h
 cst_string.h
 cst_sts.h
 cst_synth.h
 cst_tokenstream.h
 cst_track.h
 cst_units.h
 cst_utt_utils.h
 cst_utterance.h
 cst_val.h
 cst_val_const.h
 cst_val_defs.h
 cst_viterbi.h
 cst_voice.h
 cst_wave.h
 cst_wchar.h
 flite.h
 flite_version.h
lib/
 libflite.a
 libflite.so
 libflite_cmu_grapheme_lang.a
 libflite_cmu_grapheme_lang.so
 libflite_cmu_grapheme_lex.a
 libflite_cmu_grapheme_lex.so
 libflite_cmu_indic_lang.a
 libflite_cmu_indic_lang.so
 libflite_cmu_indic_lex.a
 libflite_cmu_indic_lex.so
 libflite_cmu_time_awb.a
 libflite_cmu_time_awb.so
 libflite_cmu_us_awb.a
 libflite_cmu_us_awb.so
 libflite_cmu_us_kal.a
 libflite_cmu_us_kal.so
 libflite_cmu_us_kal16.a
 libflite_cmu_us_kal16.so
 libflite_cmu_us_rms.a
 libflite_cmu_us_rms.so
 libflite_cmu_us_slt.a
 libflite_cmu_us_slt.so
 libflite_cmulex.a
 libflite_cmulex.so
 libflite_usenglish.a
 libflite_usenglish.so


[FILE:136:manifests/plist.tools]
bin/
 flite
 flite_cmu_time_awb
 flite_cmu_us_awb
 flite_cmu_us_kal
 flite_cmu_us_kal16
 flite_cmu_us_rms
 flite_cmu_us_slt
 flite_time


[FILE:26:manifests/plist.docs]
share/doc/flite/README.md


[FILE:611:patches/patch-Makefile]
--- Makefile.orig	2020-08-13 00:17:09 UTC
+++ Makefile
@@ -106,11 +106,11 @@ tags:
 
 install:
 	@echo Installing 
-	mkdir -p $(DESTDIR)$(INSTALLBINDIR)
-	mkdir -p $(DESTDIR)$(INSTALLLIBDIR)
-	mkdir -p $(DESTDIR)$(INSTALLINCDIR)
-	$(INSTALL) -m 644 include/*.h $(DESTDIR)$(INSTALLINCDIR)
-	@ $(MAKE) -C main --no-print-directory DESTDIR=$(DESTDIR) install
+	mkdir -p $(INSTALLBINDIR)
+	mkdir -p $(INSTALLLIBDIR)
+	mkdir -p $(INSTALLINCDIR)
+	$(INSTALL) -m 644 include/*.h $(INSTALLINCDIR)
+	@ $(MAKE) -C main --no-print-directory DESTDIR=${DESTDIR} install
 
 time-stamp :
 	@ echo $(PROJECT_NAME) >.time-stamp


[FILE:498:patches/patch-configure]
--- configure.orig	2020-08-13 00:17:09 UTC
+++ configure
@@ -4213,7 +4213,7 @@ fi
 
 if test "$shared" = true; then
    case "$target_os" in
-	linux*|k*bsd*-gnu|gnu*)
+	linux*|k*bsd*-gnu|gnu*|*bsd*|dragonfly*)
 		SHFLAGS="-fPIC"
         ;;
 	solaris*)
@@ -4413,7 +4413,7 @@ if test "x$AUDIODEFS" = x; then
 	    AUDIODEFS=-DCST_AUDIO_PULSEAUDIO
             AUDIOLIBS='-lpulse-simple -lpulse'
 	    ;;
-	*bsd)
+	*bsd*|dragonfly*)
 	    AUDIODRIVER=oss
 	    AUDIODEFS=-DCST_AUDIO_FREEBSD
 	    ;;


[FILE:1333:patches/patch-main_Makefile]
--- main/Makefile.orig	2020-08-13 00:17:09 UTC
+++ main/Makefile
@@ -49,7 +49,7 @@ ALL = shared_libs \
       $(BINDIR)/flite$(EXEEXT) \
       $(BINDIR)/t2p$(EXEEXT) $(BINDIR)/compile_regexes$(EXEEXT) \
       $(BINDIR)/flitevox_info$(EXEEXT) \
-      flite_voice_list.c each $(EXTRABINS)
+      each $(EXTRABINS)
 
 VOICES=$(VOXES)
 VOICELIBS=$(VOICES:%=flite_%)
@@ -97,7 +97,7 @@ else
 shared_libs: nothing
 endif
 
-.NOTPARALLEL: $(ALL)
+.NOTPARALLEL:
 
 flite_lang_list: 
 	rm -f flite_lang_list.c
@@ -145,15 +145,15 @@ $(BINDIR)/flite_${VOICE}: flite_main.o f
 
 install:
 #       The basic binaries
-	@ $(INSTALL) -m 755 $(BINDIR)/flite $(DESTDIR)$(INSTALLBINDIR)
+	@ $(INSTALL) -m 755 -s $(BINDIR)/flite $(INSTALLBINDIR)
 	@ for i in $(VOICES) ; \
 	do \
-	   $(INSTALL) $(BINDIR)/flite_$$i $(DESTDIR)$(INSTALLBINDIR); \
+	   $(INSTALL) -s $(BINDIR)/flite_$$i $(INSTALLBINDIR); \
 	done
-	$(INSTALL) -m 755 $(BINDIR)/flite_time $(DESTDIR)$(INSTALLBINDIR)
+	$(INSTALL) -m 755 -s $(BINDIR)/flite_time $(INSTALLBINDIR)
 #       The libraries: static and shared (if built)
-	cp -pd $(flite_LIBS_deps) $(DESTDIR)$(INSTALLLIBDIR)
+	cp -pR $(flite_LIBS_deps) $(INSTALLLIBDIR)
 ifdef SHFLAGS
-	cp -pd $(SHAREDLIBS) $(VERSIONSHAREDLIBS) $(DESTDIR)$(INSTALLLIBDIR)
+	cp -pR $(SHAREDLIBS) $(VERSIONSHAREDLIBS) $(INSTALLLIBDIR)
 endif
 


[FILE:143:files/special.mk]
# contents of FPC desthack module

GNU_CONFIGURE_PREFIX=	\$${${DESTDIRNAME}}${PREFIX}
GNU_CONFIGURE_MANPREFIX=	\$${${DESTDIRNAME}}${MANPREFIX}

