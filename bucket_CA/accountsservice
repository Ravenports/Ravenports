# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		accountsservice
VERSION=		23.13.9
REVISION=		1
KEYWORDS=		sysutils
VARIANTS=		std
SDESC[std]=		D-Bus service for user account query/manipulation
HOMEPAGE=		https://www.freedesktop.org/wiki/Software/AccountsService/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main freebsd
SITES[main]=		https://gitlab.freedesktop.org/arrowd/accountsservice/-/archive/23.13.9/
SITES[freebsd]=		https://gitlab.freedesktop.org/arrowd/accountsservice/-/archive/1ad45945/
DISTFILE[1]=		accountsservice-1ad45945.tar.gz:freebsd
DISTFILE[2]=		accountsservice-23.13.9.tar.gz:main
DF_INDEX=		1 2
SPKGS[std]=		set
			primary
			dev
			nls
			docs

OPTIONS_AVAILABLE=	LINUX
OPTIONS_STANDARD=	LINUX
OPT_ON[linux]=		LINUX

BUILD_DEPENDS=		xmlto:primary:std
			dbus:dev:std
			consolekit:dev:std
			polkit:dev:std
BUILDRUN_DEPENDS=	polkit:primary:std
			consolekit:primary:std

USES=			cpe meson pkgconfig
GNOME_COMPONENTS=	glib introspection

DISTNAME=		accountsservice

LICENSE=		GPLv3+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKDIR}}/accountsservice-1ad45945/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKDIR}}/accountsservice-1ad45945/src/accounts-daemon.h
LICENSE_SCHEME=		solo

CPE_VENDOR=		freedesktop
FPC_EQUIVALENT=		sysutils/accountsservice
MESON_ARGS=		-Dsystemdsystemunitdir=no
			-Dlocalstatedir=/var
			-Ddocbook=true
			-Dgtk_doc=false
			-Dvapi=false

PATCH_WRKSRC=		{{WRKDIR}}/accountsservice-1ad45945

SOVERSION=		0.0.0

[LINUX].DESCRIPTION=			Support for Linux system
[LINUX].CONFIGURE_ARGS_OFF=		-Dconsolekit=true
					-Dtests=false

pre-configure-LINUX-OFF:
	ln -s accountsservice-1ad45945 ${WRKDIR}/accountsservice

pre-configure-LINUX-ON:
	ln -s accountsservice-23.13.9 ${WRKDIR}/accountsservice

[FILE:235:descriptions/desc.primary]
AccountsService is a D-Bus service for accessing the list of user accounts 
and information attached to those accounts. It has been developed in and 
is used by the GNOME project but is usable with other desktop environments 
as well.


[FILE:219:distinfo]
7b09c78c322820e996c854f2397d222956e9b900ddb41d14b170f305df2c5e67       669203 accountsservice-1ad45945.tar.gz
15354c7f0457afdc0b9f7cc86bb2b8b90b7f6cfc09a80402bd685b56a4012c54       668351 accountsservice-23.13.9.tar.gz


[FILE:734:manifests/plist.primary]
%%LINUX-OFF%%@dir(,,0700) /var/db/AccountsService/users
%%LINUX-OFF%%@dir(,,0775) /var/db/AccountsService/icons
%%LINUX-ON%%@dir(,,0700) /var/lib/AccountsService/users
%%LINUX-ON%%@dir(,,0775) /var/lib/AccountsService/icons
lib/
 libaccountsservice.so.%%SOMAJOR%%
 libaccountsservice.so.%%SOVERSION%%
lib/girepository-1.0/AccountsService-1.0.typelib
libexec/accounts-daemon
share/accountsservice/user-templates/
 administrator
 standard
share/dbus-1/interfaces/
 org.freedesktop.Accounts.User.xml
 org.freedesktop.Accounts.xml
share/dbus-1/system-services/org.freedesktop.Accounts.service
share/dbus-1/system.d/org.freedesktop.Accounts.conf
share/gir-1.0/AccountsService-1.0.gir
share/polkit-1/actions/org.freedesktop.accounts.policy


[FILE:154:manifests/plist.dev]
include/accountsservice-1.0/act/
 act-user-enum-types.h
 act-user-manager.h
 act-user.h
 act.h
lib/libaccountsservice.so
lib/pkgconfig/accountsservice.pc


[FILE:3587:manifests/plist.nls]
share/locale/af/LC_MESSAGES/accounts-service.mo
share/locale/ar/LC_MESSAGES/accounts-service.mo
share/locale/as/LC_MESSAGES/accounts-service.mo
share/locale/ast/LC_MESSAGES/accounts-service.mo
share/locale/az/LC_MESSAGES/accounts-service.mo
share/locale/be/LC_MESSAGES/accounts-service.mo
share/locale/bg/LC_MESSAGES/accounts-service.mo
share/locale/bn_IN/LC_MESSAGES/accounts-service.mo
share/locale/ca/LC_MESSAGES/accounts-service.mo
share/locale/ca@valencia/LC_MESSAGES/accounts-service.mo
share/locale/cs/LC_MESSAGES/accounts-service.mo
share/locale/cy/LC_MESSAGES/accounts-service.mo
share/locale/da/LC_MESSAGES/accounts-service.mo
share/locale/de/LC_MESSAGES/accounts-service.mo
share/locale/el/LC_MESSAGES/accounts-service.mo
share/locale/en/LC_MESSAGES/accounts-service.mo
share/locale/en_GB/LC_MESSAGES/accounts-service.mo
share/locale/eo/LC_MESSAGES/accounts-service.mo
share/locale/es/LC_MESSAGES/accounts-service.mo
share/locale/et/LC_MESSAGES/accounts-service.mo
share/locale/eu/LC_MESSAGES/accounts-service.mo
share/locale/fa/LC_MESSAGES/accounts-service.mo
share/locale/fi/LC_MESSAGES/accounts-service.mo
share/locale/fo/LC_MESSAGES/accounts-service.mo
share/locale/fr/LC_MESSAGES/accounts-service.mo
share/locale/fur/LC_MESSAGES/accounts-service.mo
share/locale/ga/LC_MESSAGES/accounts-service.mo
share/locale/gl/LC_MESSAGES/accounts-service.mo
share/locale/gu/LC_MESSAGES/accounts-service.mo
share/locale/he/LC_MESSAGES/accounts-service.mo
share/locale/hi/LC_MESSAGES/accounts-service.mo
share/locale/hr/LC_MESSAGES/accounts-service.mo
share/locale/hu/LC_MESSAGES/accounts-service.mo
share/locale/ia/LC_MESSAGES/accounts-service.mo
share/locale/id/LC_MESSAGES/accounts-service.mo
share/locale/it/LC_MESSAGES/accounts-service.mo
share/locale/ja/LC_MESSAGES/accounts-service.mo
share/locale/ka/LC_MESSAGES/accounts-service.mo
share/locale/kk/LC_MESSAGES/accounts-service.mo
share/locale/kn/LC_MESSAGES/accounts-service.mo
share/locale/ko/LC_MESSAGES/accounts-service.mo
share/locale/ky/LC_MESSAGES/accounts-service.mo
share/locale/lt/LC_MESSAGES/accounts-service.mo
share/locale/lv/LC_MESSAGES/accounts-service.mo
share/locale/ml/LC_MESSAGES/accounts-service.mo
share/locale/mr/LC_MESSAGES/accounts-service.mo
share/locale/ms/LC_MESSAGES/accounts-service.mo
share/locale/nb/LC_MESSAGES/accounts-service.mo
share/locale/nl/LC_MESSAGES/accounts-service.mo
share/locale/nn/LC_MESSAGES/accounts-service.mo
share/locale/oc/LC_MESSAGES/accounts-service.mo
share/locale/or/LC_MESSAGES/accounts-service.mo
share/locale/pa/LC_MESSAGES/accounts-service.mo
share/locale/pl/LC_MESSAGES/accounts-service.mo
share/locale/pt/LC_MESSAGES/accounts-service.mo
share/locale/pt_BR/LC_MESSAGES/accounts-service.mo
share/locale/ro/LC_MESSAGES/accounts-service.mo
share/locale/ru/LC_MESSAGES/accounts-service.mo
share/locale/sk/LC_MESSAGES/accounts-service.mo
share/locale/sl/LC_MESSAGES/accounts-service.mo
share/locale/sq/LC_MESSAGES/accounts-service.mo
share/locale/sr/LC_MESSAGES/accounts-service.mo
share/locale/sr@latin/LC_MESSAGES/accounts-service.mo
share/locale/sv/LC_MESSAGES/accounts-service.mo
share/locale/ta/LC_MESSAGES/accounts-service.mo
share/locale/te/LC_MESSAGES/accounts-service.mo
share/locale/th/LC_MESSAGES/accounts-service.mo
share/locale/tr/LC_MESSAGES/accounts-service.mo
share/locale/uk/LC_MESSAGES/accounts-service.mo
share/locale/vi/LC_MESSAGES/accounts-service.mo
share/locale/wa/LC_MESSAGES/accounts-service.mo
share/locale/zh_CN/LC_MESSAGES/accounts-service.mo
share/locale/zh_HK/LC_MESSAGES/accounts-service.mo
share/locale/zh_TW/LC_MESSAGES/accounts-service.mo


[FILE:52:manifests/plist.docs]
share/doc/accountsservice/spec/AccountsService.html


[FILE:430:patches/patch-generate-version.sh]
--- generate-version.sh.orig	2023-08-12 19:01:30 UTC
+++ generate-version.sh
@@ -7,7 +7,7 @@ CWD=$(realpath "$PWD")
 exec 2>&3
 
 # If it's not from a git checkout, assume it's from a tarball
-if ! git rev-parse --is-inside-git-dir > /dev/null 2>&1; then
+if ! false > /dev/null 2>&1; then
     VERSION_FROM_DIR_NAME=$(basename "$CWD" | sed -n 's/^accountsservice-\([^-]*\)$/\1/p')
 
     if [ -n "$VERSION_FROM_DIR_NAME" ]; then


[FILE:992:patches/patch-meson.build]
--- meson.build.orig	2023-08-12 19:01:30 UTC
+++ meson.build
@@ -105,7 +105,6 @@ elif cc.has_header_symbol('paths.h', '_P
   config_h.set('PATH_WTMP', '_PATH_WTMPX')
 else
   path_wtmp = '/var/log/utx.log'
-  assert(run_command('test', '-e', path_wtmp, check: false).returncode() == 0, 'Do not know which filename to watch for wtmp changes')
   config_h.set_quoted('PATH_WTMP', path_wtmp)
 endif
 
@@ -159,11 +158,7 @@ polkit_gobject_dep = dependency('polkit-
 # salt drawn from secure system ressources with at least 128 bits.
 # (96 bits for sha512crypt, as more is not supported by this method, since
 # the effectively used maximum is 16 base64-encoded characters)
-crypt_dep = dependency('libxcrypt', required: false, version: '>= 4')
-config_h.set('HAVE_CRYPT_GENSALT', crypt_dep.found())
-if not crypt_dep.found()
-  crypt_dep = cc.find_library('crypt')
-endif
+crypt_dep = cc.find_library('crypt')
 
 dbus_dep = dependency('dbus-1')
 if dbus_dep.version().version_compare('>=1.9.18')


[FILE:755:patches/patch-meson__post__install.py]
--- meson_post_install.py.orig	2023-08-12 19:01:30 UTC
+++ meson_post_install.py
@@ -9,9 +9,9 @@ localstatedir = os.path.normpath(destdir
 # FIXME: meson will not track the creation of these directories
 #        https://github.com/mesonbuild/meson/blob/master/mesonbuild/scripts/uninstall.py#L39
 dst_dirs = [
-  (os.path.join(localstatedir, 'lib'), 0o755),
-  (os.path.join(localstatedir, 'lib', 'AccountsService', 'icons'), 0o775),
-  (os.path.join(localstatedir, 'lib', 'AccountsService', 'users'), 0o700),
+  (os.path.join(localstatedir, 'db'), 0o755),
+  (os.path.join(localstatedir, 'db', 'AccountsService', 'icons'), 0o775),
+  (os.path.join(localstatedir, 'db', 'AccountsService', 'users'), 0o700),
 ]
 
 for (dst_dir, dst_dir_mode) in dst_dirs:


[FILE:666:patches/patch-src_meson.build]
--- src/meson.build.orig	2023-08-12 19:01:30 UTC
+++ src/meson.build
@@ -28,8 +28,8 @@ cflags = [
   '-DLOCALSTATEDIR="@0@"'.format(act_localstatedir),
   '-DDATADIR="@0@"'.format(act_datadir),
   '-DSYSCONFDIR="@0@"'.format(act_sysconfdir),
-  '-DICONDIR="@0@"'.format(join_paths(act_localstatedir, 'lib', 'AccountsService', 'icons')),
-  '-DUSERDIR="@0@"'.format(join_paths(act_localstatedir, 'lib', 'AccountsService', 'users')),
+  '-DICONDIR="@0@"'.format(join_paths(act_localstatedir, 'db', 'AccountsService', 'icons')),
+  '-DUSERDIR="@0@"'.format(join_paths(act_localstatedir, 'db', 'AccountsService', 'users')),
 ]
 
 libaccounts_generated = static_library(


[FILE:380:patches/patch-src_wtmp-helper.c]
--- src/wtmp-helper.c.orig	2023-08-12 19:01:30 UTC
+++ src/wtmp-helper.c
@@ -54,7 +54,11 @@ static gboolean
 wtmp_helper_start (void)
 {
 #if defined(HAVE_SETUTXDB)
+# if defined __DragonFly__
+        if (setutxdb (UTX_DB_LASTLOGX, NULL) != 0) {
+# else
         if (setutxdb (UTXDB_LOG, NULL) != 0) {
+# endif
                 return FALSE;
         }
 #elif defined(PATH_WTMP)

