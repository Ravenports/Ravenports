# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		lua54
VERSION=		5.4.0
KEYWORDS=		lang
VARIANTS=		standard
SDESC[standard]=	Light, powerful language for app. extension
HOMEPAGE=		http://www.lua.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.lua.org/ftp/
DISTFILE[1]=		lua-5.4.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	libedit:single:standard

USES=			cpe readline

DISTNAME=		lua-5.4.0

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKDIR}}/LICENSE
LICENSE_SCHEME=		solo

CPE_PRODUCT=		lua
CPE_VENDOR=		lua

BUILD_WRKSRC=		{{WRKSRC}}/src
MAKE_ARGS=		MYCFLAGS="{{CFLAGS}} {{CPPFLAGS}}"
			MYLDFLAGS="{{LDFLAGS}}"
			MYLIBS="-L{{LOCALBASE}}/lib -lreadline"
			CC="{{CC}}"
			ARFLAGS=rl
			LUA_T=lua54
			LUAC_T=luac54
			LUA_A=liblua-5.4.a
			LUALIB=liblua-5.4
			LUA_SO=liblua-5.4.{{LIBEXT}}
			LUA_SONAME=liblua-5.4.{{LIBEXT}}
			TO_BIN="lua54 luac54"
			TO_LIB="liblua-5.4.a liblua-5.4.{{LIBEXT}}"
			INSTALL_TOP={{STAGEDIR}}{{PREFIX}}
			INSTALL_INC={{STAGEDIR}}{{PREFIX}}/include/lua54
			INSTALL_EXEC="{{INSTALL_PROGRAM}}"

PLIST_SUB=		LUA_VER=5.4
			SUFFIX=54
SUB_FILES=		lua-5.4.pc
SUB_LIST=		version=5.4.0
			includedir={{PREFIX}}/include/lua54
			libdir={{PREFIX}}/lib
			soname=lua-5.4

CFLAGS=			-fPIC
LDFLAGS=		-lm
			-pthread
VAR_OPSYS[freebsd]=	MAKEFILE_LINE=BUILD_TARGET=freebsd
VAR_OPSYS[sunos]=	MAKEFILE_LINE=BUILD_TARGET=solaris
VAR_OPSYS[linux]=	MAKEFILE_LINE=BUILD_TARGET=linux
VAR_OPSYS[darwin]=	MAKEFILE_LINE=BUILD_TARGET=macosx
VAR_OPSYS[netbsd]=	MAKEFILE_LINE=BUILD_TARGET=bsd
VAR_OPSYS[openbsd]=	MAKEFILE_LINE=BUILD_TARGET=bsd
VAR_OPSYS[dragonfly]=	MAKEFILE_LINE=BUILD_TARGET=bsd

post-patch:
	${REINPLACE_CMD} -e 's,rand *(,random(,g' ${WRKSRC}/src/lmathlib.c
	${REINPLACE_CMD} -e "/LUA_ROOT/s|/usr/local|${PREFIX}|" \
		${WRKSRC}/src/luaconf.h ${WRKSRC}/src/lua.c
	${REINPLACE_CMD} -e 's|man/man1|share/man/man1|' ${WRKSRC}/Makefile

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/liblua-5.4.${LIBEXT}
	${MV} ${STAGEDIR}${MANPREFIX}/man/man1/lua.1 \
		${STAGEDIR}${MANPREFIX}/man/man1/lua54.1
	${MV} ${STAGEDIR}${MANPREFIX}/man/man1/luac.1 \
		${STAGEDIR}${MANPREFIX}/man/man1/luac54.1
	${INSTALL_DATA} ${WRKDIR}/lua-5.4.pc \
		${STAGEDIR}${PREFIX}/lib/pkgconfig

post-extract:
	${AWK} '/\/\*\*/ {start=1} /^$$/{start=0} {if (start) print}' \
		${WRKSRC}/src/lua.h > ${WRKDIR}/LICENSE

[FILE:1209:descriptions/desc.single]
Lua is a programming language originally designed for extending
applications, but also frequently used as a general-purpose, stand-alone
language. Lua combines simple procedural syntax (similar to Pascal) with
powerful data description constructs based on associative arrays and
extensible semantics. Lua is dynamically typed, interpreted from bytecodes,
and has automatic memory management with garbage collection, making it
ideal for configuration, scripting, and rapid prototyping.

A fundamental concept in the design of Lua is to provide meta-mechanisms
for implementing features, instead of providing a host of features directly
in the language. For example, although Lua is not a pure object-oriented
language, it does provide meta-mechanisms for implementing classes and
inheritance. Lua's meta-mechanisms bring an economy of concepts and keep
the language small, while allowing the semantics to be extended in
unconventional ways. Extensible semantics is a distinguishing feature of
Lua.

Lua is implemented as a small library of C functions, written in ANSI C,
and compiles unmodified in all known platforms. The implementation goals
are simplicity, efficiency, portability, and low embedding cost.


[FILE:95:distinfo]
eac0836eb7219e421a96b7ee3692b93f0629e4cdb0c788432e3d10ce9ed47e28       349308 lua-5.4.0.tar.gz


[FILE:299:manifests/plist.single]
bin/
 lua%%SUFFIX%%
 luac%%SUFFIX%%
include/lua%%SUFFIX%%/
 lauxlib.h
 lua.h
 lua.hpp
 luaconf.h
 lualib.h
lib/
 liblua-%%LUA_VER%%.a
 liblua-%%LUA_VER%%.so
lib/pkgconfig/lua-%%LUA_VER%%.pc
share/man/man1/
 lua%%SUFFIX%%.1.gz
 luac%%SUFFIX%%.1.gz
@dir lib/lua/%%LUA_VER%%
@dir share/lua/%%LUA_VER%%


[FILE:1246:patches/patch-src_Makefile]
--- src/Makefile.orig	2020-04-15 13:00:29 UTC
+++ src/Makefile
@@ -6,12 +6,12 @@
 # Your platform. See PLATS for possible values.
 PLAT= guess
 
-CC= gcc -std=gnu99
-CFLAGS= -O2 -Wall -Wextra -DLUA_COMPAT_5_3 $(SYSCFLAGS) $(MYCFLAGS)
+CC?= gcc -std=gnu99
+CFLAGS+= -Wall -Wextra -DLUA_COMPAT_5_3 $(SYSCFLAGS) $(MYCFLAGS)
 LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)
 LIBS= -lm $(SYSLIBS) $(MYLIBS)
 
-AR= ar rcu
+AR?= ar rcu
 RANLIB= ranlib
 RM= rm -f
 UNAME= uname
@@ -20,8 +20,8 @@ SYSCFLAGS=
 SYSLDFLAGS=
 SYSLIBS=
 
-MYCFLAGS=
-MYLDFLAGS=
+MYCFLAGS?=
+MYLDFLAGS?=
 MYLIBS=
 MYOBJS=
 
@@ -44,7 +44,7 @@ LUAC_T=	luac
 LUAC_O=	luac.o
 
 ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)
-ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)
+ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T) $(LUA_SO)
 ALL_A= $(LUA_A)
 
 # Targets start here.
@@ -56,8 +56,14 @@ o:	$(ALL_O)
 
 a:	$(ALL_A)
 
+$(LUALIB).so: $(CORE_O) $(LIB_O)
+	$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $(MYLDFLAGS) -shared -Wl,-soname=$(LUA_SONAME) $?
+
+$(LUALIB).dylib: $(CORE_O) $(LIB_O)
+	$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $(MYLDFLAGS) -dynamiclib -current_version 1.0 -install_name '$(PREFIX)/lib/$(LUA_SONAME)' $?
+
 $(LUA_A): $(BASE_O)
-	$(AR) $@ $(BASE_O)
+	$(AR) $(ARFLAGS) $@ $(BASE_O)
 	$(RANLIB) $@
 
 $(LUA_T): $(LUA_O) $(LUA_A)


[FILE:186:patches/patch-src__liolib.c]
--- src/liolib.c.orig	2020-06-18 14:25:53 UTC
+++ src/liolib.c
@@ -16,6 +16,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <unistd.h>
 
 #include "lua.h"
 


[FILE:217:files/lua-5.4.pc.in]
version=%%version%%
libdir=%%libdir%%
includedir=%%includedir%%
soname=%%soname%%

Name: Lua
Description: An Extensible Extension Language
Version: ${version}
Libs: -L${libdir} -l${soname} -lm
Cflags: -I${includedir}

