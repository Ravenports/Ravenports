# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libical
VERSION=		3.0.11
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Reference implementation of the iCalendar format
HOMEPAGE=		https://libical.github.io/libical/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/libical/libical/releases/download/v3.0.11/
DISTFILE[1]=		libical-3.0.11.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		vala:single:standard
BUILDRUN_DEPENDS=	icu:single:standard

USES=			cpe cmake perl:build pkgconfig
GNOME_COMPONENTS=	introspection glib libxml2

LICENSE=		MPL:single LGPL21:single
LICENSE_TERMS=		single:{{WRKSRC}}/COPYING
LICENSE_FILE=		MPL:stock
			LGPL21:stock
LICENSE_SCHEME=		dual

CPE_VENDOR=		libical_project
FPC_EQUIVALENT=		devel/libical

SINGLE_JOB=		yes

SOVERSION=		3.0.11

CFLAGS=			-fPIC
CMAKE_ARGS=		-DGOBJECT_INTROSPECTION=true
			-DICAL_GLIB_VAPI=true
			-DICAL_BUILD_DOCS=false

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so

[FILE:252:descriptions/desc.single]
Libical is an Open Source implementation of the IETF's iCalendar
Calendaring and Scheduling protocols. (RFC 2445, 2446, and 2447). It
parses iCal components and provides a C API for manipulating the component
properties, parameters, and subcomponents.


[FILE:100:distinfo]
1e6c5e10c5a48f7a40c68958055f0e2759d9ab3563aca17273fe35a5df7dbbf1       891646 libical-3.0.11.tar.gz


[FILE:2407:manifests/plist.single]
include/libical/
 ical.h
 icalarray.h
 icalattach.h
 icalcalendar.h
 icalclassify.h
 icalcluster.h
 icalcomponent.h
 icalderivedparameter.h
 icalderivedproperty.h
 icalderivedvalue.h
 icaldirset.h
 icaldirsetimpl.h
 icalduration.h
 icalenums.h
 icalerror.h
 icalfileset.h
 icalfilesetimpl.h
 icalgauge.h
 icalgaugeimpl.h
 icallangbind.h
 icalmemory.h
 icalmessage.h
 icalmime.h
 icalparameter.h
 icalparameter_cxx.h
 icalparser.h
 icalperiod.h
 icalproperty.h
 icalproperty_cxx.h
 icalrecur.h
 icalrestriction.h
 icalset.h
 icalspanlist.h
 icalspanlist_cxx.h
 icalss.h
 icalssyacc.h
 icaltime.h
 icaltimezone.h
 icaltypes.h
 icaltz-util.h
 icalvalue.h
 icalvalue_cxx.h
 icalvcal.h
 icptrholder_cxx.h
 libical_ical_export.h
 libical_icalss_export.h
 libical_vcal_export.h
 pvl.h
 sspm.h
 vcaltmp.h
 vcc.h
 vcomponent_cxx.h
 vobject.h
include/libical-glib/
 i-cal-array.h
 i-cal-attach.h
 i-cal-comp-iter.h
 i-cal-component.h
 i-cal-datetimeperiod.h
 i-cal-derived-parameter.h
 i-cal-derived-property.h
 i-cal-derived-value.h
 i-cal-duration.h
 i-cal-enums.h
 i-cal-error.h
 i-cal-forward-declarations.h
 i-cal-geo.h
 i-cal-memory.h
 i-cal-mime.h
 i-cal-object.h
 i-cal-parameter.h
 i-cal-parser.h
 i-cal-period.h
 i-cal-property.h
 i-cal-recur-iterator.h
 i-cal-recur.h
 i-cal-recurrence.h
 i-cal-reqstat.h
 i-cal-restriction.h
 i-cal-time-span.h
 i-cal-time.h
 i-cal-timezone.h
 i-cal-trigger.h
 i-cal-unknowntokenhandling.h
 i-cal-value.h
 libical-glib.h
lib/
 libical-glib.a
 libical-glib.so
 libical-glib.so.%%SOMAJOR%%
 libical-glib.so.%%SOVERSION%%
 libical.a
 libical.so
 libical.so.%%SOMAJOR%%
 libical.so.%%SOVERSION%%
 libical_cxx.a
 libical_cxx.so
 libical_cxx.so.%%SOMAJOR%%
 libical_cxx.so.%%SOVERSION%%
 libicalss.a
 libicalss.so
 libicalss.so.%%SOMAJOR%%
 libicalss.so.%%SOVERSION%%
 libicalss_cxx.a
 libicalss_cxx.so
 libicalss_cxx.so.%%SOMAJOR%%
 libicalss_cxx.so.%%SOVERSION%%
 libicalvcal.a
 libicalvcal.so
 libicalvcal.so.%%SOMAJOR%%
 libicalvcal.so.%%SOVERSION%%
lib/cmake/LibIcal/
 IcalGlibSrcGenerator-release.cmake
 IcalGlibSrcGenerator.cmake
 LibIcalConfig.cmake
 LibIcalConfigVersion.cmake
 LibIcalTargets-%%CMAKE_BUILD_TYPE%%.cmake
 LibIcalTargets.cmake
lib/girepository-1.0/
 ICal-3.0.typelib
 ICalGLib-3.0.typelib
lib/pkgconfig/
 libical-glib.pc
 libical.pc
libexec/libical/ical-glib-src-generator
share/gir-1.0/
 ICal-3.0.gir
 ICalGLib-3.0.gir
share/vala/vapi/libical-glib.vapi


[FILE:490:patches/patch-src_libical_icaltz-util.c]
--- src/libical/icaltz-util.c.orig	2021-04-17 13:12:32 UTC
+++ src/libical/icaltz-util.c
@@ -53,6 +53,13 @@
 #define bswap_32 swap32
 #endif
 
+#if defined(__FreeBSD__) || defined(__DragonFly__) || defined(__NetBSD__)
+#define bswap_64 bswap64
+#endif
+#if defined(__NetBSD__)
+#define bswap_32 bswap32
+#endif
+
 #if defined(_MSC_VER)
 #if !defined(HAVE_BYTESWAP_H) && !defined(HAVE_SYS_ENDIAN_H) && !defined(HAVE_ENDIAN_H)
 #define bswap_16(x) (((x) << 8) & 0xff00) | (((x) >> 8) & 0xff)

