# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		basu
VERSION=		0.2.1
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Sd-bus library, extracted from systemd
HOMEPAGE=		https://sr.ht/~emersion/basu/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://git.sr.ht/~emersion/basu/refs/download/v0.2.1/
DISTFILE[1]=		basu-0.2.1.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gperf:primary:standard

USES=			meson

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/LICENSE.LGPL2.1
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/libsystemd/sd-bus/sd-bus.c
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/basu

CONFIGURE_ARGS=		-Daudit=disabled
			-Dlibcap=disabled

[FILE:225:descriptions/desc.primary]
The sd-bus library, extracted from systemd.

Some projects rely on the sd-bus library for DBus support. However not all 
systems have systemd or elogind installed. This library provides just 
sd-bus (and the busctl utility).


[FILE:96:distinfo]
d9b373a9fcb5d5eb5f6c1c56355f76edb7f2f52bc744570e80604e83455a19bd       239178 basu-0.2.1.tar.gz


[FILE:29:manifests/plist.primary]
bin/basuctl
lib/libbasu.so.0


[FILE:123:manifests/plist.dev]
include/basu/
 _sd-common.h
 sd-bus-protocol.h
 sd-bus-vtable.h
 sd-bus.h
 sd-id128.h
lib/libbasu.so
lib/pkgconfig/basu.pc


[FILE:1473:patches/patch-meson.build]
--- meson.build.orig	2024-02-08 21:04:32.952976000 +0100
+++ meson.build	2024-02-08 21:05:21.399633000 +0100
@@ -193,26 +193,6 @@
 
 nobody_user = get_option('nobody-user')
 
-if not meson.is_cross_build()
-        getent_result = run_command('getent', 'passwd', '65534')
-        if getent_result.returncode() == 0
-                name = getent_result.stdout().split(':')[0]
-                if name != nobody_user
-                        warning('\n' +
-                                'The local user with the UID 65534 does not match the configured user name "@0@" of the nobody user (its name is @1@).\n'.format(nobody_user, name) +
-                                'Your build will result in an user table setup that is incompatible with the local system.')
-                endif
-        endif
-        id_result = run_command('id', '-u', nobody_user)
-        if id_result.returncode() == 0
-                id = id_result.stdout().to_int()
-                if id != 65534
-                        warning('\n' +
-                                'The local user with the configured user name "@0@" of the nobody user does not have UID 65534 (it has @1@).\n'.format(nobody_user, id) +
-                                'Your build will result in an user table setup that is incompatible with the local system.')
-                endif
-        endif
-endif
 conf.set_quoted('NOBODY_USER_NAME', nobody_user)
 
 system_bus_address = get_option('system-bus-address')

