# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-aiohappyeyeballs
VERSION=		2.3.2
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Happy Eyeballs (3.11)
SDESC[v12]=		Happy Eyeballs (3.12)
HOMEPAGE=		https://github.com/aio-libs/aiohappyeyeballs
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/07/b1/d9455cf313df7b2fe6c60a871eb96801b6e8fbdc7d736f6576492b4c97b3
DISTFILE[1]=		aiohappyeyeballs-2.3.2-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		aiohappyeyeballs-2.3.2.dist-info

GENERATED=		yes

[PY311].USES_ON=			python:v11,wheel

[PY312].USES_ON=			python:v12,wheel

[FILE:1663:descriptions/desc.single]
# aiohappyeyeballs

<p align="center">
  
    [image]
  
  
    [image]
  
  
    [image]
  
</p>
<p align="center">
  
    [image]
  
  
    [image]
  
  
    [image]
  
</p>
<p align="center">
  
    [image]
  
  [image]
  [image]
</p>

---

**Documentation**: https://aiohappyeyeballs.readthedocs.io 

**Source Code**: https://github.com/aio-libs/aiohappyeyeballs 

---

Happy Eyeballs

## Use case

This library exists to allow connecting with Happy Eyeballs when you
already have a list of addrinfo and not a DNS name.

The stdlib version of `loop.create_connection()`
will only work when you pass in an unresolved name which
is not a good fit when using DNS caching or resolving
names via another method such was `zeroconf`.

## Installation

Install this via pip (or your favourite package manager):

`pip install aiohappyeyeballs`

## Example usage

```python

addr_infos = await loop.getaddrinfo("example.org", 80)

socket = await start_connection(addr_infos)
socket = await start_connection(addr_infos,
local_addr_infos=local_addr_infos, happy_eyeballs_delay=0.2)

transport, protocol = await loop.create_connection(
    MyProtocol, sock=socket, ...)

# Remove the first address for each family from addr_info
pop_addr_infos_interleave(addr_info, 1)

# Remove all matching address from addr_info
remove_addr_infos(addr_info, "dead::beef::")

# Convert a local_addr to local_addr_infos
local_addr_infos = addr_to_addr_infos(("127.0.0.1",0))
```

## Credits

This package contains code from cpython and is licensed under the same
terms as cpython itself.

This package was created with
[Copier] and the
[browniebroke/pypackage-template]
project template.


[FILE:118:distinfo]
903282fb08c8cfb3de356fd546b263248a477c99cb147e20a115e14ab942a4ae        11773 aiohappyeyeballs-2.3.2-py3-none-any.whl

