# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-mkdocs-get-deps
VERSION=		0.2.0
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		List dependencies from by mydocs.yml file (3.12)
SDESC[v13]=		List dependencies from by mydocs.yml file (3.13)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/9f/d4/029f984e8d3f3b6b726bd33cafc473b75e9e44c0f7e80a5b29abc466bdea
DISTFILE[1]=		mkdocs_get_deps-0.2.0-py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		mkdocs_get_deps-0.2.0.dist-info

GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-mergedeep:single:v12
					python-platformdirs:single:v12
					python-PyYAML:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-mergedeep:single:v13
					python-platformdirs:single:v13
					python-PyYAML:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:2260:descriptions/desc.single]
# mkdocs-get-deps

**An extra command for [MkDocs][] that infers required PyPI packages from
`plugins` in mkdocs.yml.**

[PyPI]
[GitHub]
[GitHub Workflow Status]

<table>
<tr><td>Installation:</td><td>Alternatively through MkDocs
itself:</td></tr>
<tr><td>

```bash
pip install mkdocs-get-deps
```

</td><td>

`bash
pip install mkdocs
`

</td>
</tr></table>

This command guesses the Python dependencies that a MkDocs site requires in
order to build. It simply prints the PyPI packages that need to be
installed. In the terminal it can be combined directly with a `pip install`
command, as per the last example below:

<table>
<tr><td>Usage:</td><td>Alternatively through MkDocs itself:</td></tr>
<tr><td>

```bash
# Print dependencies of the current project
mkdocs-get-deps
# Save them into a file
mkdocs-get-deps > requirements.txt
# Install dependencies on the fly
pip install $(mkdocs-get-deps)
```

</td><td>

```bash

mkdocs get-deps

mkdocs get-deps > requirements.txt
pip install -r requirements.txt

pip install $(mkdocs get-deps)
```

</td>
</tr></table>

The idea is that right after running this command, you can directly follow
it up with `mkdocs build` and it will almost always "just work", without
needing to think which dependencies to install.

The way it works is by scanning [`mkdocs.yml`] for `themes:`, `plugins:`,
`markdown_extensions:` items and doing a reverse lookup based on a large
list of known projects (catalog, see below).

Of course, you're encouraged to use a "virtualenv" with such a command.
Also note that for environments that require stability (for example CI)
directly installing deps in this way is not a very reliable approach as it
precludes dependency pinning.

The command allows overriding which config file is used (instead of
`mkdocs.yml` in the current directory) as well as which catalog of projects
is used (instead of downloading it from the default location). See [`mkdocs
get-deps --help`].

## MkDocs' official catalog of plugins

Check out <https://github.com/mkdocs/catalog> and add all your
general-purpose plugins, themes and extensions there, so that they can be
looked up through `mkdocs get-deps`.

[MkDocs]: https://www.mkdocs.org/
[`mkdocs.yml`]: https://www.mkdocs.org/user-guide/configuration/


[FILE:128:distinfo]
2bf11d0b133e77a0dd036abeeb06dec8775e46efa526dc70667d8863eefc6134         9521 python-src/mkdocs_get_deps-0.2.0-py3-none-any.whl

