# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		geany-plugins
VERSION=		2.0
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Plugin collection for the Geany IDE
HOMEPAGE=		https://plugins.geany.org/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://plugins.geany.org/geany-plugins/
DISTFILE[1]=		geany-plugins-2.0.tar.bz2:main
DF_INDEX=		1
SPKGS[std]=		set
			docs
			addons
			autoclose
			automark
			codenav
			commander
			debugger
			defineformat
			geanyctags
			geanydoc
			geanyextrasel
			geanygendoc
			geanyinsertnum
			geanylua
			geanymacro
			geanyminiscript
			geanynumberedbookmarks
			geanypg
			geanyprj
			geanyvc
			geniuspaste
			gitchangebar
			keyrecord
			latex
			lineoperations
			lipsum
			markdown
			overview
			pairtaghighlighter
			pohelper
			pretty_printer
			projectorganizer
			scope
			sendmail
			shiftcolumn
			spellcheck
			tableconvert
			treebrowser
			updatechecker
			vimode
			webhelper
			workbench
			xmlsnippets

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		ctpl:dev:std
			ctpl:primary:std
			discount:dev:std
			discount:primary:std
			enchant:dev:std
			enchant:primary:std
			geany:dev:std
			gpgme:dev:std
			gpgme:primary:std
			gtkspell:dev:std
			gtkspell:primary:std
			libgit2:dev:std
			libgit2:primary:std
			libsoup-2.4:dev:std
			libsoup-2.4:primary:std
			libxml2:dev:std
			libxml2:primary:std
			lua51:dev:std
			lua51:primary:std
			vte:dev:std
			webkit2:dev:api40
			webkit2:primary:api40
BUILDRUN_DEPENDS=	geany:primary:std
			vte:primary:std
EXRUN[pretty_printer]=	libxml2:primary:std
EXRUN[gitchangebar]=	libgit2:primary:std
EXRUN[geanylua]=	lua51:primary:std
EXRUN[geanyctags]=	ctags:primary:std
EXRUN[markdown]=	discount:primary:std
			webkit2:primary:api40
EXRUN[geanygendoc]=	ctpl:primary:std
EXRUN[geanypg]=		gpgme:primary:std
EXRUN[webhelper]=	webkit2:primary:api40
EXRUN[workbench]=	libgit2:primary:std
EXRUN[updatechecker]=	libsoup-2.4:primary:std
EXRUN[spellcheck]=	enchant:primary:std
EXRUN[geanyvc]=		gtkspell:primary:std
EXRUN[geniuspaste]=	libsoup-2.4:primary:std

USES=			gettext libtool pkgconfig ssl:build
GNOME_COMPONENTS=	glib gtk3 intltool

FPC_EQUIVALENT=		devel/geany-plugins

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-addons
			--enable-autoclose
			--enable-automark
			--enable-codenav
			--enable-commander
			--enable-debugger
			--enable-defineformat
			--enable-geanyctags
			--enable-geanydoc
			--enable-geanyextrasel
			--enable-geanygendoc
			--enable-geanyinsertnum
			--enable-geanylua
			--enable-geanymacro
			--enable-geanyminiscript
			--enable-geanynumberedbookmarks
			--enable-geanypg
			--enable-geanyprj
			--enable-geanyvc
			--enable-geniuspaste
			--enable-gitchangebar
			--enable-gtkspell
			--enable-keyrecord
			--enable-latex
			--enable-lineoperations
			--enable-lipsum
			--enable-markdown
			--enable-overview
			--enable-pairtaghighlighter
			--disable-peg-markdown
			--enable-pohelper
			--enable-pretty_printer
			--enable-projectorganizer
			--enable-scope
			--enable-sendmail
			--enable-shiftcolumn
			--enable-spellcheck
			--enable-tableconvert
			--enable-treebrowser
			--enable-updatechecker
			--enable-vimode
			--enable-webhelper
			--enable-workbench
			--enable-xmlsnippets

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes

CFLAGS=			-Wno-deprecated-declarations

[FILE:591:descriptions/desc.addons]
This plugin adds various small addons to Geany which aren't worth an own 
plugin but might still useful for people.

Features:

* Toolbar button with a list of open files
* Open and Copy URI found in a document command
* Task list in a message window
* Bookmark list in a sidebar
* Status icon in the notification area
* Highlighting all occurrences of a word when double-clicking it
* Strip trailing blank lines when saving
* XMLtagging
* Enclose selected text with characters
* Show colorized calltip on hovering over a color value
* Open Color Chooser on double clicking on a color value


[FILE:1353:descriptions/desc.autoclose]
This plugin enables auto-closing features. Auto-closing works while you 
typing and intellectually helps you to write code.

Features:

* auto-close for: { }, [ ], ( ), " ", ' ', < >, ` `
* customizeable auto-closing inside strings and comments
* delete pairing character if you pressed BackSpace
* suppress inserting one char twice (if you type "{}" you will get "{}", 
not "{}}")
* enclose selected text into brackets instead of removing selection 
(select text and type "(" or ")" to enclose selection into "()")
* keep selection when enclosing
* for C-like languages enclosing selection into "{}" makes 
auto-indentation (select text and type "{" or "}" - text will be enclosed 
and indented)
* enclosing in {} moves cursor to beginning (before "{" character)
* for C-like languages to insert {}-block you do not need to select text 
precisely: plugin detects boundaries automatically, just ensure that 
selection covers lines you need to indent (works like TAB indentation)
* fix auto-indent inside {} (makes full indent for this block)
* auto-close curly bracket by pressing Enter
* auto-close functions ("sin(|" -> "sin(|);") with doubling suppression 
(for C/C++ languages only)
* remove paring brace when pressing Shift+BackSpace, unindent {}-blocks
* add semicolon after struct {|}; and class {|};
* move cursor to closed char by pressing Tab


[FILE:89:descriptions/desc.automark]
This is a simple plugin that highlights all words that match current word 
under cursor.


[FILE:152:descriptions/desc.codenav]
This plugin adds some facilities for navigating in code files.

Features:

* Switch between header and implementation
* Go to a file by typing its name


[FILE:95:descriptions/desc.commander]
Commander is a plugin for Geany that provides a command panel for rapid 
access to any action.


[FILE:577:descriptions/desc.debugger]
Plugin enables debugging in Geany. Currently supports GDB only, but was 
developed with multiple debuggers support in mind, so the other backends 
support is planned as well.

Features:

* Debugger panel
* Setting target, environment variables and command line arguments
* Breakpoints
* Watches, autos
* Debug terminal
* Debugger messages window
* Threads and stack info
* Switching frames in the stack trace window
* Variables calltips while debugging
* Saving debug session data in a Geany project (can be switched through 
settings)
* Double or single panel modes
* Hotkeys


[FILE:128:descriptions/desc.defineformat]
Defineformat -- on-the-fly #define prettyprinter. This plugin will help 
you to write multiline defines with aligned backslash.


[FILE:681:descriptions/desc.geanyctags]
GeanyCtags adds a simple support for generating and querying ctags files 
for a Geany project. It requires that the ctags command is installed in a 
system path.

Even though Geany supports symbol definition searching by itself within 
the open files (and with a plugin support within the whole project), tag 
regeneration can become too slow for really big projects. This is why this 
plugin was created. It makes it possible to generate the tag file only 
once and just query it when searching for a particular symbol 
definition/declaration. This approach is fine for big projects where most 
of the codebase remains unchanged and the tag positions remain more or 
less static.


[FILE:386:descriptions/desc.geanydoc]
Geanydoc is a plugin for the Geany IDE that allows for executing specified 
commands on the current word at the cursor position. This word is passed 
as an argument to these commands. It allows to either place output of 
these commands in geany's buffer *DOC* or just execute an external 
program. Geanydoc is intended to be used for searching documentation API 
in different sources. 


[FILE:639:descriptions/desc.geanyextrasel]
The Extra Selection plugin adds the following functions to Geany:

* Goto matching brace and select (Select to Matching Brace).
* Goto line and select (Select to Line).
* Toggle the current selection type between stream and rectangular 
(without changing column mode, can be invoked while drag-selecting).
* Ctrl-Shift-Alt-Left/Right/Home/End keys - same as Ctrl-Shift, but for 
rectangular selection.
* Column mode - while active, all (Ctrl)-Shift-movement keys do rectangle 
selection instead of stream.
* Selection with anchor instead of the Shift-movement keys.

"Movement keys" refers to the arrows, Home, End, Page Up and Page Down.


[FILE:150:descriptions/desc.geanygendoc]
GeanyGenDoc is a plugin for Geany that aims to help code documentation by 
automatically generating documentation comment basis from the source code.


[FILE:261:descriptions/desc.geanyinsertnum]
This plugin replaces a (possibly zero-width) rectangular selection with 
integer numbers, using start/step/base etc. specified by the user. For 
practical reasons, the number of lines is limited to 250000. Lines shorter 
than the current selection are skipped.


[FILE:61:descriptions/desc.geanylua]
This is a plugin for the Geany IDE to provide Lua scripting.


[FILE:891:descriptions/desc.geanymacro]
Geanymacro is a plugin to provide user defined macros for Geany. It 
started out as part of the ConText feature parity plugin, which was split 
into individual plugins to better suit Geany's ethos of being as light as 
possible while allowing users to select which features they want to add to 
the core editor. The idea was taken from a Text Editor for Windows called 
ConText.

This plugin allows you to record and use your own macros. Macros are 
sequences of actions that can then be repeated with a single key 
combination. So if you had dozens of lines where you wanted to delete the 
last 2 characters, you could simple start recording, press End, Backspace, 
Backspace, down line and then stop recording. Then simply trigger the 
macro and it would automatically edit the line and move to the next. You 
could then just repeatedly trigger the macro to do as many lines as you 
want.


[FILE:409:descriptions/desc.geanyminiscript]
Gms is a Geany Mini-Script filter plugin.

Features:

This plugin is a tool to apply a script filter on

* the text selection,
* the current document,
* all documents of the current session.

The filter type can be

* Unix shell script,
* perl script,
* python script,
* sed commands,
* awk script.

The output can be

* the selection of the current document,
* all the current document,
* or a new document.


[FILE:652:descriptions/desc.geanynumberedbookmarks]
Geanynumberedbookmarks is a plugin to provide users with 10 numbered 
bookmarks (in addition to the usual bookmarks). It started out as part of 
the ConText feature parity plugin, which was split into individual plugins 
to better suit Geany's ethos of being as light as possible while allowing 
users to select which features they want to add to the core editor. The 
idea was taken from a Text Editor for Windows called ConText.

Normally if you had more than one bookmark, you would have to cycle 
through them until you reached the one you wanted. With this plugin you 
can go straight to the bookmark that you want with a single key 
combination.


[FILE:106:descriptions/desc.geanypg]
GeanyPG is a plugin for Geany that allows the user to encrypt, decrypt and 
verify signatures with GnuPG.


[FILE:1654:descriptions/desc.geanyprj]
Geanyprj is alternative project manager for Geany fast light IDE.

# Why it was created?

Open source is great, there is a lot of nice code on the Internet that you 
can use for your projects. But there is also a lot of crappy code and when 
you want to steal something, you need to check if it is good or not. 
Ability to jump to definition/declaration and back is of great help for 
such a task. But no other text editor or IDE I know of allows for this 
without a lot of configuration. You have to create/import a project and 
add files. When you finish with one project, you need to close it and 
repeat procedure for all others. Great for wasting time.

If you are checking about 10 potential places you want steal code from, 
you don't want to create a project and thus don't get "jump to 
definition/declaration" just because it is too much effort to invest.

Geanyprj aims to provide "jump to definition/declaration" functions with 
as little setup as possible.

# Why a different project manager, why not improve existing code in Geany?

That's because the current project manager in Geany is more about 
sessions. It is not something a real project manager should do (IMHO). It 
allows/requires the user to manually open/close projects and allows to 
store project files in differ ent locations from project sources.

Geanyprj takes a different approach:

1) Never save session information (this way project files can be stored in 
version control without constant noise from changes of opened files or 
cursor position)

2) Never open/close project manually. If a .geanyprj file is found 
somewhere up in path it will be opened automatically.


[FILE:751:descriptions/desc.geanyvc]
GeanyVC is plugin that provides a uniform way of accessing the different 
version-control systems inside Geany IDE. Only small subset of vc is 
implemented, but, hey, you don't need anything besides diff, log, status, 
revert and commit most of the time.

Features:

Bazaar, Fossil, GIT, Mercurial, Subversion, SVK
* diff file
* diff directory
* diff base directory
* blame
* log file
* log directory
* log base directory
* status
* revert file
* revert directory
* revert base directory
* show unmodified original file
* add file
* remove file
* update
* commit

CVS
* diff file
* diff directory
* diff base directory
* log file
* log directory
* log base directory
* status
* revert file
* revert directory
* revert base directory
* update
* commit


[FILE:448:descriptions/desc.geniuspaste]
This plugin allows the user to paste code from Geany into a configured 
pastebin service. At the moment it ships with built-in support these 
pastebin services, but more can be added:

* codepad.org
* dpaste.de
* fpaste.org
* pastebin.geany.org
* paste.debian.net
* sprunge.us

GeniusPaste automatically detects the syntax of the code and pastes it 
with syntax highlighting enabled. It can also display the pasted code 
opening a new browser tab.


[FILE:123:descriptions/desc.gitchangebar]
This plugin highlights uncommitted changes to files tracked with Git, 
allows to navigate through the hunks and undo them.


[FILE:91:descriptions/desc.keyrecord]
This plugin allows you to record a sequence of keystrokes and to replay it 
several times.


[FILE:542:descriptions/desc.latex]
GeanyLaTeX is a plugin for Geany IDE to improve work with LaTeX.

Features:

* Wizard for creating a new LaTeX-document with template function
* Frontend for easy input of \ref{} and \label{}
* Easy adding of special characters and environments through plugin menu 
entry
* Support at adding new itemms to BibTeX database
* Toolbar with common used format options
* Bulk replacment and input replacment of special characters
* Easy inserting of environment and packages
* Autocompletion of \end{} and \endgroup{} as well as {} behind ^ and _


[FILE:349:descriptions/desc.lineoperations]
Line Operations is an assortment of simple line functions that can be 
applied to an open file, or selection.

Features:

* Remove Duplicate Lines, sorted
* Remove Duplicate Lines, ordered
* Remove Unique Lines
* Keep Unique Lines
* Remove Empty Lines
* Remove Whitespace Lines
* Remove Every Nth Line
* Sort Lines Ascending
* Sort Lines Descending


[FILE:117:descriptions/desc.lipsum]
Lipsum is a plugin for Geany that implements a Lorem Ipsum generator to 
insert placeholder text into your document.


[FILE:409:descriptions/desc.markdown]
This plugin provides a real-time preview of rendered Markdown, that is, 
Markdown converted to HTML and inserted into an HTML template and loaded 
into a WebKit view.

Features:

* Allows placing the preview in the sidebar or message window areas
* Updates the preview on-the-fly as you type, automatically.
* Allows simple customization of fonts and colours and complete control 
with custom template files.


[FILE:235:descriptions/desc.overview]
The Overview plugin is a small zoomed-out view next to the normal editor 
view that allows to see and navigate a lot of the file at once. It is 
similar to the Minimap in SublimeText or such similar feature in numerous 
other editors.


[FILE:99:descriptions/desc.pairtaghighlighter]
Finds and highlights matching opening/closing HTML tag by clicking or 
moving cursor inside a tag.


[FILE:438:descriptions/desc.pohelper]
Translation Helper is a plugin for Geany that improves the support for 
GetText translation files, by providing various features specific to this 
format and to translators.

Features:

* Navigation between all, untranslated or fuzzy messages;
* Reformatting of the translation (reflow);
* Toggling the fuzziness of a translation;
* Pasting of the untranslated string to the translation;
* Automatic updating of the translation metadata.


[FILE:49:descriptions/desc.pretty_printer]
Formats an XML file and makes it human-readable.


[FILE:3406:descriptions/desc.projectorganizer]
Project Organizer is an extension of Geany's project management displaying 
a tree of files belonging to the project in the sidebar. In addition, it 
enables complete indexing of the project files (and having code 
completion, syntax highlighting and symbol definition/declaration jumps 
for the whole project) quick swapping between header and source files, 
improved opening of includes, searching project files by name and more. 
External directories can be attached to the project to extend the plugin's 
functionality to related directories outside the project tree. The plugin 
was created with big projects in mind so everything works fast enough even 
with projects consisting of tens of thousands of files.

# Why was it created?

A project in Geany is completely file-agnostic when it comes to the 
question of what files are stored in the project. In principle the 
information that Geany stores for every project is:

* project's base directory
* build settings
* list of open files

This approach is fine for smaller projects where most of the project files 
are stored in a single directory but doesn't work very well with projects 
consisting of many deeply nested directories containing thousands of 
files. For such projects an expandable tree showing all the project files 
is a better alternative making it much easier to to navigate among various 
project directories. Knowing which files belong to the project makes it 
possible to add other useful features like project file indexing, 
header/source swapping or file searching.

# Why are files belonging to a project defined by patterns?

Maintaining a list of project files is rather painful with larger projects 
consisting of thousands files and many developers working on them. Files 
are created, deleted and moved quite frequently and after each change the 
project has to be updated manually. Instead, Project Organizer defines a 
list of files belonging to the project implicitly using:

* project's base directory
* a list of glob-like patterns (e.g. *.c, *.h, or just simply * if you 
want to see everything)

Every file under the base directory matching the patterns is included into 
the project and updating the file list is as simple as pressing the 
refresh button in the sidebar.

# What are the differences between Project Organizer and GeanyPrj?

There is another project-management Geany plugin - GeanyPrj. Project 
Organizer and GeanyPrj differ in several aspects:

* Project Organizer is an extension of Geany's project so every Geany 
project is a Project Organizer project at the same time and vice versa. On 
the other hand, GeanyPrj project is a separate project so if you want to 
set build properties for a GeanyPrj project, you have to set up a second 
Geany project in parallel.
* GeanyPrj can display several projects in the sidebar; even though only a 
single project can be opened with Project Organizer at one time, similar 
effect can be achieved with the "external directories" feature.
* Project Organizer displays full tree in the sidebar while GeanyPrj 
displays only two-level tree (full directory name as a parent and a list 
of files under the directory).
* Project Organizer has configurable file patterns while patterns in 
GeanyPrj are hard-coded
* Project Organizer offers header/source swapping
* Project Organizer offers finding project files by name and improved 
include file opening


[FILE:547:descriptions/desc.scope]
Scope is a graphical GDB front-end with the normal functions you would 
expect (stepping, breakpoints...), and a few notable features:

* The comminication between Scope and gdb is asynchronous.
* You can enter any gdb command, at any time (of course, for the command 
to be executed, gdb must be[come] available).
* All gdb I/O (along with some other messages) is displayed in a 
terminal-like "Debug Console". Whenever you find the GUI lacking, simply 
switch to that console and work directly with gdb.
* 7-bit/Locale/UTF-8 support for values.


[FILE:306:descriptions/desc.sendmail]
SendMail is a little plugin to send a document as attachment using the 
preferred mail client from inside Geany. It is similar to the envelope 
symbol of most office tools and requires a mail client that is supporting 
remote calls.

This is not a direct binding to sendmail, even if it could be used for.


[FILE:121:descriptions/desc.shiftcolumn]
This plugin allows you to move blocks of text horizontally in left or 
right direction skipping one character at a time.


[FILE:756:descriptions/desc.spellcheck]
This plugin checks the content of the current document in Geany with the 
spell check library Enchant. You can also select a certain text passage, 
then the plugin will only check the selected text. All lines with 
misspelled words are highlighted with a red squiggly underline and the 
wrong words are printed in the messages window at the bottom of Geany 
together with available suggestions. For the plugin to work at all, you 
need to have the Enchant library installed together with at least one 
backend (Aspell, Myspell, Hunspell, ...). The plugin's configure dialog 
lists all available languages/dictionaries which can be used for the spell 
check.

Features:

* Check spelling while typing
* Highlight spelling mistakes
* Editor-menu integration


[FILE:98:descriptions/desc.tableconvert]
Tableconvert is a plugin which helps on converting a tabulator separated 
selection into a table.


[FILE:367:descriptions/desc.treebrowser]
The TreeBrowser plugin for Geany provides an alternate way to browse 
through your files. It displays files and directories in a tree view and 
has more features than the file browser plugin delivered with Geany itself.

Features:

* Project following
* Basic filesystem functionality
* GTK bookmarks support
* Keybindings
* Filterable list
* Show content-type icons


[FILE:120:descriptions/desc.updatechecker]
UpdateChecker is a plugin for Geany, which is able to check whether there 
is a more recent version of Geany available.


[FILE:898:descriptions/desc.vimode]
Vimode is a Vim-mode plugin for Geany written by a guy who does not use 
Vim. Expect problems unexpected by a Vim user and, please, report them.

Despite the limited Vim knowledge of the author, the plugin tries to be a 
reasonably complete Vim mode implementation featuring:

* normal mode, insert/replace mode, visual mode, line visual mode
* repeated commands (e.g. 10dd - delete 10 lines)
* "motion" commands (e.g. d10l - delete 10 characters to the right)
* "text object" commands (e.g. di( - delete inner contents of parentheses)
* visual mode commands (e.g. ~ to swap case of the selected text)
* basic ex mode commands like :s, including range specifications (e.g. 
:5,8s/foo/bar/g - replace foo with bar on lines 5 through 8)
* most basic navigation, selection and text manipulation commands - see 
the end of this file for the full list
* command repetition using "." and repeated insert


[FILE:577:descriptions/desc.webhelper]
WebHelper is a plugin for Geany that provides some web development 
facilities, such as a web page preview and some debugging tools (web 
inspector).

Prominent features:

* A basic web view, allowing to display any web page (using WebKit);
* Possible automatic reloading of the web view upon document saving;
* A web inspector/debugging tool for the web view's content (including a 
JavaScript console, a viewer and editor of processed HTML and CSS, a 
network usage analysis tool and many more, thanks to WebKit);
* Basic bookmarks for quicker access to frequently used URL.


[FILE:240:descriptions/desc.workbench]
The Workbench plugin is an extension that makes it possible to manage 
multiple projects in geany. You can add geany projects to a workbench. 
From there you can add directories to the project to manage the files 
belonging to the project.


[FILE:143:descriptions/desc.xmlsnippets]
This plugin extends XML/HTML tag autocompletion provided by Geany. It 
automatically inserts a matching snippet after you type an opening tag.


[FILE:104:distinfo]
9fc2ec5c99a74678fb9e8cdfbd245d3e2061a448d70fd110a6aefb62dd514705      3181264 geany-plugins-2.0.tar.bz2


[FILE:3971:manifests/plist.docs]
share/doc/geany-plugins/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/addons/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/autoclose/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/automark/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/codenav/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/commander/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/debugger/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/defineformat/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanyctags/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanydoc/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanyextrasel/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanygendoc/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
 manual.rst
share/doc/geany-plugins/geanygendoc/html/manual.html
share/doc/geany-plugins/geanyinsertnum/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanylua/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
 geanylua-index.html
 geanylua-input.html
 geanylua-intro.html
 geanylua-keyfile.html
 geanylua-keys.html
 geanylua-ref.html
 luarefv51.html
share/doc/geany-plugins/geanymacro/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanyminiscript/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanynumberedbookmarks/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanypg/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanyprj/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geanyvc/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/geniuspaste/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/git-changebar/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/keyrecord/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/latex/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
 bibtex_reference.png
 insert_environment.png
 insert_label.png
 insert_reference.png
 insert_usepackage.png
 latex.css
 latex.html
 latex.pdf
 latex.tex
 latex2.html
 latex3.html
 latex4.html
 latexwizard.png
 plugin_manager.png
 toolbar.png
share/doc/geany-plugins/lineoperations/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/lipsum/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/markdown/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/markdown/html/
 help.html
 plugin.png
 plugin_mgr.png
 plugin_prefs.png
 plugin_small.png
 set_filetype.png
 settings.png
share/doc/geany-plugins/overview/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/pairtaghighlighter/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/pohelper/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/projectorganizer/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/scope/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/scope/html/
 codes.html
 scope.html
share/doc/geany-plugins/sendmail/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/shiftcolumn/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/spellcheck/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/tableconvert/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/treebrowser/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/updatechecker/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/vimode/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/webhelper/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
 TODO
share/doc/geany-plugins/workbench/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README
share/doc/geany-plugins/xmlsnippets/
 AUTHORS
 COPYING
 ChangeLog
 NEWS
 README


[FILE:20:manifests/plist.addons]
lib/geany/addons.so


[FILE:23:manifests/plist.autoclose]
lib/geany/autoclose.so


[FILE:22:manifests/plist.automark]
lib/geany/automark.so


[FILE:21:manifests/plist.codenav]
lib/geany/codenav.so


[FILE:23:manifests/plist.commander]
lib/geany/commander.so


[FILE:254:manifests/plist.debugger]
lib/
 libgeanypluginutils.so
 libgeanypluginutils.so.0
 libgeanypluginutils.so.0.0.0
lib/geany/debugger.so
share/geany-plugins/debugger/
 continue.png
 restart.gif
 run.gif
 run_to_cursor.gif
 step_in.png
 step_out.gif
 step_over.gif
 stop.gif
 tabs.gif


[FILE:26:manifests/plist.defineformat]
lib/geany/defineformat.so


[FILE:24:manifests/plist.geanyctags]
lib/geany/geanyctags.so


[FILE:22:manifests/plist.geanydoc]
lib/geany/geanydoc.so


[FILE:27:manifests/plist.geanyextrasel]
lib/geany/geanyextrasel.so


[FILE:87:manifests/plist.geanygendoc]
lib/geany/geanygendoc.so
share/geany-plugins/geanygendoc/filetypes/
 c.conf
 vala.conf


[FILE:28:manifests/plist.geanyinsertnum]
lib/geany/geanyinsertnum.so


[FILE:618:manifests/plist.geanylua]
lib/geany/geanylua.so
lib/geany-plugins/geanylua/libgeanylua.so
share/geany-plugins/geanylua/dialogs/
 basic-dialogs.lua
 complex-dialog.lua
share/geany-plugins/geanylua/edit/
 calculator.lua
 lua-replace.lua
 proper-case.lua
 reverse.lua
 right-trim.lua
 select-block.lua
share/geany-plugins/geanylua/info/
 about.lua
 app-information.lua
 file-information.lua
 list-open-files.lua
 show-filename.lua
share/geany-plugins/geanylua/scripting/
 help.lua
 open-script.lua
 rebuild-menu.lua
 show-examples.lua
share/geany-plugins/geanylua/work/
 01.edit-test-script.lua
 02.run-test-script.lua
 03.install-test-script.lua


[FILE:24:manifests/plist.geanymacro]
lib/geany/geanymacro.so


[FILE:29:manifests/plist.geanyminiscript]
lib/geany/geanyminiscript.so


[FILE:36:manifests/plist.geanynumberedbookmarks]
lib/geany/geanynumberedbookmarks.so


[FILE:21:manifests/plist.geanypg]
lib/geany/geanypg.so


[FILE:22:manifests/plist.geanyprj]
lib/geany/geanyprj.so


[FILE:21:manifests/plist.geanyvc]
lib/geany/geanyvc.so


[FILE:184:manifests/plist.geniuspaste]
lib/geany/geniuspaste.so
share/geany-plugins/geniuspaste/pastebins/
 codepad.org.conf
 dpaste.de.conf
 fpaste.org.conf
 paste.debian.net.conf
 pastebin.geany.org.conf
 sprunge.us.conf


[FILE:70:manifests/plist.gitchangebar]
lib/geany/git-changebar.so
share/geany-plugins/git-changebar/prefs.ui


[FILE:23:manifests/plist.keyrecord]
lib/geany/keyrecord.so


[FILE:19:manifests/plist.latex]
lib/geany/latex.so


[FILE:28:manifests/plist.lineoperations]
lib/geany/lineoperations.so


[FILE:20:manifests/plist.lipsum]
lib/geany/lipsum.so


[FILE:22:manifests/plist.markdown]
lib/geany/markdown.so


[FILE:60:manifests/plist.overview]
lib/geany/overview.so
share/geany-plugins/overview/prefs.ui


[FILE:32:manifests/plist.pairtaghighlighter]
lib/geany/pairtaghighlighter.so


[FILE:72:manifests/plist.pohelper]
lib/geany/pohelper.so
share/geany-plugins/pohelper/
 menus.ui
 stats.ui


[FILE:28:manifests/plist.pretty_printer]
lib/geany/pretty-printer.so


[FILE:30:manifests/plist.projectorganizer]
lib/geany/projectorganizer.so


[FILE:473:manifests/plist.scope]
lib/geany/scope.so
share/geany-plugins/scope/
 BreakPoint.png
 BreakPoint22.png
 Continue.png
 Continue22.png
 Continue24.png
 Kill.png
 Kill22.png
 Kill24.png
 Pause.png
 Pause22.png
 Pause24.png
 RunToCursor.png
 RunToCursor22.png
 RunToCursor24.png
 RunToMethod.png
 RunToMethod22.png
 RunToMethod24.png
 StepInto.png
 StepInto22.png
 StepInto24.png
 StepOut.png
 StepOut22.png
 StepOut24.png
 StepOver.png
 StepOver22.png
 StepOver24.png
 scope.glade
 scope_gtk3.glade


[FILE:22:manifests/plist.sendmail]
lib/geany/sendmail.so


[FILE:25:manifests/plist.shiftcolumn]
lib/geany/shiftcolumn.so


[FILE:24:manifests/plist.spellcheck]
lib/geany/spellcheck.so


[FILE:26:manifests/plist.tableconvert]
lib/geany/tableconvert.so


[FILE:25:manifests/plist.treebrowser]
lib/geany/treebrowser.so


[FILE:27:manifests/plist.updatechecker]
lib/geany/updatechecker.so


[FILE:20:manifests/plist.vimode]
lib/geany/vimode.so


[FILE:23:manifests/plist.webhelper]
lib/geany/webhelper.so


[FILE:23:manifests/plist.workbench]
lib/geany/workbench.so


[FILE:25:manifests/plist.xmlsnippets]
lib/geany/xmlsnippets.so


[FILE:856:patches/patch-fix-prjorg-sidebar]
From ffb743effce4862716e3400bf05d1c3b4f2b7d68 Mon Sep 17 00:00:00 2001
From: Christopher Fore <csfore@posteo.net>
Date: Sat, 9 Dec 2023 11:01:36 -0500
Subject: [PATCH] projectorganizer: prjorg-sidebar.c: Cast g_ptr_array_free to
 gchar**

Grepping the source code shows this is already done in
pohelper/src/gph-plugin.c at line 903.

Tests run: Compiles on GCC 14

Fixes #1297
---
 projectorganizer/src/prjorg-sidebar.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- projectorganizer/src/prjorg-sidebar.c.orig
+++ projectorganizer/src/prjorg-sidebar.c
@@ -1562,7 +1562,7 @@ gchar **prjorg_sidebar_get_expanded_paths(void)
 		(GtkTreeViewMappingFunc)on_map_expanded, expanded_paths);
 	g_ptr_array_add(expanded_paths, NULL);
 
-	return g_ptr_array_free(expanded_paths, FALSE);
+	return (gchar **) g_ptr_array_free(expanded_paths, FALSE);
 }
 
 

