# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-webencodings
VERSION=		0.5.1
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Legacy web character encoding aliases (3.12)
SDESC[v13]=		Legacy web character encoding aliases (3.13)
HOMEPAGE=		https://github.com/SimonSapin/python-webencodings
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/f4/24/2a3e3df732393fed8b3ebf2ec078f05546de641fe1b667ee316ec1dcf3b7
DISTFILE[1]=		webencodings-0.5.1-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		webencodings-0.5.1.dist-info

GENERATED=		yes

[PY312].USES_ON=			python:v12,wheel

[PY313].USES_ON=			python:v13,wheel

[FILE:994:descriptions/desc.single]
python-webencodings
===================

This is a Python implementation of the [WHATWG Encoding standard
].

* Latest documentation: http://packages.python.org/webencodings/
* Source code and issue tracker:
  https://github.com/gsnedders/python-webencodings
* PyPI releases: http://pypi.python.org/pypi/webencodings
* License: BSD
* Python 2.6+ and 3.3+

In order to be compatible with legacy web content
when interpreting something like ``Content-Type: text/html;
charset=latin1``,
tools need to use a particular set of aliases for encoding labels
as well as some overriding rules.
For example, ``US-ASCII and iso-8859-1 on the web are actually
aliases for windows-1252``, and an UTF-8 or UTF-16 BOM takes precedence
over any other encoding declaration.
The Encoding standard defines all such details so that implementations do
not have to reverse-engineer each other.

This module has encoding labels and BOM detection,
but the actual implementation for encoders and decoders is Pythonâ€™s.


[FILE:118:distinfo]
a0af1213f3c2226497a97e2b3aa01a7e4bee4f403f95be16fc9acd2947514a78        11774 webencodings-0.5.1-py2.py3-none-any.whl

