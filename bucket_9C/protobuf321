# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		protobuf321
VERSION=		21.12
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Google's data interchange format
HOMEPAGE=		https://github.com/google/protobuf
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/google:protobuf:v21.12
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe cmake pkgconfig zlib c++:primary

DISTNAME=		protobuf-21.12/cmake

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/../LICENSE
LICENSE_SCHEME=		solo

CPE_PRODUCT=		protobuf
CPE_VENDOR=		google
FPC_EQUIVALENT=		devel/protobuf

PLIST_SUB=		PROTOCVER=3.21.12.0

LDFLAGS=		-fuse-ld=bfd
CMAKE_ARGS=		-Dprotobuf_BUILD_TESTS:BOOL=OFF
			-DBUILD_SHARED_LIBS:BOOL=ON

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/protoc

[FILE:186:descriptions/desc.primary]
Protocol Buffers are a way of encoding structured data in an efficient yet
extensible format. Google uses Protocol Buffers for almost all of its
internal RPC protocols and file formats.


[FILE:107:distinfo]
22fdaf641b31655d4b2297f9981fa5203b2866f8332d3c6333f6b0107bb320de      5141166 google-protobuf-21.12.tar.gz


[FILE:193:manifests/plist.primary]
bin/
 protoc
 protoc-%%PROTOCVER%%
lib/
 libprotobuf-lite.so.%%PROTOCVER%%
 libprotobuf-lite.so.32
 libprotobuf.so.%%PROTOCVER%%
 libprotobuf.so.32
 libprotoc.so.%%PROTOCVER%%
 libprotoc.so.32


[FILE:2812:manifests/plist.dev]
include/google/protobuf/
 any.h
 any.pb.h
 any.proto
 api.pb.h
 api.proto
 arena.h
 arena_impl.h
 arenastring.h
 arenaz_sampler.h
 descriptor.h
 descriptor.pb.h
 descriptor.proto
 descriptor_database.h
 duration.pb.h
 duration.proto
 dynamic_message.h
 empty.pb.h
 empty.proto
 endian.h
 explicitly_constructed.h
 extension_set.h
 extension_set_inl.h
 field_access_listener.h
 field_mask.pb.h
 field_mask.proto
 generated_enum_reflection.h
 generated_enum_util.h
 generated_message_bases.h
 generated_message_reflection.h
 generated_message_tctable_decl.h
 generated_message_tctable_impl.h
 generated_message_util.h
 has_bits.h
 implicit_weak_message.h
 inlined_string_field.h
 map.h
 map_entry.h
 map_entry_lite.h
 map_field.h
 map_field_inl.h
 map_field_lite.h
 map_type_handler.h
 message.h
 message_lite.h
 metadata.h
 metadata_lite.h
 parse_context.h
 port.h
 port_def.inc
 port_undef.inc
 reflection.h
 reflection_ops.h
 repeated_field.h
 repeated_ptr_field.h
 service.h
 source_context.pb.h
 source_context.proto
 struct.pb.h
 struct.proto
 text_format.h
 timestamp.pb.h
 timestamp.proto
 type.pb.h
 type.proto
 unknown_field_set.h
 wire_format.h
 wire_format_lite.h
 wrappers.pb.h
 wrappers.proto
include/google/protobuf/compiler/
 code_generator.h
 command_line_interface.h
 importer.h
 parser.h
 plugin.h
 plugin.pb.h
 plugin.proto
include/google/protobuf/compiler/cpp/
 cpp_generator.h
 file.h
 generator.h
 helpers.h
 names.h
include/google/protobuf/compiler/csharp/
 csharp_doc_comment.h
 csharp_generator.h
 csharp_names.h
 csharp_options.h
include/google/protobuf/compiler/java/
 generator.h
 java_generator.h
 kotlin_generator.h
 names.h
include/google/protobuf/compiler/objectivec/
 objectivec_generator.h
 objectivec_helpers.h
include/google/protobuf/compiler/php/php_generator.h
include/google/protobuf/compiler/python/
 generator.h
 pyi_generator.h
 python_generator.h
include/google/protobuf/compiler/ruby/ruby_generator.h
include/google/protobuf/io/
 coded_stream.h
 gzip_stream.h
 io_win32.h
 printer.h
 strtod.h
 tokenizer.h
 zero_copy_stream.h
 zero_copy_stream_impl.h
 zero_copy_stream_impl_lite.h
include/google/protobuf/stubs/
 bytestream.h
 callback.h
 casts.h
 common.h
 hash.h
 logging.h
 macros.h
 map_util.h
 mutex.h
 once.h
 platform_macros.h
 port.h
 status.h
 stl_util.h
 stringpiece.h
 strutil.h
 template_util.h
include/google/protobuf/util/
 delimited_message_util.h
 field_comparator.h
 field_mask_util.h
 json_util.h
 message_differencer.h
 time_util.h
 type_resolver.h
 type_resolver_util.h
lib/
 libprotobuf-lite.so
 libprotobuf.so
 libprotoc.so
lib/cmake/protobuf/
 protobuf-config-version.cmake
 protobuf-config.cmake
 protobuf-module.cmake
 protobuf-options.cmake
 protobuf-targets-release.cmake
 protobuf-targets.cmake
lib/pkgconfig/
 protobuf-lite.pc
 protobuf.pc


[FILE:665:patches/patch-src_google_protobuf_compiler_command__line__interface.cc]
--- ../src/google/protobuf/compiler/command_line_interface.cc.orig	2022-12-13 00:03:12 UTC
+++ ../src/google/protobuf/compiler/command_line_interface.cc
@@ -61,7 +61,7 @@
 
 #if defined(__APPLE__)
 #include <mach-o/dyld.h>
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
 #include <sys/sysctl.h>
 #endif
 
@@ -206,7 +206,7 @@ bool GetProtocAbsolutePath(std::string*
     realpath(dirtybuffer, buffer);
     len = strlen(buffer);
   }
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
   char buffer[PATH_MAX];
   size_t len = PATH_MAX;
   int mib[4] = {CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1};


[FILE:1306:patches/patch-src_google_protobuf_stubs_port.h]
--- ../src/google/protobuf/stubs/port.h.orig	2022-12-13 00:03:12 UTC
+++ ../src/google/protobuf/stubs/port.h
@@ -59,12 +59,14 @@
 #else
 #ifdef __APPLE__
 #include <machine/endian.h>  // __BYTE_ORDER
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
 #include <sys/endian.h>  // __BYTE_ORDER
 #elif (defined(sun) || defined(__sun)) && (defined(__SVR4) || defined(__svr4__))
 #include <sys/isa_defs.h>  // __BYTE_ORDER
 #elif defined(_AIX) || defined(__TOS_AIX__)
 #include <sys/machine.h>  // BYTE_ORDER
+#elif defined(__sun__)
+#define __LITTLE_ENDIAN__
 #else
 #if !defined(__QNX__)
 #include <endian.h>  // __BYTE_ORDER
@@ -82,6 +84,8 @@
 #ifdef _MSC_VER
 #include <stdlib.h>  // NOLINT(build/include)
 #include <intrin.h>
+#elif defined(__sun__)
+#include <sys/byteorder.h>
 #elif defined(__APPLE__)
 #include <libkern/OSByteOrder.h>
 #elif defined(__linux__) || defined(__ANDROID__) || defined(__CYGWIN__)
@@ -242,6 +246,11 @@ inline void GOOGLE_UNALIGNED_STORE64(voi
 #define bswap_32(x) _byteswap_ulong(x)
 #define bswap_64(x) _byteswap_uint64(x)
 
+#elif defined(__sun__)
+#define bswap_16(x) BSWAP_16(x)
+#define bswap_32(x) BSWAP_32(x)
+#define bswap_64(x) BSWAP_64(x)
+
 #elif defined(__APPLE__)
 // Mac OS X / Darwin features
 #define bswap_16(x) OSSwapInt16(x)

