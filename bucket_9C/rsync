# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		rsync
VERSION=		3.1.3
REVISION=		1
KEYWORDS=		net
VARIANTS=		standard
SDESC[standard]=	Network file distribution/synchronization utility
HOMEPAGE=		http://rsync.samba.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://rsync.samba.org/ftp/rsync/
			ftp://ftp.samba.org/pub/rsync/
			http://www.mirrorservice.org/sites/rsync.samba.org/
DISTFILE[1]=		rsync-3.1.3.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe iconv zlib shebangfix

CPE_PRODUCT=		rsync
CPE_VENDOR=		samba
FPC_EQUIVALENT=		net/rsync
SHEBANG_FILES=		support/rrsync

INVALID_RPATH=		yes
MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-debug
			--enable-ipv6
			--enable-iconv
			--enable-iconv-open
			--with-rsyncd-conf={{PREFIX}}/etc/rsync/rsyncd.conf
			--with-included-popt=yes
			--with-included-zlib=no
			--with-rsh=ssh

INSTALL_TARGET=		install-strip
RC_SUBR=		rsyncd:single
SUB_LIST=		NAME=rsyncd

TEST_TARGET=		check

post-patch:
	${REINPLACE_CMD} -e 's|perl.*|${DO_NADA}|' ${WRKSRC}/Makefile.in
	${REINPLACE_CMD} -e 's:/etc/:${PREFIX}/etc/rsync/:g'  \
		${WRKSRC}/rsync.h ${WRKSRC}/rsync.1 ${WRKSRC}/rsyncd.conf.5
	${REINPLACE_CMD} -e 's|/usr/bin/rsync|${PREFIX}/bin/rsync|g' \
		${WRKSRC}/support/rrsync

post-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/etc/rsync
	${INSTALL_DATA} ${FILESDIR}/rsyncd.conf.sample ${STAGEDIR}${PREFIX}/etc/rsync
	${INSTALL_SCRIPT} ${WRKSRC}/support/rrsync ${STAGEDIR}${PREFIX}/sbin

[FILE:494:descriptions/desc.single]
rsync is a replacement for rcp that has many more features.

rsync uses the "rsync algorithm" which provides a very fast method for
bringing remote files into sync. It does this by sending just the
differences in the files across the link, without requiring that both
sets of files are present at one of the ends of the link beforehand.
This makes rsync a good remote file distribution/synchronization utility
in a dialup PPP/SLIP environment.

Note, requires rsync on the destination machine.


[FILE:97:distinfo]
55cc554efec5fdaad70de921cd5a5eeb6c29a95524c715f3bbf849235b0800c0       905908 rsync-3.1.3.tar.gz


[FILE:117:manifests/plist.single]
@sample etc/rsync/rsyncd.conf.sample
bin/rsync
sbin/rrsync
share/man/man1/rsync.1.gz
share/man/man5/rsyncd.conf.5.gz


[FILE:1655:patches/patch-siginfo]
diff --git main.c main.c
index 4613c96..3d47f3a 100644
--- main.c.orig	2018-01-15 03:55:07 UTC
+++ main.c
@@ -76,6 +76,7 @@ extern size_t bwlimit_writemax;
 extern unsigned int module_dirlen;
 extern BOOL flist_receiving_enabled;
 extern BOOL shutting_down;
+extern BOOL want_progress_now;
 extern int backup_dir_len;
 extern int basis_dir_cnt;
 extern struct stats stats;
@@ -1450,6 +1451,15 @@ static void sigusr2_handler(UNUSED(int v
 	_exit(0);
 }
 
+#ifdef SIGINFO
+static void siginfo_handler(UNUSED(int val))
+{
+
+	if (!am_server)
+		want_progress_now = True;
+}
+#endif
+
 void remember_children(UNUSED(int val))
 {
 #ifdef WNOHANG
@@ -1549,6 +1559,9 @@ int main(int argc,char *argv[])
 	SIGACTMASK(SIGABRT, rsync_panic_handler);
 	SIGACTMASK(SIGBUS, rsync_panic_handler);
 #endif
+#ifdef SIGINFO
+	SIGACTMASK(SIGINFO, siginfo_handler);
+#endif
 
 	starttime = time(NULL);
 	our_uid = MY_UID();
--- receiver.c.orig	2018-01-15 03:55:07 UTC
+++ receiver.c
@@ -64,6 +64,8 @@ extern struct file_list *cur_flist, *fir
 extern filter_rule_list daemon_filter_list;
 extern OFF_T preallocated_len;
 
+BOOL want_progress_now;
+
 static struct bitbag *delayed_bits = NULL;
 static int phase = 0, redoing = 0;
 static flist_ndx_list batch_redo_list;
@@ -308,6 +310,11 @@ static int receive_data(int f_in, char *
 	while ((i = recv_token(f_in, &data)) != 0) {
 		if (INFO_GTE(PROGRESS, 1))
 			show_progress(offset, total_size);
+		else if (want_progress_now) {
+			rprintf(FINFO, "%s\n", fname);
+			end_progress(offset);
+		}
+		want_progress_now = False;
 
 		if (allowed_lull)
 			maybe_send_keepalive(time(NULL), MSK_ALLOW_FLUSH | MSK_ACTIVE_RECEIVER);


[FILE:768:files/rsyncd.conf.sample]
# rsyncd.conf - Example file, see rsyncd.conf(5)
#

# Set this if you want to stop rsync daemon with rc.d scripts
pid file = /var/run/rsyncd.pid

# Edit this file before running rsync daemon!!

#uid = nobody
#gid = nobody
#use chroot = no
#max connections = 4
#syslog facility = local5

#[ftp]
#	path = /var/ftp/pub
#	comment = whole ftp area (approx 6.1 GB)

#[sambaftp]
#	path = /var/ftp/pub/samba
#	comment = Samba ftp area (approx 300 MB)

#[rsyncftp]
#	path = /var/ftp/pub/rsync
#	comment = rsync ftp area (approx 6 MB)

#[sambawww]
#	path = /public_html/samba
#	comment = Samba WWW pages (approx 240 MB)

#[cvs]
#	path = /data/cvs
#	comment = CVS repository (requires authentication)
#	auth users = tridge, susan
#	secrets file = /raven/etc/rsync/rsyncd.secrets


[FILE:974:files/rsyncd.in]
#!/bin/sh
#

# PROVIDE: %%NAME%%
# REQUIRE: LOGIN
# BEFORE:  securelevel
# KEYWORD: shutdown

# Add the following lines to /etc/rc.conf to enable `%%NAME%%':
#
# %%NAME%%_enable="YES"
# %%NAME%%_flags="<set as needed>"
#
# See rsync(1) for %%NAME%%_flags
#

. /etc/rc.subr

name="%%NAME%%"
rcvar=%%NAME%%_enable

command="%%PREFIX%%/bin/rsync"
start_precmd="%%NAME%%_precmd"
pidfile="/var/run/$name.pid"

# read configuration and set defaults
load_rc_config "$name"
: ${%%NAME%%_enable="NO"}
: ${%%NAME%%_configfile:=%%ETCDIR%%/$name.conf}

required_files="${%%NAME%%_configfile}"

command_args="--daemon --config ${%%NAME%%_configfile}"

%%NAME%%_precmd()
{
	if [ -f "%%PREFIX%%/etc/$name.conf" ] && [ ! -L "%%PREFIX%%/etc/$name.conf" ]; then
		echo "Found %%PREFIX%%/etc/$name.conf in old location. Migrating to %%ETCDIR%%/$name.conf."
		mv %%PREFIX%%/etc/$name.conf %%ETCDIR%%/$name.conf
		ln -s %%ETCDIR%%/$name.conf %%PREFIX%%/etc/$name.conf
	fi
}

run_rc_command "$1"

