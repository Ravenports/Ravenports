# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-simplejson
VERSION=		3.17.0
KEYWORDS=		python devel
VARIANTS=		py27 py38 py37
SDESC[py37]=		Fast, extensible JSON encoder/decoder (PY 37)
SDESC[py38]=		Fast, extensible JSON encoder/decoder (PY 38)
SDESC[py27]=		Fast, extensible JSON encoder/decoder (PY 27)
HOMEPAGE=		https://github.com/simplejson/simplejson
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/s/simplejson
DISTFILE[1]=		simplejson-3.17.0.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY27=OFF PY38=OFF PY37=ON
VOPTS[py38]=		PY27=OFF PY38=ON PY37=OFF
VOPTS[py27]=		PY27=ON PY38=OFF PY37=OFF

DISTNAME=		simplejson-3.17.0

GENERATED=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[PY27].USES_ON=				python:py27

[FILE:1854:descriptions/desc.single]
simplejson
----------

.. image:: https://travis-ci.org/simplejson/simplejson.svg?branch=master
    :target: https://travis-ci.org/simplejson/simplejson

.. image::
https://ci.appveyor.com/api/projects/status/3riqhss6vca680gi/branch/master?
svg=true
    :target:
https://ci.appveyor.com/project/etrepum/simplejson/branch/master

simplejson is a simple, fast, complete, correct and extensible
JSON <http://json.org> encoder and decoder for Python 3.3+
with legacy support for Python 2.5+.  It is pure Python code
with no dependencies, but includes an optional C extension
for a serious speed boost.

The latest documentation for simplejson can be read online here:
https://simplejson.readthedocs.io/

simplejson is the externally maintained development version of the
json library included with Python (since 2.6). This version is tested
with the latest Python 3.8 and maintains backwards compatibility
with Python 3.3+ and the legacy Python 2.5 - Python 2.7 releases.

The encoder can be specialized to provide serialization in any kind of
situation, without any special support by the objects to be serialized
(somewhat like pickle). This is best done with the ``default`` kwarg
to dumps.

The decoder can handle incoming JSON strings of any specified encoding
(UTF-8 by default). It can also be specialized to post-process JSON
objects with the ``object_hook`` or ``object_pairs_hook`` kwargs. This
is particularly useful for implementing protocols such as JSON-RPC
that have a richer type system than JSON itself.

For those of you that have legacy systems to maintain, there is a
very old fork of simplejson in the `python2.2`_ branch that supports
Python 2.2. This is based off of a very old version of simplejson,
is not maintained, and should only be used as a last resort.

.. _python2.2: https://github.com/simplejson/simplejson/tree/python2.2



[FILE:103:distinfo]
2b4b2b738b3b99819a17feaf118265d0753d5536049ea570b3c43b51c4701e81        83119 simplejson-3.17.0.tar.gz

