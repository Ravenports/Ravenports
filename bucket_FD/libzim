# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libzim
VERSION=		9.2.3
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Reference implementation of the ZIM specification
HOMEPAGE=		https://github.com/openzim/libzim/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/openzim:libzim:9.2.3
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gtest:set:std
			icu:dev:std
			xapian-core:dev:std
BUILDRUN_DEPENDS=	icu:primary:std
			xapian-core:primary:std

USES=			execinfo meson ninja pkgconfig xz zstd

LICENSE=		GPLv2+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/fs.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/libzim

SOVERSION=		9.2.3

[FILE:245:descriptions/desc.primary]
The Libzim is the reference implementation for the ZIM file format. It's a 
software library to read and write ZIM files on many systems and 
architectures. More information about the ZIM format and the openZIM 
project at https://openzim.org/.


[FILE:106:distinfo]
7c6e7fcaf5bc82447edb12c6c573779af6d77b3b79227da57586e81c4e13f1bf       252745 openzim-libzim-9.2.3.tar.gz


[FILE:53:manifests/plist.primary]
lib/
 libzim.so.%%SOMAJOR%%
 libzim.so.%%SOVERSION%%


[FILE:269:manifests/plist.dev]
include/zim/
 archive.h
 blob.h
 entry.h
 error.h
 item.h
 search.h
 search_iterator.h
 suggestion.h
 suggestion_iterator.h
 tools.h
 uuid.h
 version.h
 zim.h
 zim_config.h
include/zim/writer/
 contentProvider.h
 creator.h
 item.h
lib/libzim.so
lib/pkgconfig/libzim.pc


[FILE:496:patches/patch-src_file__reader.cpp]
--- src/file_reader.cpp.orig	2024-06-22 12:19:38 UTC
+++ src/file_reader.cpp
@@ -143,7 +143,7 @@ class MMapException : std::exception {};
 char*
 mmapReadOnly(int fd, offset_type offset, size_type size)
 {
-#if defined(__APPLE__) || defined(__OpenBSD__) || defined(__HAIKU__)
+#if defined(__APPLE__) || defined(__OpenBSD__) || defined(__HAIKU__) || defined(__DragonFly__)
   const auto MAP_FLAGS = MAP_PRIVATE;
 #elif defined(__FreeBSD__)
   const auto MAP_FLAGS = MAP_PRIVATE|MAP_PREFAULT_READ;


[FILE:445:patches/patch-src_fs__unix.cpp]
--- src/fs_unix.cpp.orig	2024-06-22 12:19:38 UTC
+++ src/fs_unix.cpp
@@ -36,7 +36,7 @@ namespace unix {
 
 zsize_t FD::readAt(char* dest, zsize_t size, offset_t offset) const
 {
-#if defined(__APPLE__) || defined(__OpenBSD__) || defined(__FreeBSD__) || defined(__HAIKU__)
+#if defined(__APPLE__) || defined(__OpenBSD__) || defined(__FreeBSD__) || defined(__HAIKU__) || defined(__DragonFly__)
 # define PREAD pread
 #else
 # define PREAD pread64

