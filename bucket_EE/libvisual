# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libvisual
VERSION=		0.4.0
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Abstraction library between apps and visual plugin
HOMEPAGE=		https://sourceforge.net/projects/libvisual
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/libvisual/libvisual/libvisual-0.4.0
DISTFILE[1]=		libvisual-0.4.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			fbsd10fix gettext-runtime gettext-tools gmake
			libtool:keepla pkgconfig

FPC_EQUIVALENT=		graphics/libvisual04

MUST_CONFIGURE=		gnu

SOVERSION=		0.0.0
PLIST_SUB=		VER=0.4

LDFLAGS=		-lpthread

[FILE:781:descriptions/desc.single]
Libvisual is an abstraction library that comes between applications and 
audio visualisation plugins.

When it comes to audio visualisation plugins or programs that create 
visuals, they often depend on a player or something else. Before there was 
no general framework that enabled application developers to easily access 
audio visualisation plugins. Libvisual wanted to change this by providing 
an interface towards plugins and applications; through this easy to use 
interface applications can easily access plugins and, since the drawing is 
done by the application, it also enables the developer to draw the visual 
anywhere he wants. The framework also allows morphing to different plugins 
and mixing two at once; all kinds of neat tricks are possible using this 
method.


[FILE:101:distinfo]
0b4dfdb87125e129567752089e3c8b54cefed601eef169d2533d8659da8dc1d7       583386 libvisual-0.4.0.tar.gz


[FILE:857:manifests/plist.single]
include/libvisual-%%VER%%/libvisual/
 libvisual.h
 lv_actor.h
 lv_audio.h
 lv_bin.h
 lv_bits.h
 lv_bmp.h
 lv_buffer.h
 lv_cache.h
 lv_collection.h
 lv_color.h
 lv_common.h
 lv_config.h
 lv_cpu.h
 lv_defines.h
 lv_error.h
 lv_event.h
 lv_fourier.h
 lv_gl.h
 lv_hashlist.h
 lv_hashmap.h
 lv_input.h
 lv_keysym.h
 lv_libvisual.h
 lv_list.h
 lv_log.h
 lv_math.h
 lv_mem.h
 lv_morph.h
 lv_object.h
 lv_os.h
 lv_palette.h
 lv_param.h
 lv_plugin.h
 lv_random.h
 lv_rectangle.h
 lv_ringbuffer.h
 lv_songinfo.h
 lv_thread.h
 lv_time.h
 lv_transform.h
 lv_types.h
 lv_ui.h
 lv_utils.h
 lv_video.h
 lvconfig.h
lib/
 libvisual-%%VER%%.la
 libvisual-%%VER%%.so
 libvisual-%%VER%%.so.%%SOMAJOR%%
 libvisual-%%VER%%.so.%%SOVERSION%%
lib/pkgconfig/libvisual-%%VER%%.pc
share/locale/es_AR/LC_MESSAGES/libvisual-%%VER%%.mo
share/locale/es_ES/LC_MESSAGES/libvisual-%%VER%%.mo


[FILE:684:freebsd/patch-libvisual_lv__cache.c]
--- libvisual/lv_cache.c.orig	2017-12-25 23:27:01.606700000 +0100
+++ libvisual/lv_cache.c	2017-12-25 23:28:44.913778000 +0100
@@ -32,7 +32,7 @@
 static int cache_dtor (VisObject *object);
 static int cache_remove_list_entry (VisCache *cache, VisListEntry **le);
 
-static inline void handle_request_reset (VisCache *cache, VisListEntry *le);
+static lv_inline void handle_request_reset (VisCache *cache, VisListEntry *le);
 
 static int cache_dtor (VisObject *object)
 {
@@ -74,7 +74,7 @@
 }
 
 
-static inline void handle_request_reset (VisCache *cache, VisListEntry *le)
+static lv_inline void handle_request_reset (VisCache *cache, VisListEntry *le)
 {
 	VisCacheEntry *centry;
 


[FILE:714:freebsd/patch-libvisual_lv__defines.h]
--- libvisual/lv_defines.h.orig	2017-12-25 23:30:22.157273000 +0100
+++ libvisual/lv_defines.h	2017-12-25 23:31:15.040133000 +0100
@@ -63,13 +63,13 @@
 
 /* Compiler specific optimalization macros */
 #if __GNUC__ >= 3
-# define inline			inline __attribute__ ((always_inline))
+# define lv_inline		inline __attribute__ ((always_inline))
 # define __malloc		__attribute__ ((malloc))
 # define __packed		__attribute__ ((packed))
 # define VIS_LIKELY(x)		__builtin_expect (!!(x), 1)
 # define VIS_UNLIKELY(x)	__builtin_expect (!!(x), 0)
 #else
-# define inline			/* no inline */
+# define lv_inline		/* no inline */
 # define __malloc		/* no malloc */
 # define __packed		/* no packed */
 # define VIS_LIKELY(x)		(x)


[FILE:641:freebsd/patch-libvisual_lv__time.h]
--- libvisual/lv_time.h.orig	2017-12-25 23:33:06.188334000 +0100
+++ libvisual/lv_time.h	2017-12-25 23:33:46.023582000 +0100
@@ -101,7 +101,7 @@
  *
  * @return Nothing.
  */
-static inline void visual_timer_tsc_get (uint32_t *lo, uint32_t *hi)
+static lv_inline void visual_timer_tsc_get (uint32_t *lo, uint32_t *hi)
 {
 #if defined(VISUAL_ARCH_X86) || defined(VISUAL_ARCH_X86_64)
 	__asm __volatile
@@ -115,7 +115,7 @@
 }
 
 /* FIXME use uint64_t here, make sure type exists */
-static inline unsigned long long visual_timer_tsc_get_returned ()
+static lv_inline unsigned long long visual_timer_tsc_get_returned ()
 {
 	uint32_t lo, hi;
 

