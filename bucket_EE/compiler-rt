# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		compiler-rt
VERSION=		11.0.1
KEYWORDS=		lang devel
VARIANTS=		standard
SDESC[standard]=	Compiler runtime libraries for clang
HOMEPAGE=		https://compiler-rt.llvm.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/
DISTFILE[1]=		compiler-rt-11.0.1.src.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	llvm:single:standard

USES=			cmake ninja python:build c++:single

DISTNAME=		compiler-rt-11.0.1.src

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"University of Illinois/NCSA Open Source License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE.TXT
LICENSE_SCHEME=		solo

PLIST_SUB=		OPSYSLC={{OPSYS:tl}}

[FILE:209:descriptions/desc.single]
The compiler-rt project consists of:

builtins 
sanitizer runtimes
- AddressSanitizer
- ThreadSanitizer
- UndefinedBehaviorSanitizer
- MemorySanitizer
- LeakSanitizer
- DataFlowSanitizer
profile
BlocksRuntime


[FILE:108:distinfo]
087be3f1116e861cd969c9b0b0903c27028b52eaf45157276f50a9c2500687fc      2136216 compiler-rt-11.0.1.src.tar.xz


[FILE:496:manifests/plist.single]
lib/%%OPSYSLC%%/libclang_rt.builtins-x86_64.a
include/xray/
 xray_interface.h
 xray_log_interface.h
 xray_records.h
include/fuzzer/FuzzedDataProvider.h
include/profile/InstrProfData.inc
include/sanitizer/
 ubsan_interface.h
 tsan_interface_atomic.h
 msan_interface.h
 linux_syscall_hooks.h
 lsan_interface.h
 scudo_interface.h
 netbsd_syscall_hooks.h
 hwasan_interface.h
 dfsan_interface.h
 tsan_interface.h
 asan_interface.h
 allocator_interface.h
 common_interface_defs.h
 coverage_interface.h

