# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pytidylib
VERSION=		0.3.2
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Wrapper around HTML Tidy (3.12)
SDESC[v13]=		Wrapper around HTML Tidy (3.13)
HOMEPAGE=		http://countergram.com/open-source/pytidylib/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/pytidylib
DISTFILE[1]=		pytidylib-0.3.2.tar.gz:main
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		pytidylib-0.3.2

GENERATED=		yes

[PY312].USES_ON=			python:v12,sutools

[PY313].USES_ON=			python:v13,sutools

[FILE:1757:descriptions/desc.single]
`PyTidyLib`_ is a Python package that wraps the `HTML Tidy`_ library. This
allows you, from Python code, to "fix" invalid (X)HTML markup. Some of the
library's many capabilities include:

* Clean up unclosed tags and unescaped characters such as ampersands
* Output HTML 4 or XHTML, strict or transitional, and add missing doctypes
* Convert named entities to numeric entities, which can then be used in XML
  documents without an HTML doctype.
* Clean up HTML from programs such as Word (to an extent)
* Indent the output, including proper (i.e. no) indenting for pre elements,
  which some (X)HTML indenting code overlooks.

Changes
=======

* 0.3.2: Initialization bug fix

* 0.3.1: find_library support while still allowing a list of library names

* 0.3.0: Refactored to use Tidy and PersistentTidy classes while keeping
the
functional interface (which will lazily create a global Tidy() object) for
backward compatibility. You can now pass a list of library names and base
options when instantiating Tidy. The keep_doc argument is now deprecated
and does nothing; use PersistentTidy.

* 0.2.4: Bugfix for a strange memory allocation corner case in Tidy.

* 0.2.3: Python 3 support (2 + 3 cross compatible) with passing Tox tests.

Small example of use
====================

The following code cleans up an invalid HTML document and sets an option::

    from tidylib import tidy_document
    document, errors = tidy_document('''<p>f&otilde;o [image]''',
      options={'numeric-entities':1})
    print document
    print errors

Docs
====

Documentation is shipped with the source distribution and is available at
the `PyTidyLib`_ web page.

.. _`HTML Tidy`: http://tidy.sourceforge.net/
.. _`PyTidyLib`: http://countergram.com/open-source/pytidylib/


[FILE:101:distinfo]
22b1c8d75970d8064ff999c2369e98af1d0685417eda4c829a5c9f56764b0af3        87669 pytidylib-0.3.2.tar.gz

