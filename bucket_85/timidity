# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		timidity
VERSION=		2.15.0
REVISION=		1
KEYWORDS=		audio
VARIANTS=		standard
SDESC[standard]=	Software synthesizer and MIDI converter / player
HOMEPAGE=		https://timidity.sourceforge.net
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/timidity/TiMidity%2B%2B/TiMidity%2B%2B-2.15.0/
DISTFILE[1]=		TiMidity++-2.15.0.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BROKEN[sunos]=		Tries to include sys/soundcard.h not available on Sol10

BUILD_DEPENDS=		libvorbis:dev:standard
			flac:dev:standard
BUILDRUN_DEPENDS=	flac:primary:standard
			libvorbis:primary:standard
RUN_DEPENDS=		eawpatches:primary:standard

USES=			cpe gmake
XORG_COMPONENTS=	x11 xext xft

DISTNAME=		TiMidity++-2.15.0

LICENSE=		GPLv2+:single
LICENSE_TERMS=		single:{{WRKSRC}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^\*\/$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/timidity/timidity.h
LICENSE_SCHEME=		solo

CPE_PRODUCT=		timidity\+\+
CPE_VENDOR=		timidity\+\+_project
FPC_EQUIVALENT=		audio/timidity++

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-default-path={{PREFIX}}/etc/timidity
			--prefix={{PREFIX}}
			--libdir={{PREFIX}}/lib
			--enable-audio=oss,vorbis,flac
			--enable-dynamic=ncurses,xaw,gtk
			--enable-interface=server,ncurses,vt100,xaw,gtk
			--enable-xft
			--enable-network
			--enable-server
			--with-x
			--with-elf
			--enable-spectrogram
			--enable-wrd
			--x-includes=/raven/include/X11
			--x-libraries=/raven/lib

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/etc/timidity
	${LN} -s ${PREFIX}/etc/timidity/timidity_eawpatches.cfg ${STAGEDIR}${PREFIX}/etc/timidity/timidity.cfg
	${RM} -r ${STAGEDIR}${PREFIX}/lib/timidity

[FILE:399:descriptions/desc.single]
TiMidity++ is a software synthesizer. It can play MIDI files by converting 
them into PCM waveform data; give it a MIDI data along with digital 
instrument data files, then it synthesizes them in real-time, and plays. 
It can not only play sounds, but also can save the generated waveforms 
into hard disks as various audio file formats.

TiMidity++ is the continuation of the old TiMidity project.


[FILE:103:distinfo]
9eaf4fadb0e19eb8e35cd4ac16142d604c589e43d0e8798237333697e6381d39      1363040 TiMidity++-2.15.0.tar.xz


[FILE:101:manifests/plist.single]
bin/timidity
etc/timidity/timidity.cfg
share/man/man1/timidity.1.gz
share/man/man5/timidity.cfg.5.gz


[FILE:1307:patches/patch-configure]
--- configure.orig	2018-08-28 23:33:39 UTC
+++ configure
@@ -3930,7 +3930,7 @@ case "$target" in
         test -n "$SHLD" || SHLD="ld -Bshareable"
     so="so"
     ;;
-  *-*-freebsd*)
+  *-*-freebsd*|*-*-dragonfly|*-*-midnight*)
     if test "$ELFFORMAT" = yes; then
 	test -n "$SHLD" || SHLD="ld -Bshareable"
     else
@@ -12600,7 +12600,7 @@ fi;
 
 if test "x$au_enable_default" = xyes; then
   case "$target" in
-  *-*-linux*|*-*-freebsd*)
+  *-*-linux*|*-*-freebsd*|*-*-dragonfly*|*-*-midnight*)
     au_enable_oss=yes
     ;;
   *-*-bsdi2.0)
@@ -12658,7 +12658,7 @@ if test "x$au_enable_oss" = xyes; then
 echo "${ECHO_T}yes - <sys/soundcard.h>" >&6
   else
     case "$target" in
-      *linux*|*freebsd*)
+      *linux*|*freebsd*|*dragonfly*|*midnight*)
                 echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
         ;;
@@ -17518,7 +17518,7 @@ fi
 
    LIBS="$LIBS $lib_curses_opt"
     case "$target" in
-       *-*-freebsd123*)
+       *-*-skip*)
          EXTRALIBS="$EXTRALIBS -lmytinfo"
          ;;
      esac
@@ -17529,7 +17529,7 @@ xdynamic)
   dynamic_targets="$dynamic_targets if_ncurses.\$(so)"
    n_so_libs="$lib_curses_opt"
     case "$target" in
-       *-*-freebsd123*)
+       *-*-skip*)
          EXTRALIBS="$EXTRALIBS -lmytinfo"
          ;;
      esac


[FILE:834:patches/patch-timidity_sysdep.h]
--- timidity/sysdep.h.orig	2008-05-21 13:01:44 UTC
+++ timidity/sysdep.h
@@ -175,20 +175,9 @@ typedef unsigned long  u_ptr_size_t;
 #ifdef LITTLE_ENDIAN
 # define LE_SHORT(x) (x)
 # define LE_LONG(x) (x)
-# ifdef __FreeBSD__
-#  include <osreldate.h>
-#  if __FreeBSD_version <= 500000
-#    define BE_SHORT(x) __byte_swap_word(x)
-#    define BE_LONG(x) __byte_swap_long(x)
-#  else
-#    if __FreeBSD_version <= 500028
-#      define BE_SHORT(x) __uint8_swap_uint16(x)
-#      define BE_LONG(x) __uint8_swap_uint32(x)
-#    else
-#      define BE_SHORT(x) __bswap16(x)
-#      define BE_LONG(x) __bswap32(x)
-#    endif
-#  endif
+# if defined __FreeBSD__ || defined __DragonFly__
+#  define BE_SHORT(x) __bswap16(x)
+#  define BE_LONG(x) __bswap32(x)
 # else
 #  define BE_SHORT(x) XCHG_SHORT(x)
 #  define BE_LONG(x) XCHG_LONG(x)

