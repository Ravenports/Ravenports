# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		kf5-extra-cmake-modules
VERSION=		5.115.0
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		KF5 Extra modules and scripts for CMake
HOMEPAGE=		https://api.kde.org/frameworks/extra-cmake-modules/html/index.html
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://download.kde.org/stable/frameworks/5.115/
DISTFILE[1]=		extra-cmake-modules-5.115.0.tar.xz:main
DIST_SUBDIR=		kde5
DF_INDEX=		1
SPKGS[std]=		set
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		python-Sphinx:single:python_default
BUILDRUN_DEPENDS=	qt5-qttools:primary:std
			qt5-qttools:dev:std

USES=			cmake pkgconfig

DISTNAME=		extra-cmake-modules-5.115.0

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/COPYING-CMAKE-SCRIPTS
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/kf5-extra-cmake-modules

CMAKE_ARGS=		-DCMAKE_PREFIX_PATH={{PREFIX}}/lib/qt5/cmake

pre-configure:
	# remove patch backups before they get installed
	${FIND} ${WRKSRC} -name "*.orig" -delete

[FILE:301:descriptions/desc.primary]
The Extra CMake Modules package, or ECM, adds to the modules provided by 
CMake, including ones used by find_package() to find common software, ones 
that can be used directly in CMakeLists.txt files to perform common tasks 
and toolchain files that must be specified on the command line by the user.


[FILE:118:distinfo]
ee3e35f6a257526b8995a086dd190528a8ef4b3854b1e457b8122701b0ce45ee       332504 kde5/extra-cmake-modules-5.115.0.tar.xz


[FILE:3201:manifests/plist.primary]
share/ECM/cmake/
 ECMConfig.cmake
 ECMConfigVersion.cmake
share/ECM/find-modules/
 ECMFindModuleHelpersStub.cmake
 Find7Zip.cmake
 Find7z.cmake
 FindCanberra.cmake
 FindEGL.cmake
 FindGLIB2.cmake
 FindGperf.cmake
 FindGradle.cmake
 FindIcoTool.cmake
 FindInotify.cmake
 FindIsoCodes.cmake
 FindKF5.cmake
 FindLibExiv2.cmake
 FindLibGit2.cmake
 FindLibMount.cmake
 FindLibcap.cmake
 FindOpenEXR.cmake
 FindPhoneNumber.cmake
 FindPoppler.cmake
 FindPulseAudio.cmake
 FindPythonModuleGeneration.cmake
 FindQHelpGenerator.cmake
 FindQtWaylandScanner.cmake
 FindReuseTool.cmake
 FindSasl2.cmake
 FindSeccomp.cmake
 FindSharedMimeInfo.cmake
 FindTaglib.cmake
 FindUDev.cmake
 FindWayland.cmake
 FindWaylandProtocols.cmake
 FindWaylandScanner.cmake
 FindX11_XCB.cmake
 FindXCB.cmake
 Findepoxy.cmake
 Findgzip.cmake
 GeneratePythonBindingUmbrellaModule.cmake
 Qt5Ruleset.py
 local.properties.cmake
 rules_engine.py
 run-sip.py
 settings.gradle.cmake
 sip_generator.py
share/ECM/kde-modules/
 KDECMakeSettings.cmake
 KDEClangFormat.cmake
 KDECompilerSettings.cmake
 KDEFrameworkCompilerLegacySettings.cmake
 KDEFrameworkCompilerSettings.cmake
 KDEGitCommitHooks.cmake
 KDEInstallDirs.cmake
 KDEInstallDirs5.cmake
 KDEInstallDirs6.cmake
 KDEInstallDirsCommon.cmake
 KDEMetaInfoPlatformCheck.cmake
 KDEPackageAppTemplates.cmake
 KDESetupPrefixScript.cmake
 appstreamtest.cmake
 clang-format.in
 prefix.sh.fish.in
 prefix.sh.in
share/ECM/kde-modules/kde-git-commit-hooks/
 clang-format.sh
 pre-commit.in
share/ECM/modules/
 CheckAtomic.cmake
 ECMAddAppIcon.cmake
 ECMAddQch.cmake
 ECMAddQtDesignerPlugin.cmake
 ECMAddTests.cmake
 ECMCheckOutboundLicense.cmake
 ECMConfiguredInstall.cmake
 ECMCoverageOption.cmake
 ECMCreateQmFromPoFiles.cmake
 ECMDeprecationSettings.cmake
 ECMEnableSanitizers.cmake
 ECMFindModuleHelpers.cmake
 ECMFindQmlModule.cmake
 ECMFindQmlModule.cmake.in
 ECMGenerateDBusServiceFile.cmake
 ECMGenerateExportHeader.cmake
 ECMGenerateHeaders.cmake
 ECMGeneratePkgConfigFile.cmake
 ECMGeneratePriFile.cmake
 ECMGenerateQmlTypes.cmake
 ECMInstallIcons.cmake
 ECMMarkAsTest.cmake
 ECMMarkNonGuiExecutable.cmake
 ECMOptionalAddSubdirectory.cmake
 ECMPackageConfigHelpers.cmake
 ECMPoQmTools.cmake
 ECMQMLModules.cmake
 ECMQchDoxygen.config.in
 ECMQchDoxygenLayout.xml
 ECMQmLoader.cpp.in
 ECMQmlModule.cmake
 ECMQmlModule.cpp.in
 ECMQmlModule.cpp.in.license
 ECMQmlModule.h.in
 ECMQmlModule.h.in.license
 ECMQtDeclareLoggingCategory.cmake
 ECMQtDeclareLoggingCategory.cpp.in
 ECMQtDeclareLoggingCategory.h.in
 ECMQueryQmake.cmake
 ECMQueryQt.cmake
 ECMSetupQtPluginMacroNames.cmake
 ECMSetupVersion.cmake
 ECMSourceVersionControl.cmake
 ECMUninstallTarget.cmake
 ECMUseFindModules.cmake
 ECMVersionHeader.h.in
 ECMWinResolveSymlinks.cmake
 QtVersionOption.cmake
 check-outbound-license.py
 ecm_uninstall.cmake.in
share/ECM/test-modules/test_execute_and_compare.cmake
share/ECM/toolchain/
 Android.cmake
 ECMAndroidDeployQt.cmake
 deployment-file-qt514.json.in
 deployment-file.json.in
 generate-fastlane-metadata.py
 hasMainSymbol.cmake
 specifydependencies.cmake
share/man/man7/
 ecm-developer.7.gz
 ecm-find-modules.7.gz
 ecm-kde-modules.7.gz
 ecm-modules.7.gz
 ecm-toolchains.7.gz
 ecm.7.gz


[FILE:4895:manifests/plist.docs]
share/doc/extra-cmake-modules/html/
 genindex.html
 index.html
 search.html
 searchindex.js
share/doc/extra-cmake-modules/html/_sources/index.rst.txt
share/doc/extra-cmake-modules/html/_sources/find-module/
 Find7Zip.rst.txt
 Find7z.rst.txt
 FindCanberra.rst.txt
 FindEGL.rst.txt
 FindGLIB2.rst.txt
 FindGperf.rst.txt
 FindGradle.rst.txt
 FindIcoTool.rst.txt
 FindInotify.rst.txt
 FindIsoCodes.rst.txt
 FindKF5.rst.txt
 FindLibExiv2.rst.txt
 FindLibGit2.rst.txt
 FindLibMount.rst.txt
 FindLibcap.rst.txt
 FindOpenEXR.rst.txt
 FindPhoneNumber.rst.txt
 FindPoppler.rst.txt
 FindPulseAudio.rst.txt
 FindQtWaylandScanner.rst.txt
 FindSasl2.rst.txt
 FindSeccomp.rst.txt
 FindSharedMimeInfo.rst.txt
 FindTaglib.rst.txt
 FindUDev.rst.txt
 FindWayland.rst.txt
 FindWaylandProtocols.rst.txt
 FindWaylandScanner.rst.txt
 FindX11_XCB.rst.txt
 FindXCB.rst.txt
 Findepoxy.rst.txt
 Findgzip.rst.txt
share/doc/extra-cmake-modules/html/_sources/kde-module/
 KDECMakeSettings.rst.txt
 KDEClangFormat.rst.txt
 KDECompilerSettings.rst.txt
 KDEFrameworkCompilerSettings.rst.txt
 KDEGitCommitHooks.rst.txt
 KDEInstallDirs.rst.txt
 KDEInstallDirs5.rst.txt
 KDEInstallDirs6.rst.txt
 KDEMetaInfoPlatformCheck.rst.txt
 KDEPackageAppTemplates.rst.txt
share/doc/extra-cmake-modules/html/_sources/manual/
 ecm-developer.7.rst.txt
 ecm-find-modules.7.rst.txt
 ecm-kde-modules.7.rst.txt
 ecm-modules.7.rst.txt
 ecm-toolchains.7.rst.txt
 ecm.7.rst.txt
share/doc/extra-cmake-modules/html/_sources/module/
 CheckAtomic.rst.txt
 ECMAddAppIcon.rst.txt
 ECMAddQch.rst.txt
 ECMAddQtDesignerPlugin.rst.txt
 ECMAddTests.rst.txt
 ECMCheckOutboundLicense.rst.txt
 ECMConfiguredInstall.rst.txt
 ECMCoverageOption.rst.txt
 ECMCreateQmFromPoFiles.rst.txt
 ECMDeprecationSettings.rst.txt
 ECMEnableSanitizers.rst.txt
 ECMFindModuleHelpers.rst.txt
 ECMFindQmlModule.rst.txt
 ECMGenerateDBusServiceFile.rst.txt
 ECMGenerateExportHeader.rst.txt
 ECMGenerateHeaders.rst.txt
 ECMGeneratePkgConfigFile.rst.txt
 ECMGeneratePriFile.rst.txt
 ECMGenerateQmlTypes.rst.txt
 ECMInstallIcons.rst.txt
 ECMMarkAsTest.rst.txt
 ECMMarkNonGuiExecutable.rst.txt
 ECMOptionalAddSubdirectory.rst.txt
 ECMPackageConfigHelpers.rst.txt
 ECMPoQmTools.rst.txt
 ECMQmlModule.rst.txt
 ECMQtDeclareLoggingCategory.rst.txt
 ECMQueryQt.rst.txt
 ECMSetupQtPluginMacroNames.rst.txt
 ECMSetupVersion.rst.txt
 ECMSourceVersionControl.rst.txt
 ECMUninstallTarget.rst.txt
 ECMUseFindModules.rst.txt
 ECMWinResolveSymlinks.rst.txt
 QtVersionOption.rst.txt
share/doc/extra-cmake-modules/html/_sources/toolchain/Android.rst.txt
share/doc/extra-cmake-modules/html/_static/
 basic.css
 classic.css
 default.css
 doctools.js
 documentation_options.js
 ecm.css
 file.png
 kde-favicon.ico
 language_data.js
 minus.png
 plus.png
 pygments.css
 searchtools.js
 sidebar.js
 sphinx_highlight.js
share/doc/extra-cmake-modules/html/find-module/
 Find7Zip.html
 Find7z.html
 FindCanberra.html
 FindEGL.html
 FindGLIB2.html
 FindGperf.html
 FindGradle.html
 FindIcoTool.html
 FindInotify.html
 FindIsoCodes.html
 FindKF5.html
 FindLibExiv2.html
 FindLibGit2.html
 FindLibMount.html
 FindLibcap.html
 FindOpenEXR.html
 FindPhoneNumber.html
 FindPoppler.html
 FindPulseAudio.html
 FindQtWaylandScanner.html
 FindSasl2.html
 FindSeccomp.html
 FindSharedMimeInfo.html
 FindTaglib.html
 FindUDev.html
 FindWayland.html
 FindWaylandProtocols.html
 FindWaylandScanner.html
 FindX11_XCB.html
 FindXCB.html
 Findepoxy.html
 Findgzip.html
share/doc/extra-cmake-modules/html/kde-module/
 KDECMakeSettings.html
 KDEClangFormat.html
 KDECompilerSettings.html
 KDEFrameworkCompilerSettings.html
 KDEGitCommitHooks.html
 KDEInstallDirs.html
 KDEInstallDirs5.html
 KDEInstallDirs6.html
 KDEMetaInfoPlatformCheck.html
 KDEPackageAppTemplates.html
share/doc/extra-cmake-modules/html/manual/
 ecm-developer.7.html
 ecm-find-modules.7.html
 ecm-kde-modules.7.html
 ecm-modules.7.html
 ecm-toolchains.7.html
 ecm.7.html
share/doc/extra-cmake-modules/html/module/
 CheckAtomic.html
 ECMAddAppIcon.html
 ECMAddQch.html
 ECMAddQtDesignerPlugin.html
 ECMAddTests.html
 ECMCheckOutboundLicense.html
 ECMConfiguredInstall.html
 ECMCoverageOption.html
 ECMCreateQmFromPoFiles.html
 ECMDeprecationSettings.html
 ECMEnableSanitizers.html
 ECMFindModuleHelpers.html
 ECMFindQmlModule.html
 ECMGenerateDBusServiceFile.html
 ECMGenerateExportHeader.html
 ECMGenerateHeaders.html
 ECMGeneratePkgConfigFile.html
 ECMGeneratePriFile.html
 ECMGenerateQmlTypes.html
 ECMInstallIcons.html
 ECMMarkAsTest.html
 ECMMarkNonGuiExecutable.html
 ECMOptionalAddSubdirectory.html
 ECMPackageConfigHelpers.html
 ECMPoQmTools.html
 ECMQmlModule.html
 ECMQtDeclareLoggingCategory.html
 ECMQueryQt.html
 ECMSetupQtPluginMacroNames.html
 ECMSetupVersion.html
 ECMSourceVersionControl.html
 ECMUninstallTarget.html
 ECMUseFindModules.html
 ECMWinResolveSymlinks.html
 QtVersionOption.html
share/doc/extra-cmake-modules/html/toolchain/Android.html


[FILE:444:patches/patch-CMakeLists.txt]
--- CMakeLists.txt.orig	2023-12-23 00:45:39 UTC
+++ CMakeLists.txt
@@ -44,7 +44,7 @@ set(KDE_MODULES_INSTALL_DIR       ${SHAR
 set(MODULES_INSTALL_DIR           ${SHARE_INSTALL_DIR}/ECM/modules/)
 set(TOOLCHAIN_MODULES_INSTALL_DIR ${SHARE_INSTALL_DIR}/ECM/toolchain/)
 
-set(DOC_INSTALL_DIR ${SHARE_INSTALL_DIR}/doc/ECM
+set(DOC_INSTALL_DIR ${SHARE_INSTALL_DIR}/doc/extra-cmake-modules
     CACHE
     PATH
     "HTML and QtHelp documentation"


[FILE:1400:patches/patch-find-modules_FindOpenEXR.cmake]
--- find-modules/FindOpenEXR.cmake.orig	2023-12-23 00:45:39 UTC
+++ find-modules/FindOpenEXR.cmake
@@ -43,6 +43,13 @@ pkg_check_modules(PC_OpenEXR QUIET OpenE
 
 set(OpenEXR_DEFINITIONS ${PC_OpenEXR_CFLAGS_OTHER})
 
+find_path(Imath_INCLUDE_DIR ImathMath.h
+   PATHS
+   ${PC_Imath_INCLUDEDIR}
+   ${PC_Imath_INCLUDE_DIRS}
+   PATH_SUFFIXES Imath
+)
+
 find_path(OpenEXR_INCLUDE_DIR ImfRgbaFile.h
    PATHS
    ${PC_OpenEXR_INCLUDEDIR}
@@ -51,7 +58,7 @@ find_path(OpenEXR_INCLUDE_DIR ImfRgbaFil
 )
 
 # Required libraries for OpenEXR
-find_library(OpenEXR_HALF_LIBRARY NAMES Half
+find_library(OpenEXR_HALF_LIBRARY NAMES Imath
    PATHS
    ${PC_OpenEXR_LIBDIR}
    ${PC_OpenEXR_LIBRARY_DIRS}
@@ -72,7 +79,7 @@ find_library(OpenEXR_ILMTHREAD_LIBRARY N
    ${PC_OpenEXR_LIBRARY_DIRS}
 )
 # This is the actual OpenEXR library
-find_library(OpenEXR_ILMIMF_LIBRARY NAMES IlmImf
+find_library(OpenEXR_ILMIMF_LIBRARY NAMES OpenEXR
    PATHS
    ${PC_OpenEXR_LIBDIR}
    ${PC_OpenEXR_LIBRARY_DIRS}
@@ -108,9 +115,10 @@ find_package_handle_standard_args(OpenEX
       OpenEXR_IMATH_LIBRARY
       OpenEXR_ILMTHREAD_LIBRARY
       OpenEXR_INCLUDE_DIR
+      Imath_INCLUDE_DIR
    VERSION_VAR OpenEXR_VERSION_STRING)
 
-set(OpenEXR_INCLUDE_DIRS ${OpenEXR_INCLUDE_DIR})
+set(OpenEXR_INCLUDE_DIRS ${Imath_INCLUDE_DIR} ${OpenEXR_INCLUDE_DIR})
 
 include(FeatureSummary)
 set_package_properties(OpenEXR PROPERTIES


[FILE:1098:patches/patch-kde-modules_KDEMetaInfoPlatformCheck.cmake]
--- kde-modules/KDEMetaInfoPlatformCheck.cmake.orig	2023-12-23 00:45:39 UTC
+++ kde-modules/KDEMetaInfoPlatformCheck.cmake
@@ -46,6 +46,18 @@ if (NOT "${KF_IGNORE_PLATFORM_CHECK}")
                 if (CMAKE_SYSTEM_NAME MATCHES "OpenBSD")
                     set(_MetainfoFoundSupportedPlatform true)
                 endif()
+            elseif (${CMAKE_MATCH_1} STREQUAL "DragonFly")
+                if (CMAKE_SYSTEM_NAME MATCHES "DragonFly")
+                    set(_MetainfoFoundSupportedPlatform true)
+                endif()
+            elseif (${CMAKE_MATCH_1} STREQUAL "NetBSD")
+                if (CMAKE_SYSTEM_NAME MATCHES "NetBSD")
+                    set(_MetainfoFoundSupportedPlatform true)
+                endif()
+            elseif (${CMAKE_MATCH_1} STREQUAL "MidnightBSD")
+                if (CMAKE_SYSTEM_NAME MATCHES "MidnightBSD")
+                    set(_MetainfoFoundSupportedPlatform true)
+                endif()
             elseif (${CMAKE_MATCH_1} STREQUAL "Windows")
                 if (WIN32)
                     set(_MetainfoFoundSupportedPlatform true)


[FILE:279:patches/patch-metainfo.yaml]
--- metainfo.yaml.orig	2023-12-23 00:45:39 UTC
+++ metainfo.yaml
@@ -5,6 +5,9 @@ type: functional
 platforms:
     - name: Linux
     - name: FreeBSD
+    - name: DragonFly
+    - name: NetBSD
+    - name: MidnightBSD
     - name: Windows
     - name: macOS
     - name: Android


[FILE:693:patches/patch-modules_ECMGeneratePkgConfigFile.cmake]
We never install pc files at /raven/libdata/pkgconfig!

--- modules/ECMGeneratePkgConfigFile.cmake.orig	2023-12-23 00:45:39 UTC
+++ modules/ECMGeneratePkgConfigFile.cmake
@@ -212,7 +212,7 @@ Requires: ${PKGCONFIG_TARGET_DEPS}
   file(WRITE ${PKGCONFIG_FILENAME} "${PKGCONFIG_CONTENT}")
 
   if(EGPF_INSTALL)
-    if(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
+    if(CMAKE_SYSTEM_NAME MATCHES "NONE")
       set(ECM_PKGCONFIG_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/libdata/pkgconfig" CACHE PATH "The directory where pkgconfig will be installed to.")
     else()
       set(ECM_PKGCONFIG_INSTALL_DIR "${EGPF_LIB_INSTALL_DIR}/pkgconfig" CACHE PATH "The directory where pkgconfig will be installed to.")

