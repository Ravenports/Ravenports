# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libuv
VERSION=		1.44.2
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Multi-platform support for asynchronous I/O
HOMEPAGE=		https://github.com/libuv/libuv
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/libuv:libuv:v1.44.2
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			autoreconf libtool pkgconfig solaris-funcs cpe

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

CPE_VENDOR=		libuv_project
FPC_EQUIVALENT=		devel/libuv
SOL_FUNCTIONS=		mkdtemp:src/unix/fs.c
			strnlen:src/unix/getaddrinfo.c

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		1.0.0

VAR_OPSYS[sunos]=	CFLAGS=-DSUNOS_NO_IFADDRS

pre-configure:
	${ECHO_CMD} "m4_define([UV_EXTRA_AUTOMAKE_FLAGS], [ serial-tests])" \
		> ${WRKSRC}/m4/libuv-extra-automake-flags.m4

[FILE:463:descriptions/desc.single]
libuv is a multi-platform support library with a focus on asynchronous I/O.

Feature highlights:
 + Full-featured event loop backed by epoll, kqueue, IOCP, event ports.
 + Asynchronous TCP and UDP sockets
 + Asynchronous DNS resolution
 + Asynchronous file and file system operations
 + File system events
 + ANSI escape code controlled TTY
 + Child processes
 + Thread pool
 + Signal handling
 + High resolution clock
 + Threading and synchronization primitives


[FILE:104:distinfo]
e6e2ba8b4c349a4182a33370bb9be5e23c51b32efb9b9e209d0e8556b73a48da      1309062 libuv-libuv-1.44.2.tar.gz


[FILE:398:manifests/plist.single]
%%ONLY-DARWIN%%include/uv/darwin.h
%%ONLY-DRAGONFLY%%include/uv/bsd.h
%%ONLY-FREEBSD%%include/uv/bsd.h
%%ONLY-LINUX%%include/uv/linux.h
%%ONLY-MIDNIGHTBSD%%include/uv/bsd.h
%%ONLY-NETBSD%%include/uv/bsd.h
%%ONLY-SUNOS%%include/uv/sunos.h
include/uv.h
include/uv/
 errno.h
 threadpool.h
 unix.h
 version.h
lib/
 libuv.a
 libuv.so
 libuv.so.%%SOMAJOR%%
 libuv.so.%%SOVERSION%%
lib/pkgconfig/libuv.pc


[FILE:620:patches/patch-Makefile.am]
--- Makefile.am.orig	2022-07-12 16:16:33 UTC
+++ Makefile.am
@@ -446,6 +446,17 @@ libuv_la_SOURCES += src/unix/bsd-ifaddrs
 test_run_tests_LDFLAGS += -lutil
 endif
 
+if MIDNIGHT 
+uvinclude_HEADERS += include/uv/bsd.h
+libuv_la_SOURCES += src/unix/bsd-ifaddrs.c \
+                    src/unix/bsd-proctitle.c \
+                    src/unix/freebsd.c \
+                    src/unix/kqueue.c \
+                    src/unix/posix-hrtime.c \
+                    src/unix/random-getrandom.c
+test_run_tests_LDFLAGS += -lutil
+endif
+
 if HAIKU
 uvinclude_HEADERS += include/uv/posix.h
 libuv_la_CFLAGS += -D_BSD_SOURCE


[FILE:710:patches/patch-configure.ac]
--- configure.ac.orig	2022-07-12 16:16:33 UTC
+++ configure.ac
@@ -63,6 +63,7 @@ AM_CONDITIONAL([DARWIN],   [AS_CASE([$ho
 AM_CONDITIONAL([DRAGONFLY],[AS_CASE([$host_os],[dragonfly*],    [true], [false])])
 AM_CONDITIONAL([FREEBSD],  [AS_CASE([$host_os],[*freebsd*],     [true], [false])])
 AM_CONDITIONAL([KFREEBSD], [AS_CASE([$host_os],[kfreebsd*],     [true], [false])])
+AM_CONDITIONAL([MIDNIGHT], [AS_CASE([$host_os],[midnightbsd*],  [true], [false])])
 AM_CONDITIONAL([HAIKU],    [AS_CASE([$host_os],[haiku],         [true], [false])])
 AM_CONDITIONAL([HURD],     [AS_CASE([$host_os],[gnu*],          [true], [false])])
 AM_CONDITIONAL([LINUX],    [AS_CASE([$host_os],[linux*],        [true], [false])])


[FILE:1498:patches/patch-src_unix_fs.c]
--- src/unix/fs.c.orig	2022-03-09 17:54:54 UTC
+++ src/unix/fs.c
@@ -1139,13 +1139,13 @@ static ssize_t uv__fs_sendfile(uv_fs_t*
 static ssize_t uv__fs_utime(uv_fs_t* req) {
 #if defined(__linux__)                                                         \
     || defined(_AIX71)                                                         \
-    || defined(__sun)                                                          \
     || defined(__HAIKU__)
   struct timespec ts[2];
   ts[0] = uv__fs_to_timespec(req->atime);
   ts[1] = uv__fs_to_timespec(req->mtime);
   return utimensat(AT_FDCWD, req->path, ts, 0);
 #elif defined(__APPLE__)                                                      \
+    || defined(__sun)                                                         \
     || defined(__DragonFly__)                                                 \
     || defined(__FreeBSD__)                                                   \
     || defined(__FreeBSD_kernel__)                                            \
@@ -1179,7 +1179,6 @@ static ssize_t uv__fs_utime(uv_fs_t* req
 static ssize_t uv__fs_lutime(uv_fs_t* req) {
 #if defined(__linux__)            ||                                           \
     defined(_AIX71)               ||                                           \
-    defined(__sun)                ||                                           \
     defined(__HAIKU__)            ||                                           \
     defined(__GNU__)
   struct timespec ts[2];

