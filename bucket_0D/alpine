# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		alpine
VERSION=		2.26
REVISION=		4
KEYWORDS=		mail
VARIANTS=		std
SDESC[std]=		Powerful and easy to use text email/news client
HOMEPAGE=		https://alpineapp.email/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://alpineapp.email/alpine/release/src/
DISTFILE[1]=		alpine-2.26.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		openpam:dev:std
BUILDRUN_DEPENDS=	openpam:primary:std

USES=			cpe gettext libtool ncurses ssl:openssl30

LICENSE=		APACHE20:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		APACHE20:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/alpine/alpine.h
LICENSE_SCHEME=		solo

CPE_VENDOR=		alpine_project
FPC_EQUIVALENT=		mail/alpine

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--without-krb5
			--without-tcl
			--with-system-pinerc={{PREFIX}}/etc/alpine.conf
			--with-system-fixed-pinerc={{PREFIX}}/etc/alpine.conf.fixed
			--with-password-prog=/usr/bin/passwd
			--with-system-mail-directory=/var/mail
			--with-ssl-certs-dir={{OPENSSLCERT}}/cert
			--with-ssl-dir={{OPENSSLCERT}}
			--with-ssl-include-dir={{OPENSSLINC}}
			--with-ssl-lib-dir={{OPENSSLLIB}}

CFLAGS=			-Wno-incompatible-pointer-types
VAR_OPSYS[sunos]=	CFLAGS=-D_XPG6
			CFLAGS=-D__EXTENSIONS__
VAR_OPSYS[netbsd]=	CFLAGS=-D_NETBSD_SOURCE

[FILE:428:descriptions/desc.primary]
ALPINE is a rewrite of the PINE Email and News client with features added 
such as unicode support. It is polular among email power users due to 
being both very configurable and powerful. At the same time Alpine is 
meant to be easy to use, providing detailed context-sensitive help.

There are various popular patches for Alpine, but currently this package
simply provides the MUA as released and without any patches applied.


[FILE:97:distinfo]
c0779c2be6c47d30554854a3e14ef5e36539502b331068851329275898a9baba      7517628 alpine-2.26.tar.xz


[FILE:42:manifests/plist.primary]
bin/
 alpine
 pico
 pilot
 rpdump
 rpload


[FILE:63:manifests/plist.man]
share/man/man1/
 alpine.1
 pico.1
 pilot.1
 rpdump.1
 rpload.1


[FILE:1722:patches/patch-configure]
--- configure.orig	2022-06-03 00:14:00 UTC
+++ configure
@@ -7431,7 +7431,7 @@ darwin* | rhapsody*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-freebsd* | dragonfly*)
+freebsd* | dragonfly* | midnight*)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     case $host_cpu in
     i*86 )
@@ -11809,7 +11809,7 @@ fi
       ;;
 
     # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
-    freebsd* | dragonfly*)
+    freebsd* | dragonfly* | midnight*)
       archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
       hardcode_libdir_flag_spec='-R$libdir'
       hardcode_direct=yes
@@ -12854,7 +12854,7 @@ dgux*)
   shlibpath_var=LD_LIBRARY_PATH
   ;;
 
-freebsd* | dragonfly*)
+freebsd* | dragonfly* | midnight*)
   # DragonFly does not have aout.  When/if they implement a new
   # versioning mechanism, adjust this.
   if test -x /usr/bin/objformat; then
@@ -18321,7 +18321,7 @@ else
 	alpine_SSLINCLUDE="/usr/include/openssl"
 	alpine_SSLLIB="/usr/lib"
       ;;
-    *-*-dragonfly*)
+    *-*-dragonfly*|*-*-midnight*)
 	alpine_SSLDIR="/etc/openssl"
 	alpine_SSLCERTS="$alpine_SSLDIR/certs"
 	alpine_SSLKEYS="$alpine_SSLDIR/private"
@@ -19005,7 +19005,7 @@ $as_echo "#define __EXTENSIONS__ 1" >>co
     systype="DFB"
     alpine_path_delim="/"
     alpine_mode_readonly="(0600)"
-    alpine_c_client_target="neb"
+    alpine_c_client_target="bsf"
     ;;
   *-*-bsdi*)
     systype="BSI"
@@ -19013,7 +19013,7 @@ $as_echo "#define __EXTENSIONS__ 1" >>co
     alpine_mode_readonly="(0600)"
     alpine_c_client_target="bsi"
     ;;
-  *-*-freebsd*)
+  *-*-freebsd*|*-*-midnight*)
     systype="BSF"
     alpine_path_delim="/"
     alpine_mode_readonly="(0600)"


[FILE:661:patches/patch-imap_Makefile]
--- imap/Makefile.orig	2022-06-03 00:14:00 UTC
+++ imap/Makefile
@@ -467,10 +467,7 @@ lnxnul:
 lnxok:
 	@echo You are building for traditional Linux.  Most modern Linux
 	@echo systems require that you build using make slx.
-	@echo Do you want to continue this build?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit 1;; esac'
-	@echo OK, I will remember that you really want to build for
-	@echo traditional Linux.  You will not see this message again.
+	@echo So that\'s what we are going to do.
 	@echo If you discover that you can not log in to the POP and IMAP
 	@echo servers, then do the following commands:
 	@echo % rm lnxok


[FILE:253:patches/patch-imap_src_c-client_netmsg.c]
--- imap/src/c-client/netmsg.c.orig	2022-06-03 00:14:00 UTC
+++ imap/src/c-client/netmsg.c
@@ -29,6 +29,7 @@
 
 #include <stdio.h>
 #include <errno.h>
+#include <time.h>
 extern int errno;		/* just in case */
 #include "c-client.h"
 #include "netmsg.h"


[FILE:231:patches/patch-imap_src_c-client_nntp.c]
--- imap/src/c-client/nntp.c.orig	2022-06-03 00:14:00 UTC
+++ imap/src/c-client/nntp.c
@@ -28,6 +28,7 @@
 
 #include <ctype.h>
 #include <stdio.h>
+#include <time.h>
 #include "c-client.h"
 #include "newsrc.h"
 #include "netmsg.h"


[FILE:168:patches/patch-pith_imap.h]
--- pith/imap.h.orig	2022-06-03 00:14:00 UTC
+++ pith/imap.h
@@ -18,6 +18,7 @@
 #define PITH_IMAP_INCLUDED
 
 
+#include <arpa/inet.h>
 #include "../pith/string.h"
 
 

