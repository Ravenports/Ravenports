# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		db18
VERSION=		18.1.32
KEYWORDS=		databases java
VARIANTS=		standard
SDESC[standard]=	Oracle Berkeley DB, revision 18
HOMEPAGE=		https://www.oracle.com/database/berkeley-db/db.html
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://fossies.org/linux/misc/
			http://download.oracle.com/berkeley-db/
DISTFILE[1]=		db-18.1.32.tar.gz:main
DIST_SUBDIR=		bdb
DF_INDEX=		1
SPKGS[standard]=	complete
			shared
			static
			docs

OPTIONS_AVAILABLE=	CRYPTO TCL
OPTIONS_STANDARD=	CRYPTO TCL
OPT_ON[all]=		CRYPTO

USES=			gmake libtool c++:shared

DISTNAME=		db-18.1.32

LICENSE=		AGPLv3:shared
LICENSE_TERMS=		shared:{{WRKDIR}}/TERMS
LICENSE_FILE=		AGPLv3:stock
LICENSE_AWK=		TERMS:"^ \*$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

MUST_CONFIGURE=		gnu
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_WRKSRC=	{{WRKSRC}}/build_unix
CONFIGURE_SCRIPT=	dist/configure
CONFIGURE_ARGS=		--enable-cxx
			--enable-stl
			--enable-sql
			--enable-sql_codegen
			--disable-atomicsupport
			--includedir={{PREFIX}}/include/db18
			--libdir={{PREFIX}}/lib/db18
			--bindir={{PREFIX}}/bin/db18

MAKE_ARGS=		docdir={{STD_DOCDIR}}

INSTALL_TARGET=		install_include install_lib install_utilities
			install_docs
PLIST_SUB=		BDBMAJ=18
			BDBVER=18.1

[TCL].CONFIGURE_ARGS_OFF=		--disable-tcl
[TCL].CONFIGURE_ARGS_ON=		--with-tcl={{TCL_LIBDIR}}
[TCL].USES_ON=				tcl

[CRYPTO].DESCRIPTION=			Cryptography support
[CRYPTO].CONFIGURE_WITH_BOTH=		cryptography=yes

post-install-TCL-OFF:
.for i in api_reference/TCL
	${RM} -r ${STAGEDIR}${STD_DOCDIR}/${i}
.endfor

post-patch:
	${REINPLACE_CMD} -e '/^DOCLIST/{s/csharp//;}' \
		${WRKSRC}/dist/Makefile.in

post-install-TCL-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/db18/libdb_tcl-18.1.so
	${LN} -s -f db18/libdb_tcl-18.1.so ${STAGEDIR}${PREFIX}/lib
	${LN} -s -f libdb_tcl-18.1.a \
		${STAGEDIR}${PREFIX}/lib/db18/libdb_tcl.a
	echo "package ifneeded Db_tcl 18.1 \
	      [list load [file join $$dir libdb_tcl-18.1.so]] \
	     " > ${STAGEDIR}${PREFIX}/lib/db18/pkgIndex.tcl

post-install:
.for i in libdb libdb_cxx libdb_stl libdb_sql
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/db18/${i}-18.1.so
	${LN} -s -f db18/${i}-18.1.so ${STAGEDIR}${PREFIX}/lib
	${LN} -s -f ${i}-18.1.a ${STAGEDIR}${PREFIX}/lib/db18/${i}.a
.endfor
	cd ${STAGEDIR}${PREFIX}/bin/db18; \
	for i in *; do ${LN} -s -f db18/$$i ../$$i-18.1 ; done
	# remove java
	${RM} -r ${STAGEDIR}${STD_DOCDIR}/java
.for i in gsg gsg_db_rep gsg_txn
	${RM} -r ${STAGEDIR}${STD_DOCDIR}/${i}/JAVA
.endfor

[FILE:296:descriptions/desc.shared]
Oracle Berkeley DB is a family of open source embeddable databases
that allows developers to incorporate within their applications a
fast, scalable, transactional database engine with industrial grade
reliability and availability.

This package contains the executables and the shared libraries.


[FILE:604:descriptions/desc.static]
Oracle Berkeley DB is a family of open source embeddable databases
that allows developers to incorporate within their applications a
fast, scalable, transactional database engine with industrial grade
reliability and availability. As a result, customers and end-users
will experience an application that simply works, reliably manages
data, can scale under extreme load, but requires no ongoing database
administration. As a developer, you can focus on your application and
be confident that Oracle Berkeley DB will manage your persistence
needs.

This package contains the headers and static libraries.


[FILE:100:distinfo]
fa1fe7de9ba91ad472c25d026f931802597c29f28ae951960685cde487c8d654     44244747 bdb/db-18.1.32.tar.gz


[FILE:1066:manifests/plist.shared]
%%TCL-ON%%lib/libdb_tcl-%%BDBVER%%.so
%%TCL-ON%%lib/db%%BDBMAJ%%/
 libdb_tcl-%%BDBMAJ%%.so
 libdb_tcl-%%BDBVER%%.so
 libdb_tcl.so
bin/
 db_archive-%%BDBVER%%
 db_checkpoint-%%BDBVER%%
 db_convert-%%BDBVER%%
 db_deadlock-%%BDBVER%%
 db_dump-%%BDBVER%%
 db_hotbackup-%%BDBVER%%
 db_load-%%BDBVER%%
 db_log_verify-%%BDBVER%%
 db_printlog-%%BDBVER%%
 db_recover-%%BDBVER%%
 db_replicate-%%BDBVER%%
 db_stat-%%BDBVER%%
 db_tuner-%%BDBVER%%
 db_upgrade-%%BDBVER%%
 db_verify-%%BDBVER%%
 dbsql-%%BDBVER%%
bin/db%%BDBMAJ%%/
 db_archive
 db_checkpoint
 db_convert
 db_deadlock
 db_dump
 db_hotbackup
 db_load
 db_log_verify
 db_printlog
 db_recover
 db_replicate
 db_stat
 db_tuner
 db_upgrade
 db_verify
 dbsql
lib/
 libdb-%%BDBVER%%.so
 libdb_cxx-%%BDBVER%%.so
 libdb_sql-%%BDBVER%%.so
 libdb_stl-%%BDBVER%%.so
lib/db%%BDBMAJ%%/
 libdb-%%BDBMAJ%%.so
 libdb-%%BDBVER%%.so
 libdb.so
 libdb_cxx-%%BDBMAJ%%.so
 libdb_cxx-%%BDBVER%%.so
 libdb_cxx.so
 libdb_sql-%%BDBMAJ%%.so
 libdb_sql-%%BDBVER%%.so
 libdb_sql.so
 libdb_stl-%%BDBMAJ%%.so
 libdb_stl-%%BDBVER%%.so
 libdb_stl.so


[FILE:516:manifests/plist.static]
%%TCL-ON%%lib/db%%BDBMAJ%%/
 libdb_tcl-%%BDBVER%%.a
 libdb_tcl.a
 pkgIndex.tcl
include/db%%BDBMAJ%%/
 db.h
 db_cxx.h
 dbsql.h
 dbstl_base_iterator.h
 dbstl_common.h
 dbstl_container.h
 dbstl_dbc.h
 dbstl_dbt.h
 dbstl_element_ref.h
 dbstl_exception.h
 dbstl_inner_utility.h
 dbstl_map.h
 dbstl_resource_manager.h
 dbstl_set.h
 dbstl_utility.h
 dbstl_vector.h
lib/db%%BDBMAJ%%/
 libdb-%%BDBVER%%.a
 libdb.a
 libdb_cxx-%%BDBVER%%.a
 libdb_cxx.a
 libdb_sql-%%BDBVER%%.a
 libdb_sql.a
 libdb_stl-%%BDBVER%%.a
 libdb_stl.a


[FILE:806:patches/patch-dist_configure]
--- dist/configure.orig	2019-02-19 21:51:17 UTC
+++ dist/configure
@@ -28299,7 +28299,7 @@ fi
 if test "$db_cv_debug" = "yes"; then
   CPPFLAGS="$CPPFLAGS -g"
 fi
-(cd sql && eval "\$SHELL ../$sqlite_dir/configure --disable-option-checking $ac_sub_configure_args CPPFLAGS=\"-I.. $CPPFLAGS\" --enable-amalgamation=$db_cv_sql_amalgamation --enable-readline=$with_readline --enable-editline=$with_editline" && cat build_config.h >> config.h) || exit 1
+(cd sql && eval "\$SHELL $sqlite_dir/configure --disable-option-checking $ac_sub_configure_args CPPFLAGS=\"-I.. $CPPFLAGS\" --enable-amalgamation=$db_cv_sql_amalgamation --enable-readline=$with_readline --enable-editline=$with_editline" && cat build_config.h >> config.h) || exit 1
 
 # Configure JDBC if --enable-jdbc
 if test "$db_cv_jdbc" != "no"; then


[FILE:847:patches/patch-src_dbinc_mutex__int.h]
--- src/dbinc/mutex_int.h.orig	2019-02-19 21:51:20 UTC
+++ src/dbinc/mutex_int.h
@@ -9,6 +9,10 @@
 #ifndef _DB_MUTEX_INT_H_
 #define	_DB_MUTEX_INT_H_
 
+#if defined __DragonFly__ || defined __FreeBSD__
+#include <machine/atomic.h>
+#endif
+
 #include "dbinc/atomic.h"
 
 #if defined(__cplusplus)
@@ -487,11 +491,11 @@ typedef unsigned int tsl_t;
 #define	MUTEX_UNSET(tsl)	(*(volatile tsl_t *)(tsl) = 0)
 #define	MUTEX_INIT(tsl)         (MUTEX_UNSET(tsl), 0)
 #define	MUTEX_MEMBAR(x) \
-	({ __asm__ volatile ("dsb"); })
+	dsb(x)
 #define	MEMBAR_ENTER() \
-	({ __asm__ volatile ("dsb"); })
+	dsb()
 #define	MEMBAR_EXIT() \
-	({ __asm__ volatile ("dsb"); })
+	dsb()
 #endif
 #endif
 
@@ -633,7 +637,7 @@ MUTEX_SET(int *tsl)  {
 	 : "=&r" (__r), "+r" (tsl)
 	 :
 	 : "cr0", "memory");
-	 return (int)tsl;
+	 return (tsl != 0);
 }
 
 static inline int

