# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-rpds-py
VERSION=		0.8.8
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Bindings to Rust persistent data structures (3.10)
SDESC[v11]=		Bindings to Rust persistent data structures (3.11)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/r/rpds-py
DISTFILE[1]=		rpds_py-0.8.8.tar.gz:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		rpds_py-0.8.8

GENERATED=		yes

[PY310].USES_ON=			python:py310,sutools

[PY311].USES_ON=			python:v11,sutools

[FILE:1787:descriptions/desc.single]
===========
``rpds.py``
===========

|PyPI| |Pythons| |CI|

Python bindings to the Rust rpds crate.

What's here is quite minimal (in transparency, it was written initially to
support replacing pyrsistent in the [referencing library]).
If you see something missing (which is very likely), a PR is definitely
welcome to add it.

Installation
------------

The distribution on PyPI is named ``rpds.py`` (equivalently ``rpds-py``),
and thus can be installed via e.g.:

.. code:: sh

    $ pip install rpds-py

Note that if you install ``rpds-py`` from source, you will need a Rust
toolchain installed, as it is a build-time dependency.
An example of how to do so in a Dockerfile can be found [here].

If you believe you are on a common platform which should have wheels built
(i.e. and not need to compile from source), feel free to file an issue or
pull request modifying the GitHub action used here to build wheels via
maturin.

Usage
-----

Methods in general are named similarly to their rpds counterparts (rather
than pyrsistent\ 's conventions, though probably a full drop-in pyrsistent\
-compatible wrapper module is a good addition at some point).

.. code:: python

    >>> from rpds import HashTrieMap, HashTrieSet, List

    >>> m = HashTrieMap({"foo": "bar", "baz": "quux"})
    >>> m.insert("spam", 37) == HashTrieMap({"foo": "bar", "baz": "quux",
"spam": 37})
    True
    >>> m.remove("foo") == HashTrieMap({"baz": "quux"})
    True

    >>> s = HashTrieSet({"foo", "bar", "baz", "quux"})
    >>> s.insert("spam") == HashTrieSet({"foo", "bar", "baz", "quux",
"spam"})
    True
    >>> s.remove("foo") == HashTrieSet({"bar", "baz", "quux"})
    True

    >>> L = List([1, 3, 5])
    >>> L.push_front(-1) == List([-1, 1, 3, 5])
    True
    >>> L.rest == List([3, 5])
    True


[FILE:99:distinfo]
300b8579740b06e246238b730e636f314a7d8dc475be1868650f5d3ddc29a0d8        16383 rpds_py-0.8.8.tar.gz

