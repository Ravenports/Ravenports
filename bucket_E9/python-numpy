# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-numpy
VERSION=		1.22.0
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Array computing for Python (3.10)
SDESC[py39]=		Array computing for Python (3.9)
HOMEPAGE=		https://www.numpy.org
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/n/numpy
DISTFILE[1]=		numpy-1.22.0.zip:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

BUILD_DEPENDS=		python-Cython:single:python_used
BUILDRUN_DEPENDS=	lapack:blas:standard

DISTNAME=		numpy-1.22.0

GENERATED=		yes

INSTALL_REQ_TOOLCHAIN=	yes

[PY39].USES_ON=				python:py39,sutools

[PY310].USES_ON=			python:py310,sutools

post-patch:
	${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|g' \
		${WRKSRC}/numpy/distutils/system_info.py

do-configure:
	# do-nothing

[FILE:537:descriptions/desc.single]
It provides:

- a powerful N-dimensional array object
- sophisticated (broadcasting) functions
- tools for integrating C/C++ and Fortran code
- useful linear algebra, Fourier transform, and random number capabilities
- and much more

Besides its obvious scientific uses, NumPy can also be used as an efficient
multi-dimensional container of generic data. Arbitrary data-types can be
defined. This allows NumPy to seamlessly and speedily integrate with a wide
variety of databases.

All NumPy wheels distributed on PyPI are BSD licensed.


[FILE:95:distinfo]
a955e4128ac36797aaffd49ab44ec74a71c11d6938df83b1285492d277db5397     11291139 numpy-1.22.0.zip


[FILE:592:patches/patch-numpy_f2py_cfuncs.py]
--- numpy/f2py/cfuncs.py.orig	2021-02-07 09:26:20 UTC
+++ numpy/f2py/cfuncs.py
@@ -549,6 +549,9 @@ cppmacros["F2PY_THREAD_LOCAL_DECL"] = ""
 #define F2PY_THREAD_LOCAL_DECL __declspec(thread)
 #elif defined(__STDC_VERSION__) \\
       && (__STDC_VERSION__ >= 201112L) \\
+      && !defined(__DragonFly__) \\
+      && !defined(__FreeBSD__) \\
+      && !defined(__sun__) \\ 
       && !defined(__STDC_NO_THREADS__) \\
       && (!defined(__GLIBC__) || __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 12))
 /* __STDC_NO_THREADS__ was first defined in a maintenance release of glibc 2.12,

