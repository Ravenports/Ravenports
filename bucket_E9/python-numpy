# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-numpy
VERSION=		1.26.0
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Array computing for Python (3.10)
SDESC[v11]=		Array computing for Python (3.11)
HOMEPAGE=		https://numpy.org
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/n/numpy
DISTFILE[1]=		numpy-1.26.0.tar.gz:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

BUILD_DEPENDS=		python-Cython:single:python_used
BUILDRUN_DEPENDS=	lapack:blas:standard

USES=			cpe c++:single

DISTNAME=		numpy-1.26.0

CPE_PRODUCT=		numpy
CPE_VENDOR=		numpy
GENERATED=		yes

INSTALL_REQ_TOOLCHAIN=	yes

[PY310].USES_ON=			python:py310,sutools

[PY311].USES_ON=			python:v11,sutools

post-patch:
	${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|g' \
		${WRKSRC}/numpy/distutils/system_info.py

do-configure:
	# do-nothing

[FILE:2903:descriptions/desc.single]
<h1 align="center">
[image]
</h1><br>

[Powered by NumFOCUS]
[PyPI Downloads]
[Conda Downloads]
[Stack Overflow]
[Nature Paper]
[OpenSSF Scorecard]

NumPy is the fundamental package for scientific computing with Python.

- **Website:** https://www.numpy.org
- **Documentation:** https://numpy.org/doc
- **Mailing list:**
https://mail.python.org/mailman/listinfo/numpy-discussion
- **Source code:** https://github.com/numpy/numpy
- **Contributing:** https://www.numpy.org/devdocs/dev/index.html
- **Bug reports:** https://github.com/numpy/numpy/issues
- **Report a security vulnerability:** https://tidelift.com/docs/security

It provides:

- a powerful N-dimensional array object
- sophisticated (broadcasting) functions
- tools for integrating C/C++ and Fortran code
- useful linear algebra, Fourier transform, and random number capabilities

Testing:

NumPy requires `pytest` and `hypothesis`.  Tests can then be run after
installation with:

    python -c "import numpy, sys; sys.exit(numpy.test() is False)"

Code of Conduct
----------------------

NumPy is a community-driven open source project developed by a diverse
group of
[contributors]. The NumPy leadership has made a strong
commitment to creating an open, inclusive, and positive community. Please
read the
[NumPy Code of Conduct] for guidance on how to interact
with others in a way that makes our community thrive.

Call for Contributions
----------------------

The NumPy project welcomes your expertise and enthusiasm!

Small improvements or fixes are always appreciated. If you are considering
larger contributions
to the source code, please contact us through the [mailing
list] first.

Writing code isn’t the only way to contribute to NumPy. You can also:
- review pull requests
- help us stay on top of new and old issues
- develop tutorials, presentations, and other educational materials
- maintain and improve [our website]
- develop graphic design for our brand assets and promotional materials
- translate website content
- help with outreach and onboard new contributors
- write grant proposals and help with other fundraising efforts

For more information about the ways you can contribute to NumPy, visit [our
website]. 
If you’re unsure where to start or how your skills fit in, reach out! You
can
ask on the mailing list or here, on GitHub, by opening a new issue or
leaving a
comment on a relevant issue that is already open.

Our preferred channels of communication are all public, but if you’d like
to
speak to us in private first, contact our community coordinators at
numpy-team@googlegroups.com or on Slack (write numpy-team@googlegroups.com
for
an invitation).

We also have a biweekly community call, details of which are announced on
the
mailing list. You are very welcome to join.

If you are new to contributing to open source, [this
guide] helps explain why, what,
and how to successfully get involved.


[FILE:98:distinfo]
f93fc78fe8bf15afe2b8d6b6499f1c73953169fad1e9a8dd086cdff3190e7fdf     15633455 numpy-1.26.0.tar.gz


[FILE:1275:patches/patch-numpy_core_include_numpy_npy__math.h]
--- numpy/core/include/numpy/npy_math.h.orig	2022-12-26 03:52:52 UTC
+++ numpy/core/include/numpy/npy_math.h
@@ -318,7 +318,11 @@ NPY_INPLACE npy_longdouble npy_tanl(npy_
 NPY_INPLACE npy_longdouble npy_expl(npy_longdouble x);
 NPY_INPLACE npy_longdouble npy_sqrtl(npy_longdouble x);
 NPY_INPLACE npy_longdouble npy_hypotl(npy_longdouble x, npy_longdouble y);
+#if defined(__NetBSD__)
+#define npy_log2l __builtin_log2l
+#else
 NPY_INPLACE npy_longdouble npy_log2l(npy_longdouble x);
+#endif
 NPY_INPLACE npy_longdouble npy_atan2l(npy_longdouble x, npy_longdouble y);
 NPY_INPLACE npy_longdouble npy_powl(npy_longdouble x, npy_longdouble y);
 NPY_INPLACE npy_longdouble npy_modfl(npy_longdouble x, npy_longdouble* y);
@@ -336,14 +340,22 @@ NPY_INPLACE npy_longdouble npy_modfl(npy
 #define npy_cbrtl cbrtl
 #define npy_log10l log10l
 #define npy_logl logl
+#if defined(__NetBSD__)
+#define npy_expm1l expm1
+#else
 #define npy_expm1l expm1l
+#endif
 #define npy_asinl asinl
 #define npy_acosl acosl
 #define npy_atanl atanl
 #define npy_asinhl asinhl
 #define npy_acoshl acoshl
 #define npy_atanhl atanhl
+#if defined(__NetBSD__)
+#define npy_log1pl log1p
+#else
 #define npy_log1pl log1pl
+#endif
 #define npy_exp2l exp2l
 #define npy_fmodl fmodl
 #define npy_frexpl frexpl


[FILE:564:patches/patch-numpy_f2py_cfuncs.py]
--- numpy/f2py/cfuncs.py.orig	2022-12-26 03:52:53 UTC
+++ numpy/f2py/cfuncs.py
@@ -546,6 +546,9 @@ cppmacros["F2PY_THREAD_LOCAL_DECL"] = ""
 #define F2PY_THREAD_LOCAL_DECL __thread
 #elif defined(__STDC_VERSION__) \\
       && (__STDC_VERSION__ >= 201112L) \\
+      && !defined(__DragonFly__) \\
+      && !defined(__FreeBSD__) \\
+      && !defined(__sun__) \\ 
       && !defined(__STDC_NO_THREADS__) \\
       && (!defined(__GLIBC__) || __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 12)) \\
       && !defined(NPY_OS_OPENBSD) && !defined(NPY_OS_HAIKU)

