# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		netsurf-buildsystem
VERSION=		1.8
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Buildsystem for the Netsurf browser and libs
HOMEPAGE=		https://source.netsurf-browser.org/buildsystem.git
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://download.netsurf-browser.org/libs/releases/
DISTFILE[1]=		buildsystem-1.8.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			gmake shebangfix

DISTNAME=		buildsystem-1.8

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/netsurf-buildsystem
SHEBANG_FILES=		testtools/testrunner.pl

INVALID_RPATH=		yes

MAKE_ENV=		COMPONENT_TYPE="lib-shared"

[FILE:109:descriptions/desc.single]
This package contains some shared makefiles used to build the various 
components of the NetSurf webbrowser.


[FILE:101:distinfo]
e6a324e7c5965ca032d3196adddd6fd986b5f47c0e6340a646d0d23e3597cd39        38617 buildsystem-1.8.tar.gz


[FILE:220:manifests/plist.single]
share/netsurf-buildsystem/makefiles/
 Makefile.clang
 Makefile.gcc
 Makefile.norcroft
 Makefile.open64
 Makefile.pkgconfig
 Makefile.subdir
 Makefile.tools
 Makefile.top
share/netsurf-buildsystem/testtools/testrunner.pl


[FILE:708:patches/patch-Makefile]
--- Makefile.orig	2019-06-20 06:05:31.656073000 +0200
+++ Makefile	2019-06-20 06:09:15.963637000 +0200
@@ -19,7 +19,7 @@
 	@echo ""
 	@echo "Which is where the libraries etc look for it."
 
-PREFIX?=/opt/netsurf
+PREFIX?=%%PREFIX%%
 
 BASE=$(DESTDIR)$(PREFIX)/share/netsurf-buildsystem
 
@@ -33,15 +33,12 @@
 CITOOLS := jenkins-build.sh
 
 install:
-	mkdir -p $(BASE)/makefiles $(BASE)/testtools $(BASE)/citools
+	mkdir -p $(BASE)/makefiles $(BASE)/testtools
 	for M in $(MAKEFILES); do \
 		cp makefiles/$$M $(BASE)/makefiles/; \
 	done
 	for T in $(TESTTOOLS); do \
 		cp testtools/$$T $(BASE)/testtools/; \
-	done
-	for C in $(CITOOLS); do \
-		cp citools/$$C $(BASE)/citools/; \
 	done
 
 # Distribution


[FILE:1305:dragonfly/patch-makefiles_Makefile.tools]
--- makefiles/Makefile.tools.orig	2019-06-20 06:13:03.962897000 +0200
+++ makefiles/Makefile.tools	2019-06-20 06:18:02.241808000 +0200
@@ -111,6 +111,13 @@
     LDFLAGS := $(LDFLAGS) -L$(GCCSDK_INSTALL_ENV)/lib -L/usr/local/lib
   endif
 
+  ifeq ($(findstring dragonfly,$(HOST)),dragonfly)
+    # Building on+for DragonFly BSD
+    CFLAGS := $(CFLAGS) -I$(GCCSDK_INSTALL_ENV)/include -I/usr/local/include
+    CXXFLAGS := $(CXXFLAGS) -I$(GCCSDK_INSTALL_ENV)/include -I/usr/local/include
+    LDFLAGS := $(LDFLAGS) -L$(GCCSDK_INSTALL_ENV)/lib -L/usr/local/lib
+  endif
+
   ifeq ($(findstring arwin,$(HOST)),arwin)
     # Building on+for Mac OS X (Darwin) with MAC ports
     CFLAGS := $(CFLAGS) -I/opt/local/include
@@ -130,7 +137,7 @@
   endif
 
   # Search the path for the compiler
-  toolpath_ := $(shell /bin/which $(CC__))
+  toolpath_ := $(shell /usr/bin/which $(CC__))
   ifeq ($(toolpath_),)
     toolpath_ := /opt/netsurf/$(HOST)/cross/bin/
     CC__  := $(toolpath_)$(HOST)-gcc
@@ -141,7 +148,7 @@
     toolpath_ := $(dir $(CC__))
     toolprefix_ := $(subst :,/,$(dir $(subst -,/,$(subst /,:,$(CC__)))))
     ifeq ($(origin AR),default)
-      AR__ := $(toolprefix_)-ar
+      AR__ := $(shell /usr/bin/which ar)
     endif
     ifeq ($(origin CXX),default)
       CXX__ := $(toolprefix_)-g++


[FILE:723:freebsd/patch-makefiles_Makefile.tools]
--- makefiles/Makefile.tools.orig	2019-06-20 06:13:03.962897000 +0200
+++ makefiles/Makefile.tools	2019-06-20 06:16:17.561816000 +0200
@@ -130,7 +130,7 @@
   endif
 
   # Search the path for the compiler
-  toolpath_ := $(shell /bin/which $(CC__))
+  toolpath_ := $(shell /usr/bin/which $(CC__))
   ifeq ($(toolpath_),)
     toolpath_ := /opt/netsurf/$(HOST)/cross/bin/
     CC__  := $(toolpath_)$(HOST)-gcc
@@ -141,7 +141,7 @@
     toolpath_ := $(dir $(CC__))
     toolprefix_ := $(subst :,/,$(dir $(subst -,/,$(subst /,:,$(CC__)))))
     ifeq ($(origin AR),default)
-      AR__ := $(toolprefix_)-ar
+      AR__ := $(shell /usr/bin/which ar)
     endif
     ifeq ($(origin CXX),default)
       CXX__ := $(toolprefix_)-g++

