# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		optipng
VERSION=		7.9.1
KEYWORDS=		graphics
VARIANTS=		std
SDESC[std]=		Advanced PNG optimizer
HOMEPAGE=		none
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/optipng/OptiPNG/optipng-7.9.1
DISTFILE[1]=		optipng-7.9.1.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			docs
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe gmake zlib png

LICENSE=		CUSTOM1:primary
LICENSE_NAME=		CUSTOM1:"ZLIB License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE.txt
LICENSE_SCHEME=		solo

CPE_VENDOR=		optipng_project
FPC_EQUIVALENT=		graphics/optipng

MUST_CONFIGURE=		yes
CONFIGURE_ARGS=		--with-system-zlib
			--with-system-libpng

do-install:
	${INSTALL_PROGRAM} ${WRKSRC}/src/optipng/optipng \
		${STAGEDIR}${PREFIX}/bin/
	${INSTALL_MAN} ${WRKSRC}/src/optipng/man/optipng.1 \
		${STAGEDIR}${MAN1PREFIX}/man/man1/
	${MKDIR} ${STAGEDIR}${STD_DOCDIR}
.for D in history.txt optipng.man1.* png_optimization.html
	${INSTALL_DATA} ${WRKSRC}/doc/${D} ${STAGEDIR}${STD_DOCDIR}/
.endfor

[FILE:508:descriptions/desc.primary]
OptiPNG is a PNG optimizer that recompresses image files to a smaller size,
without losing any information. This program also converts external formats
(BMP, GIF, PNM; TIFF support is coming up) to optimized PNG, and performs
PNG integrity checks and corrections.

The idea has been inspired from pngcrush, and is explained in detail in the
PNG-Tech article "A guide to PNG optimization". The implementation is
carried forward in OptiPNG, which offers a faster execution per trial, and
a wider search space.


[FILE:99:distinfo]
c2579be58c2c66dae9d63154edcb3d427fef64cb00ec0aff079c9d156ec46f29      3334056 optipng-7.9.1.tar.gz


[FILE:12:manifests/plist.primary]
bin/optipng


[FILE:92:manifests/plist.docs]
share/doc/optipng/
 history.txt
 optipng.man1.html
 optipng.man1.txt
 png_optimization.html


[FILE:25:manifests/plist.man]
share/man/man1/optipng.1


[FILE:601:patches/patch-src_pngxtern_pngxmem.c]
--- src/pngxtern/pngxmem.c.orig	2017-12-03 23:42:00 UTC
+++ src/pngxtern/pngxmem.c
@@ -35,7 +35,7 @@ pngx_malloc_rows_extended(png_structp pn
    row_size = png_get_rowbytes(png_ptr, info_ptr);
    /* libpng sets row_size to 0 when the width is too large to process. */
    if (row_size == 0 ||
-       (pngx_alloc_size_t)height > (pngx_alloc_size_t)(-1) / sizeof(png_bytep))
+       (pngx_alloc_size_t)height > (pngx_alloc_size_t)(-1U) / sizeof(png_bytep))
       png_error(png_ptr, "Can't handle exceedingly large image dimensions");
    if (row_size < min_row_size)
       row_size = min_row_size;

