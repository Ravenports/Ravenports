# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-zope.interface
VERSION=		5.3.0
KEYWORDS=		python
VARIANTS=		py38 py39
SDESC[py38]=		Interfaces for Python (PY38)
SDESC[py39]=		Interfaces for Python (PY39)
HOMEPAGE=		https://github.com/zopefoundation/zope.interface
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/z/zope.interface
DISTFILE[1]=		zope.interface-5.3.0.tar.gz:main
DF_INDEX=		1
SPKGS[py38]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY38 PY39
OPTIONS_STANDARD=	none
VOPTS[py38]=		PY38=ON PY39=OFF
VOPTS[py39]=		PY38=OFF PY39=ON

DISTNAME=		zope.interface-5.3.0

GENERATED=		yes

[PY38].BUILDRUN_DEPENDS_ON=		python-setuptools:single:py38
[PY38].USES_ON=				python:py38,sutools

[PY39].BUILDRUN_DEPENDS_ON=		python-setuptools:single:py39
[PY39].USES_ON=				python:py39,sutools

[FILE:3407:descriptions/desc.single]
====================
 ``zope.interface``
====================

    :alt: Latest Version

        :alt: Supported Python versions

        :alt: Documentation Status

This package is intended to be independently reusable in any Python
project. It is maintained by the [Zope Toolkit project
].

This package provides an implementation of "object interfaces" for Python.
Interfaces are a mechanism for labeling objects as conforming to a given
API or contract. So, this package can be considered as implementation of
the `Design By Contract`_ methodology support in Python.

.. _Design By Contract: http://en.wikipedia.org/wiki/Design_by_contract

For detailed documentation, please see
https://zopeinterface.readthedocs.io/en/latest/

=========
 Changes
=========

5.3.0 (2020-03-21)
==================

- No changes from 5.3.0a1

5.3.0a1 (2021-03-18)
====================

- Improve the repr of ``zope.interface.Provides`` to remove ambiguity
  about what is being provided. This is especially helpful diagnosing
  IRO issues.

- Allow subclasses of BaseAdapterRegistry (including
  AdapterRegistry and VerifyingAdapterRegistry) to have
  control over the data structures. This allows persistent
  implementations such as those based on ZODB to choose more scalable
  options (e.g., BTrees instead of dicts). See [issue 224
 ].

- Fix a reference counting issue in BaseAdapterRegistry that could
  lead to references to interfaces being kept around even when all
  utilities/adapters/subscribers providing that interface have been
  removed. This is mostly an issue for persistent implementations.
  Note that this only corrects the issue moving forward, it does not
  solve any already corrupted reference counts. See [issue 227
 ].

- Add the method ``BaseAdapterRegistry.rebuild()``. This can be used
  to fix the reference counting issue mentioned above, as well as to
  update the data structures when custom data types have changed.

- Add the interface method ``IAdapterRegistry.subscribed() and
  implementation BaseAdapterRegistry.subscribed()`` for querying
  directly registered subscribers. See [issue 230
 ].

- Add the maintenance method
  ``Components.rebuildUtilityRegistryFromLocalCache()``. Most users
  will not need this, but it can be useful if the ``Components.utilities
  registry is suspected to be out of sync with the Components``
  object itself (this might happen to persistent Components
  implementations in the face of bugs).

- Fix the Provides and ClassProvides descriptors to stop
  allowing redundant interfaces (those already implemented by the
  underlying class or meta class) to produce an inconsistent
  resolution order. This is similar to the change in ``@implementer``
  in 5.1.0, and resolves inconsistent resolution orders with
  ``zope.proxy and zope.location``. See [issue 207
 ].

5.2.0 (2020-11-05)
==================

- Add documentation section Persistency and Equality
  (`#218 <https://github.com/zopefoundation/zope.interface/issues/218>`_).

- Create arm64 wheels.

- Add support for Python 3.9.

5.1.2 (2020-10-01)
==================

- Make sure to call each invariant only once when validating invariants.
  Previously, invariants could be called multiple times because when an
  invariant is defined in an interface, it's found by in all interfaces
  inheriting from that interface.  See [pull request 215
 ].

5.1.1 (2020-09-30)
==================


[FILE:106:distinfo]
b18a855f8504743e0a2d8b75d008c7720d44e4c76687e13f959e35d9a13eb397       241964 zope.interface-5.3.0.tar.gz

