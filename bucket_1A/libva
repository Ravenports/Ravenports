# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libva
VERSION=		2.17.0
REVISION=		1
KEYWORDS=		multimedia
VARIANTS=		standard
SDESC[standard]=	VAAPI wrapper and dummy driver
HOMEPAGE=		https://github.com/intel/libva
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/intel:libva:2.17.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		libdrm:dev:standard
BUILDRUN_DEPENDS=	libdrm:primary:standard
			libglvnd:single:standard

USES=			gmake meson pkgconfig solaris-funcs
XORG_COMPONENTS=	xorgproto pciaccess xext xfixes x11

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		multimedia/libva
MESON_ARGS=		-Dwith_wayland=no
			-Dwith_glx=yes
			-Dwith_x11=yes
			-Ddriverdir={{LOCALBASE}}/lib/va
SOL_FUNCTIONS=		strnlen:va/va_trace.c

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		2.1700.0

CFLAGS=			-DHAVE_LINUX_INTEGER_TYPES
LDFLAGS=		-lpthread

post-patch:
	# V4L2 is unused since http://github.com/intel/libva/commit/70074679333c
	${REINPLACE_CMD} '/videodev2\.h/d' ${WRKSRC}/va/va_backend.h

[FILE:274:descriptions/desc.single]
The main motivation for VAAPI (Video Acceleration API) is to enable
hardware accelerated video decode/encode at various entry-points (VLD,
IDCT, Motion Compensation etc.) for the prevailing coding standards
today (MPEG-2, MPEG-4 ASP/H.263, MPEG-4 AVC/H.264, and VC-1/VMW3).


[FILE:104:distinfo]
8940541980ef998a36cd8f6ad905e81838ea4ddf56dc479ed2bebd12711e6001       276993 intel-libva-2.17.0.tar.gz


[FILE:785:manifests/plist.single]
include/va/
 va.h
 va_backend.h
 va_backend_glx.h
 va_backend_prot.h
 va_backend_vpp.h
 va_compat.h
 va_dec_av1.h
 va_dec_hevc.h
 va_dec_jpeg.h
 va_dec_vp8.h
 va_dec_vp9.h
 va_dri2.h
 va_dricommon.h
 va_drm.h
 va_drmcommon.h
 va_egl.h
 va_enc_av1.h
 va_enc_h264.h
 va_enc_hevc.h
 va_enc_jpeg.h
 va_enc_mpeg2.h
 va_enc_vp8.h
 va_enc_vp9.h
 va_fei.h
 va_fei_h264.h
 va_fei_hevc.h
 va_glx.h
 va_prot.h
 va_str.h
 va_tpi.h
 va_version.h
 va_vpp.h
 va_x11.h
lib/
 libva-drm.so
 libva-drm.so.%%SOMAJOR%%
 libva-drm.so.%%SOVERSION%%
 libva-glx.so
 libva-glx.so.%%SOMAJOR%%
 libva-glx.so.%%SOVERSION%%
 libva-x11.so
 libva-x11.so.%%SOMAJOR%%
 libva-x11.so.%%SOVERSION%%
 libva.so
 libva.so.%%SOMAJOR%%
 libva.so.%%SOVERSION%%
lib/pkgconfig/
 libva-drm.pc
 libva-glx.pc
 libva-x11.pc
 libva.pc


[FILE:520:patches/patch-va__glx__va_glx_private.h]
--- va/glx/va_glx_private.h.orig	2022-12-21 14:28:59 UTC
+++ va/glx/va_glx_private.h
@@ -38,7 +38,7 @@ typedef void (*PFNGLXBINDTEXIMAGEEXTPROC
 typedef void (*PFNGLXRELEASETEXIMAGEEXTPROC)(Display *, GLXDrawable, int);
 #endif
 
-#if GLX_GLXEXT_VERSION < 27
+#if GLX_GLXEXT_VERSION < 21
 /* XXX: this is not exactly that version but this is the only means to
    make sure we have the correct <GL/glx.h> with those signatures */
 typedef GLXPixmap(*PFNGLXCREATEPIXMAPPROC)(Display *, GLXFBConfig, Pixmap, const int *);


[FILE:392:sunos/patch-va_Makefile.am]
The version script has two problems:
1) switch is --version-script, not -version-script
2) The symbol map is missing tons of symbols (found by sun linker)

--- va/Makefile.am.orig	2021-03-23 10:54:35 UTC
+++ va/Makefile.am
@@ -76,7 +76,7 @@ libva_source_h_priv = \
 
 libva_ldflags = \
 	$(LDADD) -no-undefined	\
-	-Wl,-version-script,${srcdir}/libva.syms \
+	\
 	$(NULL)
 
 libva_cflags = \

