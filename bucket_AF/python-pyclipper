# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pyclipper
VERSION=		1.3.0.post6
KEYWORDS=		python
VARIANTS=		v13 v12
SDESC[v12]=		Cython wrapper for the AJ Clipper library (3.12)
SDESC[v13]=		Cython wrapper for the AJ Clipper library (3.13)
HOMEPAGE=		https://github.com/greginvm/pyclipper
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/pyclipper
DISTFILE[1]=		pyclipper-1.3.0.post6.tar.gz:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY313 PY312
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY313=OFF PY312=ON
VOPTS[v13]=		PY313=ON PY312=OFF

USES=			c++:single

DISTNAME=		pyclipper-1.3.0.post6

GENERATED=		yes

[PY312].BUILDRUN_DEPENDS_ON=		python-Cython:single:v12
					python-setuptools-scm:single:v12
					python-setuptools-scm-git-archive:single:v12
[PY312].USES_ON=			python:v12,pep517

[PY313].BUILDRUN_DEPENDS_ON=		python-Cython:single:v13
					python-setuptools-scm:single:v13
					python-setuptools-scm-git-archive:single:v13
[PY313].USES_ON=			python:v13,pep517

[FILE:2443:descriptions/desc.single]
About
=====

Pyclipper is a Cython wrapper exposing public functions and classes of
the C++ translation of the `Angus Johnson's Clipper library (ver.
6.4.2) <http://www.angusj.com/delphi/clipper.php>`__.

Pyclipper releases were tested with Python 2.7 and 3.4 on Linux (Ubuntu
14.04, x64) and Windows (8.1, x64).

Source code is available on
[GitHub]. The package is published on 
[PyPI].

About Clipper
-------------

        Clipper - an open source freeware library for clipping and
        offsetting lines and polygons.

        The Clipper library performs line & polygon clipping -
        intersection, union, difference & exclusive-or, and line &
        polygon offsetting. The library is based on Vatti's clipping
        algorithm.

        \ [Angus Johnson's Clipper
        library]\ 

Install
=======

Dependencies
------------

Cython dependency is optional. Cpp sources generated with Cython are
available in releases.

Note on using the ``setup.py``:

``setup.py operates in 2 modes that are based on the presence of the
dev`` file in the root of the project.

-  When dev is **present**, Cython will be used to compile the ``.pyx``
   sources. This is the *development mode* (as you get it in the git
   repository).
-  When dev is **absent**, C/C++ compiler will be used to compile the
   ``.cpp`` sources (that were prepared in in the development mode).
   This is the distribution mode (as you get it on PyPI).

This way the package can be used without or with an incompatible version
of Cython.

The idea comes from [Matt Shannon's bandmat
library].

From PyPI
---------

Cython not required.

::

        pip install pyclipper
        

From source
-----------

Cython required.

Clone the repository:

::

        git clone git@github.com:fonttools/pyclipper.git
        

Install:

::

        python setup.py install
        

After every modification of ``.pyx`` files compile with Cython:

::

        python setup.py build_ext --inplace
        

Clippers' preprocessor directives
---------------------------------
Clipper can be compiled with the following preprocessor directives:
use_int32, use_xyz, use_lines and use_deprecated. 
Among these the use_int32 and use_lines can be used with Pyclipper.

-  use_int32 - when enabled 32bit ints are used instead of 64bit ints. This
improve performance but coordinate values are limited to the range +/-
46340. In Pyclipper this directive is **disabled** by default.


[FILE:118:distinfo]
42bff0102fa7a7f2abdd795a2594654d62b786d0c6cd67b72d469114fdeb608c       165909 python-src/pyclipper-1.3.0.post6.tar.gz

