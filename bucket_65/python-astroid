# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-astroid
VERSION=		2.12.4
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Abstract syntax tree with inference support (3.10)
SDESC[py39]=		Abstract syntax tree with inference support (3.9)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/f8/80/d3638043a10db499d3546afc7085543ae9fc23fd1b1e4be7a24b12f83135
DISTFILE[1]=		astroid-2.12.4-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

DISTNAME=		astroid-2.12.4.dist-info

GENERATED=		yes

[PY39].RUN_DEPENDS_ON=			python-lazy-object-proxy:single:py39
					python-typing-extensions:single:py39
					python-wrapt:single:py39
[PY39].USES_ON=				python:py39,wheel

[PY310].RUN_DEPENDS_ON=			python-lazy-object-proxy:single:py310
					python-wrapt:single:py310
[PY310].USES_ON=			python:py310,wheel

[FILE:2274:descriptions/desc.single]
Astroid
=======

    :alt: Coverage badge from coveralls.io

    :alt: Documentation Status

   :alt: pre-commit.ci status

.. |tidelift_logo| image::
https://raw.githubusercontent.com/PyCQA/astroid/main/doc/media/Tidelift_Logos_RGB_Tidelift_Shorthand_On-White.png
   :width: 200
   :alt: Tidelift

.. list-table::
   :widths: 10 100

   * - |tidelift_logo|
     - Professional support for astroid is available as part of the
       `Tidelift Subscription`_.  Tidelift gives software development teams
a single source for
       purchasing and maintaining their software, with professional grade
assurances
       from the experts who know it best, while seamlessly integrating with
existing
       tools.

.. _Tidelift Subscription:
https://tidelift.com/subscription/pkg/pypi-astroid?utm_source=pypi-astroid&utm_medium=referral&utm_campaign=readme

What's this?
------------

The aim of this module is to provide a common base representation of
python source code. It is currently the library powering pylint's
capabilities.

It provides a compatible representation which comes from the `_ast`
module.  It rebuilds the tree generated by the builtin _ast module by
recursively walking down the AST and building an extended ast. The new
node classes have additional methods and attributes for different
usages. They include some support for static inference and local name
scopes. Furthermore, astroid can also build partial trees by inspecting
living
objects.

Installation
------------

Extract the tarball, jump into the created directory and run::

    pip install .

If you want to do an editable installation, you can run::

    pip install -e .

If you have any questions, please mail the code-quality@python.org
mailing list for support. See
http://mail.python.org/mailman/listinfo/code-quality for subscription
information and archives.

Documentation
-------------
http://astroid.readthedocs.io/en/latest/

Python Versions
---------------

astroid 2.0 is currently available for Python 3 only. If you want Python 2
support, use an older version of astroid (though note that these versions
are no longer supported).

Test
----

Tests are in the 'test' subdirectory. To launch the whole tests suite, you
can use
either `tox` or `pytest`::

    tox
    pytest astroid


[FILE:110:distinfo]
af71cdc0775b6e4d88076746620e2c8cd1bf4533a9977cfdd00eeea97d95530c       262197 astroid-2.12.4-py3-none-any.whl

