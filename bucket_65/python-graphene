# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-graphene
VERSION=		3.4.3
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		GraphQL Framework for Python (3.12)
SDESC[v13]=		GraphQL Framework for Python (3.13)
HOMEPAGE=		https://github.com/graphql-python/graphene
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/66/e0/61d8e98007182e6b2aca7cf65904721fb2e4bce0192272ab9cb6f69d8812
DISTFILE[1]=		graphene-3.4.3-py2.py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		graphene-3.4.3.dist-info

GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-graphql-core:single:v12
					python-graphql-relay:single:v12
					python-python-dateutil:single:v12
					python-typing-extensions:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-graphql-core:single:v13
					python-graphql-relay:single:v13
					python-python-dateutil:single:v13
					python-typing-extensions:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:2688:descriptions/desc.single]
# ![Graphene Logo] [Graphene]  [PyPI version] [Coverage Status]
[![]](https://discord.gg/T6Gp6NFYHe)

[���� Join the community on Discord]

**We are looking for contributors**! Please check the current issues to see
how you can help ������

## Introduction

[Graphene] is an opinionated Python library for building GraphQL
schemas/types fast and easily.

- **Easy to use:** Graphene helps you use GraphQL in Python without effort.
- **Relay:** Graphene has builtin support for Relay.
- **Data agnostic:** Graphene supports any kind of data source: SQL
(Django, SQLAlchemy), Mongo, custom Python objects, etc.
  We believe that by providing a complete API you could plug Graphene
anywhere your data lives and make your data available
  through GraphQL.

## Integrations

Graphene has multiple integrations with different frameworks:

| integration       | Package                                              
                                  |
| ----------------- |
---------------------------------------------------------------------------------------
|
| SQLAlchemy        | [graphene-sqlalchemy]           |
| Mongo             | [graphene-mongo]                     |
| Apollo Federation | [graphene-federation]           |
| Django            | [graphene-django]                   |

Also, Graphene is fully compatible with the GraphQL spec, working
seamlessly with all GraphQL clients, such as [Relay], [Apollo] and [gql].

## Installation

To install `graphene`, just run this command in your shell

```bash
pip install "graphene>=3.1"
```

## Examples

Here is one example for you to get started:

```python
import graphene

class Query(graphene.ObjectType):
    hello = graphene.String(description='A typical hello world')

    def resolve_hello(self, info):
        return 'World'

schema = graphene.Schema(query=Query)
```

Then Querying `graphene.Schema` is as simple as:

```python
query = '''
    query SayHello {
      hello
    }
'''
result = schema.execute(query)
```

If you want to learn even more, you can also check the following
[examples]:

- **Basic Schema**: [Starwars example]
- **Relay Schema**: [Starwars Relay example]

## Documentation

Documentation and links to additional resources are available at
https://docs.graphene-python.org/en/latest/

## Contributing

After cloning this repo, create a [virtualenv] and ensure dependencies are
installed by running:

```sh
virtualenv venv
source venv/bin/activate
pip install -e ".[test]"
```

Well-written tests and maintaining good test coverage is important to this
project. While developing, run new and existing tests with:

```sh
pytest graphene/relay/tests/test_node.py # Single file


[FILE:125:distinfo]
820db6289754c181007a150db1f7fff544b94142b556d12e3ebc777a7bf36c71       114894 python-src/graphene-3.4.3-py2.py3-none-any.whl

