# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-cattrs
VERSION=		22.2.0
KEYWORDS=		python
VARIANTS=		py310 py311
SDESC[py310]=		Composable complex class support for attrs (3.10)
SDESC[py311]=		Composable complex class support for attrs (3.11)
HOMEPAGE=		https://github.com/python-attrs/cattrs
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/43/3b/1d34fc4449174dfd2bc5ad7047a23edb6558b2e4b5a41b25a8ad6655c6c7
DISTFILE[1]=		cattrs-22.2.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py311]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[py311]=		PY310=OFF PY311=ON

DISTNAME=		cattrs-22.2.0.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-attrs:single:py310
					python-exceptiongroup:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-attrs:single:py311
[PY311].USES_ON=			python:py311,wheel

[FILE:2988:descriptions/desc.single]
======
cattrs
======

        :alt: Documentation Status

        :alt: Supported Python versions

----

cattrs is an open source Python library for structuring and unstructuring
data. cattrs works best with attrs classes, dataclasses and the usual
Python collections, but other kinds of classes are supported by manually
registering converters.

Python has a rich set of powerful, easy to use, built-in data types like
dictionaries, lists and tuples. These data types are also the lingua franca
of most data serialization libraries, for formats like json, msgpack, yaml
or
toml.

Data types like this, and mappings like dict s in particular, represent
unstructured data. Your data is, in all likelihood, structured: not all
combinations of field names or values are valid inputs to your programs. In
Python, structured data is better represented with classes and
enumerations.
attrs is an excellent library for declaratively describing the structure of
your data, and validating it.

When you're handed unstructured data (by your network, file system,
database...),
cattrs helps to convert this data into structured data. When you have to
convert your structured data into data types other libraries can handle,
cattrs turns your classes and enumerations into dictionaries, integers and
strings.

Here's a simple taste. The list containing a float, an int and a string
gets converted into a tuple of three ints.

.. code-block:: pycon

    >>> import cattrs
    >>>
    >>> cattrs.structure([1.0, 2, "3"], tuple[int, int, int])
    (1, 2, 3)

cattrs works well with attrs classes out of the box.

.. code-block:: pycon

    >>> from attrs import frozen
    >>> import cattrs
    >>>
    >>> @frozen  # It works with non-frozen classes too.
    ... class C:
    ...     a: int
    ...     b: str
    ...
    >>> instance = C(1, 'a')
    >>> cattrs.unstructure(instance)
    {'a': 1, 'b': 'a'}
    >>> cattrs.structure({'a': 1, 'b': 'a'}, C)
    C(a=1, b='a')

Here's a much more complex example, involving attrs classes with type
metadata.

.. code-block:: pycon

    >>> from enum import unique, Enum
    >>> from typing import Optional, Sequence, Union
    >>> from cattrs import structure, unstructure
    >>> from attrs import define, field
    >>>
    >>> @unique
    ... class CatBreed(Enum):
    ...     SIAMESE = "siamese"
    ...     MAINE_COON = "maine_coon"
    ...     SACRED_BIRMAN = "birman"
    ...
    >>> @define
    ... class Cat:
    ...     breed: CatBreed
    ...     names: Sequence[str]
    ...
    >>> @define
    ... class DogMicrochip:
    ...     chip_id = field()  # Type annotations are optional, but
recommended
    ...     time_chipped: float = field()
    ...
    >>> @define
    ... class Dog:
    ...     cuteness: int
    ...     chip: Optional[DogMicrochip] = None
    ...
    >>> p = unstructure([Dog(cuteness=1, chip=DogMicrochip(chip_id=1,
time_chipped=10.0)),
    ...                  Cat(breed=CatBreed.MAINE_COON, names=('Fluffly',
'Fluffer'))])


[FILE:109:distinfo]
bc12b1f0d000b9f9bee83335887d532a1d3e99a833d1bf0882151c97d3e68c21        35673 cattrs-22.2.0-py3-none-any.whl

