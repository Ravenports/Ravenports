# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		spidermonkey-ff17
VERSION=		17.0.0
KEYWORDS=		lang
VARIANTS=		standard
SDESC[standard]=	Standalone JS interpreter from Mozilla 17-esr
HOMEPAGE=		https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://archive.mozilla.org/pub/js/
DISTFILE[1]=		mozjs17.0.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		zip:single:standard
BUILDRUN_DEPENDS=	nspr:single:standard
			zlib:complete:standard

USES=			gmake perl python:py27,build

DISTNAME=		mozjs17.0.0/js/src

FPC_EQUIVALENT=		lang/spidermonkey170

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-pthreads
			--with-system-nspr
			--with-system-zlib

post-install:
	${LN} -s libmozjs-17.0.so \
		${STAGEDIR}${PREFIX}/lib/libmozjs-17.0.so.1
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/js17
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libmozjs-17.0.so

[FILE:126:descriptions/desc.single]
SpiderMonkey is Mozilla's JavaScript engine written in C and C++. It is 
used in various Mozilla products, including Firefox.


[FILE:97:distinfo]
321e964fe9386785d3bf80870640f2fa1c683e32fe988eeb201b04471c172fba      6778934 mozjs17.0.0.tar.gz


[FILE:967:manifests/plist.single]
bin/
 js17
 js17-config
include/js-17.0/
 js-config.h
 js.msg
 jsalloc.h
 jsapi.h
 jsatom.h
 jsatom.tbl
 jsclass.h
 jsclist.h
 jscpucfg.h
 jsdbgapi.h
 jsdhash.h
 jsfriendapi.h
 jsgc.h
 jslock.h
 json.h
 jsperf.h
 jsprf.h
 jsproto.tbl
 jsproxy.h
 jsprvtd.h
 jspubtd.h
 jstypes.h
 jsutil.h
 jsval.h
 jsversion.h
 jswrapper.h
include/js-17.0/ds/BitArray.h
include/js-17.0/gc/
 Barrier.h
 Heap.h
 Root.h
 Statistics.h
 StoreBuffer.h
include/js-17.0/js/
 HashTable.h
 LegacyIntTypes.h
 MemoryMetrics.h
 RequiredDefines.h
 TemplateLib.h
 Utility.h
 Vector.h
include/js-17.0/mozilla/
 Assertions.h
 Attributes.h
 BloomFilter.h
 CheckedInt.h
 Constants.h
 FloatingPoint.h
 GuardObjects.h
 HashFunctions.h
 Likely.h
 LinkedList.h
 MSStdInt.h
 MathAlgorithms.h
 NullPtr.h
 RangedPtr.h
 RefPtr.h
 SHA1.h
 Scoped.h
 StandardInteger.h
 ThreadLocal.h
 TypeTraits.h
 Types.h
 Util.h
 WeakPtr.h
lib/
 libmozjs-17.0.a
 libmozjs-17.0.so
 libmozjs-17.0.so.1
lib/pkgconfig/mozjs-17.0.pc


[FILE:265:patches/patch-Makefile.in]
--- Makefile.in.orig	2013-03-25 20:34:20 UTC
+++ Makefile.in
@@ -679,6 +679,9 @@ RegExp.$(OBJ_SUFFIX): CXXFLAGS += -GL-
 endif
 endif # _MSC_VER
 
+ifeq ($(OS_ARCH),DragonFly)
+EXTRA_LIBS	+= -pthread
+endif
 ifeq ($(OS_ARCH),FreeBSD)
 EXTRA_LIBS	+= -pthread
 endif


[FILE:513:patches/patch-config_config.mk]
--- config/config.mk.orig	2013-02-11 22:33:22 UTC
+++ config/config.mk
@@ -92,7 +92,7 @@ AUTOCONF_TOOLS	= $(topsrcdir)/build/auto
 # but save the version to allow multiple versions of the same base
 # platform to be built in the same tree.
 #
-ifneq (,$(filter FreeBSD HP-UX Linux NetBSD OpenBSD SunOS,$(OS_ARCH)))
+ifneq (,$(filter DragonFly FreeBSD HP-UX Linux NetBSD OpenBSD SunOS,$(OS_ARCH)))
 OS_RELEASE	:= $(basename $(OS_RELEASE))
 
 # Allow the user to ignore the OS_VERSION, which is usually irrelevant.


[FILE:321:patches/patch-config_milestone.pl]
--- config/milestone.pl.orig	2013-02-11 22:33:22 UTC
+++ config/milestone.pl
@@ -55,7 +55,7 @@ $MILESTONE_FILE  = "$TOPSRCDIR/config/mi
 #
 my $milestone = Moz::Milestone::getOfficialMilestone($MILESTONE_FILE);
 
-if (defined(@TEMPLATE_FILE)) {
+if (@TEMPLATE_FILE) {
   my $TFILE;
 
   foreach $TFILE (@TEMPLATE_FILE) {


[FILE:1051:patches/patch-configure]
--- configure.orig	2013-03-25 20:34:20 UTC
+++ configure
@@ -9989,7 +9989,7 @@ fi
 fi
 
 case "$target_os" in
-freebsd*)
+freebsd*|dragonfly*)
 # for stuff like -lXshm
     CPPFLAGS="${CPPFLAGS} ${X_CFLAGS}"
     ;;
@@ -11027,7 +11027,7 @@ echo "configure:11024: checking whether
 		if test -z "`egrep -i '(unrecognize|unknown)' conftest.out | grep pthread`" -a -z "`egrep -i '(error|incorrect)' conftest.out`" ; then
 			ac_cv_have_dash_pthread=yes
 	        case "$target_os" in
-	        freebsd*)
+	        freebsd*|dragonfly*)
 # Freebsd doesn't use -pthread for compiles, it uses them for linking
                 ;;
 	        *)
@@ -11058,7 +11058,7 @@ echo "configure:11047: checking whether
     fi
 
 	case "$target" in
-	    *-*-freebsd*)
+	    *-*-freebsd*|*-*-dragonfly*)
 			cat >> confdefs.pytmp <<\EOF
         (''' _REENTRANT ''', ' 1 ')
 EOF
@@ -13456,7 +13456,7 @@ cat >> confdefs.h <<\EOF
 EOF
 
     ;;
-  *-*freebsd*)
+  *-*freebsd*|*-*-dragonfly*)
     cat >> confdefs.pytmp <<\EOF
         (''' MOZ_MEMORY_BSD ''', ' 1 ')
 EOF


[FILE:347:patches/patch-jsnativestack.cpp]
--- jsnativestack.cpp.orig	2013-02-11 22:33:22 UTC
+++ jsnativestack.cpp
@@ -19,7 +19,7 @@
 #elif defined(XP_MACOSX) || defined(DARWIN) || defined(XP_UNIX)
 # include <pthread.h>
 
-# if defined(__FreeBSD__) || defined(__OpenBSD__)
+# if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__)
 #  include <pthread_np.h>
 # endif
 


[FILE:685:patches/patch-shell_jsoptparse.cpp]
commit 19a4ba5c90a9
Author: Mike Hommey <mh+mozilla@glandium.org>
Date:   Wed Jul 17 16:16:55 2013 +0900

    Bug 894240 - Fix pointer dereference in js::cli::OptionParser::extractValue. r=Waldo
---
 js/src/shell/jsoptparse.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- shell/jsoptparse.cpp.orig	2013-02-11 22:33:23 UTC
+++ shell/jsoptparse.cpp
@@ -243,7 +243,7 @@ OptionParser::extractValue(size_t argc,
     char *eq = strchr(argv[*i], '=');
     if (eq) {
         *value = eq + 1;
-        if (value[0] == '\0')
+        if (*value[0] == '\0')
             return error("A value is required for option %.*s", eq - argv[*i], argv[*i]);
         return Okay;
     }

