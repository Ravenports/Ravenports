# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-sortedcontainers
VERSION=		2.1.0
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		Sorted List, Dict, and Set containers (PY37)
SDESC[py38]=		Sorted List, Dict, and Set containers (PY38)
HOMEPAGE=		http://www.grantjenks.com/docs/sortedcontainers/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/s/sortedcontainers
DISTFILE[1]=		sortedcontainers-2.1.0.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		sortedcontainers-2.1.0

GENERATED=		yes

[PY37].USES_ON=				python:py37

[PY38].USES_ON=				python:py38

[FILE:3114:descriptions/desc.single]
Python Sorted Containers
========================

`Sorted Containers`_ is an Apache2 licensed `sorted collections library`_,
written in pure-Python, and fast as C-extensions.

Python's standard library is great until you need a sorted collections
type. Many will attest that you can get really far without one, but the
moment
you **really need** a sorted list, sorted dict, or sorted set, you're faced
with a dozen different implementations, most using C-extensions without
great
documentation and benchmarking.

In Python, we can do better. And we can do it in pure-Python!

Quickstart
----------

Installing `Sorted Containers`_ is simple with [pip
]_::

    $ pip install sortedcontainers

You can access documentation in the interpreter with Python's built-in
`help`
function. The `help` works on modules, classes and methods in `Sorted
Containers`_.

.. code-block:: python

    >>> import sortedcontainers
    >>> help(sortedcontainers)
    >>> from sortedcontainers import SortedDict
    >>> help(SortedDict)
    >>> help(SortedDict.popitem)

Documentation
-------------

Complete documentation including performance comparisons is available at
http://www.grantjenks.com/docs/sortedcontainers/

User Guide
..........

For those wanting more details, this part of the documentation describes
introduction, implementation, performance, and development.

- `Introduction`_
- `Performance Comparison`_
- `Load Factor Performance Comparison`_
- `Runtime Performance Comparison`_
- `Simulated Workload Performance Comparison`_
- `Implementation Details`_
- `Performance at Scale`_
- `Developing and Contributing`_
- `Release History`_

.. _`Introduction`:
http://www.grantjenks.com/docs/sortedcontainers/introduction.html
.. _`Performance Comparison`:
http://www.grantjenks.com/docs/sortedcontainers/performance.html
.. _`Load Factor Performance Comparison`:
http://www.grantjenks.com/docs/sortedcontainers/performance-load.html
.. _`Runtime Performance Comparison`:
http://www.grantjenks.com/docs/sortedcontainers/performance-runtime.html
.. _`Simulated Workload Performance Comparison`:
http://www.grantjenks.com/docs/sortedcontainers/performance-workload.html
.. _`Implementation Details`:
http://www.grantjenks.com/docs/sortedcontainers/implementation.html
.. _`Performance at Scale`:
http://www.grantjenks.com/docs/sortedcontainers/performance-scale.html
.. _`Developing and Contributing`:
http://www.grantjenks.com/docs/sortedcontainers/development.html
.. _`Release History`:
http://www.grantjenks.com/docs/sortedcontainers/history.html

API Documentation
.................

If you are looking for information on a specific function, class or method,
this part of the documentation is for you.

- `Sorted List`_
- `Sorted Dict`_
- `Sorted Set`_

.. _`Sorted List`:
http://www.grantjenks.com/docs/sortedcontainers/sortedlist.html
.. _`Sorted Dict`:
http://www.grantjenks.com/docs/sortedcontainers/sorteddict.html
.. _`Sorted Set`:
http://www.grantjenks.com/docs/sortedcontainers/sortedset.html

Talks
-----

- `Python Sorted Collections | PyCon 2016 Talk`_
- `SF Python Holiday Party 2015 Lightning Talk`_


[FILE:108:distinfo]
974e9a32f56b17c1bac2aebd9dcf197f3eb9cd30553c5852a3187ad162e1a03a        29810 sortedcontainers-2.1.0.tar.gz

