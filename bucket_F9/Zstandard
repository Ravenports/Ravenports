# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		Zstandard
VERSION=		1.5.0
KEYWORDS=		archivers
VARIANTS=		standard
SDESC[standard]=	Fast real-time compression algorithm (aka zstd)
HOMEPAGE=		https://facebook.github.io/zstd/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/facebook:zstd:v1.5.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			static
			shared

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe gmake zlib:build

LICENSE=		BSD3CLAUSE:static GPLv2:static
LICENSE_TERMS=		static:{{WRKDIR}}/TERMS
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENSE
			GPLv2:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"__cplusplus"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/lib/zstd.h
LICENSE_SCHEME=		dual

CPE_PRODUCT=		zstandard
CPE_VENDOR=		facebook
FPC_EQUIVALENT=		archivers/zstd

BUILD_TARGET=		default
MAKE_ARGS=		INCLUDEDIR="{{PREFIX}}/include"
			LIBDIR="{{PREFIX}}/lib"
			MANDIR="{{MANPREFIX}}/man"
			PKGCONFIGDIR="{{PREFIX}}/lib/pkgconfig"
			INSTALL_PROGRAM="{{INSTALL_PROGRAM}}"
			INSTALL_SCRIPT="{{INSTALL_SCRIPT}}"
			INSTALL_DATA="{{INSTALL_DATA}}"
			INSTALL_MAN="{{INSTALL_MAN}}"
			INSTALL=install
			HASH=md5

INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		1.5.0

post-patch:
	${REINPLACE_CMD} -e '/define BACKTRACES_ENABLE/d' \
		${WRKSRC}/programs/fileio.c

post-patch-sunos:
	${REINPLACE_CMD} -e 's| DragonFly| DragonFly SunOS|' \
		${WRKSRC}/Makefile
	${REINPLACE_CMD} -e 's|LDFLAGS +=|LDFLAGS += -lrt|' \
		${WRKSRC}/programs/Makefile

[FILE:692:descriptions/desc.static]
Zstd, short for Zstandard, is a real-time compression algorithm providing
high compression ratios.  It offers a very wide range of compression vs.
speed trade-offs while being backed by a very fast decoder.  It offers
a special mode for small data called "dictionary compression" and it can
create dictionaries from any sample set.  Zstd is BSD-licensed.

Using Izbench on the Silesia compression corpus, zstd ranked at the
top with a compression ratio of 2.877, a compression rate of 325 Mb/s,
and a decompression rate of 325.  Zlib followed at 2.730, 95 Mb/s (C)
and 360 Mb/s (D).  See WWW page for the full benchmark results.

This package contains everything except the shared libraries.


[FILE:49:descriptions/desc.shared]
This package contains the Zstd shared libraries.


[FILE:105:distinfo]
0d9ade222c64e912d6957b11c923e214e2e010a18f39bec102f572e693ba2867      1867111 facebook-zstd-1.5.0.tar.gz


[FILE:237:manifests/plist.static]
bin/
 unzstd
 zstd
 zstdcat
 zstdgrep
 zstdless
 zstdmt
include/
 zdict.h
 zstd.h
 zstd_errors.h
lib/
 libzstd.a
 libzstd_pic.a
lib/pkgconfig/libzstd.pc
share/man/man1/
 unzstd.1.gz
 zstd.1.gz
 zstdcat.1.gz
 zstdgrep.1.gz
 zstdless.1.gz


[FILE:67:manifests/plist.shared]
lib/
 libzstd.so
 libzstd.so.%%SOMAJOR%%
 libzstd.so.%%SOVERSION%%


[FILE:1861:patches/patch-lib_Makefile]
--- lib/Makefile.orig	2021-03-02 22:20:57 UTC
+++ lib/Makefile
@@ -168,6 +168,7 @@ CPPFLAGS  += -DZSTD_LEGACY_SUPPORT=$(ZST
 
 ZSTD_LOCAL_SRC := $(notdir $(ZSTD_FILES))
 ZSTD_LOCAL_OBJ := $(ZSTD_LOCAL_SRC:.c=.o)
+ZSTD_LOCAL_SOBJ := $(ZSTD_LOCAL_SRC:.c=.So)
 
 ZSTD_SUBDIR := common compress decompress dictBuilder legacy deprecated
 vpath %.c $(ZSTD_SUBDIR)
@@ -203,7 +204,11 @@ ifeq ($(UNAME), Darwin)
   SHARED_EXT_VER = $(LIBVER).$(SHARED_EXT)
   SONAME_FLAGS = -install_name $(LIBDIR)/libzstd.$(SHARED_EXT_MAJOR) -compatibility_version $(LIBVER_MAJOR) -current_version $(LIBVER)
 else
+ ifeq ($(UNAME), SunOS)
+  SONAME_FLAGS = -Wl,-h,libzstd.$(SHARED_EXT).$(LIBVER_MAJOR)
+ else
   SONAME_FLAGS = -Wl,-soname=libzstd.$(SHARED_EXT).$(LIBVER_MAJOR)
+ endif
   SHARED_EXT = so
   SHARED_EXT_MAJOR = $(SHARED_EXT).$(LIBVER_MAJOR)
   SHARED_EXT_VER = $(SHARED_EXT).$(LIBVER)
@@ -246,10 +251,17 @@ libzstd.a: $(ZSTD_STATLIB)
 
 endif
 
+%.So: %.c
+	$(CC) $(FLAGS) -fpic -DPIC -c $< -o $@ 
+
+libzstd_pic.a: $(ZSTD_LOCAL_SOBJ)
+	@echo assembling PIC library
+	$(AR) rcsv $@ $^
+
 ifneq (,$(filter Windows%,$(TARGET_SYSTEM)))
 
 LIBZSTD = dll/libzstd.dll
-$(LIBZSTD): $(ZSTD_FILES)
+$(LIBZSTD): $(ZSTD_SOBJ)
 	@echo compiling dynamic library $(LIBVER)
 	$(CC) $(FLAGS) -DZSTD_DLL_EXPORT=1 -Wl,--out-implib,dll/libzstd.dll.a -shared $^ -o $@
 
@@ -291,7 +303,7 @@ endif  # if windows
 libzstd : $(LIBZSTD)
 
 .PHONY: lib
-lib : libzstd.a libzstd
+lib : libzstd.a libzstd libzstd_pic.a
 
 
 # note : do not define lib-mt or lib-release as .PHONY
@@ -421,6 +433,7 @@ install-static:
 	[ -e $(DESTDIR)$(LIBDIR) ] || $(INSTALL) -d -m 755 $(DESTDIR)$(LIBDIR)/
 	@echo Installing static library
 	$(INSTALL_DATA) libzstd.a $(DESTDIR)$(LIBDIR)
+	$(INSTALL_DATA) libzstd_pic.a $(DESTDIR)$(LIBDIR)
 
 install-shared:
 	# only generate libzstd.so if it's not already present

