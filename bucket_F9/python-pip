# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pip
VERSION=		24.2
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Tool for installing python packages (3.11)
SDESC[v12]=		Tool for installing python packages (3.12)
HOMEPAGE=		https://pip.pypa.io/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	none
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

USES=			cpe

CPE_PRODUCT=		pip
CPE_VENDOR=		pypa
GENERATED=		yes

[PY311].MAKEFILE_ON=			POST_PLIST_TARGET+=setuptools-autolist
[PY311].USES_ON=			python:v11

[PY312].MAKEFILE_ON=			POST_PLIST_TARGET+=setuptools-autolist
[PY312].USES_ON=			python:v12

post-patch:
	# Exclude all __pycache__ changes from corruption detection
	# (snapshots from pre-configure to post-build)
	# obviously the pyc files should not be getting compiled.  (see issue #322)
	# shifted this to ravenadm until the issue is resolved
	# echo ".${LOCALBASE}/lib/python*/__pycache__"     >> /etc/mtree.preconfig.exclude
	# echo ".${LOCALBASE}/lib/python*/*/__pycache__"   >> /etc/mtree.preconfig.exclude
	# echo ".${LOCALBASE}/lib/python*/*/*/__pycache__" >> /etc/mtree.preconfig.exclude

do-build:
	# By using --user, the pyc files are hardcoded with the wrong paths.
	# those will have to be regenerated
	${PYTHON_CMD} -m ensurepip --user

post-install:
	(cd ${STAGEDIR} && ${PYTHON_CMD} -m compileall -d / . ||:)

do-install:
	${RM} -r ${STAGEDIR}
	${MKDIR} ${STAGEDIR}
	${FIND} /root/.local/ -type d --name __pycache__ | xargs rm -rf
	${RM} /root/.local/bin/pip3
	${MV} /root/.local ${STAGEDIR}${PREFIX}
	# version 11 installs setuptools.  Remove this line when 11 is dropped
	${RM} -r ${STAGEDIR}${PYTHON_SITELIBDIR}/setuptools \
		${STAGEDIR}${PYTHON_SITELIBDIR}/pkg_resources \
		${STAGEDIR}${PYTHON_SITELIBDIR}/setuptools-* \
		${STAGEDIR}${PYTHON_SITELIBDIR}/_distutils_hack \
		${STAGEDIR}${PYTHON_SITELIBDIR}/distutils-precedence.pth

[FILE:239:descriptions/desc.single]
Pip is a package manager for Python that allows you to install additional
libraries and packages that are not part of the standard Python library
such as the ones found in the Python Package Index. It is a replacement
for an easy install.

