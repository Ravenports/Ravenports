# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-mkdocs-autorefs
VERSION=		0.5.0
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Automatically link across pages in MkDocs (3.11)
SDESC[v12]=		Automatically link across pages in MkDocs (3.12)
HOMEPAGE=		https://mkdocstrings.github.io/autorefs
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/21/5f/fe501daf6f06b93d5d9dff4319c04ad6e74965348dff22465bdd53e5e2d9
DISTFILE[1]=		mkdocs_autorefs-0.5.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		mkdocs_autorefs-0.5.0.dist-info

GENERATED=		yes

[PY311].RUN_DEPENDS_ON=			python-Markdown:single:v11
					python-mkdocs:single:v11
[PY311].USES_ON=			python:v11,wheel

[PY312].RUN_DEPENDS_ON=			python-Markdown:single:v12
					python-mkdocs:single:v12
[PY312].USES_ON=			python:v12,wheel

[FILE:1564:descriptions/desc.single]
# mkdocs-autorefs

[ci]
[documentation]
[pypi version]
[conda version]
[gitpod]
[gitter]

Automatically link across pages in MkDocs.

## Installation

With `pip`:
```bash
python3 -m pip install mkdocs-autorefs
```

## Usage

```yaml
# mkdocs.yml
plugins:
  - search
  - autorefs
```

In one of your Markdown files (e.g. `doc1.md`) create some headings:

```markdown
## Hello, world!

## Another heading

Link to [Hello, World!] on the same page.
```

This is a [*normal* link to an anchor]. MkDocs generates anchors for each
heading, and they can always be used to link to something, either within
the same page (as shown here) or by specifying the path of the other page.

But with this plugin, you can **link to a heading from any other page** on
the site *without* needing to know the path of either of the pages, just
the heading title itself.  
Let's create another Markdown page to try this, `subdir/doc2.md`:

```markdown
We can [link to that heading][hello-world] from another page too.

This works the same as [a normal link to that heading].
```

Linking to a heading without needing to know the destination page can be
useful if specifying that path is cumbersome, e.g. when the pages have
deeply nested paths, are far apart, or are moved around frequently. And the
issue is somewhat exacerbated by the fact that [MkDocs supports only
*relative* links between pages].

Note that this plugin's behavior is undefined when trying to link to a
heading title that appears several times throughout the site. Currently it
arbitrarily chooses one of the pages.


[FILE:117:distinfo]
7930fcb8ac1249f10e683967aeaddc0af49d90702af111a5e390e8b20b3d97ff         9620 mkdocs_autorefs-0.5.0-py3-none-any.whl

