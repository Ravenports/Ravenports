# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-mkdocs-autorefs
VERSION=		0.4.1
KEYWORDS=		python
VARIANTS=		py310 py311
SDESC[py310]=		Automatically link across pages in MkDocs (3.10)
SDESC[py311]=		Automatically link across pages in MkDocs (3.11)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/fb/5c/6594400290df38f99bf8d9ef249387b56f4ad962667836266f6fe7da8597
DISTFILE[1]=		mkdocs_autorefs-0.4.1-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py311]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[py311]=		PY310=OFF PY311=ON

DISTNAME=		mkdocs_autorefs-0.4.1.dist-info

GENERATED=		yes

[PY310].RUN_DEPENDS_ON=			python-Markdown:single:py310
					python-mkdocs:single:py310
[PY310].USES_ON=			python:py310,wheel

[PY311].RUN_DEPENDS_ON=			python-Markdown:single:py311
					python-mkdocs:single:py311
[PY311].USES_ON=			python:py311,wheel

[FILE:2085:descriptions/desc.single]
# mkdocs-autorefs

[ci]
[documentation]
[pypi version]
[conda version]
[gitpod]
[gitter]

Automatically link across pages in MkDocs.

## Installation

With `pip`:
```bash
python3 -m pip install mkdocs-autorefs
```

## Usage

```yaml
# mkdocs.yml
plugins:
  - search
  - autorefs
```

In one of your Markdown files (e.g. `doc1.md`) create some headings:

```markdown
## Hello, world!

## Another heading

Link to [Hello, World!] on the same page.
```

This is a [*normal* link to an anchor]. MkDocs generates anchors for each
heading, and they can always be used to link to something, either within
the same page (as shown here) or by specifying the path of the other page.

But with this plugin, you can **link to a heading from any other page** on
the site *without* needing to know the path of either of the pages, just
the heading title itself.  
Let's create another Markdown page to try this, `subdir/doc2.md`:

```markdown
We can [link to that heading][hello-world] from another page too.

This works the same as [a normal link to that heading].
```

Linking to a heading without needing to know the destination page can be
useful if specifying that path is cumbersome, e.g. when the pages have
deeply nested paths, are far apart, or are moved around frequently. And the
issue is somewhat exacerbated by the fact that [MkDocs supports only
*relative* links between pages].

Note that this plugin's behavior is undefined when trying to link to a
heading title that appears several times throughout the site. Currently it
arbitrarily chooses one of the pages.

## Requirements

mkdocs-autorefs requires Python 3.7 or above.

<details>
<summary>To install Python 3.7, I recommend using
<code>pyenv</code>.</summary>

```bash
# install pyenv
git clone https://github.com/pyenv/pyenv ~/.pyenv

# setup pyenv (you should also put these three lines in .bashrc or similar)
export PATH="${HOME}/.pyenv/bin:${PATH}"
export PYENV_ROOT="${HOME}/.pyenv"
eval "$(pyenv init -)"

# install Python 3.7
pyenv install 3.7.12

# make it available globally
pyenv global system 3.7.12
```
</details>


[FILE:117:distinfo]
a2248a9501b29dc0cc8ba4c09f4f47ff121945f6ce33d760f145d6f89d313f5b         9802 mkdocs_autorefs-0.4.1-py3-none-any.whl

