# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		p11-kit
VERSION=		0.23.11
REVISION=		1
KEYWORDS=		security devel
VARIANTS=		standard
SDESC[standard]=	Library for loading and sharing PKCS#11 modules
HOMEPAGE=		https://p11-glue.freedesktop.org/p11-kit.html
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/p11-glue/p11-kit/releases/download/0.23.11/
DISTFILE[1]=		p11-kit-0.23.11.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	nss:caroot:standard
			libtasn1:primary:standard
			libffi:single:standard
B_DEPS[sunos]=		libbsd4sol:single:standard

USES=			gmake libtool pkgconfig

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		security/p11-kit

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--disable-nls
			--enable-debug=no
			--with-trust-paths={{LOCALBASE}}/share/certs/ca-root-nss.crt

INSTALL_TARGET=		install-strip

VAR_OPSYS[sunos]=	CPPFLAGS=-I{{LOCALBASE}}/include/bsd

post-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/share/doc
	${MV} ${STAGEDIR}${PREFIX}/share/gtk-doc/html/p11-kit \
		${STAGEDIR}${STD_DOCDIR}
	${RM} -r ${STAGEDIR}${PREFIX}/share/gtk-doc

pre-configure:
	${REINPLACE_CMD} -e \
	's|exampledir = $$(p11_system_config)|exampledir = ${STD_EXAMPLESDIR}|' \
	${WRKSRC}/Makefile.in

[FILE:290:descriptions/desc.primary]
Provides a way to load and enumerate PKCS#11 modules. Provides a
standard configuration setup for installing PKCS#11 modules in
such a way that they're discoverable.

Also solves problems with coordinating the use of PKCS#11 by
different components or libraries living in the same process.


[FILE:101:distinfo]
b243c8daa573f85cb9873352a4c38563812fe3045e960593eb45db7dfdea4a2b      1251600 p11-kit-0.23.11.tar.gz


[FILE:392:manifests/plist.primary]
bin/
 p11-kit
 trust
include/p11-kit-1/p11-kit/
 deprecated.h
 iter.h
 p11-kit.h
 pin.h
 pkcs11.h
 pkcs11x.h
 remote.h
 uri.h
lib/
 libp11-kit.so
 libp11-kit.so.0
 libp11-kit.so.0.3.0
 p11-kit-proxy.so
lib/pkcs11/
 p11-kit-client.so
 p11-kit-trust.so
lib/pkgconfig/p11-kit-1.pc
libexec/p11-kit/
 p11-kit-remote
 p11-kit-server
 trust-extract-compat
share/p11-kit/modules/p11-kit-trust.module


[FILE:716:manifests/plist.docs]
share/doc/p11-kit/
 config-example.html
 config-files.html
 config.html
 devel-building-style.html
 devel-building.html
 devel-commands.html
 devel-debugging.html
 devel-paths.html
 devel-testing.html
 devel.html
 gtk-doc.css
 home.png
 index.html
 left-insensitive.png
 left.png
 p11-kit-Deprecated.html
 p11-kit-Future.html
 p11-kit-Modules.html
 p11-kit-PIN-Callbacks.html
 p11-kit-URIs.html
 p11-kit-Utilities.html
 p11-kit.devhelp2
 p11-kit.html
 pkcs11-conf.html
 reference.html
 remoting.html
 right-insensitive.png
 right.png
 sharing-managed.html
 sharing.html
 style.css
 tools.html
 trust-disable.html
 trust-glib-networking.html
 trust-module.html
 trust-nss.html
 trust.html
 up-insensitive.png
 up.png


[FILE:43:manifests/plist.examples]
share/examples/p11-kit/pkcs11.conf.example


[FILE:506:patches/patch-common_compat.c]
--- common/compat.c.orig	2018-05-25 12:16:31 UTC
+++ common/compat.c
@@ -38,7 +38,11 @@
  * This is needed to expose pthread_mutexattr_settype and PTHREAD_MUTEX_DEFAULT
  * on older pthreads implementations
  */
+#ifdef __sun__
+#define _XOPEN_SOURCE 600
+#else
 #define _XOPEN_SOURCE 700
+#endif
 
 #if defined(HAVE_ISSETUGID) && defined(__FreeBSD__)
 #define __BSD_VISIBLE 1
@@ -52,6 +56,7 @@
 #include <errno.h>
 #include <stdint.h>
 #include <stdlib.h>
+#include <stdint.h>
 #include <string.h>
 
 /*-


[FILE:354:patches/patch-common_message.c]
--- common/message.c.orig	2018-05-07 08:24:03 UTC
+++ common/message.c
@@ -41,7 +41,9 @@
  * Oh god. glibc is nasty. Changes behavior and definitions of POSIX
  * functions to completely different signatures depending on defines
  */
+#ifdef __linux__
 #define _POSIX_C_SOURCE 200112L
+#endif
 
 #include "compat.h"
 #define P11_DEBUG_FLAG P11_DEBUG_LIB


[FILE:2812:patches/patch-fix-gnutls]
From cd0a2de679a81829b7323bc5db46222b9eaab1d9 Mon Sep 17 00:00:00 2001
From: Daiki Ueno <dueno@redhat.com>
Date: Mon, 28 May 2018 12:54:39 +0200
Subject: [PATCH] pkcs11: Exercise GNU calling convention at compile time

---
 .gitignore          |  1 +
 p11-kit/Makefile.am | 32 ++++++++++++++++++++++++++++++++
 p11-kit/iter.h      | 10 ++++++++++
 p11-kit/uri.h       |  4 ++++
 4 files changed, 47 insertions(+)

--- p11-kit/Makefile.am
+++ p11-kit/Makefile.am
@@ -104,6 +104,7 @@ noinst_LTLIBRARIES += \
 
 check_LTLIBRARIES += \
 	libp11-kit-testable.la \
+	libp11-kit-pkcs11-gnu.la \
 	$(NULL)
 
 libp11_kit_internal_la_LDFLAGS = -no-undefined
@@ -117,6 +118,37 @@ libp11_kit_testable_la_SOURCES = \
 	$(NULL)
 libp11_kit_testable_la_LIBADD = $(COMMON_LIBS)
 
+pkcs11_gnu_sources = \
+	p11-kit/uri.gnu.c \
+	p11-kit/iter.gnu.c \
+	p11-kit/pin.gnu.c \
+	$(NULL)
+
+BUILT_SOURCES += $(pkcs11_gnu_sources)
+CLEANFILES += $(pkcs11_gnu_sources)
+
+p11-kit/uri.gnu.c: p11-kit/uri.h
+p11-kit/iter.gnu.c: p11-kit/iter.h
+p11-kit/pin.gnu.c: p11-kit/pin.h
+
+SUFFIXES = .h .gnu.c
+.h.gnu.c:
+	$(AM_V_GEN) src=$<; dst=$@; rm -f $@-t $@ && \
+	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
+	  echo; \
+	  echo '#include <stdlib.h>'; \
+	  echo '#include "p11-kit/p11-kit.h"'; \
+	  cat $$src; \
+	  echo "void *$${dst}_funcs[] = {" | sed 's/[^][ *a-z0-9_={]/_/g'; \
+	  sed -n -e '/^typedef/d' -e 's/.* \(p11_kit_[^ ]*\) *(.*/	\1,/p' $<; \
+	  echo '};'; \
+	} > $@-t && \
+	mv -f $@-t $@
+
+libp11_kit_pkcs11_gnu_la_LDFLAGS = -no-undefined
+libp11_kit_pkcs11_gnu_la_SOURCES = $(pkcs11_gnu_sources)
+libp11_kit_pkcs11_gnu_la_CFLAGS = -DCRYPTOKI_GNU=1 -DP11_KIT_FUTURE_UNSTABLE_API=1
+
 if OS_WIN32
 
 libp11_kit_testable_la_CFLAGS = \
--- p11-kit/iter.h
+++ p11-kit/iter.h
@@ -45,6 +45,16 @@ extern "C" {
 
 #ifdef P11_KIT_FUTURE_UNSTABLE_API
 
+/*
+ * If the caller is using the PKCS#11 GNU calling convention, then we cater
+ * to that here.
+ */
+#ifdef CRYPTOKI_GNU
+typedef unsigned char CK_BBOOL;
+typedef ck_object_handle_t CK_OBJECT_HANDLE;
+typedef ck_session_handle_t CK_SESSION_HANDLE;
+#endif
+
 typedef struct p11_kit_iter P11KitIter;
 typedef P11KitIter p11_kit_iter;
 
--- p11-kit/uri.h
+++ p11-kit/uri.h
@@ -79,11 +79,15 @@ typedef enum {
  * to that here.
  */
 #ifdef CRYPTOKI_GNU
+typedef struct ck_info CK_INFO;
 typedef struct ck_info *CK_INFO_PTR;
+typedef struct ck_token_info CK_TOKEN_INFO;
 typedef struct ck_token_info *CK_TOKEN_INFO_PTR;
 typedef ck_attribute_type_t CK_ATTRIBUTE_TYPE;
+typedef struct ck_attribute CK_ATTRIBUTE;
 typedef struct ck_attribute *CK_ATTRIBUTE_PTR;
 typedef unsigned long int CK_ULONG;
+typedef struct ck_slot_info CK_SLOT_INFO;
 typedef struct ck_slot_info *CK_SLOT_INFO_PTR;
 typedef ck_slot_id_t CK_SLOT_ID;
 typedef P11KitUriType p11_kit_uri_type_t;


[FILE:334:patches/patch-p11-kit_server.c]
--- p11-kit/server.c.orig	2018-05-07 08:24:03 UTC
+++ p11-kit/server.c
@@ -75,6 +75,12 @@ typedef void (*sighandler_t)(int);
 
 #endif /* OS_UNIX */
 
+#ifdef __sun__
+# ifndef SUN_LEN
+# define SUN_LEN(su)	(sizeof (sa_family_t) + strlen((su)->sun_path))
+# endif
+#endif
+
 typedef struct {
 	const char **tokens;
 	size_t n_tokens;

