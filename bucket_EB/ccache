# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		ccache
VERSION=		3.3.4
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Fast C/C++ compiler cache tool
HOMEPAGE=		https://ccache.samba.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.samba.org/ftp/ccache/
DISTFILE[1]=		ccache-3.3.4.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		GPLv3:primary
LICENSE_SCHEME=		solo
LICENSE_FILE=		GPLv3:{{WRKSRC}}/GPL-3.0.txt
SKIP_CCACHE=		yes

MUST_CONFIGURE=		gnu

CPPFLAGS=		-DCC_IS_GCC

do-install:
	${INSTALL_PROGRAM} ${WRKSRC}/ccache ${STAGEDIR}${PREFIX}/bin
	${INSTALL_MAN} ${WRKSRC}/ccache.1 ${STAGEDIR}${PREFIX}/share/man/man1
	@${MKDIR} ${STAGEDIR}${STD_DOCDIR}
	${INSTALL_DATA} ${WRKSRC}/MANUAL.html ${STAGEDIR}${STD_DOCDIR}
	${INSTALL_DATA} ${WRKSRC}/MANUAL.txt  ${STAGEDIR}${STD_DOCDIR}

[FILE:253:descriptions/desc.primary]
ccache is a compiler cache.  It acts as a caching pre-processor to C/C++
compilers, using the -E compiler switch and a hash to detect when a
compilation can be satisfied from cache.  This often results in a 5 to 10
times speedup in common compilations.


[FILE:98:distinfo]
1348b54e7c35dd2f8d17923389e03c546e599cfbde6459d2f31cf6f1521ec538       449905 ccache-3.3.4.tar.gz


[FILE:38:manifests/plist.primary]
bin/ccache
share/man/man1/ccache.1.gz


[FILE:43:manifests/plist.docs]
share/doc/ccache/
 MANUAL.html
 MANUAL.txt


[FILE:326:patches/patch-Makefile.in]
--- Makefile.in.orig	2017-02-17 21:28:53 UTC
+++ Makefile.in
@@ -88,7 +88,8 @@ clean:
 
 conf.c: confitems_lookup.c envtoconfitems_lookup.c
 
-$(zlib_objs): CPPFLAGS += -include config.h
+$(zlib_objs):
+	$(CC) $(all_cppflags) -include config.h $(all_cflags) -c -o $@ $<
 
 zlib/libz.a: $(zlib_objs)
 	$(AR) cr $@ $(zlib_objs)


[FILE:1932:patches/patch-ccache.c]
- Determine whether cc(1) is clang or gcc at compile-time.
- Don't hash -fcolor-diagnostics; make will auto use it while make -j will not.
  There's no reason to not use the cache in either of these cases if it is
  already available.
-bdrewery

--- ccache.c.orig	2016-10-26 14:31:19.000000000 -0700
+++ ccache.c	2017-02-03 14:24:35.466505000 -0800
@@ -1468,6 +1468,11 @@ compiler_is_clang(struct args *args)
 {
 	char *name = basename(args->argv[0]);
 	bool result = strstr(name, "clang") != NULL;
+#ifdef CC_IS_CLANG
+	if (strcmp(name, "cc") == 0 || strcmp(name, "CC") == 0 ||
+	    strcmp(name, "c++") == 0)
+	        result = true;
+#endif
 	free(name);
 	return result;
 }
@@ -1477,6 +1482,11 @@ compiler_is_gcc(struct args *args)
 {
 	char *name = basename(args->argv[0]);
 	bool result = strstr(name, "gcc") || strstr(name, "g++");
+#ifdef CC_IS_GCC
+	if (strcmp(name, "cc") == 0 || strcmp(name, "CC") == 0 ||
+	    strcmp(name, "c++") == 0)
+	        result = true;
+#endif
 	free(name);
 	return result;
 }
@@ -1592,6 +1602,7 @@ calculate_common_hash(struct args *args,
 		free(p);
 	}
 
+#if 0
 	// Possibly hash GCC_COLORS (for color diagnostics).
 	if (compiler_is_gcc(args)) {
 		const char *gcc_colors = getenv("GCC_COLORS");
@@ -1600,6 +1611,7 @@ calculate_common_hash(struct args *args,
 			hash_string(hash, gcc_colors);
 		}
 	}
+#endif
 }
 
 // Update a hash sum with information specific to the direct and preprocessor
@@ -1629,6 +1641,13 @@ calculate_object_hash(struct args *args,
 			continue;
 		}
 
+		/* Colors do not affect compilation. */
+		if (str_startswith(args->argv[i], "-fcolor-diagnostics") ||
+		    str_eq(args->argv[i], "-fdiagnostics-color") ||
+		    str_eq(args->argv[i], "-fdiagnostics-color=always")) {
+			continue;
+		}
+
 		// The -fdebug-prefix-map option may be used in combination with
 		// CCACHE_BASEDIR to reuse results across different directories. Skip it
 		// from hashing.


[FILE:459:patches/patch-configure]
--- configure.orig	2015-10-08 19:14:23 UTC
+++ configure
@@ -3672,7 +3672,7 @@ $as_echo "#define _XOPEN_SOURCE 500" >>c
       ;;
     *)
 
-$as_echo "#define _XOPEN_SOURCE 600" >>confdefs.h
+$as_echo "#define _XOPEN_SOURCE 700" >>confdefs.h
 
       ;;
   esac
@@ -3694,7 +3694,7 @@ $as_echo "#define _XOPEN_SOURCE_EXTENDED
   esac
 
 
-$as_echo "#define _POSIX_C_SOURCE 200112L" >>confdefs.h
+$as_echo "#define _POSIX_C_SOURCE 200809L" >>confdefs.h
 
 
 fi

