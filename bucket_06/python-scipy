# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-scipy
VERSION=		1.5.3
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		Scientific library for Python (PY37)
SDESC[py38]=		Scientific library for Python (PY38)
HOMEPAGE=		https://www.scipy.org
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/s/scipy
DISTFILE[1]=		scipy-1.5.3.tar.gz:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

BUILDRUN_DEPENDS=	lapack:lapack:standard

DISTNAME=		scipy-1.5.3

GENERATED=		yes

INSTALL_REQ_TOOLCHAIN=	yes

[PY37].BUILDRUN_DEPENDS_ON=		python-numpy:single:py37
					python-pybind11:single:py37
[PY37].USES_ON=				python:py37

[PY38].BUILDRUN_DEPENDS_ON=		python-numpy:single:py38
					python-pybind11:single:py38
[PY38].USES_ON=				python:py38

[FILE:714:descriptions/desc.single]
SciPy (pronounced "Sigh Pie") is open-source software for mathematics,
science, and engineering. The SciPy library
depends on NumPy, which provides convenient and fast N-dimensional
array manipulation. The SciPy library is built to work with NumPy
arrays, and provides many user-friendly and efficient numerical
routines such as routines for numerical integration and optimization.
Together, they run on all popular operating systems, are quick to
install, and are free of charge.  NumPy and SciPy are easy to use,
but powerful enough to be depended upon by some of the world's
leading scientists and engineers. If you need to manipulate
numbers on a computer and display or publish the results,
give SciPy a try!


[FILE:97:distinfo]
ddae76784574cc4c172f3d5edd7308be16078dd3b977e8746860c76c195fa707     25234560 scipy-1.5.3.tar.gz


[FILE:348:patches/patch-scipy_optimize_rectangular__lsap_rectangular__lsap.cpp]
--- scipy/optimize/rectangular_lsap/rectangular_lsap.cpp.orig	2019-12-13 00:12:50 UTC
+++ scipy/optimize/rectangular_lsap/rectangular_lsap.cpp
@@ -43,6 +43,7 @@ Author: PM Larsen
 #include <algorithm>
 #include <cmath>
 #include <vector>
+#include <cstdint>
 
 static int
 augmenting_path(int nc, std::vector<double>& cost, std::vector<double>& u,

