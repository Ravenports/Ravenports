# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-requests-oauthlib
VERSION=		1.3.1
KEYWORDS=		python
VARIANTS=		py39 py310
SDESC[py310]=		Authentication support for Requests (3.10)
SDESC[py39]=		Authentication support for Requests (3.9)
HOMEPAGE=		https://github.com/requests/requests-oauthlib
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/6f/bb/5deac77a9af870143c684ab46a7934038a53eb4aa975bc0687ed6ca2c610
DISTFILE[1]=		requests_oauthlib-1.3.1-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py39]=		single

OPTIONS_AVAILABLE=	PY39 PY310
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY39=OFF PY310=ON
VOPTS[py39]=		PY39=ON PY310=OFF

DISTNAME=		requests_oauthlib-1.3.1.dist-info

GENERATED=		yes

[PY39].RUN_DEPENDS_ON=			python-oauthlib:single:py39
					python-requests:single:py39
[PY39].USES_ON=				python:py39,wheel

[PY310].RUN_DEPENDS_ON=			python-oauthlib:single:py310
					python-requests:single:py310
[PY310].USES_ON=			python:py310,wheel

[FILE:3241:descriptions/desc.single]
Requests-OAuthlib |build-status| |coverage-status| |docs|
=========================================================

This project provides first-class OAuth library support for [Requests].

The OAuth 1 workflow
--------------------

OAuth 1 can seem overly complicated and it sure has its quirks. Luckily,
requests_oauthlib hides most of these and let you focus at the task at
hand.

Accessing protected resources using requests_oauthlib is as simple as:

History
-------

v1.3.1 (21 January 2022)
++++++++++++++++++++++++

- Add initial support for OAuth Mutual TLS (draft-ietf-oauth-mtls)
- Add eBay compliance fix
- Add Spotify OAuth 2 Tutorial
- Add support for python 3.8, 3.9
- Fixed LinkedIn Compliance Fixes
- Fixed ReadTheDocs Documentation and sphinx errors
- Moved pipeline to GitHub Actions

v1.3.0 (6 November 2019)
++++++++++++++++++++++++

- Instagram compliance fix
- Added force_querystring argument to fetch_token() method on OAuth2Session

v1.2.0 (14 January 2019)
++++++++++++++++++++++++

- This project now depends on OAuthlib 3.0.0 and above. It does **not**
support
  versions of OAuthlib before 3.0.0.
- Updated oauth2 tests to use 'sess' for an OAuth2Session instance instead
of `auth`
  because OAuth2Session objects and methods acceept an `auth` paramether
which is
  typically an instance of `requests.auth.HTTPBasicAuth`
- `OAuth2Session.fetch_token` previously tried to guess how and where to
provide
  "client" and "user" credentials incorrectly. This was incompatible with
some
  OAuth servers and incompatible with breaking changes in oauthlib that
seek to
  correctly provide the `client_id`. The older implementation also did not
raise
  the correct exceptions when username and password are not present on
Legacy
  clients.
- Avoid automatic netrc authentication for OAuth2Session.

v1.1.0 (9 January 2019)
+++++++++++++++++++++++

- Adjusted version specifier for oauthlib dependency: this project is
  not yet compatible with oauthlib 3.0.0.
- Dropped dependency on nose.
- Minor changes to clean up the code and make it more
readable/maintainable.

v1.0.0 (4 June 2018)
++++++++++++++++++++

- **Removed support for Python 2.6 and Python 3.3.**
  This project now supports Python 2.7, and Python 3.4 and above.
- Added several examples to the documentation.
- Added plentymarkets compliance fix.
- Added a token property to OAuth1Session, to match the corresponding
  token property on OAuth2Session.

v0.8.0 (14 February 2017)
+++++++++++++++++++++++++

- Added Fitbit compliance fix.
- Fixed an issue where newlines in the response body for the access token
  request would cause errors when trying to extract the token.
- Fixed an issue introduced in v0.7.0 where users passing auth to several
  methods would encounter conflicts with the client_id and
  client_secret-derived auth. The user-supplied auth argument is now
  used in preference to those options.

v0.7.0 (22 September 2016)
++++++++++++++++++++++++++

- Allowed ``OAuth2Session.request to take the client_id and
  client_secret`` parameters for the purposes of automatic token refresh,
  which may need them.

v0.6.2 (12 July 2016)
+++++++++++++++++++++

- Use client_id and client_secret for the Authorization header if
  provided.


[FILE:123:distinfo]
2577c501a2fb8d05a304c09d090d6e47c306fef15809d102b327cf8364bddab5        23892 requests_oauthlib-1.3.1-py2.py3-none-any.whl

