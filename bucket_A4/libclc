# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libclc
VERSION=		0.4.0.20190527
REVISION=		1
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Required library functions for OpenCL C language
HOMEPAGE=		http://libclc.llvm.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/llvm-mirror:libclc:9f6204e
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		libedit:single:standard

USES=			python:build gmake cmake:insource clang:keepcc

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"LLVM Release License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENCE.TXT
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/libclc

MAKE_ENV=		MAKE={{GMAKE}}
			DESTDIR={{STAGEDIR}}
			CCACHE_CPP2=yes

post-patch:
	${REINPLACE_CMD} \
		-e 's|__CLC_INTERNAL|__CLC_INTERNAL -nogpulib|'\
		${WRKSRC}/build/ninja_syntax.py \
		${WRKSRC}/configure.py
	# add ccache support
	if [ "${BUILD_WITH_CCACHE}" = "yes" ]; then \
	  ${SED} -i.ccache \
	  -e "s|llvm_clang =.*|llvm_clang = '/usr/libexec/clang'|"\
	  -e "s|cxx_compiler = os.*|cxx_compiler = '/usr/libexec/clang++'|"\
	  ${WRKSRC}/configure.py ;\
	fi

do-configure:
	(cd ${WRKSRC} && ${PYTHON_CMD} configure.py ${CONFIGURE_ARGS} \
		-g make \
		--pkgconfigdir=${PREFIX}/lib/pkgconfig \
		--with-llvm-config=${LOCALBASE}/bin/llvm-config \
		--prefix=${PREFIX})

post-patch-sunos:
	${SED} -i.sunos -e 's/-fno-rtti/-fno-rtti -fno-use-cxa-atexit/' \
		-e '/lpthread/ s|-Wl,|-Wl,-rpath ${PREFIX}/toolchain/gcc9/lib/amd64 -Wl,|'\
		${WRKSRC}/configure.py

[FILE:312:descriptions/desc.single]
libclc is an open source, BSD licensed implementation of the library
requirements of the OpenCL C programming language, as specified by the
OpenCL 1.1 Specification. The following sections of the specification
impose library requirements:

Libclc is intended to be used with the Clang compiler's OpenCL frontend


[FILE:112:distinfo]
8004c3a075d715cff6780c8ffe04c9f798dadf48bd375bdd6d98adabed04cd55       176995 llvm-mirror-libclc-9f6204e.tar.gz


[FILE:5802:manifests/plist.single]
include/clc/
 as_type.h
 atom_decl_int32.inc
 atom_decl_int64.inc
 clc.h
 clcfunc.h
 clcmacros.h
 clctypes.h
 convert.h
include/clc/async/
 async_work_group_copy.h
 async_work_group_copy.inc
 async_work_group_strided_copy.h
 async_work_group_strided_copy.inc
 gentype.inc
 prefetch.h
 prefetch.inc
 wait_group_events.h
include/clc/atomic/
 atomic_add.h
 atomic_and.h
 atomic_cmpxchg.h
 atomic_dec.h
 atomic_decl.inc
 atomic_inc.h
 atomic_max.h
 atomic_min.h
 atomic_or.h
 atomic_sub.h
 atomic_xchg.h
 atomic_xor.h
include/clc/cl_khr_global_int32_base_atomics/
 atom_add.h
 atom_cmpxchg.h
 atom_dec.h
 atom_inc.h
 atom_sub.h
 atom_xchg.h
include/clc/cl_khr_global_int32_extended_atomics/
 atom_and.h
 atom_max.h
 atom_min.h
 atom_or.h
 atom_xor.h
include/clc/cl_khr_int64_base_atomics/
 atom_add.h
 atom_cmpxchg.h
 atom_dec.h
 atom_inc.h
 atom_sub.h
 atom_xchg.h
include/clc/cl_khr_int64_extended_atomics/
 atom_and.h
 atom_max.h
 atom_min.h
 atom_or.h
 atom_xor.h
include/clc/cl_khr_local_int32_base_atomics/
 atom_add.h
 atom_cmpxchg.h
 atom_dec.h
 atom_inc.h
 atom_sub.h
 atom_xchg.h
include/clc/cl_khr_local_int32_extended_atomics/
 atom_and.h
 atom_max.h
 atom_min.h
 atom_or.h
 atom_xor.h
include/clc/common/
 degrees.h
 degrees.inc
 mix.h
 mix.inc
 radians.h
 radians.inc
 sign.h
 smoothstep.h
 smoothstep.inc
 step.h
 step.inc
include/clc/explicit_fence/explicit_memory_fence.h
include/clc/float/definitions.h
include/clc/geometric/
 cross.h
 distance.h
 distance.inc
 dot.h
 dot.inc
 fast_distance.h
 fast_distance.inc
 fast_length.h
 fast_length.inc
 fast_normalize.h
 fast_normalize.inc
 floatn.inc
 length.h
 length.inc
 normalize.h
 normalize.inc
include/clc/image/
 image.h
 image_defines.h
include/clc/integer/
 abs.h
 abs.inc
 abs_diff.h
 abs_diff.inc
 add_sat.h
 add_sat.inc
 clz.h
 clz.inc
 definitions.h
 gentype.inc
 hadd.h
 hadd.inc
 integer-gentype.inc
 mad24.h
 mad24.inc
 mad_hi.h
 mad_sat.h
 mad_sat.inc
 mul24.h
 mul24.inc
 mul_hi.h
 mul_hi.inc
 popcount.h
 rhadd.h
 rhadd.inc
 rotate.h
 rotate.inc
 sub_sat.h
 sub_sat.inc
 unary.inc
 upsample.h
include/clc/math/
 acos.h
 acosh.h
 acospi.h
 asin.h
 asinh.h
 asinpi.h
 atan.h
 atan2.h
 atan2pi.h
 atanh.h
 atanpi.h
 binary_decl.inc
 binary_decl_tt.inc
 cbrt.h
 ceil.h
 copysign.h
 cos.h
 cosh.h
 cospi.h
 erf.h
 erfc.h
 exp.h
 exp10.h
 exp2.h
 expm1.h
 fabs.h
 fdim.h
 floor.h
 fma.h
 fmax.h
 fmin.h
 fmod.h
 fract.h
 fract.inc
 frexp.h
 frexp.inc
 gentype.inc
 half_cos.h
 half_divide.h
 half_exp.h
 half_exp10.h
 half_exp2.h
 half_log.h
 half_log10.h
 half_log2.h
 half_powr.h
 half_recip.h
 half_rsqrt.h
 half_sin.h
 half_sqrt.h
 half_tan.h
 hypot.h
 ilogb.h
 ilogb.inc
 ldexp.h
 ldexp.inc
 lgamma.h
 lgamma_r.h
 lgamma_r.inc
 log.h
 log10.h
 log1p.h
 log2.h
 logb.h
 mad.h
 maxmag.h
 minmag.h
 modf.h
 modf.inc
 nan.h
 nan.inc
 native_cos.h
 native_divide.h
 native_exp.h
 native_exp10.h
 native_exp2.h
 native_log.h
 native_log10.h
 native_log2.h
 native_powr.h
 native_recip.h
 native_rsqrt.h
 native_sin.h
 native_sqrt.h
 native_tan.h
 nextafter.h
 pow.h
 pown.h
 pown.inc
 powr.h
 remainder.h
 remquo.h
 remquo.inc
 rint.h
 rootn.h
 rootn.inc
 round.h
 rsqrt.h
 sin.h
 sincos.h
 sincos.inc
 sinh.h
 sinpi.h
 sqrt.h
 tan.h
 tanh.h
 tanpi.h
 ternary_decl.inc
 tgamma.h
 trunc.h
 unary_decl.inc
include/clc/misc/
 shuffle.h
 shuffle2.h
include/clc/relational/
 all.h
 any.h
 binary_decl.inc
 bitselect.h
 bitselect.inc
 floatn.inc
 isequal.h
 isfinite.h
 isgreater.h
 isgreaterequal.h
 isinf.h
 isless.h
 islessequal.h
 islessgreater.h
 isnan.h
 isnormal.h
 isnotequal.h
 isordered.h
 isunordered.h
 select.h
 select.inc
 signbit.h
 unary_decl.inc
include/clc/shared/
 clamp.h
 clamp.inc
 max.h
 max.inc
 min.h
 min.inc
 vload.h
 vstore.h
include/clc/synchronization/
 barrier.h
 cl_mem_fence_flags.h
include/clc/workitem/
 get_global_id.h
 get_global_offset.h
 get_global_size.h
 get_group_id.h
 get_local_id.h
 get_local_size.h
 get_num_groups.h
 get_work_dim.h
lib/clc/
 amdgcn--amdhsa.bc
 aruba-r600--.bc
 barts-r600--.bc
 bonaire-amdgcn--.bc
 bonaire-amdgcn--amdhsa.bc
 bonaire-amdgcn-mesa-mesa3d.bc
 caicos-r600--.bc
 carrizo-amdgcn--.bc
 carrizo-amdgcn--amdhsa.bc
 carrizo-amdgcn-mesa-mesa3d.bc
 cayman-r600--.bc
 cedar-r600--.bc
 cypress-r600--.bc
 fiji-amdgcn--.bc
 fiji-amdgcn--amdhsa.bc
 fiji-amdgcn-mesa-mesa3d.bc
 gfx900-amdgcn--.bc
 gfx900-amdgcn--amdhsa.bc
 gfx900-amdgcn-mesa-mesa3d.bc
 gfx902-amdgcn--.bc
 gfx902-amdgcn--amdhsa.bc
 gfx902-amdgcn-mesa-mesa3d.bc
 gfx904-amdgcn--.bc
 gfx904-amdgcn--amdhsa.bc
 gfx904-amdgcn-mesa-mesa3d.bc
 gfx906-amdgcn--.bc
 gfx906-amdgcn--amdhsa.bc
 gfx906-amdgcn-mesa-mesa3d.bc
 hainan-amdgcn--.bc
 hainan-amdgcn-mesa-mesa3d.bc
 hawaii-amdgcn--.bc
 hawaii-amdgcn--amdhsa.bc
 hawaii-amdgcn-mesa-mesa3d.bc
 hemlock-r600--.bc
 iceland-amdgcn--.bc
 iceland-amdgcn--amdhsa.bc
 iceland-amdgcn-mesa-mesa3d.bc
 juniper-r600--.bc
 kabini-amdgcn--.bc
 kabini-amdgcn--amdhsa.bc
 kabini-amdgcn-mesa-mesa3d.bc
 kaveri-amdgcn--.bc
 kaveri-amdgcn--amdhsa.bc
 kaveri-amdgcn-mesa-mesa3d.bc
 mullins-amdgcn--.bc
 mullins-amdgcn--amdhsa.bc
 mullins-amdgcn-mesa-mesa3d.bc
 nvptx--nvidiacl.bc
 nvptx64--nvidiacl.bc
 oland-amdgcn--.bc
 oland-amdgcn-mesa-mesa3d.bc
 palm-r600--.bc
 pitcairn-amdgcn--.bc
 pitcairn-amdgcn-mesa-mesa3d.bc
 polaris10-amdgcn--.bc
 polaris10-amdgcn--amdhsa.bc
 polaris10-amdgcn-mesa-mesa3d.bc
 polaris11-amdgcn--.bc
 polaris11-amdgcn--amdhsa.bc
 polaris11-amdgcn-mesa-mesa3d.bc
 redwood-r600--.bc
 stoney-amdgcn--.bc
 stoney-amdgcn--amdhsa.bc
 stoney-amdgcn-mesa-mesa3d.bc
 subnormal_disable.bc
 subnormal_use_default.bc
 sumo-r600--.bc
 sumo2-r600--.bc
 tahiti-amdgcn--.bc
 tahiti-amdgcn-mesa-mesa3d.bc
 tonga-amdgcn--.bc
 tonga-amdgcn--amdhsa.bc
 tonga-amdgcn-mesa-mesa3d.bc
 turks-r600--.bc
 verde-amdgcn--.bc
 verde-amdgcn-mesa-mesa3d.bc
lib/pkgconfig/libclc.pc


[FILE:1657:patches/patch-configure.py]
The LLVM_TOOL_LINK builds a helper tool named utils/prepare-builtins that
requires libedit which in turn pulls in libtinfo (part of libncurses).
In order to support builds on platforms without base ncurses (e.g. DF),
require base libedit.  This requires an additional -L LDFLAGS to search
${LOCALBASE}/lib for the needed libs.  (prepare-builtins is not installed)

--- configure.py.orig	2019-01-29 16:37:27 UTC
+++ configure.py
@@ -141,7 +141,8 @@ b.rule("OPT", command = llvm_opt + " -O3
        description = 'OPT $out')
 
 c_compiler_rule(b, "LLVM_TOOL_CXX", 'CXX', cxx_compiler, llvm_cxxflags)
-b.rule("LLVM_TOOL_LINK", cxx_compiler + " -o $out $in %s" % llvm_core_libs + " -Wl,-rpath %s" % llvm_libdir, 'LINK $out')
+b.rule("LLVM_TOOL_LINK", cxx_compiler + " -o $out $in %s" % llvm_core_libs + 
+  " -lpthread -L" + prefix + "/lib -Wl,-rpath " + prefix + "/lib -Wl,-rpath %s" % llvm_libdir, 'LINK $out')
 
 prepare_builtins = os.path.join('utils', 'prepare-builtins')
 b.build(os.path.join('utils', 'prepare-builtins.o'), "LLVM_TOOL_CXX",
@@ -300,7 +301,7 @@ install_cmd = ' && '.join(['mkdir -p ${D
                            {'src': file,
                             'dst': libexecdir}
                            for (file, dest) in install_files_bc])
-install_cmd = ' && '.join(['%(old)s && mkdir -p ${DESTDIR}/%(dst)s && cp -r %(srcdir)s/generic/include/clc ${DESTDIR}/%(dst)s' %
+install_cmd = ' && '.join(['%(old)s && mkdir -p ${DESTDIR}/%(dst)s && cp -r generic/include/clc ${DESTDIR}/%(dst)s' %
                            {'old': install_cmd,
                             'dst': includedir,
                             'srcdir': srcdir}])

