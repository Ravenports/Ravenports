# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		msgpack
VERSION=		6.0.0
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	MessagePack implementation for C
HOMEPAGE=		https://msgpack.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/msgpack:msgpack-c:c-6.0.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gtest:single:standard
			cjson:dev:standard
			cjson:primary:standard

USES=			cmake zlib:build

LICENSE=		CUSTOM1:primary
LICENSE_NAME=		CUSTOM1:"Boost Software License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE_1_0.txt
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/msgpack

SOVERSION=		2.0.0

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libmsgpack-c.so

[FILE:432:descriptions/desc.primary]
MessagePack is a binary-based efficient data interchange format that is
focused on high performance. It is like JSON, but very fast and small.

MessagePack is an efficient binary serialization format. It lets you
exchange data among multiple languages like JSON. But it's faster and
smaller. Small integers are encoded into a single byte, and typical short
strings require only one extra byte in addition to the strings themselves.


[FILE:111:distinfo]
af6f3cf25edb220aa2140b09bb5bdd73ddf00938194bd94ebe5c92090cccb466        74953 msgpack-msgpack-c-c-6.0.0.tar.gz


[FILE:65:manifests/plist.primary]
lib/
 libmsgpack-c.so.%%SOMAJOR%%
 libmsgpack-c.so.%%SOVERSION%%


[FILE:460:manifests/plist.dev]
include/msgpack.h
include/msgpack/
 fbuffer.h
 gcc_atomic.h
 object.h
 pack.h
 pack_define.h
 pack_template.h
 sbuffer.h
 sysdep.h
 timestamp.h
 unpack.h
 unpack_define.h
 unpack_template.h
 util.h
 version.h
 version_master.h
 vrefbuffer.h
 zbuffer.h
 zone.h
lib/
 libmsgpack-c.a
 libmsgpack-c.so
lib/cmake/msgpack-c/
 msgpack-c-config-version.cmake
 msgpack-c-config.cmake
 msgpack-c-targets-release.cmake
 msgpack-c-targets.cmake
lib/pkgconfig/msgpack-c.pc

