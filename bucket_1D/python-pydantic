# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-pydantic
VERSION=		2.10.1
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Data validation using Python type hints (3.12)
SDESC[v13]=		Data validation using Python type hints (3.13)
HOMEPAGE=		https://github.com/pydantic/pydantic
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/e0/fc/fda48d347bd50a788dd2a0f318a52160f911b86fc2d8b4c86f4d7c9bceea
DISTFILE[1]=		pydantic-2.10.1-py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

USES=			cpe

DISTNAME=		pydantic-2.10.1.dist-info

CPE_PRODUCT=		pydantic
CPE_VENDOR=		pydantic_project
GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-annotated-types:single:v12
					python-pydantic-core:single:v12
					python-typing-extensions:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-annotated-types:single:v13
					python-pydantic-core:single:v13
					python-typing-extensions:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:2464:descriptions/desc.single]
# Pydantic
[CI]
[Coverage]
[pypi]
[CondaForge]
[downloads]
[versions]
[license]
[Pydantic v2]

Data validation using Python type hints.

Fast and extensible, Pydantic plays nicely with your linters/IDE/brain.
Define how data should be in pure, canonical Python 3.8+; validate it with
Pydantic.

## Pydantic Logfire :fire:

We've recently launched Pydantic Logfire to help you monitor your
applications.
[Learn more]

## Pydantic V1.10 vs. V2

Pydantic V2 is a ground-up rewrite that offers many new features,
performance improvements, and some breaking changes compared to Pydantic
V1.

If you're using Pydantic V1 you may want to look at the
[pydantic V1.10 Documentation] or,
[`1.10.X-fixes` git branch]. Pydantic V2 also ships with the latest version
of Pydantic V1 built in so that you can incrementally upgrade your code
base and projects: `from pydantic import v1 as pydantic_v1`.

## Help

See [documentation] for more details.

## Installation

Install using `pip install -U pydantic` or `conda install pydantic -c
conda-forge`.
For more installation options to make Pydantic even faster,
see the [Install] section in the documentation.

## A Simple Example

```python
from datetime import datetime
from typing import List, Optional
from pydantic import BaseModel

class User(BaseModel):
    id: int
    name: str = 'John Doe'
    signup_ts: Optional[datetime] = None
    friends: List[int] = []

external_data = {'id': '123', 'signup_ts': '2017-06-01 12:22', 'friends':
[1, '2', b'3']}
user = User(**external_data)
print(user)
#> User id=123 name='John Doe' signup_ts=datetime.datetime(2017, 6, 1, 12,
22) friends=[1, 2, 3]
print(user.id)
#> 123
```

## Contributing

For guidance on setting up a development environment and how to make a
contribution to Pydantic, see
[Contributing to Pydantic].

## Reporting a Security Vulnerability

See our [security policy].

## Changelog

## v2.10.1 (2024-11-21)

[GitHub release]

### What's Changed

#### Packaging

* Bump `pydantic-core` version to `v2.27.1` by [@sydney-runkle] in [#10938]

#### Fixes

* Use the correct frame when instantiating a parametrized `TypeAdapter` by
[@Viicos] in [#10893]
* Relax check for validated data in `default_factory` utils by
[@sydney-runkle] in [#10909]
* Fix type checking issue with `model_fields` and `model_computed_fields`
by [@sydney-runkle] in [#10911]
* Use the parent configuration during schema generation for stdlib
`dataclass`es by [@sydney-runkle] in [#10928]


[FILE:122:distinfo]
a8d20db84de64cf4a7d59e899c2caf0fe9d660c7cfc482528e7020d7dd189a7e       455329 python-src/pydantic-2.10.1-py3-none-any.whl

