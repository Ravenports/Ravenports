# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-tomli
VERSION=		2.0.1
KEYWORDS=		python
VARIANTS=		py310 py311
SDESC[py310]=		Lil' TOML parser (3.10)
SDESC[py311]=		Lil' TOML parser (3.11)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/97/75/10a9ebee3fd790d20926a90a2547f0bf78f371b2f13aa822c759680ca7b9
DISTFILE[1]=		tomli-2.0.1-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py311]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[py311]=		PY310=OFF PY311=ON

DISTNAME=		tomli-2.0.1.dist-info

GENERATED=		yes

[PY310].USES_ON=			python:py310,wheel

[PY311].USES_ON=			python:py311,wheel

[FILE:2270:descriptions/desc.single]
[Build Status]
[![codecov.io]](https://codecov.io/gh/hukkin/tomli)
[PyPI version]

# Tomli

> A lil' TOML parser

**Table of Contents**  *generated with [mdformat-toc]*

<!-- mdformat-toc start --slug=github --maxlevel=6 --minlevel=2 -->

- [Intro]
- [Installation]
- [Usage]
  - [Parse a TOML string]
  - [Parse a TOML file]
  - [Handle invalid TOML]
  - [Construct `decimal.Decimal`s from TOML floats]
- [FAQ]
  - [Why this parser?]
  - [Is comment preserving round-trip parsing supported?]
  - [Is there a `dumps`, `write` or `encode` function?]
  - [How do TOML types map into Python types?]
- [Performance]

<!-- mdformat-toc end -->

## Intro</a>

Tomli is a Python library for parsing [TOML].
Tomli is fully compatible with [TOML v1.0.0].

## Installation<a name="installation">

`bash
pip install tomli
`

## Usage</a>

### Parse a TOML string<a name="parse-a-toml-string">

```python
import tomli

toml_str = """
           gretzky = 99

           [kurri]
           jari = 17
           """

toml_dict = tomli.loads(toml_str)
assert toml_dict == {"gretzky": 99, "kurri": {"jari": 17}}
```

### Parse a TOML file</a>

```python
import tomli

with open("path_to_file/conf.toml", "rb") as f:
    toml_dict = tomli.load(f)
```

The file must be opened in binary mode (with the `"rb"` flag).
Binary mode will enforce decoding the file as UTF-8 with universal newlines
disabled,
both of which are required to correctly parse TOML.

### Handle invalid TOML<a name="handle-invalid-toml">

```python
import tomli

try:
    toml_dict = tomli.loads("]] this is invalid TOML [[")
except tomli.TOMLDecodeError:
    print("Yep, definitely not valid.")
```

Note that error messages are considered informational only.
They should not be assumed to stay constant across Tomli versions.

### Construct `decimal.Decimal`s from TOML floats</a>

```python
from decimal import Decimal
import tomli

toml_dict = tomli.loads("precision-matters = 0.982492",
parse_float=Decimal)
assert toml_dict["precision-matters"] == Decimal("0.982492")
```

Note that `decimal.Decimal` can be replaced with another callable that
converts a TOML float from string to a Python type.
The `decimal.Decimal` is, however, a practical choice for use cases where
float inaccuracies can not be tolerated.


[FILE:107:distinfo]
939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc        12757 tomli-2.0.1-py3-none-any.whl

