# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gtk-murrine-engine
VERSION=		0.98.2
KEYWORDS=		x11_themes
VARIANTS=		std
SDESC[std]=		Murrine GTK+2 theme engine
HOMEPAGE=		none
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		GNOME/murrine/0.98/
DISTFILE[1]=		murrine-0.98.2.tar.xz:main
DF_INDEX=		1
SPKGS[std]=		single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		harfbuzz:dev:std

USES=			gettext gmake libtool mbsdfix pkgconfig
GNOME_COMPONENTS=	gtk2 intltool

DISTNAME=		murrine-0.98.2

LICENSE=		LGPL20+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL20+:stock
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/murrine_style.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		x11-themes/gtk-murrine-engine

MUST_CONFIGURE=		gnu

post-patch:
	${REINPLACE_CMD} -e 's|glib/gtimer.h|glib.h|g' \
		${WRKSRC}/src/animation.c

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/gtk-2.0/2.10.0/engines/libmurrine.so

[FILE:422:descriptions/desc.single]
Murrine is an Italian word meaning colored glass patterns made by Venetian 
glass makers. Murrine Engine is a GTK2 engine that will make your desktop 
look like a beautiful Murrina (which is the italian singular of Murrine).

Features:

* Modern, Clean, Shiny desktop experience
* Antialiased widgets using Cairo libraries
* Highly customizable
* Good rendering speed
* Animated progressbar, radiobuttons and checkbuttons


[FILE:100:distinfo]
e9c68ae001b9130d0f9d1b311e8121a94e5c134b82553ba03971088e57d12c89       296944 murrine-0.98.2.tar.xz


[FILE:71:manifests/plist.single]
lib/gtk-2.0/2.10.0/engines/libmurrine.so
share/gtk-engines/murrine.xml


[FILE:1034:patches/patch-add-missing-function-declarations]
Description: Add declarations for functions to fix implicit function declaration errors.
Author: Peter Michael Green <plugwash@debian.org>

--- src/murrine_rc_style.h.orig
+++ src/murrine_rc_style.h
@@ -155,4 +155,6 @@ struct _MurrineRcStyleClass
 
 GType murrine_rc_style_get_type	(void);
 
+void murrine_rc_style_register_types (GTypeModule *module);
+
 #endif /* MURRINE_RC_STYLE_H */
--- src/murrine_style.h.orig
+++ src/murrine_style.h
@@ -102,5 +102,6 @@ struct _MurrineStyleClass
 };
 
 GType murrine_style_get_type (void);
+void murrine_style_register_types (GTypeModule *module);
 
 #endif /* MURRINE_STYLE_H */
--- src/support.h.orig
+++ src/support.h
@@ -149,4 +149,7 @@ G_GNUC_INTERNAL void murrine_get_noteboo
                                                         gboolean  *start,
                                                         gboolean  *end);
 
+gboolean murrine_object_is_a (const GObject * object, const gchar * type_name);
+gboolean murrine_widget_is_ltr (GtkWidget *widget);
+
 #endif /* SUPPORT_H */

