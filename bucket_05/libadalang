# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libadalang
VERSION=		23.0.0
REVISION=		1
EPOCH=			1
KEYWORDS=		lang devel
VARIANTS=		standard
SDESC[standard]=	High-performance semantic engine for Ada
HOMEPAGE=		https://github.com/AdaCore/libadalang
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/AdaCore:libadalang:v23.0.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	DEBUG
OPTIONS_STANDARD=	DEBUG

BUILDRUN_DEPENDS=	langkit:single:standard
			gnatcoll-bindings:gmp:standard

USES=			gprbuild iconv:build python:build ada:single

LICENSE=		APACHE20:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		APACHE20:{{WRKSRC}}/LICENSE
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/extensions/src/libadalang-auto_provider.ads
LICENSE_SCHEME=		solo

MUST_CONFIGURE=		yes

MAKE_ARGS=		--build-mode
			dev
			--library-types=static,static-pic,relocatable

INSTALL_REQ_TOOLCHAIN=	yes

SET_DEBUGGING_ON=	yes
OPTIMIZER_LEVEL=	0
VAR_OPSYS[freebsd]=	MAKEFILE_LINE=XTRALIB=,"-lutil"
VAR_OPSYS[dragonfly]=	MAKEFILE_LINE=XTRALIB=,"-lutil"

do-build:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} manage.py build\
		${MAKE_ARGS:NDESTDIR=*})

do-configure:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} manage.py generate)
	# prepare for mains.gpr modification
	${PATCH} -d ${PATCH_WRKSRC} --backup --forward -E -p0 --batch \
		< ${FILESDIR}/pc-patch-build_mains.gpr
	${REINPLACE_CMD} -e 's|@LIBS@|"-lgnarl","-Wl,-rpath,${PREFIX}/lib"${XTRALIB}|' \
		${WRKSRC}/build/mains.gpr

do-install:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} manage.py install\
		${MAKE_ARGS:NDESTDIR=*} ${STAGEDIR}${PREFIX})
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/[gn]*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/lal_parse
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libadalang.relocatable/libadalang.so
	${SED} -i'' -e 's|/usr/bin/env python|${PYTHON_CMD}|' \
		${STAGEDIR}${PREFIX}/bin/lal_playground
	${RM} -r ${STAGEDIR}${PREFIX}/share/gpr/manifests
	${RM} -r ${STAGEDIR}${PREFIX}/share/examples/libadalang
	${RM} ${STAGEDIR}${PREFIX}/python/setup.py
	# override generated gpr with our own
	${INSTALL_DATA} ${FILESDIR}/libadalang.gpr ${STAGEDIR}${PREFIX}/share/gpr

[FILE:853:descriptions/desc.single]
Libadalang is a project to build a high performance semantic engine for
the Ada programming language. It is meant to provide a basis to write Ada
tooling, including tools working on potentially changing and incorrect
code, such as IDEs. Its goals encompass, but are not limited to:

* Full support for parsing the Ada 2012 syntax, plus SPARK extensions.
* Error tolerant parsing: the parser must be able to recover from simple
  errors and provide a "best-guess" tree.
* Error tolerant semantic analysis: it must be possible to create a tool
  that works only on syntax, and completely ignores semantic issues.
* Full symbol resolution respecting Ada 2012 - and prior - semantics.
* Bindings to a variety of languages, including Ada, C, Python and Java, so
  that tools can be written from various ecosystems. 
* Incremental processing of source files.


[FILE:111:distinfo]
0655d2eb755b9789ebf2b1ecfe5189bd64a5a80471d008a2e7ad0e58b9b35350      2604724 AdaCore-libadalang-23.0.0.tar.gz


[FILE:5834:manifests/plist.single]
bin/
 gnat_compare
 lal_parse
 lal_playground
 lal_prep
 nameres
 navigate
include/libadalang.h
include/libadalang/
 libadalang-analysis.adb
 libadalang-analysis.ads
 libadalang-auto_provider.adb
 libadalang-auto_provider.ads
 libadalang-c.adb
 libadalang-c.ads
 libadalang-common.adb
 libadalang-common.ads
 libadalang-config_pragmas.adb
 libadalang-config_pragmas.ads
 libadalang-config_pragmas_impl.adb
 libadalang-config_pragmas_impl.ads
 libadalang-debug.adb
 libadalang-debug.ads
 libadalang-doc_utils.adb
 libadalang-doc_utils.ads
 libadalang-env_hooks.adb
 libadalang-env_hooks.ads
 libadalang-expr_eval.adb
 libadalang-expr_eval.ads
 libadalang-generic_api-introspection.ads
 libadalang-generic_api.adb
 libadalang-generic_api.ads
 libadalang-helpers.adb
 libadalang-helpers.ads
 libadalang-implementation-c-extensions.adb
 libadalang-implementation-c-extensions.ads
 libadalang-implementation-c.adb
 libadalang-implementation-c.ads
 libadalang-implementation-extensions.adb
 libadalang-implementation-extensions.ads
 libadalang-implementation.adb
 libadalang-implementation.ads
 libadalang-internal_default_provider.adb
 libadalang-internal_default_provider.ads
 libadalang-introspection.adb
 libadalang-introspection.ads
 libadalang-introspection_implementation.adb
 libadalang-introspection_implementation.ads
 libadalang-iterators-extensions.adb
 libadalang-iterators-extensions.ads
 libadalang-iterators.adb
 libadalang-iterators.ads
 libadalang-lexer.adb
 libadalang-lexer.ads
 libadalang-lexer_implementation.adb
 libadalang-lexer_implementation.ads
 libadalang-lexer_state_machine.adb
 libadalang-lexer_state_machine.ads
 libadalang-parsers.adb
 libadalang-parsers.ads
 libadalang-pp_impl.adb
 libadalang-pp_impl.ads
 libadalang-pp_lexer.adb
 libadalang-pp_lexer.ads
 libadalang-preprocessing.adb
 libadalang-preprocessing.ads
 libadalang-private_converters.ads
 libadalang-project_provider.adb
 libadalang-project_provider.ads
 libadalang-public_converters.adb
 libadalang-public_converters.ads
 libadalang-rewriting.adb
 libadalang-rewriting.ads
 libadalang-sources.adb
 libadalang-sources.ads
 libadalang-unit_files.adb
 libadalang-unit_files.ads
 libadalang-unparsing.adb
 libadalang-unparsing.ads
 libadalang.ads
lib/libadalang.so
lib/libadalang.relocatable/
 libadalang-analysis.ali
 libadalang-auto_provider.ali
 libadalang-c.ali
 libadalang-common.ali
 libadalang-config_pragmas.ali
 libadalang-config_pragmas_impl.ali
 libadalang-debug.ali
 libadalang-doc_utils.ali
 libadalang-env_hooks.ali
 libadalang-expr_eval.ali
 libadalang-generic_api-introspection.ali
 libadalang-generic_api.ali
 libadalang-helpers.ali
 libadalang-implementation-c-extensions.ali
 libadalang-implementation-c.ali
 libadalang-implementation-extensions.ali
 libadalang-implementation.ali
 libadalang-internal_default_provider.ali
 libadalang-introspection.ali
 libadalang-introspection_implementation.ali
 libadalang-iterators-extensions.ali
 libadalang-iterators.ali
 libadalang-lexer.ali
 libadalang-lexer_implementation.ali
 libadalang-lexer_state_machine.ali
 libadalang-parsers.ali
 libadalang-pp_impl.ali
 libadalang-pp_lexer.ali
 libadalang-preprocessing.ali
 libadalang-private_converters.ali
 libadalang-project_provider.ali
 libadalang-public_converters.ali
 libadalang-rewriting.ali
 libadalang-sources.ali
 libadalang-unit_files.ali
 libadalang-unparsing.ali
 libadalang.ali
 libadalang.so
lib/libadalang.static/
 libadalang-analysis.ali
 libadalang-auto_provider.ali
 libadalang-c.ali
 libadalang-common.ali
 libadalang-config_pragmas.ali
 libadalang-config_pragmas_impl.ali
 libadalang-debug.ali
 libadalang-doc_utils.ali
 libadalang-env_hooks.ali
 libadalang-expr_eval.ali
 libadalang-generic_api-introspection.ali
 libadalang-generic_api.ali
 libadalang-helpers.ali
 libadalang-implementation-c-extensions.ali
 libadalang-implementation-c.ali
 libadalang-implementation-extensions.ali
 libadalang-implementation.ali
 libadalang-internal_default_provider.ali
 libadalang-introspection.ali
 libadalang-introspection_implementation.ali
 libadalang-iterators-extensions.ali
 libadalang-iterators.ali
 libadalang-lexer.ali
 libadalang-lexer_implementation.ali
 libadalang-lexer_state_machine.ali
 libadalang-parsers.ali
 libadalang-pp_impl.ali
 libadalang-pp_lexer.ali
 libadalang-preprocessing.ali
 libadalang-private_converters.ali
 libadalang-project_provider.ali
 libadalang-public_converters.ali
 libadalang-rewriting.ali
 libadalang-sources.ali
 libadalang-unit_files.ali
 libadalang-unparsing.ali
 libadalang.a
 libadalang.ali
lib/libadalang.static-pic/
 libadalang-analysis.ali
 libadalang-auto_provider.ali
 libadalang-c.ali
 libadalang-common.ali
 libadalang-config_pragmas.ali
 libadalang-config_pragmas_impl.ali
 libadalang-debug.ali
 libadalang-doc_utils.ali
 libadalang-env_hooks.ali
 libadalang-expr_eval.ali
 libadalang-generic_api-introspection.ali
 libadalang-generic_api.ali
 libadalang-helpers.ali
 libadalang-implementation-c-extensions.ali
 libadalang-implementation-c.ali
 libadalang-implementation-extensions.ali
 libadalang-implementation.ali
 libadalang-internal_default_provider.ali
 libadalang-introspection.ali
 libadalang-introspection_implementation.ali
 libadalang-iterators-extensions.ali
 libadalang-iterators.ali
 libadalang-lexer.ali
 libadalang-lexer_implementation.ali
 libadalang-lexer_state_machine.ali
 libadalang-parsers.ali
 libadalang-pp_impl.ali
 libadalang-pp_lexer.ali
 libadalang-preprocessing.ali
 libadalang-private_converters.ali
 libadalang-project_provider.ali
 libadalang-public_converters.ali
 libadalang-rewriting.ali
 libadalang-sources.ali
 libadalang-unit_files.ali
 libadalang-unparsing.ali
 libadalang.a
 libadalang.ali
ocaml/
 dune
 dune-project
 libadalang.ml
 libadalang.mli
 libadalang.opam
python/libadalang/
 __init__.py
 py.typed
share/gpr/libadalang.gpr


[FILE:1615:files/libadalang.gpr]
with "langkit_support";
with "gnatcoll_iconv";
with "gnatcoll_gmp";
with "gpr";
with "xmlada_schema";
with "xmlada_dom";
with "xmlada_sax";
with "xmlada_input_sources";
with "xmlada_unicode";
with "gnatcoll";

library project Libadalang is
   type BUILD_KIND is ("static", "static-pic", "relocatable");
   BUILD : BUILD_KIND := external("LIBADALANG_LIBRARY_TYPE", external("LIBRARY_TYPE", "static-pic"));

   for Languages use ("Ada", "C");

   case BUILD is		 
      when "static" =>
         for Source_Dirs use ("../../include/libadalang");
         for Library_Dir use "../../lib/libadalang.static";
         for Library_Kind use "static";
      when "static-pic" =>
         for Source_Dirs use ("../../include/libadalang");
         for Library_Dir use "../../lib/libadalang.static-pic";
         for Library_Kind use "static-pic";
      when "relocatable" =>
         for Source_Dirs use ("../../include/libadalang");
         for Library_Dir use "../../lib/libadalang.relocatable";
         for Library_Kind use "relocatable";
   end case;

   for Library_Name use "adalang";

   package Naming is
      for dot_replacement use "-";
      for casing use "lowercase";
      for body_suffix ("c") use ".c";
      for body_suffix ("ada") use ".adb";
      for spec_suffix ("c") use ".h";
      for spec_suffix ("ada") use ".ads";
   end Naming;

   package Linker is
      null;
   end Linker;

   package Install is
      for Active use "False";
   end Install;

   for Externally_Built use "True";

   type Build_Mode_Type is
     ("dev", "prod");

   build_mode : build_mode_type := "prod";
end Libadalang;


[FILE:329:files/pc-patch-build_mains.gpr]
post-configure patch to generated mains.gpr
(BSD only, maybe MacOS too)

--- build/mains.gpr.orig	2021-06-20 17:42:33 UTC
+++ build/mains.gpr
@@ -44,4 +44,8 @@ project Mains is
       for Switches ("ada") use ("-E");
    end Binder;
 
+   package Linker is
+      for Switches ("ada") use (@LIBS@);
+   end Linker;
+
 end Mains;

