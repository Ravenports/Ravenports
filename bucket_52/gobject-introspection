# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gobject-introspection
VERSION=		1.70.0
REVISION=		2
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Introspection data generator for GObject libraries
HOMEPAGE=		http://live.gnome.org/GObjectIntrospection
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNOME/gobject-introspection/1.70
DISTFILE[1]=		gobject-introspection-1.70.0.tar.xz:main
DIST_SUBDIR=		gnome3
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		cairo:single:standard
BUILDRUN_DEPENDS=	libffi:single:standard

USES=			bison meson pkgconfig shebangfix python
GNOME_COMPONENTS=	glib

LICENSE=		GPLv2+:single LGPL21+:single
LICENSE_TERMS=		single:{{WRKSRC}}/COPYING
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING.GPL
			LGPL21+:{{WRKSRC}}/COPYING.LGPL
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		devel/gobject-introspection
SHEBANG_FILES=		misc/update-gtkdoc-tests.py
			misc/update-vulkan-gir.py
			misc/update-glib-annotations.py
			tests/gi-tester

CONFIGURE_ARGS=		-Dpython={{PYTHON}}

MAKE_ENV=		HOME={{WRKDIR}}

INSTALL_TARGET=		install-strip

post-install:
	# remove artifacts from doctemplates fix
	${FIND} ${STAGEDIR}${PREFIX}/lib/gobject-introspection/giscanner/doctemplates \
		-type f -name "meson.build*" -delete

pre-configure:
	${REINPLACE_CMD} -e 's|python@0@|python${PYTHON_VER}|' \
		${WRKSRC}/tools/meson.build

[FILE:364:descriptions/desc.single]
GObject Introspection is a project for providing machine readable
introspection data of the API of C libraries. This introspection data can
be used in several different use cases, for example automatic code
generation for bindings, API verification and documentation generation.

GObject Introspection contains tools to generate and handle the
introspection data.


[FILE:121:distinfo]
902b4906e3102d17aa2fcb6dad1c19971c70f2a82a159ddc4a94df73a3cafc4a      1029372 gnome3/gobject-introspection-1.70.0.tar.xz


[FILE:3973:manifests/plist.single]
%%ONLY-DRAGONFLY%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
%%ONLY-FREEBSD%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
%%ONLY-NETBSD%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
%%ONLY-LINUX%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%-x86_64-linux-gnu.so
%%ONLY-SUNOS%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
bin/
 g-ir-annotation-tool
 g-ir-compiler
 g-ir-generate
 g-ir-inspect
 g-ir-scanner
include/gobject-introspection-1.0/
 giarginfo.h
 gibaseinfo.h
 gicallableinfo.h
 giconstantinfo.h
 gienuminfo.h
 gifieldinfo.h
 gifunctioninfo.h
 giinterfaceinfo.h
 giobjectinfo.h
 gipropertyinfo.h
 giregisteredtypeinfo.h
 girepository.h
 girffi.h
 gisignalinfo.h
 gistructinfo.h
 gitypeinfo.h
 gitypelib.h
 gitypes.h
 giunioninfo.h
 giversion.h
 giversionmacros.h
 givfuncinfo.h
lib/
 libgirepository-1.0.so
 libgirepository-1.0.so.1
 libgirepository-1.0.so.1.0.0
lib/girepository-1.0/
 DBus-1.0.typelib
 DBusGLib-1.0.typelib
 GIRepository-2.0.typelib
 GL-1.0.typelib
 GLib-2.0.typelib
 GModule-2.0.typelib
 GObject-2.0.typelib
 Gio-2.0.typelib
 Vulkan-1.0.typelib
 cairo-1.0.typelib
 fontconfig-2.0.typelib
 freetype2-2.0.typelib
 libxml2-2.0.typelib
 win32-1.0.typelib
 xfixes-4.0.typelib
 xft-2.0.typelib
 xlib-2.0.typelib
 xrandr-1.3.typelib
lib/gobject-introspection/giscanner/
 __init__.py
 _version.py
 annotationmain.py
 annotationparser.py
 ast.py
 cachestore.py
 ccompiler.py
 codegen.py
 docmain.py
 docwriter.py
 dumper.py
 gdumpparser.py
 girparser.py
 girwriter.py
 introspectablepass.py
 maintransformer.py
 mdextensions.py
 message.py
 msvccompiler.py
 pkgconfig.py
 scannermain.py
 sectionparser.py
 shlibs.py
 sourcescanner.py
 testcodegen.py
 transformer.py
 utils.py
 xmlwriter.py
lib/gobject-introspection/giscanner/doctemplates/devdocs/Gjs/
 _doc.tmpl
 _index.tmpl
 _method.tmpl
 _methods.tmpl
 _properties.tmpl
 _signals.tmpl
 _staticmethods.tmpl
 _vfuncs.tmpl
 base.tmpl
 callback.tmpl
 class.tmpl
 default.tmpl
 enum.tmpl
 function.tmpl
 interface.tmpl
 method.tmpl
 namespace.tmpl
lib/gobject-introspection/giscanner/doctemplates/mallard/
 base.tmpl
 class.tmpl
 namespace.tmpl
lib/gobject-introspection/giscanner/doctemplates/mallard/C/
 callback.tmpl
 class.tmpl
 constructor.tmpl
 default.tmpl
 enum.tmpl
 field.tmpl
 function.tmpl
 interface.tmpl
 method.tmpl
 namespace.tmpl
 property.tmpl
 record.tmpl
 signal.tmpl
 vfunc.tmpl
lib/gobject-introspection/giscanner/doctemplates/mallard/Gjs/
 callback.tmpl
 class.tmpl
 constructor.tmpl
 default.tmpl
 enum.tmpl
 field.tmpl
 function.tmpl
 interface.tmpl
 method.tmpl
 namespace.tmpl
 property.tmpl
 record.tmpl
 signal.tmpl
 vfunc.tmpl
lib/gobject-introspection/giscanner/doctemplates/mallard/Python/
 callback.tmpl
 class.tmpl
 constructor.tmpl
 default.tmpl
 enum.tmpl
 field.tmpl
 function.tmpl
 interface.tmpl
 method.tmpl
 namespace.tmpl
 property.tmpl
 record.tmpl
 signal.tmpl
 vfunc.tmpl
lib/pkgconfig/
 gobject-introspection-1.0.pc
 gobject-introspection-no-export-1.0.pc
share/aclocal/introspection.m4
share/gir-1.0/
 DBus-1.0.gir
 DBusGLib-1.0.gir
 GIRepository-2.0.gir
 GL-1.0.gir
 GLib-2.0.gir
 GModule-2.0.gir
 GObject-2.0.gir
 Gio-2.0.gir
 Vulkan-1.0.gir
 cairo-1.0.gir
 fontconfig-2.0.gir
 freetype2-2.0.gir
 gir-1.2.rnc
 libxml2-2.0.gir
 win32-1.0.gir
 xfixes-4.0.gir
 xft-2.0.gir
 xlib-2.0.gir
 xrandr-1.3.gir
share/gobject-introspection-1.0/
 Makefile.introspection
 gdump.c
share/gobject-introspection-1.0/tests/
 annotation.c
 annotation.h
 drawable.c
 drawable.h
 everything.c
 everything.h
 foo.c
 foo.h
 gimarshallingtests.c
 gimarshallingtests.h
 gitestmacros.h
 regress.c
 regress.h
 utility.c
 utility.h
 warnlib.c
 warnlib.h
share/man/man1/
 g-ir-compiler.1.gz
 g-ir-doc-tool.1.gz
 g-ir-generate.1.gz
 g-ir-scanner.1.gz


[FILE:6009:patches/patch-fix-doctemplate]
From effb1e09dee263cdac4ec593e8caf316e6f01fe2 Mon Sep 17 00:00:00 2001
From: Emmanuele Bassi <ebassi@gnome.org>
Date: Tue, 11 Jan 2022 15:51:10 +0000
Subject: [PATCH] build: Avoid the doctemplates hack
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The hack that copies the doctemplates directory into the build
directory has stopped working with newer versions of Meson; while it's
possible to copy files, custom_target() cannot depend on a directory.
Additionally, the dependency has always been broken.

Instead, we enumerate the template files—after all, it's not like they
change a lot—and then we list them as dependencies for the test targets.

Fixes: #414
---
 giscanner/doctemplates/devdocs/meson.build | 19 +++++++
 giscanner/doctemplates/mallard/meson.build | 63 ++++++++++++++++++++++
 giscanner/meson.build                      | 14 ++---
 tests/scanner/meson.build                  | 24 +++++----
 4 files changed, 98 insertions(+), 22 deletions(-)
 create mode 100644 giscanner/doctemplates/devdocs/meson.build
 create mode 100644 giscanner/doctemplates/mallard/meson.build

--- /dev/null
+++ giscanner/doctemplates/devdocs/meson.build
@@ -0,0 +1,19 @@
+doc_templates += files([
+  'Gjs/_doc.tmpl',
+  'Gjs/_index.tmpl',
+  'Gjs/_method.tmpl',
+  'Gjs/_methods.tmpl',
+  'Gjs/_properties.tmpl',
+  'Gjs/_signals.tmpl',
+  'Gjs/_staticmethods.tmpl',
+  'Gjs/_vfuncs.tmpl',
+  'Gjs/base.tmpl',
+  'Gjs/callback.tmpl',
+  'Gjs/class.tmpl',
+  'Gjs/default.tmpl',
+  'Gjs/enum.tmpl',
+  'Gjs/function.tmpl',
+  'Gjs/interface.tmpl',
+  'Gjs/method.tmpl',
+  'Gjs/namespace.tmpl',
+])
--- /dev/null
+++ giscanner/doctemplates/mallard/meson.build
@@ -0,0 +1,63 @@
+base_templates = files([
+  'base.tmpl',
+  'class.tmpl',
+  'namespace.tmpl',
+])
+
+c_templates = files([
+  'C/callback.tmpl',
+  'C/class.tmpl',
+  'C/constructor.tmpl',
+  'C/default.tmpl',
+  'C/enum.tmpl',
+  'C/field.tmpl',
+  'C/function.tmpl',
+  'C/interface.tmpl',
+  'C/method.tmpl',
+  'C/namespace.tmpl',
+  'C/property.tmpl',
+  'C/record.tmpl',
+  'C/signal.tmpl',
+  'C/vfunc.tmpl',
+])
+
+gjs_templates = files([
+  'Gjs/callback.tmpl',
+  'Gjs/class.tmpl',
+  'Gjs/constructor.tmpl',
+  'Gjs/default.tmpl',
+  'Gjs/enum.tmpl',
+  'Gjs/field.tmpl',
+  'Gjs/function.tmpl',
+  'Gjs/interface.tmpl',
+  'Gjs/method.tmpl',
+  'Gjs/namespace.tmpl',
+  'Gjs/property.tmpl',
+  'Gjs/record.tmpl',
+  'Gjs/signal.tmpl',
+  'Gjs/vfunc.tmpl',
+])
+
+py_templates = files([
+  'Python/callback.tmpl',
+  'Python/class.tmpl',
+  'Python/constructor.tmpl',
+  'Python/default.tmpl',
+  'Python/enum.tmpl',
+  'Python/field.tmpl',
+  'Python/function.tmpl',
+  'Python/interface.tmpl',
+  'Python/method.tmpl',
+  'Python/namespace.tmpl',
+  'Python/property.tmpl',
+  'Python/record.tmpl',
+  'Python/signal.tmpl',
+  'Python/vfunc.tmpl',
+])
+
+doc_templates += [
+  base_templates,
+  c_templates,
+  gjs_templates,
+  py_templates,
+]
--- giscanner/meson.build.orig
+++ giscanner/meson.build
@@ -53,17 +53,9 @@ configure_file(input : '../girepository/gdump.c',
 
 install_subdir('doctemplates', install_dir: giscannerdir)
 
-# XXX: this doesn't track the input, but there is nothing to copy many files
-# in meson.
-doc_templates = custom_target('copy-templates',
-  input : 'doctemplates',
-  output : 'doctemplates',
-  command : [
-    python, '-c',
-      'import sys, shutil;' +
-      'shutil.rmtree(sys.argv[2], ignore_errors=True);' +
-      'shutil.copytree(sys.argv[1], sys.argv[2])',
-    '@INPUT@', '@OUTPUT@'])
+doc_templates = []
+subdir('doctemplates/devdocs')
+subdir('doctemplates/mallard')
 
 flex = find_program('flex', 'win_flex')
 bison = find_program('bison', 'win_bison')
--- tests/scanner/meson.build.orig
+++ tests/scanner/meson.build
@@ -525,19 +525,26 @@ foreach gir : test_girs
 endforeach
 
 if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
+  doctool_env = environment()
+  doctool_env.set('srcdir', meson.current_source_dir())
+  doctool_env.set('builddir', meson.current_build_dir())
+
   foreach language : ['C', 'Python', 'Gjs']
     regress_docs = custom_target(
       'generate-docs-' + language,
       input: regress_gir,
-      depends: [doc_templates],
+      depend_files: doc_templates,
       build_by_default: not cairo_deps_found,
+      env: doctool_env,
       output: 'Regress-1.0-' + language,
       command: [
         python, girdoctool,
         '--add-include-path=' + join_paths(build_root, 'gir'),
         '--add-include-path=' + meson.current_build_dir(),
         '--language', language,
-        '@INPUT@', '-o', '@OUTPUT@'],
+        '--templates-dir=' + join_paths(meson.current_source_dir(), '../../giscanner/doctemplates'),
+        '@INPUT@', '-o', '@OUTPUT@',
+      ],
     )
 
     if cairo_deps_found
@@ -546,10 +553,7 @@ if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
         python,
         args: [gi_tester, 'Regress-1.0-' + language],
         depends: [regress_docs],
-        env: [
-          'srcdir=' + meson.current_source_dir(),
-          'builddir=' + meson.current_build_dir(),
-        ],
+        env: doctool_env,
       )
     endif
   endforeach
@@ -557,9 +561,10 @@ if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
   regress_sections = custom_target(
     'generate-docs-sections',
     input: regress_gir,
-    depends: [doc_templates],
+    depend_files: [doc_templates],
     build_by_default: not cairo_deps_found,
     output: 'Regress-1.0-sections.txt',
+    env: doctool_env,
     command: [
       python, girdoctool,
       '--add-include-path=' + join_paths(build_root, 'gir'),
@@ -574,10 +579,7 @@ if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
       python,
       args: [gi_tester, 'Regress-1.0-sections.txt'],
       depends: [regress_sections],
-      env: [
-        'srcdir=' + meson.current_source_dir(),
-        'builddir=' + meson.current_build_dir(),
-      ],
+      env: doctool_env,
     )
   endif
 endif
-- 
GitLab



[FILE:477:patches/patch-giscanner_ccompiler.py]
--- giscanner/ccompiler.py.orig	2021-09-17 16:02:42 UTC
+++ giscanner/ccompiler.py
@@ -197,7 +197,7 @@ class CCompiler(object):
 
                 # Ensure libraries are always linked as we are going to use ldd to work
                 # out their names later
-                if sys.platform != 'darwin':
+                if sys.platform != 'darwin' and sys.platform != 'sunos5':
                     args.append('-Wl,--no-as-needed')
 
         for library_path in libpaths:

