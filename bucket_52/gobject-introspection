# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gobject-introspection
VERSION=		1.86.0
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Introspection data generator for GObject libraries
HOMEPAGE=		http://live.gnome.org/GObjectIntrospection
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNOME/gobject-introspection/1.86
DISTFILE[1]=		gobject-introspection-1.86.0.tar.xz:main
DIST_SUBDIR=		gnome3
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man

OPTIONS_AVAILABLE=	CAIRO
OPTIONS_STANDARD=	CAIRO
OPT_ON[all]=		CAIRO

RUN_DEPENDS=		python-setuptools:single:python_used

USES=			bison meson pkgconfig shebangfix
GNOME_COMPONENTS=	glib

LICENSE=		GPLv2+:primary LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKSRC}}/COPYING
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING.GPL
			LGPL21+:{{WRKSRC}}/COPYING.LGPL
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		devel/gobject-introspection
MESON_ARGS=		-Dpython={{PYTHON_CMD}}
			-Ddoctool=disabled
			-Dbuild_introspection_data=true

INSTALL_TARGET=		install-strip

MOUNT_PROCFS=		yes

[CAIRO].DESCRIPTION=			Include cairo for tests
[CAIRO].CONFIGURE_ARGS_OFF=		-Dcairo=disabled
[CAIRO].GNOME_COMPONENTS_ON=		cairo

post-install:
	# remove artifacts from doctemplates fix
	${FIND} ${STAGEDIR}${PREFIX}/lib/gobject-introspection/giscanner/doctemplates \
		-type f -name "meson.build*" -delete
.for base in GLib GModule GObject Gio
	${INSTALL_DATA} ${WRKSRC}/${MESON_BUILD_DIR}/gir/${base}-2.0.typelib \
		${STAGEDIR}${PREFIX}/lib/girepository-1.0/
	${INSTALL_DATA} ${WRKSRC}/${MESON_BUILD_DIR}/gir/${base}-2.0.gir \
		${STAGEDIR}${PREFIX}/share/gir-1.0/
.endfor
	# generate python cache to avoid leftover files
	(cd ${STAGEDIR}${PREFIX}/lib/gobject-introspection/giscanner && python -m compileall -d / . ||:)

pre-configure:
	${REINPLACE_CMD} -e 's|%%PYTHON_CMD%%|${PYTHON_CMD}|' \
		${WRKSRC}/tools/meson.build

[FILE:364:descriptions/desc.primary]
GObject Introspection is a project for providing machine readable
introspection data of the API of C libraries. This introspection data can
be used in several different use cases, for example automatic code
generation for bindings, API verification and documentation generation.

GObject Introspection contains tools to generate and handle the
introspection data.


[FILE:121:distinfo]
920d1a3fcedeadc32acff95c2e203b319039dd4b4a08dd1a2dfd283d19c0b9ae      1083172 gnome3/gobject-introspection-1.86.0.tar.xz


[FILE:4726:manifests/plist.primary]
%%ONLY-DRAGONFLY%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
%%ONLY-FREEBSD%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
%%ONLY-LINUX%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%-x86_64-linux-gnu.so
%%ONLY-MIDNIGHTBSD%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
%%ONLY-NETBSD%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
%%ONLY-SUNOS%%lib/gobject-introspection/giscanner/_giscanner.cpython-%%PYTHON_SUFFIX%%%%PYTHON_ABIVER%%.so
bin/
 g-ir-annotation-tool
 g-ir-compiler
 g-ir-generate
 g-ir-inspect
 g-ir-scanner
lib/
 libgirepository-1.0.so.1
 libgirepository-1.0.so.1.0.0
lib/girepository-1.0/
 DBus-1.0.typelib
 DBusGLib-1.0.typelib
 GIRepository-2.0.typelib
 GL-1.0.typelib
 GLib-2.0.typelib
 GModule-2.0.typelib
 GObject-2.0.typelib
 Gio-2.0.typelib
 Vulkan-1.0.typelib
 cairo-1.0.typelib
 fontconfig-2.0.typelib
 freetype2-2.0.typelib
 libxml2-2.0.typelib
 win32-1.0.typelib
 xfixes-4.0.typelib
 xft-2.0.typelib
 xlib-2.0.typelib
 xrandr-1.3.typelib
lib/gobject-introspection/giscanner/
 __init__.py
 _version.py
 annotationmain.py
 annotationparser.py
 ast.py
 cachestore.py
 ccompiler.py
 codegen.py
 docmain.py
 docwriter.py
 dumper.py
 gdumpparser.py
 girparser.py
 girwriter.py
 introspectablepass.py
 maintransformer.py
 mdextensions.py
 message.py
 msvccompiler.py
 pkgconfig.py
 scannermain.py
 sectionparser.py
 shlibs.py
 sourcescanner.py
 testcodegen.py
 transformer.py
 utils.py
 xmlwriter.py
lib/gobject-introspection/giscanner/__pycache__/
 __init__.cpython-%%PYTHON_SUFFIX%%.pyc
 _version.cpython-%%PYTHON_SUFFIX%%.pyc
 annotationmain.cpython-%%PYTHON_SUFFIX%%.pyc
 annotationparser.cpython-%%PYTHON_SUFFIX%%.pyc
 ast.cpython-%%PYTHON_SUFFIX%%.pyc
 cachestore.cpython-%%PYTHON_SUFFIX%%.pyc
 ccompiler.cpython-%%PYTHON_SUFFIX%%.pyc
 codegen.cpython-%%PYTHON_SUFFIX%%.pyc
 docmain.cpython-%%PYTHON_SUFFIX%%.pyc
 docwriter.cpython-%%PYTHON_SUFFIX%%.pyc
 dumper.cpython-%%PYTHON_SUFFIX%%.pyc
 gdumpparser.cpython-%%PYTHON_SUFFIX%%.pyc
 girparser.cpython-%%PYTHON_SUFFIX%%.pyc
 girwriter.cpython-%%PYTHON_SUFFIX%%.pyc
 introspectablepass.cpython-%%PYTHON_SUFFIX%%.pyc
 maintransformer.cpython-%%PYTHON_SUFFIX%%.pyc
 mdextensions.cpython-%%PYTHON_SUFFIX%%.pyc
 message.cpython-%%PYTHON_SUFFIX%%.pyc
 msvccompiler.cpython-%%PYTHON_SUFFIX%%.pyc
 pkgconfig.cpython-%%PYTHON_SUFFIX%%.pyc
 scannermain.cpython-%%PYTHON_SUFFIX%%.pyc
 sectionparser.cpython-%%PYTHON_SUFFIX%%.pyc
 shlibs.cpython-%%PYTHON_SUFFIX%%.pyc
 sourcescanner.cpython-%%PYTHON_SUFFIX%%.pyc
 testcodegen.cpython-%%PYTHON_SUFFIX%%.pyc
 transformer.cpython-%%PYTHON_SUFFIX%%.pyc
 utils.cpython-%%PYTHON_SUFFIX%%.pyc
 xmlwriter.cpython-%%PYTHON_SUFFIX%%.pyc
lib/gobject-introspection/giscanner/doctemplates/devdocs/Gjs/
 _doc.tmpl
 _index.tmpl
 _method.tmpl
 _methods.tmpl
 _properties.tmpl
 _signals.tmpl
 _staticmethods.tmpl
 _vfuncs.tmpl
 base.tmpl
 callback.tmpl
 class.tmpl
 default.tmpl
 enum.tmpl
 function.tmpl
 interface.tmpl
 method.tmpl
 namespace.tmpl
lib/gobject-introspection/giscanner/doctemplates/mallard/
 base.tmpl
 class.tmpl
 namespace.tmpl
lib/gobject-introspection/giscanner/doctemplates/mallard/C/
 callback.tmpl
 class.tmpl
 constructor.tmpl
 default.tmpl
 enum.tmpl
 field.tmpl
 function.tmpl
 interface.tmpl
 method.tmpl
 namespace.tmpl
 property.tmpl
 record.tmpl
 signal.tmpl
 vfunc.tmpl
lib/gobject-introspection/giscanner/doctemplates/mallard/Gjs/
 callback.tmpl
 class.tmpl
 constructor.tmpl
 default.tmpl
 enum.tmpl
 field.tmpl
 function.tmpl
 interface.tmpl
 method.tmpl
 namespace.tmpl
 property.tmpl
 record.tmpl
 signal.tmpl
 vfunc.tmpl
lib/gobject-introspection/giscanner/doctemplates/mallard/Python/
 callback.tmpl
 class.tmpl
 constructor.tmpl
 default.tmpl
 enum.tmpl
 field.tmpl
 function.tmpl
 interface.tmpl
 method.tmpl
 namespace.tmpl
 property.tmpl
 record.tmpl
 signal.tmpl
 vfunc.tmpl
share/gir-1.0/
 DBus-1.0.gir
 DBusGLib-1.0.gir
 GIRepository-2.0.gir
 GL-1.0.gir
 GLib-2.0.gir
 GModule-2.0.gir
 GObject-2.0.gir
 Gio-2.0.gir
 Vulkan-1.0.gir
 cairo-1.0.gir
 fontconfig-2.0.gir
 freetype2-2.0.gir
 gir-1.2.rnc
 libxml2-2.0.gir
 win32-1.0.gir
 xfixes-4.0.gir
 xft-2.0.gir
 xlib-2.0.gir
 xrandr-1.3.gir
share/gobject-introspection-1.0/
 Makefile.introspection
 gdump.c
share/gobject-introspection-1.0/tests/
 annotation.c
 annotation.h
 drawable.c
 drawable.h
 everything.c
 everything.h
 foo.c
 foo.h
 gimarshallingtests.c
 gimarshallingtests.h
 gitestmacros.h
 regress-unix.c
 regress-unix.h
 regress.c
 regress.h
 utility.c
 utility.h
 warnlib.c
 warnlib.h


[FILE:523:manifests/plist.dev]
include/gobject-introspection-1.0/
 giarginfo.h
 gibaseinfo.h
 gicallableinfo.h
 giconstantinfo.h
 gienuminfo.h
 gifieldinfo.h
 gifunctioninfo.h
 giinterfaceinfo.h
 giobjectinfo.h
 gipropertyinfo.h
 giregisteredtypeinfo.h
 girepository.h
 girffi.h
 gisignalinfo.h
 gistructinfo.h
 gitypeinfo.h
 gitypelib.h
 gitypes.h
 giunioninfo.h
 giversion.h
 giversionmacros.h
 givfuncinfo.h
lib/libgirepository-1.0.so
lib/pkgconfig/
 gobject-introspection-1.0.pc
 gobject-introspection-no-export-1.0.pc
share/aclocal/introspection.m4


[FILE:83:manifests/plist.man]
share/man/man1/
 g-ir-compiler.1
 g-ir-doc-tool.1
 g-ir-generate.1
 g-ir-scanner.1


[FILE:593:patches/patch-gir_meson.build]
--- gir/meson.build.orig	2025-09-13 11:08:06 UTC
+++ gir/meson.build
@@ -431,6 +431,7 @@ if giounix_dep.found()
   dep_type = giounix_dep.type_name()
   if dep_type == 'pkgconfig'
     gio_command += ['--pkg=gio-unix-2.0']
+    gio_command += ['--pkg=glib-2.0', '--pkg=gmodule-2.0']
     giounix_includedir = get_option('gi_cross_pkgconfig_sysroot_path') + join_paths(giounix_dep.get_variable(pkgconfig: 'includedir'), 'gio-unix-2.0')
     # Get the installed gio-unix header list
     ret = run_command(python, '-c', globber.format(join_paths(giounix_includedir, 'gio', '*.h')), check: true)


[FILE:767:patches/patch-giscanner_ast.py]
$NetBSD: patch-giscanner_ast.py,v 1.3 2024/04/09 17:55:46 wiz Exp $

- add double underscore versions

--- giscanner/ast.py.orig	2025-09-13 11:08:06 UTC
+++ giscanner/ast.py
@@ -352,6 +352,16 @@ type_names['uint32_t'] = TYPE_UINT32
 type_names['int64_t'] = TYPE_INT64
 type_names['uint64_t'] = TYPE_UINT64
 
+type_names['__int8_t'] = TYPE_INT8
+type_names['__uint8_t'] = TYPE_UINT8
+type_names['__int16_t'] = TYPE_INT16
+type_names['__uint16_t'] = TYPE_UINT16
+type_names['__int32_t'] = TYPE_INT32
+type_names['__uint32_t'] = TYPE_UINT32
+type_names['__int64_t'] = TYPE_INT64
+type_names['__uint64_t'] = TYPE_UINT64
+type_names['__off_t'] = TYPE_OFF_T
+
 # A few additional GLib type aliases
 type_names['guchar'] = TYPE_UINT8
 type_names['gchararray'] = TYPE_STRING


[FILE:847:patches/patch-giscanner_ccompiler.py]
--- giscanner/ccompiler.py.orig	2025-09-13 11:08:06 UTC
+++ giscanner/ccompiler.py
@@ -243,7 +243,7 @@ class CCompiler(object):
 
             # Ensure libraries are always linked as we are going to use ldd to work
             # out their names later
-            if sys.platform != 'darwin':
+            if sys.platform != 'darwin' and sys.platform != 'sunos5':
                 args.append('-Wl,--no-as-needed')
 
         for library_path in libpaths:
@@ -292,7 +292,7 @@ class CCompiler(object):
 
         # Ensure libraries are always linked as we are going to use ldd to work
         # out their names later
-        if os.name != 'nt' and sys.platform != 'darwin':
+        if os.name != 'nt' and sys.platform != 'darwin' and sys.platform != 'sunos5':
             args.append('-Wl,--no-as-needed')
 
         for library in libraries:


[FILE:706:patches/patch-giscanner_scannerlexer.l]
Add missing TLS keyword - __thread (clang/gcc extension)

To unbreak scanner on headers like <sys/errno.h> and <runetype.h>:
/usr/include/runetype.h:94: syntax error, unexpected '{', expecting ',' or ';' in '{' at '{

--- giscanner/scannerlexer.l.orig	2025-09-13 11:08:06 UTC
+++ giscanner/scannerlexer.l
@@ -180,6 +180,7 @@ stringtext				([^\\\"])|(\\.)
 "__pragma" 		                { if (!parse_ignored_macro()) REJECT; }
 "__restrict"				{ return RESTRICT; }
 "__restrict__"				{ return RESTRICT; }
+"__thread"				{ return THREAD_LOCAL; }
 "thread_local"				{ return THREAD_LOCAL; }
 "_Thread_local"				{ return THREAD_LOCAL; }
 "__typeof__"				{ if (parse_ignored_macro()) return VOID; else REJECT; }


[FILE:412:patches/patch-tests_meson.build]
--- tests/meson.build.orig	2025-09-13 11:08:06 UTC
+++ tests/meson.build
@@ -167,7 +167,6 @@ if (glib_dep.type_name() == 'pkgconfig'
       '--add-include-path=@0@'.format(source_root / 'gir'),
       '--add-include-path=@0@'.format(build_root / 'gir'),
       '--warn-all',
-      '--warn-error',
       '--namespace=GIMarshallingTests',
       '--symbol-prefix=gi_marshalling_tests',
       '--nsversion=1.0',


[FILE:448:patches/patch-tools_meson.build]
--- tools/meson.build.orig	2025-09-13 11:08:06 UTC
+++ tools/meson.build
@@ -9,11 +9,7 @@ if with_doctool
   tools += [['g-ir-doc-tool', 'docmain', 'doc_main']]
 endif
 
-if not python.full_path().startswith('/usr/bin')
-  python_cmd = '/usr/bin/env ' + python.full_path()
-else
-  python_cmd = '/usr/bin/env python@0@'.format(python.language_version().split('.')[0])
-endif
+python_cmd = '%%PYTHON_CMD%%'
 
 tool_output = []
 foreach tool : tools

