# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		ruby-minitest
VERSION=		5.14.2
KEYWORDS=		ruby
VARIANTS=		v26 v27 v30
SDESC[v26]=		Comple suite of testing facilities (v26)
SDESC[v27]=		Comple suite of testing facilities (v27)
SDESC[v30]=		Comple suite of testing facilities (v30)
HOMEPAGE=		https://github.com/seattlerb/minitest
CONTACT=		Ruby_Automaton[ruby@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		RUBYGEMS/
DISTFILE[1]=		minitest-5.14.2.gem:main
DIST_SUBDIR=		ruby
DF_INDEX=		1
SPKGS[v26]=		single
SPKGS[v27]=		single
SPKGS[v30]=		single

OPTIONS_AVAILABLE=	RUBY26 RUBY27 RUBY30
OPTIONS_STANDARD=	none
VOPTS[v26]=		RUBY26=ON RUBY27=OFF RUBY30=OFF
VOPTS[v27]=		RUBY26=OFF RUBY27=ON RUBY30=OFF
VOPTS[v30]=		RUBY26=OFF RUBY27=OFF RUBY30=ON

DISTNAME=		minitest-5.14.2

GENERATED=		yes

[RUBY30].USES_ON=			gem:v30

[RUBY26].USES_ON=			gem:v26

[RUBY27].USES_ON=			gem:v27

[FILE:2004:descriptions/desc.single]
minitest provides a complete suite of testing facilities supporting
TDD, BDD, mocking, and benchmarking.

    "I had a class with Jim Weirich on testing last week and we were
     allowed to choose our testing frameworks. Kirk Haines and I were
     paired up and we cracked open the code for a few test
     frameworks...

     I MUST say that minitest is *very* readable / understandable
     compared to the 'other two' options we looked at. Nicely done and
     thank you for helping us keep our mental sanity."

    -- Wayne E. Seguin

minitest/test is a small and incredibly fast unit testing framework.
It provides a rich set of assertions to make your tests clean and
readable.

minitest/spec is a functionally complete spec engine. It hooks onto
minitest/test and seamlessly bridges test assertions over to spec
expectations.

minitest/benchmark is an awesome way to assert the performance of your
algorithms in a repeatable manner. Now you can assert that your newb
co-worker doesn't replace your linear algorithm with an exponential
one!

minitest/mock by Steven Baker, is a beautifully tiny mock (and stub)
object framework.

minitest/pride shows pride in testing and adds coloring to your test
output. I guess it is an example of how to write IO pipes too. :P

minitest/test is meant to have a clean implementation for language
implementors that need a minimal set of methods to bootstrap a working
test suite. For example, there is no magic involved for test-case
discovery.

    "Again, I can't praise enough the idea of a testing/specing
     framework that I can actually read in full in one sitting!"

    -- Piotr Szotkowski

Comparing to rspec:

    rspec is a testing DSL. minitest is ruby.

    -- Adam Hawkins, "Bow Before MiniTest"

minitest doesn't reinvent anything that ruby already provides, like:
classes, modules, inheritance, methods. This means you only have to
learn ruby to use minitest and all of your regular OO practices like
extract-method refactorings still apply.


[FILE:103:distinfo]
9b401338e287c50cd2354353b4b781d3766d863cae413b2a1bf585d237131e9c        84992 ruby/minitest-5.14.2.gem

