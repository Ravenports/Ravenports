# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libdbi
VERSION=		0.9.0
KEYWORDS=		databases devel
VARIANTS=		std
SDESC[std]=		Database-independent abstraction Layer
HOMEPAGE=		https://libdbi.sourceforge.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/libdbi/libdbi/libdbi-0.9.0
DISTFILE[1]=		libdbi-0.9.0.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			libtool mbsdfix

LICENSE=		LGPL21+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL21+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"Id: dbi_result.c"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/dbi_result.c
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		databases/libdbi

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		1.1.0

VAR_OPSYS[sunos]=	CFLAGS=-DNAME_MAX=255

post-patch:
	${REINPLACE_CMD} -e "s|-O20|${CFLAGS}|g" -e "s|-std=gnu99||g" \
		 ${WRKSRC}/configure

post-install:
	@${MKDIR} ${STAGEDIR}${STD_DOCDIR}/driver-guide \
		${STAGEDIR}${STD_DOCDIR}/programmers-guide
	${INSTALL_DATA} ${WRKSRC}/doc/*.pdf ${STAGEDIR}${STD_DOCDIR}
	${INSTALL_DATA} ${WRKSRC}/doc/driver-guide/*.html \
		${STAGEDIR}${STD_DOCDIR}/driver-guide
	${INSTALL_DATA} ${WRKSRC}/doc/programmers-guide/*.html \
		${STAGEDIR}${STD_DOCDIR}/programmers-guide

[FILE:265:descriptions/desc.primary]
libdbi implements a database-independent abstraction layer in C, similar
to the DBI/DBD layer in Perl. Writing one generic set of code, programmers
can leverage the power of multiple databases and multiple simultaneous
database connections by using this framework.


[FILE:98:distinfo]
dafb6cdca524c628df832b6dd0bf8fabceb103248edb21762c02d3068fca4503      1194284 libdbi-0.9.0.tar.gz


[FILE:133:manifests/plist.primary]
include/dbi/
 dbd.h
 dbi-dev.h
 dbi.h
lib/
 libdbi.a
 libdbi.so
 libdbi.so.%%SOMAJOR%%
 libdbi.so.%%SOVERSION%%
lib/pkgconfig/dbi.pc


[FILE:1144:manifests/plist.docs]
share/doc/libdbi/
 driver-guide.pdf
 programmers-guide.pdf
share/doc/libdbi/driver-guide/
 contact.html
 copying-fdl.html
 databasedirectories.html
 description.html
 drivercaps.html
 driverdata.html
 driverfuncs-dbquery.html
 driverfuncs-infrastructure.html
 driverfuncs-publicdbquery.html
 driverfuncs.html
 driverinfrastructure.html
 gnugpl.html
 helperfuncs.html
 index.html
 intro.html
 terminology.html
share/doc/libdbi/programmers-guide/
 addtoproject.html
 buildinstall.html
 connerrors.html
 contact.html
 copying-fdl.html
 description.html
 errorhandling.html
 errornumbers.html
 gnugpl.html
 index.html
 intro.html
 libdbi-and-drivers-versions.html
 loadinglibdbi.html
 package-library-version.html
 quickstart-code.html
 quickstart-debriefing.html
 quickstart.html
 reference-conn.html
 reference-core.html
 reference-database.html
 reference-driver.html
 reference-field-idx.html
 reference-field-meta.html
 reference-field.html
 reference-query.html
 reference-results.html
 reference.html
 savepoints.html
 terminology.html
 threads.html
 transactions-savepoints.html
 transactions.html
 version-at-runtime.html
 versioning.html


[FILE:700:patches/patch-Makefile.in]
--- Makefile.in.orig	2013-02-03 23:09:15 UTC
+++ Makefile.in
@@ -291,7 +291,7 @@ top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 AUTOMAKE_OPTIONS = foreign dist-zip
 ACLOCAL_AMFLAGS = -I m4
-SUBDIRS = src include @docs_subdirs@
+SUBDIRS = src include
 EXTRA_DIST = AUTHORS COPYING ChangeLog INSTALL README README.win32 README.osx TODO NEWS UPGRADING libdbi.spec.in config.h.in Makefile.w32 autogen.sh drivers/example/AUTHORS drivers/example/Makefile.am drivers/example/README drivers/example/TODO drivers/example/.cvsignore drivers/example/dbd_example.c drivers/example/dbd_example.h drivers/example/dbd_example.sgml
 
 # we use exec here to install the .pc file with the library, not with


[FILE:774:patches/patch-src_dbi__result.c]
--- src/dbi_result.c.orig	2013-01-08 23:54:30 UTC
+++ src/dbi_result.c
@@ -1470,10 +1470,10 @@ char *dbi_result_get_as_string_copy_idx(
     switch (RESULT->field_attribs[fieldidx] & DBI_INTEGER_SIZEMASK) {
     case DBI_INTEGER_SIZE1:
       if (RESULT->field_attribs[fieldidx] & DBI_INTEGER_UNSIGNED) {
-	snprintf(newstring, 32, "%hu", RESULT->rows[RESULT->currowidx]->field_values[fieldidx].d_char);
+	snprintf(newstring, 32, "%hhu", RESULT->rows[RESULT->currowidx]->field_values[fieldidx].d_char);
       }
       else {
-	snprintf(newstring, 32, "%hd", RESULT->rows[RESULT->currowidx]->field_values[fieldidx].d_char);
+	snprintf(newstring, 32, "%hhd", RESULT->rows[RESULT->currowidx]->field_values[fieldidx].d_char);
       }
       break;
     case DBI_INTEGER_SIZE2:

