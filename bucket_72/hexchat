# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		hexchat
VERSION=		2.14.2
REVISION=		2
KEYWORDS=		irc
VARIANTS=		standard
SDESC[standard]=	Graphical IRC client based on XChat
HOMEPAGE=		https://hexchat.github.io
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://dl.hexchat.net/hexchat/
DISTFILE[1]=		hexchat-2.14.2.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILDRUN_DEPENDS=	dbus-glib:primary:standard
			gtk-update-icon-cache:single:standard
			libcanberra:primary:standard
			libnotify:primary:standard
			libproxy:single:standard
			iso-codes:single:standard
RUN_DEPENDS=		nss:caroot:standard

USES=			gettext-runtime gettext-tools ssl meson perl
			pkgconfig python shebangfix
GNOME_COMPONENTS=	intltool

LICENSE=		GPLv2+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/common/modes.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		irc/hexchat
MESON_ARGS=		-Dwith-lua=false
			-Dwith-python=false
SHEBANG_FILES=		meson_post_install.py
			plugins/perl/generate_header.py
			src/common/make-te.py

INVALID_RPATH=		yes

MAKE_ENV=		GETTEXTDATADIRS={{PREFIX}}/share/gettext/0.20

LDFLAGS=		{{PERL_RPATH}}

post-patch:
	${REINPLACE_CMD} -e 's|%%CA_BUNDLE%%|${LOCALBASE}/share/certs/ca-root-nss.crt|' \
		${WRKSRC}/src/common/server.c
	# can't use MESON_INSERT_RPATH, needs path to perl too
	${REINPLACE_CMD} \
	-e 's|%%PREFIX%%|${PREFIX}|g'\
	-e 's|%%PERL_VER%%|${PERL_VER}|g'\
	${WRKSRC}/plugins/perl/meson.build

[FILE:316:descriptions/desc.single]
HexChat is an IRC chat program.
It allows you to join multiple IRC channels (chat rooms) at
the same time, talk publicly, private one-on-one conversations etc.

HexChat is based on XChat, but unlike XChat it's completely
free for both Windows and Unix-like systems.
Since XChat is Open Source, it's perfectly legal.


[FILE:100:distinfo]
7792b9e52560fbd3e10d75bfb5d138a20913a87771d676d296547f1b4ac09618      1288732 hexchat-2.14.2.tar.xz


[FILE:2482:manifests/plist.single]
bin/hexchat
include/hexchat-plugin.h
lib/hexchat/plugins/
 checksum.so
 fishlim.so
 perl.so
 sysinfo.so
lib/pkgconfig/hexchat-plugin.pc
share/applications/io.github.Hexchat.desktop
share/dbus-1/services/org.hexchat.service.service
share/icons/hicolor/48x48/apps/hexchat.png
share/icons/hicolor/scalable/apps/hexchat.svg
share/locale/af/LC_MESSAGES/hexchat.mo
share/locale/am/LC_MESSAGES/hexchat.mo
share/locale/ast/LC_MESSAGES/hexchat.mo
share/locale/az/LC_MESSAGES/hexchat.mo
share/locale/be/LC_MESSAGES/hexchat.mo
share/locale/bg/LC_MESSAGES/hexchat.mo
share/locale/ca/LC_MESSAGES/hexchat.mo
share/locale/cs/LC_MESSAGES/hexchat.mo
share/locale/da/LC_MESSAGES/hexchat.mo
share/locale/de/LC_MESSAGES/hexchat.mo
share/locale/el/LC_MESSAGES/hexchat.mo
share/locale/en_GB/LC_MESSAGES/hexchat.mo
share/locale/es/LC_MESSAGES/hexchat.mo
share/locale/et/LC_MESSAGES/hexchat.mo
share/locale/eu/LC_MESSAGES/hexchat.mo
share/locale/fi/LC_MESSAGES/hexchat.mo
share/locale/fr/LC_MESSAGES/hexchat.mo
share/locale/gl/LC_MESSAGES/hexchat.mo
share/locale/gu/LC_MESSAGES/hexchat.mo
share/locale/hi/LC_MESSAGES/hexchat.mo
share/locale/hu/LC_MESSAGES/hexchat.mo
share/locale/id/LC_MESSAGES/hexchat.mo
share/locale/it/LC_MESSAGES/hexchat.mo
share/locale/ja_JP/LC_MESSAGES/hexchat.mo
share/locale/kn/LC_MESSAGES/hexchat.mo
share/locale/ko/LC_MESSAGES/hexchat.mo
share/locale/lt/LC_MESSAGES/hexchat.mo
share/locale/lv/LC_MESSAGES/hexchat.mo
share/locale/mk/LC_MESSAGES/hexchat.mo
share/locale/ml/LC_MESSAGES/hexchat.mo
share/locale/ms/LC_MESSAGES/hexchat.mo
share/locale/nb/LC_MESSAGES/hexchat.mo
share/locale/nl/LC_MESSAGES/hexchat.mo
share/locale/no/LC_MESSAGES/hexchat.mo
share/locale/pa/LC_MESSAGES/hexchat.mo
share/locale/pl/LC_MESSAGES/hexchat.mo
share/locale/pt/LC_MESSAGES/hexchat.mo
share/locale/pt_BR/LC_MESSAGES/hexchat.mo
share/locale/ru/LC_MESSAGES/hexchat.mo
share/locale/rw/LC_MESSAGES/hexchat.mo
share/locale/sk/LC_MESSAGES/hexchat.mo
share/locale/sl/LC_MESSAGES/hexchat.mo
share/locale/sq/LC_MESSAGES/hexchat.mo
share/locale/sr/LC_MESSAGES/hexchat.mo
share/locale/sr@latin/LC_MESSAGES/hexchat.mo
share/locale/sv/LC_MESSAGES/hexchat.mo
share/locale/th/LC_MESSAGES/hexchat.mo
share/locale/tr/LC_MESSAGES/hexchat.mo
share/locale/uk/LC_MESSAGES/hexchat.mo
share/locale/vi/LC_MESSAGES/hexchat.mo
share/locale/wa/LC_MESSAGES/hexchat.mo
share/locale/zh_CN/LC_MESSAGES/hexchat.mo
share/locale/zh_TW/LC_MESSAGES/hexchat.mo
share/man/man1/hexchat.1.gz
share/metainfo/io.github.Hexchat.appdata.xml


[FILE:1458:patches/patch-meson.build]
--- meson.build.orig	2018-03-14 02:26:31 UTC
+++ meson.build
@@ -16,11 +16,21 @@ cc = meson.get_compiler('c')
 libgio_dep = dependency('gio-2.0', version: '>= 2.34.0')
 libgmodule_dep = dependency('gmodule-2.0')
 global_deps = []
+libssl_dep_found = false
 if cc.get_id() == 'msvc'
   libssl_dep = cc.find_library('libeay32')
 else
   libssl_dep = dependency('openssl', version: '>= 0.9.8',
-                          required: get_option('with-ssl'))
+                          required: false)
+  if not libssl_dep.found()
+    libssl_dep = [
+        cc.find_library('ssl', required: get_option('with-ssl')),
+        cc.find_library('crypto', required: get_option('with-ssl'))
+    ]
+    libssl_dep_found = libssl_dep[0].found()
+  else
+    libssl_dep_found = libssl_dep.found()
+  endif
 endif
 
 config_h = configuration_data()
@@ -49,7 +59,7 @@ config_h.set('GLIB_VERSION_MIN_REQUIRED'
 config_h.set('HAVE_MEMRCHR', cc.has_function('memrchr'))
 config_h.set('HAVE_STRINGS_H', cc.has_header('strings.h'))
 
-if libssl_dep.found()
+if libssl_dep_found
   config_h.set('HAVE_X509_GET_SIGNATURE_NID',
     cc.has_function('X509_get_signature_nid', dependencies: libssl_dep)
   )
@@ -131,9 +141,6 @@ global_ldflags = []
 test_ldflags = [
   '-Wl,-z,relro',
   '-Wl,-z,now',
-  # mingw
-  '-Wl,--dynamicbase',
-  '-Wl,--nxcompat',
 ]
 foreach ldflag : test_ldflags
   if cc.has_argument(ldflag) and cc.links('int main (void) { return 0; }', args: ldflag)


[FILE:458:patches/patch-meson__options.txt]
--- meson_options.txt.orig	2018-08-29 16:41:08 UTC
+++ meson_options.txt
@@ -42,7 +42,7 @@ option('with-exec', type: 'boolean',
 option('with-fishlim', type: 'boolean',
   description: 'Fish encryption plugin, requires openssl'
 )
-option('with-lua', type: 'string', value: 'luajit',
+option('with-lua', type: 'string',
   description: 'Lua scripting plugin, value is pkg-config name to use or "false"'
 )
 option('with-perl', type: 'string', value: 'perl',


[FILE:211:patches/patch-plugins_fishlim_meson.build]
--- plugins/fishlim/meson.build.orig	2018-03-14 02:26:31 UTC
+++ plugins/fishlim/meson.build
@@ -1,4 +1,4 @@
-if not libssl_dep.found()
+if not libssl_dep_found
   error('fish plugin requires openssl')
 endif
 


[FILE:473:patches/patch-plugins_perl_meson.build]
--- plugins/perl/meson.build.orig	2018-08-29 21:13:25 UTC
+++ plugins/perl/meson.build
@@ -60,7 +60,7 @@ endforeach
 perl_cflags += [
   # Perl has its own 'config.h' that we must override
   # TODO: Just rename ours to something more unique.
-  '-include', meson.build_root() + '/config.h'
+  '-include', meson.build_root() + '/config.h', '-I%%PREFIX%%/lib/perl5/%%PERL_VER%%/mach/CORE', '-L%%PREFIX%%/lib/perl5/%%PERL_VER%%/mach/CORE', '-lperl'
 ]
 
 if not cc.links('''


[FILE:605:patches/patch-plugins_sysinfo_meson.build]
--- plugins/sysinfo/meson.build.orig	2018-08-29 21:13:25 UTC
+++ plugins/sysinfo/meson.build
@@ -13,13 +13,13 @@ sysinfo_includes = []
 sysinfo_cargs = []
 
 system = host_machine.system()
-if system == 'linux' or system == 'darwin'
+if system == 'linux' or system == 'darwin' or system == 'freebsd' or system == 'dragonfly'
   sysinfo_includes += 'shared'
   sysinfo_sources += [
     'shared/df.c'
   ]
 
-  if system == 'linux'
+  if system == 'linux' or system == 'freebsd'
     libpci = dependency('libpci', required: false, method: 'pkg-config')
     if libpci.found()
       sysinfo_deps += libpci


[FILE:464:patches/patch-src__common__server.c]
--- src/common/server.c.orig	2018-08-29 16:41:08 UTC
+++ src/common/server.c
@@ -748,7 +748,7 @@ server_connect_success (server *serv)
 
 		/* it'll be a memory leak, if connection isn't terminated by
 		   server_cleanup() */
-		if ((err = _SSL_set_verify (serv->ctx, ssl_cb_verify, NULL)))
+		if ((err = _SSL_set_verify (serv->ctx, ssl_cb_verify, "%%CA_BUNDLE%%")))
 		{
 			EMIT_SIGNAL (XP_TE_CONNFAIL, serv->server_session, err, NULL,
 							 NULL, NULL, 0);

