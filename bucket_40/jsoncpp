# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		jsoncpp
VERSION=		1.9.5
REVISION=		1
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		JSON reader and writer library for C++
HOMEPAGE=		https://github.com/open-source-parsers/jsoncpp
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/open-source-parsers:jsoncpp:1.9.5
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			c++:primary

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/jsoncpp

SOVERSION=		24.0.0
SUB_FILES=		Makefile.BSD
SUB_LIST=		SHLIB_MAJOR=24
			PORTVERSION=1.9.5

post-patch:
	${MV} ${WRKDIR}/Makefile.BSD ${WRKSRC}/Makefile

[FILE:412:descriptions/desc.primary]
JSON is a lightweight data-interchange format. It can represent numbers,
strings, ordered sequences of values, and collections of name/value pairs.

JsonCpp is a C++ library that allows manipulating JSON values, including
serialization and deserialization to and from strings. It can also
preserve existing comment in unserialization/serialization steps, making
it a convenient format to store user input files.


[FILE:119:distinfo]
f409856e5920c18d0c2fb85276e24ee607d2a09b5e7d5f0a371368903c275da2       216055 open-source-parsers-jsoncpp-1.9.5.tar.gz


[FILE:30:manifests/plist.primary]
lib/libjsoncpp.so.%%SOMAJOR%%


[FILE:179:manifests/plist.dev]
include/jsoncpp/json/
 allocator.h
 assertions.h
 config.h
 forwards.h
 json.h
 json_features.h
 reader.h
 value.h
 version.h
 writer.h
lib/libjsoncpp.so
lib/pkgconfig/jsoncpp.pc


[FILE:1382:files/Makefile.BSD.in]
.SUFFIXES:
.SUFFIXES: .o .So .cpp

SRCS=	src/lib_json/json_reader.cpp \
	src/lib_json/json_value.cpp \
	src/lib_json/json_writer.cpp

SOBJS=		${SRCS:R:S/$/.So/}

LIB=		jsoncpp
PICFLAG=	-fpic
SHLIB_MAJOR=	%%SHLIB_MAJOR%%
SHLIB_NAME=	lib${LIB}.so.${SHLIB_MAJOR}
SHLIB_LINK=	${SHLIB_NAME:R}
CXXFLAGS+=	-Iinclude \
		-D_FILE_OFFSET_BITS=64 \
		-Wall \
		-Winvalid-pch \
		-Wnon-virtual-dtor \


all: ${SHLIB_NAME} jsoncpp.pc

.cpp.So:
	${CXX} ${_${.IMPSRC:T}_FLAGS} ${PICFLAG} -DPIC ${SHARED_CXXFLAGS} ${CXXFLAGS} -c ${.IMPSRC} -o ${.TARGET}

${SHLIB_NAME}: ${SOBJS}
	@echo building shared library ${SHLIB_NAME}
	rm -f ${.TARGET} ${SHLIB_LINK}
	ln -fs ${.TARGET} ${SHLIB_LINK}
	${CXX} ${LDFLAGS} -shared -o ${.TARGET} -Wl,-soname,${SHLIB_NAME} ${.ALLSRC}

jsoncpp.pc: pkg-config/jsoncpp.pc.in
	sed \
		-e 's|@CMAKE_INSTALL_PREFIX@|%%PREFIX%%|' \
		-e 's|@libdir_for_pc_file@|%%PREFIX%%/lib|' \
		-e 's|@includedir_for_pc_file@|%%PREFIX%%/include|' \
		-e 's|@JSONCPP_VERSION@|%%PORTVERSION%%|' \
		${.ALLSRC} > ${.TARGET}	

install:
	mkdir -p ${DESTDIR}%%PREFIX%%/lib/pkgconfig
	mkdir -p ${DESTDIR}%%PREFIX%%/include/jsoncpp/json
	${BSD_INSTALL_DATA} include/json/*.h ${DESTDIR}%%PREFIX%%/include/jsoncpp/json/
	${BSD_INSTALL_DATA} jsoncpp.pc ${DESTDIR}%%PREFIX%%/lib/pkgconfig/
	${BSD_INSTALL_LIB} ${SHLIB_NAME} ${DESTDIR}%%PREFIX%%/lib
	cp -RpP ${SHLIB_LINK} ${DESTDIR}%%PREFIX%%/lib

