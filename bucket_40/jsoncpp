# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		jsoncpp
VERSION=		1.8.2
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	JSON reader and writer library for C++
HOMEPAGE=		https://github.com/open-source-parsers/jsoncpp
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/open-source-parsers:jsoncpp:1.8.2
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			dos2unix c++:single meson

LICENSE=		MIT:single
LICENSE_SCHEME=		solo
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE

FPC_EQUIVALENT=		devel/jsoncpp

PLIST_SUB=		SOVER=18

post-patch:
	${REINPLACE_CMD} -e "s|install : true|install : true, install_rpath : '${PREFIX}/toolchain/gcc7/lib'|" \
		${WRKSRC}/meson.build

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/include/jsoncpp
	${MV} ${STAGEDIR}${PREFIX}/include/json \
		${STAGEDIR}${PREFIX}/include/jsoncpp

[FILE:412:descriptions/desc.single]
JSON is a lightweight data-interchange format. It can represent numbers,
strings, ordered sequences of values, and collections of name/value pairs.

JsonCpp is a C++ library that allows manipulating JSON values, including
serialization and deserialization to and from strings. It can also
preserve existing comment in unserialization/serialization steps, making
it a convenient format to store user input files.


[FILE:119:distinfo]
811f5aee20df2ef0868a73a976ec6f9aab61f4ca71c66eddf38094b2b3078eef       198977 open-source-parsers-jsoncpp-1.8.2.tar.gz


[FILE:213:manifests/plist.single]
include/jsoncpp/json/
 allocator.h
 assertions.h
 autolink.h
 config.h
 features.h
 forwards.h
 json.h
 reader.h
 value.h
 version.h
 writer.h
lib/
 libjsoncpp.so
 libjsoncpp.so.%%SOVER%%
lib/pkgconfig/jsoncpp.pc


[FILE:455:patches/patch-meson.build]
--- meson.build.orig	2017-08-30 14:39:19 UTC
+++ meson.build
@@ -18,6 +18,7 @@ jsoncpp_cdata.set('JSONCPP_VERSION', mes
 jsoncpp_cdata.set('JSONCPP_VERSION_MAJOR', jsoncpp_major_version)
 jsoncpp_cdata.set('JSONCPP_VERSION_MINOR', jsoncpp_minor_version)
 jsoncpp_cdata.set('JSONCPP_VERSION_PATCH', jsoncpp_patch_version)
+jsoncpp_cdata.set('JSONCPP_USE_SECURE_MEMORY', '0')
 
 jsoncpp_gen_sources = configure_file(
   input : 'src/lib_json/version.h.in',


[FILE:396:patches/patch-src_lib__json_json__reader.cpp]
--- src/lib_json/json_reader.cpp.orig	2016-10-30 21:28:16 UTC
+++ src/lib_json/json_reader.cpp
@@ -3,6 +3,11 @@
 // recognized in your jurisdiction.
 // See file LICENSE for detail or copy at http://jsoncpp.sourceforge.net/LICENSE
 
+// fix for lang/gcc5+
+#if __GNUC__ == 5
+#include <cstdio>
+#endif
+
 #if !defined(JSON_IS_AMALGAMATION)
 #include <json/assertions.h>
 #include <json/reader.h>


[FILE:390:patches/patch-src_lib__json_json__writer.cpp]
--- src/lib_json/json_writer.cpp.orig	2016-10-30 21:27:18 UTC
+++ src/lib_json/json_writer.cpp
@@ -3,6 +3,11 @@
 // recognized in your jurisdiction.
 // See file LICENSE for detail or copy at http://jsoncpp.sourceforge.net/LICENSE
 
+// fix for lang/gcc5+
+#if __GNUC__ == 5
+#include <cstdio>
+#endif
+
 #if !defined(JSON_IS_AMALGAMATION)
 #include <json/writer.h>
 #include "json_tool.h"

