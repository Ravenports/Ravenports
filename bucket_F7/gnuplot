# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gnuplot
VERSION=		5.2.4
KEYWORDS=		math
VARIANTS=		standard lite
SDESC[lite]=		Command-line driven graphing utility (headless)
SDESC[standard]=	Command-line driven graphing utility
HOMEPAGE=		http://www.gnuplot.info/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/gnuplot/gnuplot/5.2.4
DISTFILE[1]=		gnuplot-5.2.4.tar.gz:main
DF_INDEX=		1
SPKGS[lite]=		complete
			primary
			examples
SPKGS[standard]=	complete
			primary
			examples

OPTIONS_AVAILABLE=	LITE
OPTIONS_STANDARD=	none
VOPTS[lite]=		LITE=ON

USES=			iconv pkgconfig readline c++:primary

LICENSE=		CUSTOM1:primary
LICENSE_NAME=		CUSTOM1:"Gnuplot License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/Copyright
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		math/gnuplot

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-readline=gnu
			--without-linux-vga
			--without-tutorial
			--with-bitmap-terminals
			--with-qt=no

PLIST_SUB=		MAJORVER=5.2

LDFLAGS=		-L{{ICONV_LIBRARY_PATH}}
			{{ICONV_LIB}}

[LITE].DESCRIPTION=			Build lite variant
[LITE].BUILDRUN_DEPENDS_OFF=		tiff:primary:standard
					libGD:single:standard
					wxWidgets:single:standard
[LITE].CONFIGURE_ARGS_OFF=		--with-gd={{LOCALBASE}}
					--with-gpic
					--with-mif
					--with-caca
					ac_cv_path_WX_CONFIG={{LOCALBASE}}/bin/wxgtk3u-3.0-config
[LITE].CONFIGURE_ARGS_ON=		--disable-x11-mbfonts
					--disable-x11-external
					--disable-wxwidgets
					--without-x
					--without-ggi
					--without-gd
					--without-caca
					--without-wx
					--without-gpic
					--without-mif
					--without-cairo
					--without-lua
					--without-latex
					--without-kpsexpand
[LITE].GNOME_COMPONENTS_OFF=		atk
					cairo
					gtk2
					gdkpixbuf
[LITE].USES_OFF=			jpeg
					lua
					png
[LITE].XORG_COMPONENTS_OFF=		x11

post-patch:
	${REINPLACE_CMD} -e \
		'/^install:/s/install-am//' ${WRKSRC}/share/LaTeX/Makefile.in
	${REINPLACE_CMD} -e \
		's|)/@PACKAGE@/@PKG_MAJOR@|)|g' ${WRKSRC}/src/Makefile.in
	${REINPLACE_CMD} -e \
		's|luaL_checkint(|(int)luaL_checkinteger(|' \
		${WRKSRC}/term/lua.trm

post-install-LITE-ON:
	# remove empty directories
	${RM} -r ${STAGEDIR}${PREFIX}/libexec/gnuplot

post-install:
	# Establish sample
	(cd ${STAGEDIR}${PREFIX}/share/gnuplot/5.2 && \
		${MV} gnuplotrc gnuplotrc.sample)
	# install examples and strip
	@${MKDIR} ${STAGEDIR}${STD_EXAMPLESDIR}
	(cd ${WRKSRC}/demo && \
		${COPYTREE_SHARE} . ${STAGEDIR}${STD_EXAMPLESDIR})
	${STRIP_CMD} ${STAGEDIR}${STD_EXAMPLESDIR}/plugin/demo_plugin.so

[FILE:1155:descriptions/desc.primary.standard]
Gnuplot is a portable multi-platform command-line driven graphing utility. 
It was originally created to allow scientists and students to visualize 
mathematical functions and data interactively, but has grown to support 
many non-interactive uses such as web scripting. It is also used as a 
plotting engine by third-party applications like Octave. Gnuplot has been 
supported and under active development since 1986.

Gnuplot supports many types of plots in either 2D or 3D. It can draw using 
lines, points, boxes, contours, vector fields, surfaces, and various 
associated text. It also supports various specialized plot types. Gnuplot 
supports many different types of output: interactive screen terminals 
(with mouse and hotkey input), direct output to pen plotters or modern 
printers, and output to many file formats (eps, emf, fig, jpeg, LaTeX, 
pdf, png, postscript, ...). Gnuplot is easily extensible to include new 
output modes. Recent additions include interactive terminals based on 
wxWidgets (usable on multiple platforms), and Qt. Mouseable plots embedded 
in web pages can be generated using the svg or HTML5 canvas terminal 
drivers.


[FILE:1293:descriptions/desc.primary.lite]
Gnuplot is a portable multi-platform command-line driven graphing utility. 
It was originally created to allow scientists and students to visualize 
mathematical functions and data interactively, but has grown to support 
many non-interactive uses such as web scripting. It is also used as a 
plotting engine by third-party applications like Octave. Gnuplot has been 
supported and under active development since 1986. 

Gnuplot supports many types of plots in either 2D or 3D. It can draw using 
lines, points, boxes, contours, vector fields, surfaces, and various 
associated text. It also supports various specialized plot types. Gnuplot 
supports many different types of output: interactive screen terminals 
(with mouse and hotkey input), direct output to pen plotters or modern 
printers, and output to many file formats (eps, emf, fig, jpeg, LaTeX, 
pdf, png, postscript, ...). Gnuplot is easily extensible to include new 
output modes. Recent additions include interactive terminals based on 
wxWidgets (usable on multiple platforms), and Qt. Mouseable plots embedded 
in web pages can be generated using the svg or HTML5 canvas terminal 
drivers.

This is the lite version of the package, which doesn't support rendering 
directly on graphical terminals and other graphical feaures. 


[FILE:99:distinfo]
1515f000bd373aaa53b16183f274189d4f5e0ae47d22f434857933d16a4770cb      5292321 gnuplot-5.2.4.tar.gz


[FILE:808:manifests/plist.primary]
@sample share/gnuplot/%%MAJORVER%%/gnuplotrc.sample
%%LITE-OFF%%libexec/gnuplot/%%MAJORVER%%/gnuplot_x11
%%LITE-OFF%%share/gnuplot/%%MAJORVER%%/app-defaults/Gnuplot
bin/gnuplot
share/gnuplot/%%MAJORVER%%/
 colors_default.gp
 colors_mono.gp
 colors_podo.gp
 gnuplot.gih
share/gnuplot/%%MAJORVER%%/PostScript/
 8859-1.ps
 8859-15.ps
 8859-2.ps
 8859-9.ps
 aglfn.txt
 cp1250.ps
 cp1251.ps
 cp1252.ps
 cp437.ps
 cp850.ps
 cp852.ps
 koi8r.ps
 koi8u.ps
 prologue.ps
 utf-8.ps
share/gnuplot/%%MAJORVER%%/js/
 README
 canvasmath.js
 canvastext.js
 gnuplot_common.js
 gnuplot_dashedlines.js
 gnuplot_mouse.css
 gnuplot_mouse.js
 gnuplot_svg.js
 grid.png
 help.png
 nextzoom.png
 previouszoom.png
 return.png
 textzoom.png
share/gnuplot/%%MAJORVER%%/lua/gnuplot-tikz.lua
share/man/man1/
 gnuplot-ja.1.gz
 gnuplot.1.gz


[FILE:4923:patches/patch-configure]
--- configure.orig	2018-04-13 03:48:36 UTC
+++ configure
@@ -11361,12 +11361,12 @@ if test -n "$PKG_CONFIG"; then
         pkg_cv_LUA_CFLAGS="$LUA_CFLAGS"
     else
         if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lua5.3\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "lua5.3") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lua-5.3\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "lua-5.3") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LUA_CFLAGS=`$PKG_CONFIG --cflags "lua5.3" 2>/dev/null`
+  pkg_cv_LUA_CFLAGS=`$PKG_CONFIG --cflags "lua-5.3" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -11379,12 +11379,12 @@ if test -n "$PKG_CONFIG"; then
         pkg_cv_LUA_LIBS="$LUA_LIBS"
     else
         if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lua5.3\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "lua5.3") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lua-5.3\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "lua-5.3") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LUA_LIBS=`$PKG_CONFIG --libs "lua5.3" 2>/dev/null`
+  pkg_cv_LUA_LIBS=`$PKG_CONFIG --libs "lua-5.3" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -11403,9 +11403,9 @@ else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        LUA_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "lua5.3"`
+	        LUA_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "lua-5.3"`
         else
-	        LUA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "lua5.3"`
+	        LUA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "lua-5.3"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$LUA_PKG_ERRORS" >&5
@@ -11854,7 +11854,7 @@ else
 	LUA_LIBS=$pkg_cv_LUA_LIBS
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
-	LUA=lua5.3
+	LUA=lua53
 fi
 elif test $pkg_failed = untried; then
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
@@ -11869,12 +11869,12 @@ if test -n "$PKG_CONFIG"; then
         pkg_cv_LUA_CFLAGS="$LUA_CFLAGS"
     else
         if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lua5.3\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "lua5.3") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lua-5.3\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "lua-5.3") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LUA_CFLAGS=`$PKG_CONFIG --cflags "lua5.3" 2>/dev/null`
+  pkg_cv_LUA_CFLAGS=`$PKG_CONFIG --cflags "lua-5.3" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -11887,12 +11887,12 @@ if test -n "$PKG_CONFIG"; then
         pkg_cv_LUA_LIBS="$LUA_LIBS"
     else
         if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lua5.3\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "lua5.3") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"lua-5.3\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "lua-5.3") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LUA_LIBS=`$PKG_CONFIG --libs "lua5.3" 2>/dev/null`
+  pkg_cv_LUA_LIBS=`$PKG_CONFIG --libs "lua-5.3" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -11911,9 +11911,9 @@ else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        LUA_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "lua5.3"`
+	        LUA_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "lua-5.3"`
         else
-	        LUA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "lua5.3"`
+	        LUA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "lua-5.3"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$LUA_PKG_ERRORS" >&5
@@ -12362,7 +12362,7 @@ else
 	LUA_LIBS=$pkg_cv_LUA_LIBS
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
-	LUA=lua5.3
+	LUA=lua53
 fi
 else
 	LUA_CFLAGS=$pkg_cv_LUA_CFLAGS
@@ -12405,7 +12405,7 @@ return luaL_openlibs ();
   return 0;
 }
 _ACEOF
-for ac_lib in '' lua lua5.3 lua5.2 lua5.1; do
+for ac_lib in '' lua lua53 lua5.2 lua5.1; do
   if test -z "$ac_lib"; then
     ac_res="none required"
   else


[FILE:1205:patches/patch-docs_Makefile.in]
--- docs/Makefile.in.orig	2018-04-13 03:48:35 UTC
+++ docs/Makefile.in
@@ -895,7 +895,7 @@ uninstall-am: uninstall-gihDATA
 $(GNUPLOT_EXE):
 	( cd ../src ; $(MAKE) gnuplot$(EXEEXT) )
 @BUILD_LUA_TRUE@$(LUA_HELP): $(top_srcdir)/term/lua/gnuplot-tikz.lua
-@BUILD_LUA_TRUE@	$(AM_V_GEN) $(LUA) $< termhelp > $@
+@BUILD_LUA_TRUE@	$(AM_V_GEN) $(LUA) $(top_srcdir)/term/lua/gnuplot-tikz.lua termhelp > $@
 
 allterm.h: $(CORETERM) $(LUA_HELP)
 	$(AM_V_GEN) for e in `egrep "^[ 	]*START_HELP" $(CORETERM) |\
@@ -921,15 +921,15 @@ groff: grotxt grodvi grops
 
 grotxt: gnuplot.txt
 gnuplot.txt: gnuplot.ms $(srcdir)/titlepag.ms
-	$(AM_V_GEN) groff -s -p -t -e -ms -Tlatin1 $< > $@
+	$(AM_V_GEN) groff -s -p -t -e -ms -Tlatin1 gnuplot.ms > $@
 
 grodvi: gnuplot-groff.dvi
 gnuplot-groff.dvi: gnuplot.ms $(srcdir)/titlepag.ms
-	$(AM_V_GEN) groff -s -p -t -e -ms -Tdvi $< > $@
+	$(AM_V_GEN) groff -s -p -t -e -ms -Tdvi gnuplot.ms > gnuplot.dvi
 
 grops: gnuplot-groff.ps
 gnuplot-groff.ps: gnuplot.ms $(srcdir)/titlepag.ms
-	$(AM_V_GEN) groff -s -p -t -e -ms -Tps $< > $@ 
+	$(AM_V_GEN) groff -s -p -t -e -ms -Tps gnuplot.ms > gnuplot.ps
 
 ### doc2xxx dependencies
 gnuplot.ms: doc2ms$(EXEEXT) $(srcdir)/gnuplot.doc


[FILE:292:patches/patch-src_command.c]
--- src/command.c.orig	2018-04-07 21:41:21 UTC
+++ src/command.c
@@ -115,6 +115,9 @@ int thread_rl_RetCode = -1; /* return co
 
 #ifndef _Windows
 # include "help.h"
+# if defined __FreeBSD__ || defined __DragonFly__
+# include <sys/wait.h>
+# endif
 #endif /* _Windows */
 
 #ifdef _Windows

