# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		scons
VERSION=		3.0.5
REVISION=		1
KEYWORDS=		devel python
VARIANTS=		standard
SDESC[standard]=	Alternative build tool competing with make
HOMEPAGE=		http://www.scons.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/scons/scons/3.0.5
DISTFILE[1]=		scons-3.0.5.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

RUN_DEPENDS=		m4:primary:standard

USES=			python shebangfix

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE.txt
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/scons
SHEBANG_FILES=		script/scons*

post-patch:
	${FIND} ${WRKSRC} -name \*.orig -delete

[FILE:351:descriptions/desc.single]
SCons is an Open Source software construction tool???that is, a
next-generation build tool. Think of SCons as an improved, cross-platform
substitute for the classic Make utility with integrated functionality
similar to autoconf/automake and compiler caches such as ccache. In short,
SCons is an easier, more reliable and faster way to build software.


[FILE:97:distinfo]
df676f23dc6d4bfa384fc389d95dcd21ab907e6349d4c848958ba4befb73c73e       655236 scons-3.0.5.tar.gz


[FILE:883:patches/patch-engine_SCons_Tool_____init____.py]
--- engine/SCons/Tool/__init__.py.orig	2019-01-23 17:30:36 UTC
+++ engine/SCons/Tool/__init__.py
@@ -1212,13 +1212,12 @@ def tool_list(platform, env):
         ars = ['sgiar']
     elif str(platform) == 'sunos':
         "prefer Forte tools on SunOS"
-        linkers = ['sunlink', 'gnulink']
-        c_compilers = ['suncc', 'gcc', 'cc']
-        cxx_compilers = ['suncxx', 'g++', 'cxx']
+        linkers = ['gnulink']
+        c_compilers = ['gcc', 'cc']
+        cxx_compilers = ['g++', 'cxx']
         assemblers = ['as', 'gas']
-        fortran_compilers = ['sunf95', 'sunf90', 'sunf77', 'f95', 'f90', 'f77',
-                             'gfortran', 'g77', 'fortran']
-        ars = ['sunar']
+        fortran_compilers = ['gfortran', 'g77']
+        ars = ['ar']
     elif str(platform) == 'hpux':
         "prefer aCC tools on HP-UX"
         linkers = ['hplink', 'gnulink']


[FILE:421:patches/patch-engine_SCons_Tool_gnulink.py]
--- engine/SCons/Tool/gnulink.py.orig	2019-01-23 17:30:36 UTC
+++ engine/SCons/Tool/gnulink.py
@@ -51,7 +51,7 @@ def generate(env):
 
     # __RPATH is set to $_RPATH in the platform specification if that
     # platform supports it.
-    env['RPATHPREFIX'] = '-Wl,-rpath='
+    env['RPATHPREFIX'] = '-Wl,-rpath,'
     env['RPATHSUFFIX'] = ''
     env['_RPATH'] = '${_concat(RPATHPREFIX, RPATH, RPATHSUFFIX, __env__)}'
 


[FILE:921:patches/patch-engine_SCons_Tool_link.py]
--- engine/SCons/Tool/link.py.orig	2019-01-23 17:30:36 UTC
+++ engine/SCons/Tool/link.py
@@ -289,8 +289,8 @@ def _setup_versioned_lib_variables(env,
             env['_SHLIBVERSIONFLAGS'] = '$SHLIBVERSIONFLAGS -h $_SHLIBSONAME'
             env['_LDMODULEVERSIONFLAGS'] = '$LDMODULEVERSIONFLAGS -h $_LDMODULESONAME'
         else:
-            env['_SHLIBVERSIONFLAGS'] = '$SHLIBVERSIONFLAGS -Wl,-soname=$_SHLIBSONAME'
-            env['_LDMODULEVERSIONFLAGS'] = '$LDMODULEVERSIONFLAGS -Wl,-soname=$_LDMODULESONAME'
+            env['_SHLIBVERSIONFLAGS'] = '$SHLIBVERSIONFLAGS -Wl,-soname,$_SHLIBSONAME'
+            env['_LDMODULEVERSIONFLAGS'] = '$LDMODULEVERSIONFLAGS -Wl,-soname,$_LDMODULESONAME'
         env['_SHLIBSONAME'] = '${ShLibSonameGenerator(__env__,TARGET)}'
         env['_LDMODULESONAME'] = '${LdModSonameGenerator(__env__,TARGET)}'
         env['ShLibSonameGenerator'] = SCons.Tool.ShLibSonameGenerator


[FILE:451:patches/patch-engine_SCons_Tool_m4.py]
--- engine/SCons/Tool/m4.py.orig	2019-01-23 17:30:36 UTC
+++ engine/SCons/Tool/m4.py
@@ -49,7 +49,7 @@ def generate(env):
     # file and run from there.
     # The src_suffix setup is like so: file.c.m4 -> file.c,
     # file.cpp.m4 -> file.cpp etc.
-    env['M4']      = 'm4'
+    env['M4']      = 'gm4'
     env['M4FLAGS'] = SCons.Util.CLVar('-E')
     env['M4COM']   = 'cd ${SOURCE.rsrcdir} && $M4 $M4FLAGS < ${SOURCE.file} > ${TARGET.abspath}'
 


[FILE:1104:patches/patch-setup.py]
--- setup.py.orig	2019-01-23 17:30:57 UTC
+++ setup.py
@@ -27,7 +27,7 @@ import distutils.command.build_scripts
 import distutils.command.install_scripts
 import distutils.command.install_lib
 import distutils.command.install_data
-import distutils.command.install
+import setuptools.command.install
 import distutils.core
 import distutils
 # import setuptools
@@ -77,7 +77,7 @@ else:
     is_win32 = 1
 
 
-_install = distutils.command.install.install
+_install = setuptools.command.install.install
 _install_data = distutils.command.install_data.install_data
 _install_lib = distutils.command.install_lib.install_lib
 _install_scripts = distutils.command.install_scripts.install_scripts
@@ -380,7 +380,7 @@ class install_data(_install_data):
             if is_win32:
                 dir = 'Doc'
             else:
-                dir = os.path.join('man', 'man1')
+                dir = os.path.join('share', 'man', 'man1')
             self.data_files = [(dir, man_pages)]
             man_dir = os.path.join(self.install_dir, dir)
             msg = "Installed SCons man pages into %s" % man_dir

