# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		fluent-bit
VERSION=		1.7.7
KEYWORDS=		sysutils
VARIANTS=		standard
SDESC[standard]=	Fast and Lightweight Log processor and forwarder
HOMEPAGE=		https://fluentbit.io/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/fluent:fluent-bit:v1.7.7
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	complete
			primary
			library

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cpe cmake bison zlib gmake execinfo shebangfix
			cclibs:primary,library

CPE_PRODUCT=		fluent_bit
CPE_VENDOR=		treasuredata
FPC_EQUIVALENT=		sysutils/fluent-bit
SHEBANG_ADD_SH=		lib/luajit-2.1.0-1e66d0f/configure

RC_SUBR=		fluent-bit:primary

CMAKE_ARGS=		-DFLB_DEBUG=Off
			-DFLB_TRACE=Off
			-DFLB_TLS=On
			-DFLB_EXAMPLES=On
			-DFLB_OUT_PGSQL=Off
			-DFLB_HTTP_SERVER=On

post-install:
	${MV} ${STAGEDIR}${ETCDIR}/fluent-bit.conf \
		${STAGEDIR}${ETCDIR}/fluent-bit.conf.sample
	${MV} ${STAGEDIR}${ETCDIR}/parsers.conf \
		${STAGEDIR}${ETCDIR}/parsers.conf.sample
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/fluent-bit
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/fluent-bit/libfluent-bit.so

[FILE:284:descriptions/desc.primary]
Fluent Bit is a Fast and Lightweight Data Forwarder for Linux, OSX and BSD
family operating systems. It has been made with a strong focus on
performance to allow the collection of events from different sources
without complexity.

Fluent Bit is part of the Fluentd project ecosystem.


[FILE:151:descriptions/desc.library]
Fluent Bit is a Fast and Lightweight Data Forwarder for Linux, OSX and BSD
family operating systems. This subpackage contains the library and headers.


[FILE:109:distinfo]
ddfc4df39a1da01c5e7503db59340c3b287741b5d0cb710f94f5f7551f41c888     14296649 fluent-fluent-bit-1.7.7.tar.gz


[FILE:132:manifests/plist.primary]
@sample etc/fluent-bit/fluent-bit.conf.sample
@sample etc/fluent-bit/parsers.conf.sample
bin/fluent-bit
etc/fluent-bit/plugins.conf


[FILE:1527:manifests/plist.library]
include/fluent-bit.h
include/fluent-bit/
 flb_api.h
 flb_avro.h
 flb_aws_credentials.h
 flb_aws_util.h
 flb_bits.h
 flb_callback.h
 flb_compat.h
 flb_config.h
 flb_config_map.h
 flb_coro.h
 flb_dlfcn_win32.h
 flb_dump.h
 flb_endian.h
 flb_engine.h
 flb_engine_dispatch.h
 flb_env.h
 flb_error.h
 flb_filter.h
 flb_filter_plugin.h
 flb_fstore.h
 flb_gzip.h
 flb_hash.h
 flb_help.h
 flb_http_client.h
 flb_http_client_debug.h
 flb_http_server.h
 flb_info.h
 flb_input.h
 flb_input_chunk.h
 flb_input_plugin.h
 flb_intermediate_metric.h
 flb_io.h
 flb_jsmn.h
 flb_kernel.h
 flb_kv.h
 flb_langinfo.h
 flb_lib.h
 flb_log.h
 flb_luajit.h
 flb_macros.h
 flb_mem.h
 flb_meta.h
 flb_metrics.h
 flb_metrics_exporter.h
 flb_mp.h
 flb_network.h
 flb_oauth2.h
 flb_output.h
 flb_output_plugin.h
 flb_output_thread.h
 flb_pack.h
 flb_parser.h
 flb_parser_decoder.h
 flb_pipe.h
 flb_plugin.h
 flb_plugin_proxy.h
 flb_pthread.h
 flb_ra_key.h
 flb_random.h
 flb_record_accessor.h
 flb_regex.h
 flb_router.h
 flb_routes_mask.h
 flb_s3_local_buffer.h
 flb_scheduler.h
 flb_sds.h
 flb_sha512.h
 flb_signv4.h
 flb_slist.h
 flb_socket.h
 flb_sosreport.h
 flb_sqldb.h
 flb_stacktrace.h
 flb_storage.h
 flb_str.h
 flb_strptime.h
 flb_task.h
 flb_task_map.h
 flb_thread_pool.h
 flb_thread_storage.h
 flb_time.h
 flb_time_utils.h
 flb_tls.h
 flb_unescape.h
 flb_upstream.h
 flb_upstream_conn.h
 flb_upstream_ha.h
 flb_upstream_node.h
 flb_upstream_queue.h
 flb_uri.h
 flb_utf8.h
 flb_utils.h
 flb_version.h
 flb_worker.h
lib/fluent-bit/libfluent-bit.so


[FILE:430:patches/patch-include_fluent-bit_flb__endian.h]
--- include/fluent-bit/flb_endian.h.orig	2021-05-26 14:18:51 UTC
+++ include/fluent-bit/flb_endian.h
@@ -40,7 +40,7 @@
  */
 #if defined(__GLIBC__)
 #include <endian.h>
-#elif defined(__OpenBSD__) || defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__OpenBSD__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__DragonFly__)
 #include <sys/endian.h>
 #elif defined(__APPLE__)
 #include <libkern/OSByteOrder.h>


[FILE:388:patches/patch-lib_chunkio_deps_crc32_crc32.c]
--- lib/chunkio/deps/crc32/crc32.c.orig	2021-05-26 14:18:51 UTC
+++ lib/chunkio/deps/crc32/crc32.c
@@ -34,7 +34,7 @@
 #  define __BIG_ENDIAN 1
 #  define __LITTLE_ENDIAN 2
 #  define __BYTE_ORDER __LITTLE_ENDIAN
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
 #  include <sys/endian.h>
 #elif defined(__sun) || defined(sun)
 # include <sys/byteorder.h>


[FILE:378:patches/patch-lib_luajit__src__lj_prng.c]
--- lib/luajit-2.1.0-1e66d0f/src/lj_prng.c.orig	2021-05-26 14:18:51 UTC
+++ lib/luajit-2.1.0-1e66d0f/src/lj_prng.c
@@ -116,7 +116,7 @@ static PRGR libfunc_rgr;
 #define LJ_TARGET_HAS_GETENTROPY	1
 #endif
 #elif LJ_TARGET_BSD || LJ_TARGET_SOLARIS || LJ_TARGET_CYGWIN
-#define LJ_TARGET_HAS_GETENTROPY	1
+#define LJ_TARGET_HAS_GETENTROPY	0
 #endif
 
 #if LJ_TARGET_HAS_GETENTROPY


[FILE:491:patches/patch-lib_monkey_mk__core_deps_libevent_buffer.c]
--- lib/monkey/mk_core/deps/libevent/buffer.c.orig	2021-05-26 14:18:51 UTC
+++ lib/monkey/mk_core/deps/libevent/buffer.c
@@ -108,6 +108,9 @@
 #elif defined(EVENT__HAVE_SENDFILE) && defined(__FreeBSD__)
 #define USE_SENDFILE		1
 #define SENDFILE_IS_FREEBSD	1
+#elif defined(EVENT__HAVE_SENDFILE) && defined(__DragonFly__)
+#define USE_SENDFILE		1
+#define SENDFILE_IS_FREEBSD	1
 #elif defined(EVENT__HAVE_SENDFILE) && defined(__APPLE__)
 #define USE_SENDFILE		1
 #define SENDFILE_IS_MACOSX	1


[FILE:804:patches/patch-lib_monkey_mk__core_deps_libevent_kqueue.c]
--- lib/monkey/mk_core/deps/libevent/kqueue.c.orig	2021-05-26 14:18:51 UTC
+++ lib/monkey/mk_core/deps/libevent/kqueue.c
@@ -50,7 +50,7 @@
 /* Some platforms apparently define the udata field of struct kevent as
  * intptr_t, whereas others define it as void*.  There doesn't seem to be an
  * easy way to tell them apart via autoconf, so we need to use OS macros. */
-#if defined(EVENT__HAVE_INTTYPES_H) && !defined(__OpenBSD__) && !defined(__FreeBSD__) && !defined(__darwin__) && !defined(__APPLE__) && !defined(__CloudABI__)
+#if defined(EVENT__HAVE_INTTYPES_H) && !defined(__OpenBSD__) && !defined(__FreeBSD__) && !defined(__darwin__) && !defined(__APPLE__) && !defined(__CloudABI__) && !defined(__DragonFly__)
 #define PTR_TO_UDATA(x)	((intptr_t)(x))
 #define INT_TO_UDATA(x) ((intptr_t)(x))
 #else


[FILE:380:patches/patch-lib_monkey_mk__server_CMakeLists.txt]
--- lib/monkey/mk_server/CMakeLists.txt.orig	2021-05-26 14:18:51 UTC
+++ lib/monkey/mk_server/CMakeLists.txt
@@ -38,6 +38,8 @@ target_link_libraries(monkey-core-static
 
 message(STATUS "LINKING ${STATIC_PLUGINS_LIBS}")
 
+target_link_libraries(monkey-core-static execinfo)
+
 # Linux Kqueue emulation
 if(MK_HAVE_LINUX_KQUEUE)
   target_link_libraries(monkey-core-static kqueue)


[FILE:364:patches/patch-lib_monkey_plugins_liana_liana.c]
--- lib/monkey/plugins/liana/liana.c.orig	2021-05-26 14:18:51 UTC
+++ lib/monkey/plugins/liana/liana.c
@@ -99,7 +99,7 @@ int mk_liana_send_file(int socket_fd, in
         return len;
     }
     return ret;
-#elif defined (__FreeBSD__)
+#elif defined (__FreeBSD__) || defined(__DragonFly__)
     off_t offset = *file_offset;
     off_t len = (off_t) file_count;
 


[FILE:700:files/fluent-bit.in]
#!/bin/sh

# PROVIDE: fluent-bit
# REQUIRE: DAEMON
# BEFORE: LOGIN
# KEYWORD: shutdown

# Add the following lines to /etc/rc.conf to enable fluent-bit:
#
# fluent_bit_enable (bool):	Set to YES to enable fluent-bit
# 				Default: NO
# fluent_bit_config (str):	config files to use
#				Default: %%ETCDIR%%/fluent-bit.conf
# fluent_bit_flags (str):	Extra flags passed to fluent-bit
# fluent_bit_user (str):        Default run as user nobody

. /etc/rc.subr

name="fluent_bit"
rcvar=${name}_enable
load_rc_config $name

: ${fluent_bit_enable:="NO"}
: ${fluent_bit_user:="nobody"}

command=%%PREFIX%%/bin/fluent-bit
command_args="--quiet --daemon --config %%ETCDIR%%/fluent-bit.conf"

run_rc_command "$1"

