# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		libedit
VERSION=		20240808-3.1
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Command line editor library
HOMEPAGE=		http://thrysoee.dk/editline/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://thrysoee.dk/editline/
DISTFILE[1]=		libedit-20240808-3.1.tar.gz:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			dev
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

B_DEPS[sunos]=		libbsd4sol:single:std

USES=			libtool ncurses

LICENSE=		BSD3CLAUSE:primary
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-widec

INSTALL_TARGET=		install-strip
SOVERSION=		0.0.74

CPPFLAGS=		-I{{NCURSESINC}}
LDFLAGS=		-L{{NCURSESLIB}}
VAR_OPSYS[sunos]=	LDFLAGS=-lbsd
			CFLAGS=-I{{PREFIX}}/include/bsd
			CONFIGURE_ARGS=ac_cv_func_getline=yes

post-patch:
	${REINPLACE_CMD} -e '/EXAMPLES_DIR =/d' ${WRKSRC}/Makefile.in
	${REINPLACE_CMD} -e 's|LIBS="-lncurses |LIBS="-lncurses -ltinfo |'\
		${WRKSRC}/configure

post-install:
	${INSTALL_DATA} ${WRKSRC}/src/filecomplete.h \
		${STAGEDIR}${PREFIX}/include/

[FILE:249:descriptions/desc.primary]
This is an autotool- and libtoolized port of the NetBSD Editline library
(libedit). This Berkeley-style licensed command line editor library
provides generic line editing, history, and tokenization functions,
similar to those found in GNU Readline.


[FILE:106:distinfo]
5f0573349d77c4a48967191cdd6634dd7aa5f6398c6a57fe037cc02696d6099f       538611 libedit-20240808-3.1.tar.gz


[FILE:55:manifests/plist.primary]
lib/
 libedit.so.%%SOMAJOR%%
 libedit.so.%%SOVERSION%%


[FILE:118:manifests/plist.dev]
include/
 filecomplete.h
 histedit.h
include/editline/readline.h
lib/
 libedit.a
 libedit.so
lib/pkgconfig/libedit.pc


[FILE:635:manifests/plist.man]
share/man/man3/
 editline.3
 el_deletestr.3
 el_end.3
 el_get.3
 el_getc.3
 el_gets.3
 el_history.3
 el_history_end.3
 el_history_init.3
 el_history_w.3
 el_history_wend.3
 el_history_winit.3
 el_init.3
 el_init_fd.3
 el_insertstr.3
 el_line.3
 el_parse.3
 el_push.3
 el_reset.3
 el_resize.3
 el_set.3
 el_source.3
 el_tok_end.3
 el_tok_init.3
 el_tok_line.3
 el_tok_reset.3
 el_tok_str.3
 el_tok_wend.3
 el_tok_winit.3
 el_tok_wline.3
 el_tok_wreset.3
 el_tok_wstr.3
 el_wdeletestr.3
 el_wget.3
 el_wgetc.3
 el_wgets.3
 el_winsertstr.3
 el_wline.3
 el_wparse.3
 el_wpush.3
 el_wset.3
share/man/man5/editrc.5
share/man/man7/editline.7


[FILE:372:patches/patch-src_chartype.h]
--- src/chartype.h.orig	2022-06-11 07:57:59 UTC
+++ src/chartype.h
@@ -44,7 +44,6 @@
 /* In many places it is assumed that the first 127 code points are ASCII
  * compatible, so ensure wchar_t indeed does ISO 10646 and not some other
  * funky encoding that could break us in weird and wonderful ways. */
-	#error wchar_t must store ISO 10646 characters
 #endif
 #endif
 


[FILE:780:patches/patch-src_sys.h]
--- src/sys.h.orig	2024-08-08 18:03:34 UTC
+++ src/sys.h
@@ -44,6 +44,10 @@
 #include <sys/types.h>
 #endif
 
+#ifdef __sun__
+#include <sys/types.h>
+#endif
+
 #if !defined(__attribute__) && (defined(__cplusplus) || !defined(__GNUC__)  || __GNUC__ == 2 && __GNUC_MINOR__ < 8)
 # define __attribute__(A)
 #endif
@@ -123,13 +127,4 @@ typedef unsigned int	u_int32_t;
 #define	REGEX		/* Use POSIX.2 regular expression functions */
 #undef	REGEXP		/* Use UNIX V8 regular expression functions */
 
-#if defined(__sun)
-extern int tgetent(char *, const char *);
-extern int tgetflag(char *);
-extern int tgetnum(char *);
-extern int tputs(const char *, int, int (*)(int));
-extern char* tgoto(const char*, int, int);
-extern char* tgetstr(char*, char**);
-#endif
-
 #endif /* _h_sys */


[FILE:529:patches/patch-src_terminal.h]
--- src/terminal.h.orig	2018-05-25 17:50:45 UTC
+++ src/terminal.h
@@ -80,14 +80,6 @@ typedef struct {
 #define	A_K_DE		6
 #define	A_K_NKEYS	7
 
-#ifdef __sun
-extern int tgetent(char *, const char *);
-extern int tgetflag(char *);
-extern int tgetnum(char *);
-extern int tputs(const char *, int, int (*)(int));
-extern char* tgoto(const char*, int, int);
-extern char* tgetstr(char*, char**);
-#endif
 
 libedit_private void	terminal_move_to_line(EditLine *, int);
 libedit_private void	terminal_move_to_char(EditLine *, int);


[FILE:373:patches/patch-src_vis.c]
--- src/vis.c.orig	2024-05-17 17:08:50 UTC
+++ src/vis.c
@@ -85,6 +85,10 @@ __weak_alias(strvisx,_strvisx)
 #include <stdio.h>
 #include <string.h>
 
+#ifndef MIN
+# define MIN(a,b) ((a) < (b) ? (a) : (b))
+#endif
+
 /*
  * The reason for going through the trouble to deal with character encodings
  * in vis(3), is that we use this to safe encode output of commands. This

