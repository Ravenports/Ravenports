# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-promise
VERSION=		2.3
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Promises/A+ implementation for Python (3.12)
SDESC[v13]=		Promises/A+ implementation for Python (3.13)
HOMEPAGE=		https://github.com/syrusakbary/promise
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/p/promise
DISTFILE[1]=		promise-2.3.tar.gz:main
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		promise-2.3

GENERATED=		yes

[PY312].BUILDRUN_DEPENDS_ON=		python-six:single:v12
[PY312].USES_ON=			python:v12,sutools

[PY313].BUILDRUN_DEPENDS_ON=		python-six:single:v13
[PY313].USES_ON=			python:v13,sutools

[FILE:727:descriptions/desc.single]
Promise
=======

This is a implementation of Promises in Python. It is a super set of
Promises/A+ designed to have readable, performant code and to provide
just the extensions that are absolutely necessary for using promises in
Python.

Its fully compatible with the `Promises/A+
spec <http://promises-aplus.github.io/promises-spec/>`__

|travis| |pypi| |coveralls|

Installation
------------

::

    $ pip install promise

Usage
-----

The example below shows how you can load the promise library. It then
demonstrates creating a promise from scratch. You simply call
``Promise(fn)``. There is a complete specification for what is returned
by this method in
`Promises/A+ <http://promises-aplus.github.com/promises-spec/>`__.


[FILE:97:distinfo]
dfd18337c523ba4b6a58801c164c1904a9d4d1b1747c7d5dbf45b693a49d93d0        19534 promise-2.3.tar.gz

