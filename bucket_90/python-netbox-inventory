# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-netbox-inventory
VERSION=		1.2.1
KEYWORDS=		python
VARIANTS=		py310 v11
SDESC[py310]=		Inventory asset management in NetBox (3.10)
SDESC[v11]=		Inventory asset management in NetBox (3.11)
HOMEPAGE=		none
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/e5/ca/12b65c9fc2a56cce0fa013efcdcc676f5741de9711ba42f05cbc11aa4630
DISTFILE[1]=		netbox_inventory-1.2.1-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[v11]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[v11]=		PY310=OFF PY311=ON

DISTNAME=		netbox_inventory-1.2.1.dist-info

GENERATED=		yes

[PY310].USES_ON=			python:py310,wheel

[PY311].USES_ON=			python:v11,wheel

[FILE:3116:descriptions/desc.single]
# NetBox Inventory Plugin

A [Netbox] plugin for hardware inventory.

## Features

Keep track of your hardware, whether it is installed or in storage. You can
define assets that represent hardware that can be used as a device, module
or
inventory item in NetBox.

Each asset can have a storage location defined, when not in use. You can
assign
an asset to a device or module. The plugin can keep serial number and asset
tag
between asset and device or module in sync if enabled in settings.

To properly support inventory items (that are used in NetBox to model SFP
and
similar modules) the plugin defines inventory item types that are
equivalent to
device types and module types. 

Inventory item types can be assigned into inventory item groups. On a group
detail
view you have an overview of the number of contained assets broken down by
asset
status or inventory item type and status. This way you can quickly see how
many
of a certain type of hardware you still have spare.

### Automatic management of asset status

Each asset has a status attribute that can indicate use of the asset. These
statuses can be set as needed by each NetBox installation.

Two statuses can have a special meaning. One to indicate asset is in
storage and one
to indicate asset is in use.

netbox_inventory can automatically set status to the value specified in
`used_status_name` configuration item when an asset is assigned to a
device, module
or inventory item.

When you remove an asset from device, module or inventory item the plugin
will set
asset status to `stored_status_name` configuration item.

To disable automatically changing status, set these two config parameters
to `None`.

### Prevent unwanted changes for tagged assets

With `asset_disable_editing_fields_for_tags` and
`asset_disable_deletion_for_tags` you can prevent changes to specified
asset data for assets that have certain tags attached. Changes are only
prevented via web interface. API modifications are allowed.

The idea is that an external system uses some assets stored in
netbox_inventory, and you want to prevent accidental changes to data
directly in NetBox web interface. Only that external system should modify
the data.

## Compatibility

This plugin requires netbox version 3.4.x to work. Older versions of the
plugin
support older netbox version as per table below:

| NetBox Version | Plugin Version |
|----------------|----------------|
|       3.3      |      1.1.x     |
|       3.4      |      1.2.x     |

## Installing

Review [official Netbox plugin documentation] for installation
instructions.

You install the plugin from pypi with pip. Make sure you activate Netbox's
virtual
environment first:

```bash
$ source /opt/netbox/venv/bin/activate
(venv) $ pip install netbox-inventory
```

For adding to a NetBox Docker setup see
[the general instructions for using netbox-docker with plugins].

You can install a development version directly from GitHub:

```bash
pip install git+https://github.com/ArnesSI/netbox-inventory.git@master
```

or by adding to your `local_requirements.txt` or `plugin_requirements.txt`
(netbox-docker):


[FILE:118:distinfo]
90e2d9974673964f9ce4a440cde68bb22c3f38c366ed41c409c9877bed75ae39        71753 netbox_inventory-1.2.1-py3-none-any.whl

