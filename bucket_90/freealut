# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		freealut
VERSION=		1.1.0
KEYWORDS=		audio
VARIANTS=		standard
SDESC[standard]=	OpenAL Utility Toolkit (ALUT)
HOMEPAGE=		http://www.openal.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://ravenports.elderlinux.org/distcache/
			https://cdn.openbsd.org/pub/OpenBSD/distfiles/
			https://src.fedoraproject.org/repo/pkgs/freealut/freealut-1.1.0.tar.gz/e089b28a0267faabdb6c079ee173664a/
DISTFILE[1]=		freealut-1.1.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		openal:dev:standard
BUILDRUN_DEPENDS=	openal:primary:standard

USES=			gmake libtool pkgconfig fbsd10fix mbsdfix

LICENSE=		LGPL20:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		LGPL20:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^Portability"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/README
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		audio/freealut

MUST_CONFIGURE=		gnu

INSTALL_TARGET=		install-strip
SOVERSION=		0.1.0

post-patch:
	${REINPLACE_CMD} -e 's/@CFLAGS@/& -lopenal -lpthread/g' \
	${WRKSRC}/examples/Makefile.in ${WRKSRC}/test_suite/Makefile.in

[FILE:72:descriptions/desc.single]
freealut is a free implementation of the OpenAL Utility Toolkit (ALUT).


[FILE:100:distinfo]
60d1ea8779471bb851b89b49ce44eecb78e46265be1a6e9320a28b100c8df44f       461830 freealut-1.1.0.tar.gz


[FILE:142:manifests/plist.single]
bin/freealut-config
include/AL/alut.h
lib/
 libalut.a
 libalut.so
 libalut.so.%%SOMAJOR%%
 libalut.so.%%SOVERSION%%
lib/pkgconfig/freealut.pc


[FILE:344:patches/patch-src_alutInit.c]
--- src/alutInit.c.orig	2006-05-08 09:28:07 UTC
+++ src/alutInit.c
@@ -147,11 +147,7 @@ alutExit (void)
       return AL_FALSE;
     }
 
-  if (!alcCloseDevice (device))
-    {
-      _alutSetError (ALUT_ERROR_CLOSE_DEVICE);
-      return AL_FALSE;
-    }
+  alcCloseDevice (device);
 
   initialisationState = Unintialized;
   return AL_TRUE;


[FILE:637:patches/patch-src_alutInternal.h]
--- src/alutInternal.h.orig	2006-05-08 09:28:07 UTC
+++ src/alutInternal.h
@@ -13,23 +13,8 @@
 
 #if HAVE_STDINT_H
 #include <stdint.h>
-#elif _MSC_VER < 1300
-typedef char int8_t;
-typedef unsigned char uint8_t;
-typedef short int16_t;
-typedef unsigned short uint16_t;
-typedef int int32_t;
-typedef unsigned int uint32_t;
-#elif HAVE_BASETSD_H
-#include <basetsd.h>
-typedef INT8 int8_t;
-typedef UINT8 uint8_t;
-typedef INT16 int16_t;
-typedef UINT16 uint16_t;
-typedef INT32 int32_t;
-typedef UINT32 uint32_t;
 #else
-#error Do not know sized types on this platform
+#include <inttypes.h>
 #endif
 
 typedef int16_t Int16BigEndian;


[FILE:458:patches/patch-src_alutLoader.c]
--- src/alutLoader.c.orig	2006-05-08 09:28:07 UTC
+++ src/alutLoader.c
@@ -474,7 +474,7 @@ alutLoadWAVMemory (ALbyte *buffer, ALenu
 
   /* ToDo: Can we do something less insane than passing 0x7FFFFFFF? */
   stream = _alutInputStreamConstructFromMemory (buffer, 0x7FFFFFFF);
-  _alutLoadMemoryFromInputStream (stream, format, size, &freq);
+  *data = _alutLoadMemoryFromInputStream (stream, format, size, &freq);
   if (*data == NULL)
     {
       return;


[FILE:239:patches/patch-src_alutUtil.c]
--- src/alutUtil.c.orig	2006-05-08 09:28:07 UTC
+++ src/alutUtil.c
@@ -2,6 +2,7 @@
 
 #if HAVE_NANOSLEEP && HAVE_TIME_H
 #include <time.h>
+#include <sys/time.h>
 #include <errno.h>
 #elif HAVE_USLEEP && HAVE_UNISTD_H
 #include <unistd.h>

