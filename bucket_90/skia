# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		skia
VERSION=		2020-03-19
REVISION=		2
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Open-source 2D graphics library
HOMEPAGE=		https://skia.org
CONTACT=		nobody

DOWNLOAD_GROUPS=	main dng piex sfn zlib
SITES[main]=		GITHUB/google:skia:4b55ff0
SITES[dng]=		GITHUB/skia-mirror:dng_sdk:c8d0c9b:third_party/externals/dng_sdk
SITES[piex]=		GITHUB/google:piex:256bd10:third_party/externals/piex
SITES[sfn]=		GITHUB/googlefonts:sfntly:b55ff30:third_party/externals/sfntly
SITES[zlib]=		GITHUB/skia-mirror:zlib:47af7c5:third_party/externals/zlib
DISTFILE[1]=		generated:main
DISTFILE[2]=		generated:sfn
DISTFILE[3]=		generated:dng
DISTFILE[4]=		generated:piex
DISTFILE[5]=		generated:zlib
DIST_SUBDIR=		skia-src
DF_INDEX=		1 2 3 4 5
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		gn:single:standard
BUILDRUN_DEPENDS=	WebP:single:standard
			harfbuzz:primary:standard
			harfbuzz:icu:standard
			freetype:primary:standard

USES=			ninja python:py27,build jpeg png expat zlib
			c++:single

LICENSE=		BSD3CLAUSE:single
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ENV=		AUTOPYTHON=2.7

MAKE_ENV=		AUTOPYTHON=2.7

SOVERSION=		1.0

pre-patch:
	${REINPLACE_CMD} -e 's|/usr/include/harfbuzz|${LOCALBASE}/include/harfbuzz|'\
		${WRKSRC}/third_party/harfbuzz/BUILD.gn
	${REINPLACE_CMD} -e 's|/usr/include/freetype2|${LOCALBASE}/include/freetype2|'\
		${WRKSRC}/third_party/freetype2/BUILD.gn
	# Delete reference to gn function "set_sources_assignment_filter"
	# https://gn.googlesource.com/gn/+/55e535a6716e57320fdd3901f0347a5c30562199
	${REINPLACE_CMD} -e '/set_sources_assignment_filter/d' \
		-e '/visibility/d' \
		${WRKSRC}/BUILD.gn

do-configure:
	${MKDIR} ${CONFIGURE_WRKSRC}
	(cd ${WRKSRC} && ${SETENV} ${CONFIGURE_ENV} \
		gn gen ${CONFIGURE_WRKSRC} --args="\
		is_official_build=true \
		is_component_build=true \
		skia_use_system_libjpeg_turbo=true \
		skia_use_system_libpng=true \
		skia_use_system_libwebp=true \
		skia_use_system_icu=true \
		skia_use_system_expat=true \
		skia_use_system_zlib=true \
		skia_use_system_harfbuzz=true \
		skia_enable_fontmgr_empty=true \
		")

do-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/lib
	${MKDIR} ${STAGEDIR}${PREFIX}/include/skia
	${INSTALL_LIB} ${BUILD_WRKSRC}/libskia.so \
		${STAGEDIR}${PREFIX}/lib/libskia.so.1.0
	(cd ${STAGEDIR}${PREFIX}/lib && \
		${LN} -s libskia.so.1.0 libskia.so)
	(cd ${WRKSRC} && ${COPYTREE_SHARE} \
		include ${STAGEDIR}${PREFIX}/include/skia)

[FILE:265:descriptions/desc.single]
Skia is an open source 2D graphics library which provides common APIs that
work across a variety of hardware and software platforms. It serves as the
graphics engine for Google Chrome and Chrome OS, Android, Mozilla Firefox
and Firefox OS, and many other products.


[FILE:590:distinfo]
b4ca5402072063acc4ba7064dfbf10251b3ea28577997964563588c72ebf1dae     46411549 skia-src/google-skia-4b55ff0.tar.gz
471fdcebf662f3b731e602b41461aa7a6cdcda9d78d8ec5196edf08f504fe53f     39295928 skia-src/googlefonts-sfntly-b55ff30.tar.gz
a523111f2911a68efc3f1488dc60c8bd4d41746731ce28014ae273767a28311e       421656 skia-src/skia-mirror-dng_sdk-c8d0c9b.tar.gz
5250fd5e9b0273f1f5d374f2e3712647e077a40a63b93e2cb0b867c885ef1de1        36535 skia-src/google-piex-256bd10.tar.gz
d55c6e50ea609021d5dea5d26f0bad3625ad07c2ba122377fb304d30bc92013c       287368 skia-src/skia-mirror-zlib-47af7c5.tar.gz


[FILE:5604:manifests/plist.single]
include/skia/include/android/
 SkAndroidFrameworkUtils.h
 SkAnimatedImage.h
 SkBRDAllocator.h
 SkBitmapRegionDecoder.h
include/skia/include/atlastext/
 SkAtlasTextContext.h
 SkAtlasTextFont.h
 SkAtlasTextRenderer.h
 SkAtlasTextTarget.h
include/skia/include/c/
 sk_canvas.h
 sk_colorspace.h
 sk_data.h
 sk_image.h
 sk_imageinfo.h
 sk_maskfilter.h
 sk_matrix.h
 sk_paint.h
 sk_path.h
 sk_picture.h
 sk_shader.h
 sk_surface.h
 sk_types.h
include/skia/include/codec/
 SkAndroidCodec.h
 SkCodec.h
 SkCodecAnimation.h
 SkEncodedOrigin.h
include/skia/include/config/SkUserConfig.h
include/skia/include/core/
 SkAnnotation.h
 SkBBHFactory.h
 SkBitmap.h
 SkBlendMode.h
 SkBlurTypes.h
 SkCanvas.h
 SkCanvasVirtualEnforcer.h
 SkClipOp.h
 SkColor.h
 SkColorFilter.h
 SkColorPriv.h
 SkColorSpace.h
 SkContourMeasure.h
 SkCoverageMode.h
 SkCubicMap.h
 SkData.h
 SkDataTable.h
 SkDeferredDisplayList.h
 SkDeferredDisplayListRecorder.h
 SkDocument.h
 SkDrawLooper.h
 SkDrawable.h
 SkEncodedImageFormat.h
 SkExecutor.h
 SkFilterQuality.h
 SkFlattenable.h
 SkFont.h
 SkFontArguments.h
 SkFontLCDConfig.h
 SkFontMetrics.h
 SkFontMgr.h
 SkFontParameters.h
 SkFontStyle.h
 SkFontTypes.h
 SkGraphics.h
 SkICC.h
 SkImage.h
 SkImageEncoder.h
 SkImageFilter.h
 SkImageGenerator.h
 SkImageInfo.h
 SkM44.h
 SkMallocPixelRef.h
 SkMaskFilter.h
 SkMath.h
 SkMatrix.h
 SkMatrix44.h
 SkMilestone.h
 SkOverdrawCanvas.h
 SkPaint.h
 SkPath.h
 SkPathEffect.h
 SkPathMeasure.h
 SkPathTypes.h
 SkPicture.h
 SkPictureRecorder.h
 SkPixelRef.h
 SkPixmap.h
 SkPngChunkReader.h
 SkPoint.h
 SkPoint3.h
 SkPromiseImageTexture.h
 SkRRect.h
 SkRSXform.h
 SkRWBuffer.h
 SkRasterHandleAllocator.h
 SkRect.h
 SkRefCnt.h
 SkRegion.h
 SkScalar.h
 SkSerialProcs.h
 SkShader.h
 SkSize.h
 SkStream.h
 SkString.h
 SkStrokeRec.h
 SkSurface.h
 SkSurfaceCharacterization.h
 SkSurfaceProps.h
 SkSwizzle.h
 SkTextBlob.h
 SkTileMode.h
 SkTime.h
 SkTraceMemoryDump.h
 SkTypeface.h
 SkTypes.h
 SkUnPreMultiply.h
 SkVertices.h
 SkYUVAIndex.h
 SkYUVASizeInfo.h
include/skia/include/docs/
 SkPDFDocument.h
 SkXPSDocument.h
include/skia/include/effects/
 Sk1DPathEffect.h
 Sk2DPathEffect.h
 SkAlphaThresholdFilter.h
 SkArithmeticImageFilter.h
 SkBlurDrawLooper.h
 SkBlurImageFilter.h
 SkBlurMaskFilter.h
 SkColorFilterImageFilter.h
 SkColorMatrix.h
 SkColorMatrixFilter.h
 SkComposeImageFilter.h
 SkCornerPathEffect.h
 SkDashPathEffect.h
 SkDiscretePathEffect.h
 SkDisplacementMapEffect.h
 SkDropShadowImageFilter.h
 SkGradientShader.h
 SkHighContrastFilter.h
 SkImageFilters.h
 SkImageSource.h
 SkLayerDrawLooper.h
 SkLightingImageFilter.h
 SkLumaColorFilter.h
 SkMagnifierImageFilter.h
 SkMatrixConvolutionImageFilter.h
 SkMergeImageFilter.h
 SkMorphologyImageFilter.h
 SkOffsetImageFilter.h
 SkOpPathEffect.h
 SkOverdrawColorFilter.h
 SkPaintImageFilter.h
 SkPerlinNoiseShader.h
 SkPictureImageFilter.h
 SkRuntimeEffect.h
 SkShaderMaskFilter.h
 SkTableColorFilter.h
 SkTableMaskFilter.h
 SkTileImageFilter.h
 SkTrimPathEffect.h
 SkXfermodeImageFilter.h
include/skia/include/encode/
 SkEncoder.h
 SkJpegEncoder.h
 SkPngEncoder.h
 SkWebpEncoder.h
include/skia/include/gpu/
 GrBackendDrawableInfo.h
 GrBackendSemaphore.h
 GrBackendSurface.h
 GrConfig.h
 GrContext.h
 GrContextOptions.h
 GrContextThreadSafeProxy.h
 GrDriverBugWorkarounds.h
 GrDriverBugWorkaroundsAutogen.h
 GrTypes.h
include/skia/include/gpu/d3d/
 GrD3D12.h
 GrD3DBackendContext.h
include/skia/include/gpu/dawn/GrDawnTypes.h
include/skia/include/gpu/gl/
 GrGLAssembleHelpers.h
 GrGLAssembleInterface.h
 GrGLConfig.h
 GrGLConfig_chrome.h
 GrGLExtensions.h
 GrGLFunctions.h
 GrGLInterface.h
 GrGLTypes.h
include/skia/include/gpu/mock/GrMockTypes.h
include/skia/include/gpu/mtl/GrMtlTypes.h
include/skia/include/gpu/vk/
 GrVkBackendContext.h
 GrVkExtensions.h
 GrVkMemoryAllocator.h
 GrVkTypes.h
 GrVkVulkan.h
include/skia/include/pathops/SkPathOps.h
include/skia/include/ports/
 SkCFObject.h
 SkFontConfigInterface.h
 SkFontMgr_FontConfigInterface.h
 SkFontMgr_android.h
 SkFontMgr_directory.h
 SkFontMgr_empty.h
 SkFontMgr_fontconfig.h
 SkFontMgr_fuchsia.h
 SkFontMgr_indirect.h
 SkImageGeneratorCG.h
 SkImageGeneratorWIC.h
 SkRemotableFontMgr.h
 SkTypeface_mac.h
 SkTypeface_win.h
include/skia/include/private/
 GrContext_Base.h
 GrGLTypesPriv.h
 GrImageContext.h
 GrRecordingContext.h
 GrResourceKey.h
 GrSharedEnums.h
 GrSingleOwner.h
 GrTypesPriv.h
 GrVkTypesPriv.h
 SkBitmaskEnum.h
 SkChecksum.h
 SkColorData.h
 SkDeque.h
 SkEncodedInfo.h
 SkFixed.h
 SkFloatBits.h
 SkFloatingPoint.h
 SkHalf.h
 SkIDChangeListener.h
 SkImageInfoPriv.h
 SkMacros.h
 SkMalloc.h
 SkMutex.h
 SkNoncopyable.h
 SkNx.h
 SkNx_neon.h
 SkNx_sse.h
 SkOnce.h
 SkPathRef.h
 SkSafe32.h
 SkSafe_math.h
 SkSemaphore.h
 SkShadowFlags.h
 SkSpinlock.h
 SkTArray.h
 SkTDArray.h
 SkTFitsIn.h
 SkTHash.h
 SkTLogic.h
 SkTemplates.h
 SkThreadAnnotations.h
 SkThreadID.h
 SkTo.h
 SkVx.h
 SkWeakRefCnt.h
include/skia/include/svg/SkSVGCanvas.h
include/skia/include/third_party/skcms/
 LICENSE
 skcms.h
include/skia/include/third_party/vulkan/LICENSE
include/skia/include/third_party/vulkan/vulkan/
 vk_platform.h
 vulkan.h
 vulkan_android.h
 vulkan_core.h
 vulkan_ios.h
 vulkan_macos.h
 vulkan_win32.h
 vulkan_xcb.h
include/skia/include/utils/
 SkAnimCodecPlayer.h
 SkBase64.h
 SkCamera.h
 SkCanvasStateUtils.h
 SkEventTracer.h
 SkFrontBufferedStream.h
 SkInterpolator.h
 SkLua.h
 SkLuaCanvas.h
 SkNWayCanvas.h
 SkNoDrawCanvas.h
 SkNullCanvas.h
 SkPaintFilterCanvas.h
 SkParse.h
 SkParsePath.h
 SkRandom.h
 SkShadowUtils.h
 SkTextUtils.h
 SkTraceEventPhase.h
include/skia/include/utils/mac/SkCGUtils.h
lib/
 libskia.so
 libskia.so.%%SOVERSION%%


[FILE:1205:patches/patch-BUILD.gn]
--- BUILD.gn.orig	2020-03-19 21:10:56 UTC
+++ BUILD.gn
@@ -984,6 +984,7 @@ component("skia") {
     "src/ports/SkImageGenerator_skia.cpp",
     "src/ports/SkMemory_malloc.cpp",
     "src/ports/SkOSFile_stdio.cpp",
+    "src/ports/SkDebug_stdio.cpp",
     "src/sfnt/SkOTTable_name.cpp",
     "src/sfnt/SkOTUtils.cpp",
   ]
@@ -1028,7 +1029,6 @@ component("skia") {
   }
 
   if (is_linux || target_cpu == "wasm") {
-    sources += [ "src/ports/SkDebug_stdio.cpp" ]
     if (skia_use_egl) {
       libs += [ "GLESv2" ]
     }
@@ -1040,7 +1040,6 @@ component("skia") {
 
   if (is_mac) {
     sources += [
-      "src/ports/SkDebug_stdio.cpp",
       "src/ports/SkImageEncoder_CG.cpp",
       "src/ports/SkImageGeneratorCG.cpp",
     ]
@@ -1054,7 +1053,6 @@ component("skia") {
 
   if (is_ios) {
     sources += [
-      "src/ports/SkDebug_stdio.cpp",
       "src/ports/SkFontHost_mac.cpp",
       "src/ports/SkImageEncoder_CG.cpp",
       "src/ports/SkImageGeneratorCG.cpp",
@@ -1071,9 +1069,6 @@ component("skia") {
     ]
   }
 
-  if (is_fuchsia) {
-    sources += [ "src/ports/SkDebug_stdio.cpp" ]
-  }
 
   if (skia_enable_spirv_validation) {
     deps += [ "//third_party/spirv-tools:spvtools_val" ]


[FILE:667:patches/patch-src_gpu_GrAutoLocaleSetter.h]
--- src/gpu/GrAutoLocaleSetter.h.orig	2020-03-19 21:10:56 UTC
+++ src/gpu/GrAutoLocaleSetter.h
@@ -49,7 +49,7 @@ public:
         } else {
             fShouldRestoreLocale = false;
         }
-#elif HAVE_LOCALE_T
+#elif HAVE_LOCALE_T && !defined __NetBSD__
 #if HAVE_XLOCALE
         // In xlocale nullptr means the C locale.
         if (0 == strcmp(name, "C")) {
@@ -73,7 +73,7 @@ public:
             setlocale(LC_ALL, fOldLocale.c_str());
         }
         _configthreadlocale(fOldPerThreadLocale);
-#elif HAVE_LOCALE_T
+#elif HAVE_LOCALE_T && !defined __NetBSD__
         if (fLocale) {
              uselocale(fOldLocale);
              freelocale(fLocale);


[FILE:531:patches/patch-third__party_externals_dng__sdk_source_RawEnvironment.h]
--- third_party/externals/dng_sdk/source/RawEnvironment.h.orig	2019-03-13 04:56:20 UTC
+++ third_party/externals/dng_sdk/source/RawEnvironment.h
@@ -5,7 +5,7 @@
 // compilation. The constants qMacOS and qWinOS must be defined on all
 // platforms. Other constants, such as qLinux, only need to be defined if we're
 // actually compiling for that platform.
-#if defined(__linux__)
+#if defined(__linux__) || defined(__DragonFly__) || defined(__FreeBSD__) || defined(__NetBSD__)
 #define qMacOS 0
 #define qWinOS 0
 #define qLinux 1


[FILE:1461:patches/patch-third__party_externals_dng__sdk_source_dng__safe__arithmetic.h]
--- third_party/externals/dng_sdk/source/dng_safe_arithmetic.h.orig	2019-03-13 04:56:20 UTC
+++ third_party/externals/dng_sdk/source/dng_safe_arithmetic.h
@@ -109,20 +109,6 @@ std::int64_t SafeInt64MultSlow(std::int6
 
 // Internal function used as optimization for SafeInt64Mult() if Clang
 // __builtin_smull_overflow is supported. Don't call this function directly.
-#if __has_builtin(__builtin_smull_overflow)
-inline std::int64_t SafeInt64MultByClang(std::int64_t arg1, std::int64_t arg2) {
-  std::int64_t result;
-#if (__WORDSIZE == 64) && !defined(__APPLE__)
-  if (__builtin_smull_overflow(arg1, arg2, &result)) {
-#else
-  if (__builtin_smulll_overflow(arg1, arg2, &result)) {
-#endif
-    ThrowProgramError("Arithmetic overflow");
-    abort();  // Never reached.
-  }
-  return result;
-}
-#endif
 
 // Internal function used as optimization for SafeInt64Mult() if __int128 type
 // is supported. Don't call this function directly.
@@ -147,9 +133,7 @@ inline std::int64_t SafeInt64MultByInt12
 // (without overflow). Otherwise, throws a dng_exception with error code
 // dng_error_unknown.
 inline std::int64_t SafeInt64Mult(std::int64_t arg1, std::int64_t arg2) {
-#if __has_builtin(__builtin_smull_overflow)
-  return dng_internal::SafeInt64MultByClang(arg1, arg2);
-#elif defined(DNG_HAS_INT128)
+#if defined(DNG_HAS_INT128)
   return dng_internal::SafeInt64MultByInt128(arg1, arg2);
 #else
   return dng_internal::SafeInt64MultSlow(arg1, arg2);


[FILE:89:files/special.mk]
_USES_extract+=	501:make_extdir

make_extdir:
	${MKDIR} ${WRKSRC}/third_party/externals
	
