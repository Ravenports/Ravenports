# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		php81
VERSION=		8.1.4
KEYWORDS=		lang www php
VARIANTS=		standard
SDESC[standard]=	PHP Hypertext Preprocessor version 8.1
HOMEPAGE=		https://php.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		PHP/distributions
DISTFILE[1]=		php-8.1.4.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	CLI CGI FPM EMBED DEBUGGER
OPTIONS_STANDARD=	CLI CGI FPM EMBED DEBUGGER
OPTGROUP_RESTRICTED=	SAPI
OPTDESCR[SAPI]=		Server Application Programming Interface
OPTGROUP[SAPI]=		CLI CGI FPM DEBUGGER
OPT_ON[all]=		CLI CGI FPM EMBED DEBUGGER

BUILD_DEPENDS=		autoconf:single:standard
BUILDRUN_DEPENDS=	pcre2:primary:standard
BR_DEPS[darwin]=	libiconv:static:standard

USES=			cpe gmake pkgconfig zlib
GNOME_COMPONENTS=	libxml2

DISTNAME=		php-8.1.4

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"PHP License v3.01"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

CPE_PRODUCT=		php
FPC_EQUIVALENT=		lang/php81

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-layout=GNU
			--with-libxml
			--localstatedir=/var
			--with-config-file-scan-dir={{PREFIX}}/etc/php81
			--sysconfdir={{PREFIX}}/etc/php81
			--libdir={{PREFIX}}/lib/php81
			--datadir={{PREFIX}}/share/php81
			--disable-all
			--enable-mysqlnd
			--enable-maintainer-zts
			--program-suffix=81
CONFIGURE_ENV=		ac_cv_decimal_fp_supported="no"
			lt_cv_path_SED="sed"

DESTDIRNAME=		INSTALL_ROOT

PLIST_SUB=		SUFFIX=81
			SOMAJOR=8
RC_SUBR=		php81-fpm:single
SUB_LIST=		SUFFIX=81

[CLI].DESCRIPTION=			Enable Command Line Interface SAPI
[CLI].CONFIGURE_ARGS_OFF=		--disable-cli
[CLI].MAKEFILE_ON=			PHP_SAPI+=cli

[FPM].DESCRIPTION=			Enable FastCGI Process Manager SAPI
[FPM].CONFIGURE_ARGS_ON=		--enable-fpm
					--with-fpm-user={{WWWOWN}}
					--with-fpm-group={{WWWGRP}}
[FPM].MAKEFILE_ON=			PHP_SAPI+=fpm

[DEBUGGER].DESCRIPTION=			Enable interactive debugger SAPI module support
[DEBUGGER].CONFIGURE_ENABLE_BOTH=	phpdbg
[DEBUGGER].MAKEFILE_ON=			PHP_SAPI+=phpdbg

[CGI].DESCRIPTION=			Enable Common Gateway Interface SAPI
[CGI].CONFIGURE_ARGS_OFF=		--disable-cgi
[CGI].MAKEFILE_ON=			PHP_SAPI+=cgi

[EMBED].DESCRIPTION=			Build embedded SAPI library
[EMBED].CONFIGURE_ARGS_ON=		--enable-embed
[EMBED].MAKEFILE_ON=			PHP_SAPI+=embed

post-install-CLI-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/php81

post-patch:
	${TOUCH} ${WRKSRC}/ext/php_config.h
	${REINPLACE_CMD} "s|^\(extension_dir\)|; \1|" ${WRKSRC}/php.ini-*
	${REINPLACE_CMD} -e "/phpincludedir =/ s|/php|/php81|" \
		${WRKSRC}/scripts/Makefile.frag
	${REINPLACE_CMD} -e "/includedir=/ s|php|php81|" \
		${WRKSRC}/scripts/phpize.in
	${REINPLACE_CMD} -e "/include_dir=/ s|php|php81|" \
		-e "/^ldflags=/ s|@PHP|-L${PREFIX}/lib/php81 @PHP|" \
		${WRKSRC}/scripts/php-config.in
	${REINPLACE_CMD} -e "s|darwin|darwin-disable|" \
		${WRKSRC}/sapi/cgi/config9.m4 \
		${WRKSRC}/sapi/cli/config.m4 \
		${WRKSRC}/sapi/fpm/config.m4

post-install-DEBUGGER-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/phpdbg81

post-patch-FPM-ON:
	${REINPLACE_CMD} -e "s|^;\(pid\)|\1|;s|^;\(pm\.[a-z_]*_servers\)|\1|" \
		${WRKSRC}/sapi/fpm/php-fpm.conf.in

post-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/etc/php81
	${RM} -r ${STAGEDIR}/var
	${RM} -r ${STAGEDIR}${PREFIX}/include/php81/include
	${INSTALL_DATA} ${WRKSRC}/php.ini-development \
		${WRKSRC}/php.ini-production \
		${WRKDIR}/php.conf ${STAGEDIR}${PREFIX}/etc/php81

post-build:
	${ECHO_CMD} "PHP_VER=81" > ${WRKDIR}/php.conf
	${ECHO_CMD} "PHP_VERSION=8.1.4" >> ${WRKDIR}/php.conf
	${ECHO_CMD} "PHP_SAPI=${PHP_SAPI}" >> ${WRKDIR}/php.conf
	${ECHO_CMD} "PHP_EXT_INC=hash json pcre spl" >> ${WRKDIR}/php.conf
	${SH} ${WRKSRC}/scripts/php-config --extension-dir | \
		${SED} -ne 's,^${PREFIX}/lib/php81/,PHP_EXT_DIR=,p'\
		>> ${WRKDIR}/php.conf

post-install-EMBED-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libphp.so
	${MV} ${STAGEDIR}${PREFIX}/lib/libphp.so \
		${STAGEDIR}${PREFIX}/lib/php81/

pre-configure:
	(cd ${WRKSRC} && ${SETENV} MAKE=${MAKE_CMD} ./buildconf --force)

post-install-CGI-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/php-cgi81

post-install-FPM-ON:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/sbin/php-fpm81

[FILE:679:descriptions/desc.single]
PHP is a widely-used open source general-purpose scripting language
that is especially suited for web development and can be embedded
into HTML. It is modular, and object-oriented. Much of its syntax
is borrowed from C, Java and Perl with a couple of unique PHP-specific
features thrown in.  The language is designed to allow web developers
to write dynamically generated pages quickly.

This package provides PHP version 7.3.x.  New feature added over
version 7.2.x include:

 * Flexible Heredoc and Nowdoc Syntax
 * PCRE2 Migration
 * Multiple MBString Improvements
 * LDAP Controls Support
 * Improved FPM Logging
 * Windows File Deletion Improvements
 * Several Deprecations


[FILE:95:distinfo]
05a8c0ac30008154fb38a305560543fc172ba79fb957084a99b8d3b10d5bdb4b     11700448 php-8.1.4.tar.xz


[FILE:6304:manifests/plist.single]
%%CGI-ON%%bin/php-cgi%%SUFFIX%%
%%CGI-ON%%share/man/man1/php-cgi%%SUFFIX%%.1.gz
%%CLI-ON%%bin/php%%SUFFIX%%
%%CLI-ON%%include/php%%SUFFIX%%/sapi/cli/cli.h
%%CLI-ON%%share/man/man1/php%%SUFFIX%%.1.gz
%%DEBUGGER-ON%%bin/phpdbg%%SUFFIX%%
%%DEBUGGER-ON%%share/man/man1/phpdbg%%SUFFIX%%.1.gz
%%EMBED-ON%%include/php%%SUFFIX%%/sapi/embed/php_embed.h
%%EMBED-ON%%lib/php%%SUFFIX%%/libphp.%%SHARED_OBJECT%%
%%FPM-ON%%@sample etc/php%%SUFFIX%%/php-fpm.conf.default etc/php%%SUFFIX%%/php-fpm.conf
%%FPM-ON%%@sample etc/php%%SUFFIX%%/php-fpm.d/www.conf.default etc/php%%SUFFIX%%/php-fpm.d/www.conf
%%FPM-ON%%sbin/php-fpm%%SUFFIX%%
%%FPM-ON%%share/man/man8/php-fpm%%SUFFIX%%.8.gz
%%FPM-ON%%share/php%%SUFFIX%%/fpm/status.html
bin/
 php-config%%SUFFIX%%
 phpize%%SUFFIX%%
etc/php%%SUFFIX%%/
 php.conf
 php.ini-development
 php.ini-production
include/php%%SUFFIX%%/TSRM/
 TSRM.h
 tsrm_win32.h
include/php%%SUFFIX%%/Zend/
 zend.h
 zend_API.h
 zend_alloc.h
 zend_alloc_sizes.h
 zend_arena.h
 zend_ast.h
 zend_attributes.h
 zend_attributes_arginfo.h
 zend_bitset.h
 zend_build.h
 zend_builtin_functions.h
 zend_builtin_functions_arginfo.h
 zend_closures.h
 zend_closures_arginfo.h
 zend_compile.h
 zend_config.h
 zend_config.w32.h
 zend_constants.h
 zend_cpuinfo.h
 zend_dtrace.h
 zend_enum.h
 zend_enum_arginfo.h
 zend_errors.h
 zend_exceptions.h
 zend_exceptions_arginfo.h
 zend_execute.h
 zend_extensions.h
 zend_fibers.h
 zend_fibers_arginfo.h
 zend_float.h
 zend_gc.h
 zend_gdb.h
 zend_generators.h
 zend_generators_arginfo.h
 zend_globals.h
 zend_globals_macros.h
 zend_hash.h
 zend_highlight.h
 zend_inheritance.h
 zend_ini.h
 zend_ini_parser.h
 zend_ini_scanner.h
 zend_ini_scanner_defs.h
 zend_interfaces.h
 zend_interfaces_arginfo.h
 zend_istdiostream.h
 zend_iterators.h
 zend_language_parser.h
 zend_language_scanner.h
 zend_language_scanner_defs.h
 zend_list.h
 zend_llist.h
 zend_long.h
 zend_map_ptr.h
 zend_modules.h
 zend_multibyte.h
 zend_multiply.h
 zend_object_handlers.h
 zend_objects.h
 zend_objects_API.h
 zend_observer.h
 zend_operators.h
 zend_portability.h
 zend_ptr_stack.h
 zend_range_check.h
 zend_signal.h
 zend_smart_str.h
 zend_smart_str_public.h
 zend_smart_string.h
 zend_smart_string_public.h
 zend_sort.h
 zend_stack.h
 zend_stream.h
 zend_string.h
 zend_strtod.h
 zend_strtod_int.h
 zend_system_id.h
 zend_type_info.h
 zend_types.h
 zend_variables.h
 zend_virtual_cwd.h
 zend_vm.h
 zend_vm_def.h
 zend_vm_execute.h
 zend_vm_handlers.h
 zend_vm_opcodes.h
 zend_vm_trace_handlers.h
 zend_vm_trace_lines.h
 zend_vm_trace_map.h
 zend_weakrefs.h
 zend_weakrefs_arginfo.h
include/php%%SUFFIX%%/Zend/Optimizer/
 zend_call_graph.h
 zend_cfg.h
 zend_dfg.h
 zend_dump.h
 zend_func_info.h
 zend_inference.h
 zend_optimizer.h
 zend_ssa.h
include/php%%SUFFIX%%/ext/date/php_date.h
include/php%%SUFFIX%%/ext/date/lib/
 timelib.h
 timelib_config.h
include/php%%SUFFIX%%/ext/hash/
 php_hash.h
 php_hash_adler32.h
 php_hash_crc32.h
 php_hash_fnv.h
 php_hash_gost.h
 php_hash_haval.h
 php_hash_joaat.h
 php_hash_md.h
 php_hash_murmur.h
 php_hash_ripemd.h
 php_hash_sha.h
 php_hash_sha3.h
 php_hash_snefru.h
 php_hash_tiger.h
 php_hash_whirlpool.h
 php_hash_xxhash.h
include/php%%SUFFIX%%/ext/json/
 php_json.h
 php_json_parser.h
 php_json_scanner.h
include/php%%SUFFIX%%/ext/libxml/php_libxml.h
include/php%%SUFFIX%%/ext/mysqlnd/
 config-win.h
 mysql_float_to_double.h
 mysqlnd.h
 mysqlnd_alloc.h
 mysqlnd_auth.h
 mysqlnd_block_alloc.h
 mysqlnd_charset.h
 mysqlnd_commands.h
 mysqlnd_connection.h
 mysqlnd_debug.h
 mysqlnd_enum_n_def.h
 mysqlnd_ext_plugin.h
 mysqlnd_libmysql_compat.h
 mysqlnd_plugin.h
 mysqlnd_portability.h
 mysqlnd_priv.h
 mysqlnd_protocol_frame_codec.h
 mysqlnd_ps.h
 mysqlnd_read_buffer.h
 mysqlnd_result.h
 mysqlnd_result_meta.h
 mysqlnd_reverse_api.h
 mysqlnd_statistics.h
 mysqlnd_structs.h
 mysqlnd_vio.h
 mysqlnd_wireprotocol.h
 php_mysqlnd.h
include/php%%SUFFIX%%/ext/pcre/php_pcre.h
include/php%%SUFFIX%%/ext/pcre/pcre2lib/
 config.h
 pcre2.h
 pcre2_internal.h
 pcre2_intmodedep.h
 pcre2_jit_neon_inc.h
 pcre2_jit_simd_inc.h
 pcre2_ucp.h
include/php%%SUFFIX%%/ext/spl/
 php_spl.h
 spl_array.h
 spl_directory.h
 spl_dllist.h
 spl_engine.h
 spl_exceptions.h
 spl_fixedarray.h
 spl_functions.h
 spl_heap.h
 spl_iterators.h
 spl_observer.h
include/php%%SUFFIX%%/ext/standard/
 base64.h
 basic_functions.h
 basic_functions_arginfo.h
 crc32.h
 crc32_x86.h
 credits.h
 credits_ext.h
 credits_sapi.h
 crypt_blowfish.h
 crypt_freesec.h
 css.h
 datetime.h
 dir_arginfo.h
 dl.h
 dl_arginfo.h
 exec.h
 file.h
 flock_compat.h
 fsock.h
 head.h
 hrtime.h
 html.h
 html_tables.h
 info.h
 md5.h
 pack.h
 pageinfo.h
 php_array.h
 php_assert.h
 php_browscap.h
 php_crypt.h
 php_crypt_r.h
 php_dir.h
 php_dns.h
 php_ext_syslog.h
 php_filestat.h
 php_fopen_wrappers.h
 php_http.h
 php_image.h
 php_incomplete_class.h
 php_lcg.h
 php_mail.h
 php_math.h
 php_mt_rand.h
 php_net.h
 php_password.h
 php_rand.h
 php_random.h
 php_smart_string.h
 php_smart_string_public.h
 php_standard.h
 php_string.h
 php_uuencode.h
 php_var.h
 php_versioning.h
 proc_open.h
 quot_print.h
 scanf.h
 sha1.h
 streamsfuncs.h
 url.h
 url_scanner_ex.h
 user_filters_arginfo.h
 winver.h
include/php%%SUFFIX%%/main/
 SAPI.h
 build-defs.h
 fastcgi.h
 fopen_wrappers.h
 http_status_codes.h
 php.h
 php_compat.h
 php_config.h
 php_content_types.h
 php_getopt.h
 php_globals.h
 php_ini.h
 php_main.h
 php_memory_streams.h
 php_network.h
 php_open_temporary_file.h
 php_output.h
 php_reentrancy.h
 php_scandir.h
 php_stdint.h
 php_streams.h
 php_syslog.h
 php_ticks.h
 php_variables.h
 php_version.h
 rfc1867.h
 snprintf.h
 spprintf.h
include/php%%SUFFIX%%/main/streams/
 php_stream_context.h
 php_stream_filter_api.h
 php_stream_glob_wrapper.h
 php_stream_mmap.h
 php_stream_plain_wrapper.h
 php_stream_transport.h
 php_stream_userspace.h
 php_streams_int.h
lib/php%%SUFFIX%%/build/
 Makefile.global
 ax_check_compile_flag.m4
 ax_gcc_func_attribute.m4
 config.guess
 config.sub
 gen_stub.php
 libtool.m4
 ltmain.sh
 php.m4
 php_cxx_compile_stdcxx.m4
 phpize.m4
 pkg.m4
 run-tests.php
 shtool
share/man/man1/
 php-config%%SUFFIX%%.1.gz
 phpize%%SUFFIX%%.1.gz
@postexec touch %D/include/php%%SUFFIX%%/ext/php_config.h
@postunexec [ -s %D/include/php%%SUFFIX%%/ext/php_config.h ] || rm %D/include/php%%SUFFIX%%/ext/php_config.h


[FILE:1188:patches/patch-build_Makefile.global]
--- build/Makefile.global.orig	2022-01-18 23:52:03 UTC
+++ build/Makefile.global
@@ -89,14 +89,14 @@ test: all
 	@if test ! -z "$(PHP_EXECUTABLE)" && test -x "$(PHP_EXECUTABLE)"; then \
 		INI_FILE=`$(PHP_EXECUTABLE) -d 'display_errors=stderr' -r 'echo php_ini_loaded_file();' 2> /dev/null`; \
 		if test "$$INI_FILE"; then \
-			$(EGREP) -h -v $(PHP_DEPRECATED_DIRECTIVES_REGEX) "$$INI_FILE" > $(top_builddir)/tmp-php.ini; \
+			$(EGREP) -h -v $(PHP_DEPRECATED_DIRECTIVES_REGEX) "$$INI_FILE" > $(top_builddir)/tmp-php.ini || :; \
 		else \
 			echo > $(top_builddir)/tmp-php.ini; \
 		fi; \
 		INI_SCANNED_PATH=`$(PHP_EXECUTABLE) -d 'display_errors=stderr' -r '$$a = explode(",\n", trim(php_ini_scanned_files())); echo $$a[0];' 2> /dev/null`; \
 		if test "$$INI_SCANNED_PATH"; then \
 			INI_SCANNED_PATH=`$(top_srcdir)/build/shtool path -d $$INI_SCANNED_PATH`; \
-			$(EGREP) -h -v $(PHP_DEPRECATED_DIRECTIVES_REGEX) "$$INI_SCANNED_PATH"/*.ini >> $(top_builddir)/tmp-php.ini; \
+			$(EGREP) -h -v $(PHP_DEPRECATED_DIRECTIVES_REGEX) "$$INI_SCANNED_PATH"/*.ini >> $(top_builddir)/tmp-php.ini || :; \
 		fi; \
 		TEST_PHP_EXECUTABLE=$(PHP_EXECUTABLE) \
 		TEST_PHP_SRCDIR=$(top_srcdir) \


[FILE:1145:patches/patch-configure.ac]
--- configure.ac.orig	2022-01-18 23:52:03 UTC
+++ configure.ac
@@ -55,6 +55,7 @@ AH_BOTTOM([
 
 #include <string.h>
 
+#include <ext/php_config.h>
 #endif /* PHP_CONFIG_H */
 ])
 
@@ -614,7 +615,7 @@ memmem \
 AX_FUNC_WHICH_GETHOSTBYNAME_R
 
 dnl Some systems (like OpenSolaris) do not have nanosleep in libc.
-PHP_CHECK_FUNC_LIB(nanosleep, rt)
+PHP_CHECK_FUNC(nanosleep, rt)
 
 dnl Haiku does not have network api in libc.
 PHP_CHECK_FUNC_LIB(setsockopt, network)
@@ -1362,7 +1363,7 @@ EXPANDED_SYSCONFDIR=`eval echo $sysconfd
 EXPANDED_DATADIR=$datadir
 EXPANDED_PHP_CONFIG_FILE_PATH=`eval echo "$PHP_CONFIG_FILE_PATH"`
 EXPANDED_PHP_CONFIG_FILE_SCAN_DIR=`eval echo "$PHP_CONFIG_FILE_SCAN_DIR"`
-INCLUDE_PATH=.:$EXPANDED_PEAR_INSTALLDIR
+INCLUDE_PATH=.:${prefix}/share/pear
 
 exec_prefix=$old_exec_prefix
 libdir=$old_libdir
@@ -1581,7 +1582,7 @@ PHP_SUBST(all_targets)
 PHP_SUBST(install_targets)
 PHP_SUBST(install_binary_targets)
 
-PHP_INSTALL_HEADERS([Zend/ TSRM/ include/ main/ main/streams/])
+PHP_INSTALL_HEADERS([Zend/ TSRM/ main/ main/streams/])
 PHP_INSTALL_HEADERS([Zend/Optimizer], [ \
     zend_call_graph.h \
     zend_cfg.h \


[FILE:428:patches/patch-sapi_apache2handler_config.m4]
--- sapi/apache2handler/config.m4.orig	2022-01-18 23:52:03 UTC
+++ sapi/apache2handler/config.m4
@@ -64,7 +64,7 @@ if test "$PHP_APXS2" != "no"; then
   fi
 
   APXS_LIBEXECDIR='$(INSTALL_ROOT)'`$APXS -q LIBEXECDIR`
-  if test -z `$APXS -q SYSCONFDIR`; then
+  if true; then
     INSTALL_IT="\$(mkinstalldirs) '$APXS_LIBEXECDIR' && \
                  $APXS -S LIBEXECDIR='$APXS_LIBEXECDIR' \
                        -i -n php"


[FILE:304:patches/patch-sapi_fpm_config.m4]
--- sapi/fpm/config.m4.orig	2022-01-18 23:52:03 UTC
+++ sapi/fpm/config.m4
@@ -315,7 +315,7 @@ AC_DEFUN([AC_FPM_LQ],
     AC_MSG_RESULT([no])
   ])
 
-  if test "$have_lq" = "tcp_info"; then
+  if test "$have_lq" = "so_listenq"; then
     AC_DEFINE([HAVE_LQ_TCP_INFO], 1, [do we have TCP_INFO?])
   fi
 


[FILE:954:patches/patch-sapi_fpm_www.conf.in]
--- sapi/fpm/www.conf.in.orig	2022-01-18 23:52:03 UTC
+++ sapi/fpm/www.conf.in
@@ -27,10 +27,14 @@ group = @php_fpm_group@
 ; Valid syntaxes are:
 ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
 ;                            a specific port;
+;   '0.0.0.0:port'         - to listen on a TCP socket to all IPv4 addresses on
+;                            a specific port;
 ;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
 ;                            a specific port;
 ;   'port'                 - to listen on a TCP socket to all addresses
 ;                            (IPv6 and IPv4-mapped) on a specific port;
+;                            Note: IPv4-mapped addresses are disabled by-default in
+;                                  FreeBSD for security reasons;
 ;   '/path/to/unix/socket' - to listen on a unix socket.
 ; Note: This value is mandatory.
 listen = 127.0.0.1:9000


[FILE:1394:files/php81-fpm.in]
#!/bin/sh
#

# PROVIDE: php%%SUFFIX%%-fpm
# REQUIRE: LOGIN
# KEYWORD: shutdown

#
# Add the following line to /etc/rc.conf to enable php-fpm:
# php%%SUFFIX%%_fpm_enable="YES"
#

. /etc/rc.subr

name="php%%SUFFIX%%_fpm"
rcvar=php%%SUFFIX%%_fpm_enable

start_precmd="php%%SUFFIX%%_fpm_prestart"
restart_precmd="php%%SUFFIX%%_fpm_checkconfig"
reload_precmd="php%%SUFFIX%%_fpm_checkconfig"
configtest_cmd="php%%SUFFIX%%_fpm_checkconfig"

load_rc_config "$name"

: ${php%%SUFFIX%%_fpm_enable="NO"}
: ${php%%SUFFIX%%_fpm_umask=""}

extra_commands="reload configtest logrotate"

command="%%PREFIX%%/sbin/php-fpm"
pidfile="/var/run/php-fpm.pid"
sig_stop="QUIT"
sig_reload="USR2"
logrotate_cmd="php%%SUFFIX%%_fpm_logrotate"

required_files="%%PREFIX%%/etc/php-fpm.conf"

php%%SUFFIX%%_fpm_logrotate() {
        if [ -z "$rc_pid" ]; then
                _run_rc_notrunning
                return 1
        fi
        echo "Rotating logs $name."
        kill -USR1 $rc_pid
}

php%%SUFFIX%%_fpm_checkconfig()
{
        echo "Performing sanity check on php-fpm configuration:"
        eval ${command} -t
}

php%%SUFFIX%%_fpm_prestart()
{
	php%%SUFFIX%%_fpm_checkconfig
	checkconfig=$?
	if [ $checkconfig -ne 0  ]; then
		return $checkconfig
	fi

	if [ ! -z "$php%%SUFFIX%%_fpm_umask"  ]; then
		echo "Setting umask to: ${php%%SUFFIX%%_fpm_umask}"
		umask $php%%SUFFIX%%_fpm_umask
	fi
}

run_rc_command "$1"

