# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		fftw
VERSION=		3.3.8
KEYWORDS=		math
VARIANTS=		standard float long quad
SDESC[quad]=		Fast Fourier Transform library (quad precision)
SDESC[float]=		Fast Fourier Transform library (float)
SDESC[standard]=	Fast Fourier Transform library (double)
SDESC[long]=		Fast Fourier Transform library (long double)
HOMEPAGE=		http://www.fftw.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.fftw.org/
DISTFILE[1]=		fftw-3.3.8.tar.gz:main
DF_INDEX=		1
SPKGS[quad]=		single
SPKGS[float]=		single
SPKGS[standard]=	single
SPKGS[long]=		single

OPTIONS_AVAILABLE=	FLOAT LONG QUAD FLAV
OPTIONS_STANDARD=	none
VOPTS[quad]=		FLOAT=OFF LONG=OFF QUAD=ON FLAV=ON
VOPTS[float]=		FLOAT=ON LONG=OFF QUAD=OFF FLAV=ON
VOPTS[long]=		FLOAT=OFF LONG=ON QUAD=OFF FLAV=ON

USES=			gmake libtool makeinfo perl:build pkgconfig
			fortran:single

FPC_EQUIVALENT=		math/fftw3
INFO_SUBDIR=		.

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-shared
			--enable-threads
			--enable-openmp

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		3.5.8
PLIST_SUB=		OPENMPI="@comment "

[FLAV].DESCRIPTION=			Enabled for non-standard variants
[FLAV].INFO_OFF=			single:fftw3

[QUAD].DESCRIPTION=			Build quad precision version of fftw
[QUAD].CONFIGURE_ARGS_ON=		--enable-quad-precision

[FLOAT].DESCRIPTION=			Build float version of fftw
[FLOAT].CONFIGURE_ARGS_ON=		--enable-float

[LONG].DESCRIPTION=			Build long double version of fftw
[LONG].CONFIGURE_ARGS_ON=		--enable-long-double

post-patch:
	${REINPLACE_CMD} -e 's|/etc/fftw|${PREFIX}/etc/fftw|' \
		${WRKSRC}/Makefile.in \
		${WRKSRC}/api/import-system-wisdom.c \
		${WRKSRC}/doc/fftw3* \
		${WRKSRC}/tools/*

post-patch-FLAV-ON:
	${REINPLACE_CMD} -E \
	-e '/(DIST_COMMON|bin_SCRIPTS|BUILT_SOURCES|EXTRA_DIST) =/,\
	/[^\]$$/s/[^[:blank:]]*fftw-wisdom-to-conf[^[:blank:]]*//' \
		${WRKSRC}/tools/Makefile.in

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.${LIBEXT}

post-install-FLAV-ON:
	${RM} ${STAGEDIR}${PREFIX}/include/*
	${RM} -r ${STAGEDIR}${PREFIX}/share/info

[FILE:548:descriptions/desc.single]
FFTW is a C subroutine library for computing the Discrete Fourier Transform
(DFT) in one or more dimensions, of both real and complex data, and of
arbitrary input size. We believe that FFTW, which is free software, should
become the FFT library of choice for most applications. Our benchmarks,
performed on a variety of platforms, show that FFTW's performance is
typically superior to that of other publicly available FFT software.
Moreover, FFTW's performance is portable: the program will perform well on
most architectures without modification.


[FILE:96:distinfo]
6113262f6e92c5bd474f2875fa1b01054c4ad5040f6b0da7c03c98821d9ae303      4110137 fftw-3.3.8.tar.gz


[FILE:530:manifests/plist.single.standard]
bin/
 fftw-wisdom
 fftw-wisdom-to-conf
include/
 fftw3.f
 fftw3.f03
 fftw3.h
 fftw3l.f03
 fftw3q.f03
lib/
 libfftw3.a
 libfftw3.so
 libfftw3.so.%%SOMAJOR%%
 libfftw3.so.%%SOVERSION%%
 libfftw3_omp.a
 libfftw3_omp.so
 libfftw3_omp.so.%%SOMAJOR%%
 libfftw3_omp.so.%%SOVERSION%%
 libfftw3_threads.a
 libfftw3_threads.so
 libfftw3_threads.so.%%SOMAJOR%%
 libfftw3_threads.so.%%SOVERSION%%
lib/cmake/fftw3/
 FFTW3Config.cmake
 FFTW3ConfigVersion.cmake
lib/pkgconfig/fftw3.pc
share/man/man1/
 fftw-wisdom-to-conf.1.gz
 fftw-wisdom.1.gz


[FILE:434:manifests/plist.single.float]
bin/fftwf-wisdom
lib/
 libfftw3f.a
 libfftw3f.so
 libfftw3f.so.%%SOMAJOR%%
 libfftw3f.so.%%SOVERSION%%
 libfftw3f_omp.a
 libfftw3f_omp.so
 libfftw3f_omp.so.%%SOMAJOR%%
 libfftw3f_omp.so.%%SOVERSION%%
 libfftw3f_threads.a
 libfftw3f_threads.so
 libfftw3f_threads.so.%%SOMAJOR%%
 libfftw3f_threads.so.%%SOVERSION%%
lib/cmake/fftw3/
 FFTW3fConfig.cmake
 FFTW3fConfigVersion.cmake
lib/pkgconfig/fftw3f.pc
share/man/man1/fftwf-wisdom.1.gz


[FILE:434:manifests/plist.single.long]
bin/fftwl-wisdom
lib/
 libfftw3l.a
 libfftw3l.so
 libfftw3l.so.%%SOMAJOR%%
 libfftw3l.so.%%SOVERSION%%
 libfftw3l_omp.a
 libfftw3l_omp.so
 libfftw3l_omp.so.%%SOMAJOR%%
 libfftw3l_omp.so.%%SOVERSION%%
 libfftw3l_threads.a
 libfftw3l_threads.so
 libfftw3l_threads.so.%%SOMAJOR%%
 libfftw3l_threads.so.%%SOVERSION%%
lib/cmake/fftw3/
 FFTW3lConfig.cmake
 FFTW3lConfigVersion.cmake
lib/pkgconfig/fftw3l.pc
share/man/man1/fftwl-wisdom.1.gz


[FILE:434:manifests/plist.single.quad]
bin/fftwq-wisdom
lib/
 libfftw3q.a
 libfftw3q.so
 libfftw3q.so.%%SOMAJOR%%
 libfftw3q.so.%%SOVERSION%%
 libfftw3q_omp.a
 libfftw3q_omp.so
 libfftw3q_omp.so.%%SOMAJOR%%
 libfftw3q_omp.so.%%SOVERSION%%
 libfftw3q_threads.a
 libfftw3q_threads.so
 libfftw3q_threads.so.%%SOMAJOR%%
 libfftw3q_threads.so.%%SOVERSION%%
lib/cmake/fftw3/
 FFTW3qConfig.cmake
 FFTW3qConfigVersion.cmake
lib/pkgconfig/fftw3q.pc
share/man/man1/fftwq-wisdom.1.gz


[FILE:289:patches/patch-simd-support_taint.c]
--- simd-support/taint.c.orig	2017-10-29 12:14:40 UTC
+++ simd-support/taint.c
@@ -40,4 +40,8 @@ R *X(join_taint)(R *p1, R *p2)
      A(UNTAINT(p1) == UNTAINT(p2));
      return (R *)(PTRINT(p1) | PTRINT(p2));
 }
+#else
+# ifdef __sun__
+int Solaris_requires_a_symbol= 0;
+# endif
 #endif

