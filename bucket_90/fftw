# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		fftw
VERSION=		3.3.10
REVISION=		1
KEYWORDS=		math
VARIANTS=		standard float long quad
SDESC[quad]=		Fast Fourier Transform library (quad precision)
SDESC[float]=		Fast Fourier Transform library (float)
SDESC[standard]=	Fast Fourier Transform library (double)
SDESC[long]=		Fast Fourier Transform library (long double)
HOMEPAGE=		http://www.fftw.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.fftw.org/
DISTFILE[1]=		fftw-3.3.10.tar.gz:main
DF_INDEX=		1
SPKGS[quad]=		single
SPKGS[float]=		single
SPKGS[standard]=	single
SPKGS[long]=		single

OPTIONS_AVAILABLE=	FLOAT LONG QUAD FLAV
OPTIONS_STANDARD=	none
VOPTS[quad]=		FLOAT=OFF LONG=OFF QUAD=ON FLAV=ON
VOPTS[float]=		FLOAT=ON LONG=OFF QUAD=OFF FLAV=ON
VOPTS[long]=		FLOAT=OFF LONG=ON QUAD=OFF FLAV=ON

USES=			cmake makeinfo perl:build pkgconfig fortran:single

LICENSE=		GPLv2+:single
LICENSE_TERMS=		single:{{WRKSRC}}/COPYRIGHT
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		math/fftw3
INFO_SUBDIR=		.

SOVERSION=		3.6.9
PLIST_SUB=		OPENMPI="@comment "
			OMP={{VAR1}}

CMAKE_ARGS=		-DBUILD_SHARED_LIBS:BOOL=ON
			-DBUILD_TESTS:BOOL=ON
			-DENABLE_OPENMP:BOOL=ON
			-DENABLE_THREADS:BOOL=ON
VAR_OPSYS[dragonfly]=	VAR1="@comment "

[FLAV].DESCRIPTION=			Enabled for non-standard variants
[FLAV].INFO_OFF=			single:fftw3

[QUAD].DESCRIPTION=			Build quad precision version of fftw
[QUAD].CMAKE_ARGS_ON=			-DENABLE_QUAD_PRECISION:BOOL=ON

[FLOAT].DESCRIPTION=			Build float version of fftw
[FLOAT].CMAKE_ARGS_ON=			-DENABLE_FLOAT:BOOL=ON

[LONG].DESCRIPTION=			Build long double version of fftw
[LONG].CMAKE_ARGS_ON=			-DENABLE_LONG_DOUBLE:BOOL=ON

post-patch:
	${REINPLACE_CMD} -e 's|/etc/fftw|${PREFIX}/etc/fftw|' \
		${WRKSRC}/api/import-system-wisdom.c \
		${WRKSRC}/doc/fftw3* \
		${WRKSRC}/tools/*

post-patch-QUAD-ON:
	${REINPLACE_CMD} -e '/target_link_libraries/ s| m)| m quadmath)|' \
		${WRKSRC}/CMakeLists.txt

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lib*.${LIBEXT}

post-install-FLAV-ON:
	${RM} ${STAGEDIR}${PREFIX}/include/*
	${RM} -r ${STAGEDIR}${PREFIX}/share/info

[FILE:548:descriptions/desc.single]
FFTW is a C subroutine library for computing the Discrete Fourier Transform
(DFT) in one or more dimensions, of both real and complex data, and of
arbitrary input size. We believe that FFTW, which is free software, should
become the FFT library of choice for most applications. Our benchmarks,
performed on a variety of platforms, show that FFTW's performance is
typically superior to that of other publicly available FFT software.
Moreover, FFTW's performance is portable: the program will perform well on
most architectures without modification.


[FILE:97:distinfo]
56c932549852cddcfafdab3820b0200c7742675be92179e59e6215b340e26467      4144100 fftw-3.3.10.tar.gz


[FILE:457:manifests/plist.single.standard]
%%OMP%%lib/
 libfftw3_omp.so
 libfftw3_omp.so.%%SOMAJOR%%
 libfftw3_omp.so.%%SOVERSION%%
include/
 fftw3.f
 fftw3.f03
 fftw3.h
 fftw3l.f03
 fftw3q.f03
lib/
 libfftw3.so
 libfftw3.so.%%SOMAJOR%%
 libfftw3.so.%%SOVERSION%%
 libfftw3_threads.so
 libfftw3_threads.so.%%SOMAJOR%%
 libfftw3_threads.so.%%SOVERSION%%
lib/cmake/fftw3/
 FFTW3Config.cmake
 FFTW3ConfigVersion.cmake
 FFTW3LibraryDepends-release.cmake
 FFTW3LibraryDepends.cmake
lib/pkgconfig/fftw3.pc


[FILE:421:manifests/plist.single.float]
%%OMP%%lib/
 libfftw3f_omp.so
 libfftw3f_omp.so.%%SOMAJOR%%
 libfftw3f_omp.so.%%SOVERSION%%
lib/
 libfftw3f.so
 libfftw3f.so.%%SOMAJOR%%
 libfftw3f.so.%%SOVERSION%%
 libfftw3f_threads.so
 libfftw3f_threads.so.%%SOMAJOR%%
 libfftw3f_threads.so.%%SOVERSION%%
lib/cmake/fftw3f/
 FFTW3LibraryDepends-%%CMAKE_BUILD_TYPE%%.cmake
 FFTW3LibraryDepends.cmake
 FFTW3fConfig.cmake
 FFTW3fConfigVersion.cmake
lib/pkgconfig/fftw3f.pc


[FILE:421:manifests/plist.single.long]
%%OMP%%lib/
 libfftw3l_omp.so
 libfftw3l_omp.so.%%SOMAJOR%%
 libfftw3l_omp.so.%%SOVERSION%%
lib/
 libfftw3l.so
 libfftw3l.so.%%SOMAJOR%%
 libfftw3l.so.%%SOVERSION%%
 libfftw3l_threads.so
 libfftw3l_threads.so.%%SOMAJOR%%
 libfftw3l_threads.so.%%SOVERSION%%
lib/cmake/fftw3l/
 FFTW3LibraryDepends-%%CMAKE_BUILD_TYPE%%.cmake
 FFTW3LibraryDepends.cmake
 FFTW3lConfig.cmake
 FFTW3lConfigVersion.cmake
lib/pkgconfig/fftw3l.pc


[FILE:408:manifests/plist.single.quad]
%%OMP%%lib/
 libfftw3q_omp.so
 libfftw3q_omp.so.%%SOMAJOR%%
 libfftw3q_omp.so.%%SOVERSION%%
lib/
 libfftw3q.so
 libfftw3q.so.%%SOMAJOR%%
 libfftw3q.so.%%SOVERSION%%
 libfftw3q_threads.so
 libfftw3q_threads.so.%%SOMAJOR%%
 libfftw3q_threads.so.%%SOVERSION%%
lib/cmake/fftw3q/
 FFTW3LibraryDepends-release.cmake
 FFTW3LibraryDepends.cmake
 FFTW3qConfig.cmake
 FFTW3qConfigVersion.cmake
lib/pkgconfig/fftw3q.pc


[FILE:289:patches/patch-simd-support_taint.c]
--- simd-support/taint.c.orig	2020-12-10 12:02:44 UTC
+++ simd-support/taint.c
@@ -40,4 +40,8 @@ R *X(join_taint)(R *p1, R *p2)
      A(UNTAINT(p1) == UNTAINT(p2));
      return (R *)(PTRINT(p1) | PTRINT(p2));
 }
+#else
+# ifdef __sun__
+int Solaris_requires_a_symbol= 0;
+# endif
 #endif

