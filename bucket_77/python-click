# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-click
VERSION=		7.1.2
KEYWORDS=		python
VARIANTS=		py38 py37
SDESC[py37]=		Optparse wrapper for CLI capabilities (PY37)
SDESC[py38]=		Optparse wrapper for CLI capabilities (PY38)
HOMEPAGE=		https://palletsprojects.com/p/click/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/d2/3d/fa76db83bf75c4f8d338c2fd15c8d33fdd7ad23a9b5e57eb6c5de26b430e
DISTFILE[1]=		click-7.1.2-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py37]=		single
SPKGS[py38]=		single

OPTIONS_AVAILABLE=	PY38 PY37
OPTIONS_STANDARD=	none
VOPTS[py37]=		PY38=OFF PY37=ON
VOPTS[py38]=		PY38=ON PY37=OFF

DISTNAME=		click-7.1.2.dist-info

GENERATED=		yes

[PY37].BUILD_DEPENDS_ON=		python-pip:single:py37
[PY37].USES_ON=				python:py37,wheel

[PY38].BUILD_DEPENDS_ON=		python-pip:single:py38
[PY38].USES_ON=				python:py38,wheel

[FILE:2019:descriptions/desc.single]
\$ click\_
==========

Click is a Python package for creating beautiful command line interfaces
in a composable way with as little code as necessary. It's the "Command
Line Interface Creation Kit". It's highly configurable but comes with
sensible defaults out of the box.

It aims to make the process of writing command line tools quick and fun
while also preventing any frustration caused by the inability to
implement an intended CLI API.

Click in three points:

-   Arbitrary nesting of commands
-   Automatic help page generation
-   Supports lazy loading of subcommands at runtime

Installing
----------

Install and update using `pip`_:

.. code-block:: text

    $ pip install -U click

.. _pip: https://pip.pypa.io/en/stable/quickstart/

A Simple Example
----------------

.. code-block:: python

    import click

    @click.command()
    @click.option("--count", default=1, help="Number of greetings.")
    @click.option("--name", prompt="Your name", help="The person to
greet.")
    def hello(count, name):
        """Simple program that greets NAME for a total of COUNT times."""
        for _ in range(count):
            click.echo(f"Hello, {name}!")

    if __name__ == '__main__':
        hello()

.. code-block:: text

    $ python hello.py --count=3
    Your name: Click
    Hello, Click!
    Hello, Click!
    Hello, Click!

Donate
------

The Pallets organization develops and supports Click and other popular
packages. In order to grow the community of contributors and users, and
allow the maintainers to devote more time to the projects, `please
donate today`_.

.. _please donate today: https://palletsprojects.com/donate

Links
-----

-   Website: https://palletsprojects.com/p/click/
-   Documentation: https://click.palletsprojects.com/
-   Releases: https://pypi.org/project/click/
-   Code: https://github.com/pallets/click
-   Issue tracker: https://github.com/pallets/click/issues
-   Test status: https://dev.azure.com/pallets/click/_build
-   Official chat: https://discord.gg/t6rrQZH


[FILE:111:distinfo]
dacca89f4bfadd5de3d7489b7c8a566eee0d3676333fbb50030263894c38c0dc        82780 click-7.1.2-py2.py3-none-any.whl

