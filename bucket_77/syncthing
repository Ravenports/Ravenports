# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		syncthing
VERSION=		1.26.0
KEYWORDS=		net
VARIANTS=		standard
SDESC[standard]=	Open Source Continuous File Synchronization
HOMEPAGE=		https://syncthing.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main qtls quic
SITES[main]=		https://github.com/syncthing/syncthing/releases/download/v1.26.0/
DISTFILE[1]=		syncthing-source-v1.26.0.tar.gz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		golang:single:standard

USERS=			syncthing
GROUPS=			syncthing
USERGROUP_SPKG=		single

USES=			cpe

EXTRACT_DIRTY=		1

LICENSE=		MPL:single
LICENSE_FILE=		MPL:{{WRKSRC}}/syncthing/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		net/syncthing

MAKE_ENV=		CGO_ENABLED=0
			GOFLAGS="-mod=vendor"

RC_SUBR=		syncthing:single
			syncthing-discosrv:single
			syncthing-relaysrv:single
			syncthing-relaypoolsrv:single

do-build:
	cd ${WRKSRC}/syncthing &&\
	${SETENV} ${MAKE_ENV} go run build.go -version v1.26.0 -no-upgrade build &&\
	${SETENV} ${MAKE_ENV} go run build.go -version v1.26.0 -no-upgrade build stdiscosrv &&\
	${SETENV} ${MAKE_ENV} go run build.go -version v1.26.0 -no-upgrade build strelaysrv &&\
	${SETENV} ${MAKE_ENV} go run build.go -version v1.26.0 -no-upgrade build strelaypoolsrv

do-install:
	cd ${WRKSRC}/syncthing && ${INSTALL_PROGRAM} \
		syncthing stdiscosrv strelaysrv strelaypoolsrv \
		${STAGEDIR}${PREFIX}/bin

[FILE:260:descriptions/desc.single]
Syncthing replaces proprietary sync and cloud services with something
open, trustworthy and decentralized. Your data is yours alone and you
deserve to choose where it is stored, if it is shared with some third
party and how it's transmitted over the Internet.


[FILE:110:distinfo]
bfb4ce711b09c15671b3e43d02c7ae20b5a380483cf0a7bcb414222d827d4e30     15020375 syncthing-source-v1.26.0.tar.gz


[FILE:56:manifests/plist.single]
bin/
 stdiscosrv
 strelaypoolsrv
 strelaysrv
 syncthing


[FILE:37:files/special.mk]
PREPEND_PATH=	${LOCALBASE}/go119/bin


[FILE:2776:files/syncthing-discosrv.in]
#!/bin/sh
#
# PROVIDE: syncthingdiscosrv
# REQUIRE: DAEMON
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# syncthingdiscosrv_enable (bool):      Set to NO by default.
#                                       Set it to YES to enable syncthing-discosrv.
# syncthingdiscosrv_user (user):        Set user to run syncthing-discosrv.
#                                       Default is "syncthing".
# syncthingdiscosrv_group (group):      Set group to run syncthing-discosrv.
#                                       Default is "syncthing".
# syncthingdiscosrv_dir (dir):          Set dir to run syncthing-discosrv in.
#                                       Default is "/var/db/syncthing-discosrv".
# syncthingdiscosrv_log_file (path):    Syncthing log file
#                                       Default: /var/log/syncthing-discosrv.log
# syncthingdiscosrv_key (file):         Set key file to use
#                                       Default is "${syncthingdiscosrv_dir}/syncthing.key".
# syncthingdiscosrv_cert (file):        Set cert file to use
#                                       Default is "${syncthingdiscosrv_dir}/syncthing.cert".
# syncthingdiscosrv_args (string):      Extra args to pass to syncthing-discosrv
#                                       Default is ""

. /etc/rc.subr

name=syncthingdiscosrv
rcvar=syncthingdiscosrv_enable

load_rc_config $name

: ${syncthingdiscosrv_enable:="NO"}
: ${syncthingdiscosrv_user:="syncthing"}
: ${syncthingdiscosrv_group:="syncthing"}
: ${syncthingdiscosrv_dir:="/var/db/syncthing-discosrv"}
: ${syncthingdiscosrv_log_file=/var/log/syncthing-discosrv.log}
: ${syncthingdiscosrv_key:="${syncthingdiscosrv_dir}/syncthing.key"}
: ${syncthingdiscosrv_cert:="${syncthingdiscosrv_dir}/syncthing.cert"}

export STNORESTART=true

pidfile=/var/run/syncthingdiscosrv.pid
procname="%%PREFIX%%/bin/stdiscosrv"
command="/usr/sbin/daemon"
command_args="-p ${pidfile} ${procname} -key ${syncthingdiscosrv_key} -cert ${syncthingdiscosrv_cert} ${syncthingdiscosrv_args} >> ${syncthingdiscosrv_log_file}"
syncthingdiscosrv_chdir=${syncthingdiscosrv_dir}

start_precmd=syncthingdiscosrv_startprecmd

syncthingdiscosrv_startprecmd()
{
        if [ ! -e ${pidfile} ]; then
                install -o ${syncthingdiscosrv_user} -g ${syncthingdiscosrv_group} /dev/null ${pidfile};
        fi

        if [ ! -d ${syncthingdiscosrv_dir} ]; then
                install -d -o ${syncthingdiscosrv_user} -g ${syncthingdiscosrv_group} ${syncthingdiscosrv_dir}
        fi
        if [ ! -e ${syncthingdiscosrv_log_file} ]; then
                install -o ${syncthingdiscosrv_user} -g ${syncthingdiscosrv_group} /dev/null ${syncthingdiscosrv_log_file};
        fi
}

run_rc_command "$1"


[FILE:2440:files/syncthing-relaypoolsrv.in]
#!/bin/sh
#
# PROVIDE: syncthingrelaypoolsrv
# REQUIRE: DAEMON
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# syncthingrelaypoolsrv_enable (bool):      Set to NO by default.
#                                           Set it to YES to enable syncthing-relaypoolsrv.
# syncthingrelaypoolsrv_user (user):        Set user to run syncthing-relaypoolsrv.
#                                           Default is "syncthing".
# syncthingrelaypoolsrv_group (group):      Set group to run syncthing-relaypoolsrv.
#                                           Default is "syncthing".
# syncthingrelaypoolsrv_dir (dir):          Set dir to run syncthing-relaypoolsrv in.
#                                           Default is "/var/db/syncthing-relaypoolsrv".
# syncthingrelaypoolsrv_log_file (path):    Syncthing log file
#                                           Default: /var/log/syncthing-relaypoolsrv.log
# syncthingrelaypoolsrv_args (string):      Extra args to pass to syncthing-relaypoolsrv
#                                           Default is ""

. /etc/rc.subr

name=syncthingrelaypoolsrv
rcvar=syncthingrelaypoolsrv_enable

load_rc_config $name

: ${syncthingrelaypoolsrv_enable:="NO"}
: ${syncthingrelaypoolsrv_user:="syncthing"}
: ${syncthingrelaypoolsrv_group:="syncthing"}
: ${syncthingrelaypoolsrv_dir:="/var/db/syncthing-relaypoolsrv"}
: ${syncthingrelaypoolsrv_log_file=/var/log/syncthing-relaypoolsrv.log}

export STNORESTART=true

pidfile=/var/run/syncthingrelaypoolsrv.pid
procname="%%PREFIX%%/bin/strelaypoolsrv"
command="/usr/sbin/daemon"
command_args="-c -p ${pidfile} ${procname} -keys ${syncthingrelaypoolsrv_dir} ${syncthingrelaypoolsrv_args} >> ${syncthingrelaypoolsrv_log_file} 2>&1"

start_precmd=syncthingrelaypoolsrv_startprecmd

syncthingrelaypoolsrv_startprecmd()
{
        if [ ! -e ${pidfile} ]; then
                install -o ${syncthingrelaypoolsrv_user} -g ${syncthingrelaypoolsrv_group} /dev/null ${pidfile};
        fi

        if [ ! -d ${syncthingrelaypoolsrv_dir} ]; then
                install -d -o ${syncthingrelaypoolsrv_user} -g ${syncthingrelaypoolsrv_group} ${syncthingrelaypoolsrv_dir}
        fi
        if [ ! -e ${syncthingrelaypoolsrv_log_file} ]; then
                install -o ${syncthingrelaypoolsrv_user} -g ${syncthingrelaypoolsrv_group} /dev/null ${syncthingrelaypoolsrv_log_file};
        fi
}

run_rc_command "$1"


[FILE:2564:files/syncthing-relaysrv.in]
#!/bin/sh
#
# PROVIDE: syncthingrelaysrv
# REQUIRE: DAEMON
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# syncthingrelaysrv_enable (bool):      Set to NO by default.
#                                       Set it to YES to enable syncthing-relaysrv.
# syncthingrelaysrv_user (user):        Set user to run syncthing-relaysrv.
#                                       Default is "syncthing".
# syncthingrelaysrv_group (group):      Set group to run syncthing-relaysrv.
#                                       Default is "syncthing".
# syncthingrelaysrv_dir (dir):          Set dir to run syncthing-relaysrv in.
#                                       Default is "/var/db/syncthing-relaysrv".
# syncthingrelaysrv_log_file (path):    Syncthing log file
#                                       Default: /var/log/syncthing-relaysrv.log
# syncthingrelaysrv_key (file):         Set key file to use
#                                       Default is "${syncthingrelaysrv_dir}/syncthing.key".
# syncthingrelaysrv_cert (file):        Set cert file to use
#                                       Default is "${syncthingrelaysrv_dir}/syncthing.cert".
# syncthingrelaysrv_args (string):      Extra args to pass to syncthing-relaysrv
#                                       Default is ""

. /etc/rc.subr

name=syncthingrelaysrv
rcvar=syncthingrelaysrv_enable

load_rc_config $name

: ${syncthingrelaysrv_enable:="NO"}
: ${syncthingrelaysrv_user:="syncthing"}
: ${syncthingrelaysrv_group:="syncthing"}
: ${syncthingrelaysrv_dir:="/var/db/syncthing-relaysrv"}
: ${syncthingrelaysrv_log_file=/var/log/syncthing-relaysrv.log}

export STNORESTART=true

pidfile=/var/run/syncthingrelaysrv.pid
procname="%%PREFIX%%/bin/strelaysrv"
command="/usr/sbin/daemon"
command_args="-c -p ${pidfile} ${procname} -keys ${syncthingrelaysrv_dir} ${syncthingrelaysrv_args} >> ${syncthingrelaysrv_log_file} 2>&1"

start_precmd=syncthingrelaysrv_startprecmd

syncthingrelaysrv_startprecmd()
{
        if [ ! -e ${pidfile} ]; then
                install -o ${syncthingrelaysrv_user} -g ${syncthingrelaysrv_group} /dev/null ${pidfile};
        fi

        if [ ! -d ${syncthingrelaysrv_dir} ]; then
                install -d -o ${syncthingrelaysrv_user} -g ${syncthingrelaysrv_group} ${syncthingrelaysrv_dir}
        fi
        if [ ! -e ${syncthingrelaysrv_log_file} ]; then
                install -o ${syncthingrelaysrv_user} -g ${syncthingrelaysrv_group} /dev/null ${syncthingrelaysrv_log_file};
        fi
}

run_rc_command "$1"


[FILE:1868:files/syncthing.in]
#!/bin/sh
#
# PROVIDE: syncthing
# REQUIRE: DAEMON
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# syncthing_enable (bool):	Set to NO by default.
#				Set it to YES to enable syncthing.
# syncthing_home (path):        Directory where syncthing configuration
#                               data is stored.
#                               Default: %%PREFIX%%/etc/syncthing
# syncthing_log_file (path):    Syncthing log file
#                               Default: /var/log/syncthing.log
# syncthing_user (user):        Set user to run syncthing.
#                               Default is "syncthing".
# syncthing_group (group):      Set group to run syncthing.
#                               Default is "syncthing".

. /etc/rc.subr

name=syncthing
rcvar=syncthing_enable

load_rc_config $name

: ${syncthing_enable:="NO"}
: ${syncthing_home=%%PREFIX%%/etc/syncthing}
: ${syncthing_log_file=/var/log/syncthing.log}
: ${syncthing_user:="syncthing"}
: ${syncthing_group=${syncthing_group:-$syncthing_user}}

pidfile=/var/run/syncthing.pid
procname="%%PREFIX%%/bin/syncthing"
command="/usr/sbin/daemon"
command_args="-cf -p ${pidfile} ${procname} ${syncthing_home:+-home=${syncthing_home}} ${syncthing_log_file:+-logfile=${syncthing_log_file}} -no-browser ${syncthing_args}"

start_precmd=syncthing_startprecmd

syncthing_startprecmd()
{
        if [ ! -e ${pidfile} ]; then
                install -o ${syncthing_user} -g ${syncthing_group} /dev/null ${pidfile};
        fi

        if [ ! -d ${syncthing_home} ]; then
                install -d -o ${syncthing_user} -g ${syncthing_group} ${syncthing_home}
        fi

        if [ ! -e ${syncthing_log_file} ]; then
                install -o ${syncthing_user} -g ${syncthing_group} /dev/null ${syncthing_log_file};
        fi
}

run_rc_command "$1"

