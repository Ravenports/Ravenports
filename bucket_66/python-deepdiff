# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-deepdiff
VERSION=		6.7.0
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Deep difference and search of any object (3.11)
SDESC[v12]=		Deep difference and search of any object (3.12)
HOMEPAGE=		https://github.com/seperman/deepdiff
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/11/a5/fb28e5b442af0db9e293932ce35f20805493116bec2eee38acfea9c48716
DISTFILE[1]=		deepdiff-6.7.0-py3-none-any.whl:main
DF_INDEX=		1
SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

DISTNAME=		deepdiff-6.7.0.dist-info

GENERATED=		yes

[PY311].RUN_DEPENDS_ON=			python-ordered-set:single:v11
[PY311].USES_ON=			python:v11,wheel

[PY312].RUN_DEPENDS_ON=			python-ordered-set:single:v12
[PY312].USES_ON=			python:v12,wheel

[FILE:2835:descriptions/desc.single]
# DeepDiff v 6.7.0

![Downloads]
![Python Versions]
![License]
[Build Status]
[codecov]

## Modules

- [DeepDiff]: Deep Difference of dictionaries, iterables, strings, and ANY
other object.
- [DeepSearch]: Search for objects within other objects.
- [DeepHash]: Hash any object based on their content.
- [Delta]: Store the difference of objects and apply them to other objects.
- [Extract]: Extract an item from a nested Python object using its path.
- [commandline]: Use DeepDiff from commandline.

Tested on Python 3.7+ and PyPy3.

- **[Documentation]**

## What is new?

Please check the [ChangeLog] file for the detailed information.

DeepDiff v6-7-0

- Delta can be subtracted from other objects now.
- verify_symmetry is deprecated. Use bidirectional instead.
- always_include_values flag in Delta can be enabled to include values in
the delta for every change.
- Fix for Delta.__add__ breaks with esoteric dict keys.
- You can load a delta from the list of flat dictionaries.

DeepDiff 6-6-1

- Fix for [DeepDiff raises decimal exception when using significant digits]
- Introducing group_by_sort_key
- Adding group_by 2D. For example `group_by=['last_name', 'zip_code']`

## Installation

### Install from PyPi:

`pip install deepdiff`

If you want to use DeepDiff from commandline:

`pip install "deepdiff[cli]"`

If you want to improve the performance of DeepDiff with certain
functionalities such as improved json serialization:

`pip install "deepdiff[optimize]"`

Install optional packages:
- [yaml]
- [tomli] (python 3.10 and older) and [tomli-w] for writing
- [clevercsv] for more rubust CSV parsing
- [orjson] for speed and memory optimized parsing
- [pydantic]

# Documentation

<https://zepworks.com/deepdiff/current/>

### A message from Sep, the creator of DeepDiff

> 👋 Hi there,
>
> Thank you for using DeepDiff!
> As an engineer, I understand the frustration of wrestling with **unruly
data** in pipelines.
> That's why I developed a new tool - [Qluster] to empower non-engineers to
control and resolve data issues at scale autonomously and **stop bugging
the engineers**! 🛠️
>
> If you are going through this pain now, I would love to give you [early
access] to Qluster and get your feedback.

# ChangeLog

Please take a look at the [CHANGELOG] file.

# Survey

:mega: **Please fill out our [fast 5-question survey]** so that we can
learn how & why you use DeepDiff, and what improvements we should make.
Thank you! :dancers:

# Contribute

1. Please make your PR against the dev branch
2. Please make sure that your PR has tests. Since DeepDiff is used in many
sensitive data driven projects, we strive to maintain around 100% test
coverage on the code.

Please run `pytest --cov=deepdiff --runslow` to see the coverage report.
Note that the `--runslow` flag will run some slow tests too. In most cases


[FILE:110:distinfo]
d64dd64be5b2e3917c7cc557d69e68d008d798a5cd4981d1508707037504d50a        75403 deepdiff-6.7.0-py3-none-any.whl

