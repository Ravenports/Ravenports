# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-deepdiff
VERSION=		8.0.1
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Deep difference and search of any object (3.12)
SDESC[v13]=		Deep difference and search of any object (3.13)
HOMEPAGE=		https://github.com/seperman/deepdiff
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/06/46/01673060e83277a863baf0909b387cd809865cba2d5e7213db76516bedd9
DISTFILE[1]=		deepdiff-8.0.1-py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		deepdiff-8.0.1.dist-info

GENERATED=		yes

[PY312].RUN_DEPENDS_ON=			python-orderly-set:single:v12
[PY312].USES_ON=			python:v12,wheel

[PY313].RUN_DEPENDS_ON=			python-orderly-set:single:v13
[PY313].USES_ON=			python:v13,wheel

[FILE:3920:descriptions/desc.single]
# DeepDiff v 8.0.1

![Downloads]
![Python Versions]
![License]
[Build Status]
[codecov]

## Modules

- [DeepDiff]: Deep Difference of dictionaries, iterables, strings, and ANY
other object.
- [DeepSearch]: Search for objects within other objects.
- [DeepHash]: Hash any object based on their content.
- [Delta]: Store the difference of objects and apply them to other objects.
- [Extract]: Extract an item from a nested Python object using its path.
- [commandline]: Use DeepDiff from commandline.

Tested on Python 3.8+ and PyPy3.

- **[Documentation]**

## What is new?

Please check the [ChangeLog] file for the detailed information.

DeepDiff 8-0-1

- Bugfix. Numpy should be optional.

DeepDiff 8-0-0

With the introduction of `threshold_to_diff_deeper`, the values returned
are different than in previous versions of DeepDiff. You can still get the
older values by setting `threshold_to_diff_deeper=0`. However to signify
that enough has changed in this release that the users need to update the
parameters passed to DeepDiff, we will be doing a major version update.

- `use_enum_value=True` makes it so when diffing enum, we use the enum's
value. It makes it so comparing an enum to a string or any other value is
not reported as a type change.
- `threshold_to_diff_deeper=float` is a number between 0 and 1. When
comparing dictionaries that have a small intersection of keys, we will
report the dictionary as a `new_value` instead of reporting individual keys
changed. If you set it to zero, you get the same results as DeepDiff 7.0.1
and earlier, which means this feature is disabled. The new default is 0.33
which means if less that one third of keys between dictionaries intersect,
report it as a new object.
- Deprecated `ordered-set` and switched to `orderly-set`. The `ordered-set`
package was not being maintained anymore and starting Python 3.6, there
were better options for sets that ordered. I forked one of the new
implementations, modified it, and published it as `orderly-set`.
- Added `use_log_scale:bool` and `log_scale_similarity_threshold:float`.
They can be used to ignore small changes in numbers by comparing their
differences in logarithmic space. This is different than ignoring the
difference based on significant digits.
- json serialization of reversed lists.
- Fix for iterable moved items when `iterable_compare_func` is used.
- Pandas and Polars support.

DeepDiff 7-0-1

- Fixes the translation between Difflib opcodes and Delta flat rows.

DeepDiff 7-0-0

- DeepDiff 7 comes with an improved delta object. [Delta to flat
dictionaries] have undergone a major change. We have also introduced [Delta
serialize to flat rows].
- Subtracting delta objects have dramatically improved at the cost of
holding more metadata about the original objects.
- When `verbose=2`, and the "path" of an item has changed in a report
between t1 and t2, we include it as `new_path`.
- `path(use_t2=True)` returns the correct path to t2 in any reported change
in the [`tree view`]
- Python 3.7 support is dropped and Python 3.12 is officially supported.

DeepDiff 6-7-1

- Support for subtracting delta objects when iterable_compare_func is used.
- Better handling of force adding a delta to an object. 
- Fix for [`Can't compare dicts with both single and double quotes in
keys`]
- Updated docs for Inconsistent Behavior with math_epsilon and ignore_order
= True

DeepDiff 6-7-0

- Delta can be subtracted from other objects now.
- verify_symmetry is deprecated. Use bidirectional instead.
- always_include_values flag in Delta can be enabled to include values in
the delta for every change.
- Fix for Delta.__add__ breaks with esoteric dict keys.
- You can load a delta from the list of flat dictionaries.

DeepDiff 6-6-1

- Fix for [DeepDiff raises decimal exception when using significant digits]
- Introducing group_by_sort_key
- Adding group_by 2D. For example `group_by=['last_name', 'zip_code']`


[FILE:121:distinfo]
42e99004ce603f9a53934c634a57b04ad5900e0d8ed0abb15e635767489cbc05        82741 python-src/deepdiff-8.0.1-py3-none-any.whl

