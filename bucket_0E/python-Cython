# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-Cython
VERSION=		3.1.3
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Compiler to write C extensions for Python (3.12)
SDESC[v13]=		Compiler to write C extensions for Python (3.13)
HOMEPAGE=		https://cython.org/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/56/c8/46ac27096684f33e27dab749ef43c6b0119c6a0d852971eaefb73256dc4c
DISTFILE[1]=		cython-3.1.3-py3-none-any.whl:main
DIST_SUBDIR=		python-src
DF_INDEX=		1
SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

DISTNAME=		cython-3.1.3.dist-info

GENERATED=		yes

[PY312].USES_ON=			python:v12,wheel

[PY313].USES_ON=			python:v13,wheel

[FILE:2615:descriptions/desc.single]
The Cython language makes writing C extensions for the Python language as
easy as Python itself.  Cython is a source code translator based on Pyrex_,
but supports more cutting edge functionality and optimizations.

The Cython language is a superset of the Python language (almost all Python
code is also valid Cython code), but Cython additionally supports optional
static typing to natively call C functions, operate with C++ classes and
declare fast C types on variables and class attributes.  This allows the
compiler to generate very efficient C code from Cython code.

This makes Cython the ideal language for writing glue code for external
C/C++ libraries, and for fast C modules that speed up the execution of
Python code.

The newest Cython release can always be downloaded from
https://cython.org/.
Unpack the tarball or zip file, enter the directory, and then run::

    pip install .

Note that for one-time builds, e.g. for CI/testing, on platforms that are
not
covered by one of the wheel packages provided on PyPI *and* the pure Python
wheel
that we provide is not used, it is substantially faster than a full source
build
to install an uncompiled (slower) version of Cython with::

    NO_CYTHON_COMPILE=true pip install .

.. _Pyrex: https://www.cosc.canterbury.ac.nz/greg.ewing/python/Pyrex/

3.1.3 (2025-08-13)
==================

Bugs fixed
----------

* Some method calls with 0 or 1 argument failed to use
``PyObject_VectorCallMethod()``.

* Walrus assignments of literal Python integers could generate invalid C
code.
  (Github issue https://github.com/cython/cython/issues/6989)

* ``cython.pythread_type_lock`` (also used as fallback for
``cython.pymutex``)
  could stall on heavily contended locks.
  (Github issue https://github.com/cython/cython/issues/6999)

* C string arrays (not pointers) always coerced to the Python default
string type,
  even on explicit casts to other string types.
  (Github issue https://github.com/cython/cython/issues/7020)

* Unterminated ``\N{}`` character escapes in strings could unrail the
parser.
  (Github issue https://github.com/cython/cython/issues/7056)

* An internal C function was not marked as static and leaked a linker
symbol.
  (Github issue https://github.com/cython/cython/issues/6957)

* Some Unicode letters were not recognised as lexically valid name parts.
  (Github issue https://github.com/cython/cython/issues/7059)

* Compatibility with PyPy3.8 was lost by accident.

* The Linux binary wheels of 3.1.2 used SSSE3 CPU instructions which are
not available on some CPUs.
  (Github issue https://github.com/cython/cython/issues/7038)


[FILE:119:distinfo]
d13025b34f72f77bf7f65c1cd628914763e6c285f4deb934314c922b91e6be5a      1225725 python-src/cython-3.1.3-py3-none-any.whl

