# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		opencl-clhpp
VERSION=		2025.07.22
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		OpenCL Host API C++ bindings
HOMEPAGE=		https://github.com/KhronosGroup/OpenCL-CLHPP
CONTACT=		nobody

DOWNLOAD_GROUPS=	main cmock unity
SITES[main]=		GITHUB/KhronosGroup:OpenCL-CLHPP:v2025.07.22
SITES[cmock]=		GITHUB/ThrowTheSwitch:CMock:379a9a8:external/CMock
DISTFILE[1]=		generated:main
DISTFILE[2]=		generated:cmock
DF_INDEX=		1 2
SPKGS[std]=		single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		opencl-headers:single:std

USES=			cmake

LICENSE=		APACHE20:single
LICENSE_TERMS=		single:{{WRKSRC}}/TERMS
LICENSE_FILE=		APACHE20:{{WRKSRC}}/LICENSE.txt
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/include/CL/cl2.hpp
LICENSE_SCHEME=		solo

CMAKE_ARGS=		-DBUILD_TESTING=OFF
			-DBUILD_EXAMPLES=OFF
			-DBUILD_DOCS=OFF

[FILE:564:descriptions/desc.single]
OpenCL C++ Bindings

For many large applications C++ is the language of choice and so it seems
reasonable to define C++ bindings for OpenCL.

The interface is contained with a single C++ header file cl2.hpp and all
definitions are contained within the namespace cl. There is no additional
requirement to include cl.h and to use either the C++ or original C
bindings; it is enough to simply include cl2.hpp.

The bindings themselves are lightweight and correspond closely to the
underlying C API. Using the C++ bindings introduces no additional
execution overhead.


[FILE:236:distinfo]
c1031afde6e9eb042e6fcfbc17078f4b437a7e8d55482a1ca6e0fa762d262a89       133002 KhronosGroup-OpenCL-CLHPP-2025.07.22.tar.gz
ec1db8dbed7bc3fde4c60cb49b23846981fad34ecde0b24200d0aa56b18eee20       437315 ThrowTheSwitch-CMock-379a9a8.tar.gz


[FILE:193:manifests/plist.single]
include/CL/
 cl2.hpp
 opencl.hpp
share/cmake/OpenCLHeadersCpp/
 OpenCLHeadersCppConfig.cmake
 OpenCLHeadersCppConfigVersion.cmake
 OpenCLHeadersCppTargets.cmake
share/pkgconfig/OpenCL-CLHPP.pc

