# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		gnustep-make
VERSION=		2.9.2
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		GNUstep Makefile package
HOMEPAGE=		https://gnustep.github.io/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		https://github.com/gnustep/tools-make/archive/refs/tags/
DISTFILE[1]=		make-2_9_2.tar.gz:main
DIST_SUBDIR=		gnustep
DF_INDEX=		1
SPKGS[std]=		set
			primary
			man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		libobjc2:dev:std
			gnustep-make-bootstrap:primary:std
BUILDRUN_DEPENDS=	libobjc2:primary:std

USES=			clang gmake gold pkgconfig shebangfix

DISTNAME=		tools-make-make-2_9_2

LICENSE=		GPLv3+:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/Master/tool.make
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/gnustep-make
SHEBANG_FILES=		bake_debian_files.sh

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--enable-native-objc-exceptions
			--with-config-file={{PREFIX}}/etc/GNUstep/GNUstep.conf
			--with-layout=fhs
			--with-library-combo=ng-gnu-gnu
			--with-thread-lib=-pthread
CONFIGURE_ENV=		INSTALL_PROGRAM="install -c"
			INSTALL_DATA="install -c"

MAKEFILE=		GNUmakefile

[FILE:344:descriptions/desc.primary]
The GNUstep makefile package is a simple, powerful and extensible way to 
write makefiles for a GNUstep-based project. It allows the user to write a 
project without having to deal with the complex issues associated with 
configuration, building, installation, and packaging.  It also allows the 
user to easily create cross-compiled binaries.


[FILE:104:distinfo]
b3fdee058879675f6979c553fb6172b160ca79ffd0f170f51379326b7922941a       611595 gnustep/make-2_9_2.tar.gz


[FILE:2487:manifests/plist.primary]
bin/
 debugapp
 gnustep-config
 gnustep-tests
 openapp
 opentool
etc/GNUstep/GNUstep.conf
share/GNUstep/Makefiles/
 GNUstep-reset.sh
 GNUstep.csh
 GNUstep.sh
 aggregate.make
 app-wrapper.template
 application.make
 bake_debian_files.sh
 bundle.make
 clean_cpu.sh
 clean_os.sh
 clean_vendor.sh
 clibrary.make
 common.make
 config-noarch.make
 config.guess
 config.make
 config.sub
 cpu.sh
 ctool.make
 documentation.make
 empty.make
 executable.template
 filesystem.csh
 filesystem.make
 filesystem.sh
 fixpath.sh
 framework.make
 gnustep-make-help
 gswapp.make
 gswbundle.make
 install-sh
 java-executable.template
 java-tool.make
 java.make
 jni.make
 library-combo.make
 library.make
 messages.make
 mkinstalldirs
 names.make
 native-library.make
 nsi-app.template
 objc.make
 os.sh
 palette.make
 parallel-subdirectories.make
 print_unique_pathlist.sh
 relative_path.sh
 resource-set.make
 rules.make
 serial-subdirectories.make
 service.make
 spec-rules.template
 strip_makefiles.sh
 subproject.make
 tar-exclude-list
 target.make
 test-application.make
 test-library.make
 test-tool.make
 tool.make
 vendor.sh
share/GNUstep/Makefiles/Instance/
 application.make
 bundle.make
 clibrary.make
 ctool.make
 documentation.make
 framework.make
 gswapp.make
 gswbundle.make
 java-tool.make
 java.make
 library.make
 objc.make
 palette.make
 resource-set.make
 rules.make
 service.make
 subproject.make
 test-application.make
 test-library.make
 test-tool.make
 tool.make
share/GNUstep/Makefiles/Instance/Documentation/
 autogsdoc.make
 gsdoc.make
 install_files.make
 javadoc.make
 latex.make
 texi.make
share/GNUstep/Makefiles/Instance/Shared/
 bundle.make
 headers.make
 java.make
 pkgconfig.make
 stamp-string.make
 strings.make
share/GNUstep/Makefiles/Master/
 application.make
 bundle.make
 clibrary.make
 ctool.make
 deb.make
 documentation.make
 framework.make
 gswapp.make
 gswbundle.make
 java-tool.make
 java.make
 library.make
 nsis.make
 objc.make
 palette.make
 parallel-subdirectories.make
 resource-set.make
 rpm.make
 rules.make
 serial-subdirectories.make
 service.make
 source-distribution.make
 subproject.make
 test-application.make
 test-library.make
 test-tool.make
 tool.make
share/GNUstep/Makefiles/TestFramework/
 GNUmakefile.in
 ObjectTesting.h
 README
 Summary.sh
 Testing.h
 example1.m
 example2.m
 example3.m
 example4.m
 example5.m
 example6.m
 example7.m
 example8.m
 example9.m
@dir share/GNUstep/Makefiles/Additional
@dir share/GNUstep/Makefiles/Auxiliary


[FILE:130:manifests/plist.man]
share/man/man1/
 debugapp.1
 gnustep-config.1
 gnustep-tests.1
 openapp.1
 opentool.1
share/man/man7/
 GNUstep.7
 library-combo.7


[FILE:1874:patches/patch-target.make]
--- target.make.orig	2024-05-26 14:39:18 UTC
+++ target.make
@@ -660,15 +660,31 @@ endif
 #
 ifeq ($(findstring dragonfly, $(GNUSTEP_TARGET_OS)), dragonfly)
 HAVE_SHARED_LIBS    = yes
-SHARED_LD_POSTFLAGS = -Wl,-R/usr/pkg/lib -L/usr/pkg/lib
 SHARED_LIB_LINK_CMD = \
-	$(LD) -shared -Wl,-soname,$(LIB_LINK_VERSION_FILE) \
+	$(LD) -shared -Wl,-soname,$(LIB_LINK_SONAME_FILE) \
               $(ALL_LDFLAGS) -o $(LIB_LINK_OBJ_DIR)/$(LIB_LINK_VERSION_FILE) \
                  $^ $(INTERNAL_LIBRARIES_DEPEND_UPON) \
                  $(SHARED_LD_POSTFLAGS) \
 	&& (cd $(LIB_LINK_OBJ_DIR); \
 	  $(RM_LN_S) $(LIB_LINK_FILE); \
-	  $(LN_S) $(LIB_LINK_VERSION_FILE) $(LIB_LINK_FILE))
+	  if [ "$(LIB_LINK_SONAME_FILE)" != "$(LIB_LINK_VERSION_FILE)" ]; then\
+	    $(RM_LN_S) $(LIB_LINK_SONAME_FILE);\
+	    $(LN_S) $(LIB_LINK_VERSION_FILE) $(LIB_LINK_SONAME_FILE); \
+	  fi; \
+	  $(LN_S) $(LIB_LINK_SONAME_FILE) $(LIB_LINK_FILE))
+AFTER_INSTALL_SHARED_LIB_CMD = \
+	(cd $(LIB_LINK_INSTALL_DIR); \
+	  $(RM_LN_S) $(LIB_LINK_FILE); \
+	  if [ "$(LIB_LINK_SONAME_FILE)" != "$(LIB_LINK_VERSION_FILE)" ]; then\
+	    $(RM_LN_S) $(LIB_LINK_SONAME_FILE);\
+	    $(LN_S) $(LIB_LINK_VERSION_FILE) $(LIB_LINK_SONAME_FILE); \
+	  fi; \
+	  $(LN_S) $(LIB_LINK_SONAME_FILE) $(LIB_LINK_FILE); \
+	)
+AFTER_INSTALL_SHARED_LIB_CHOWN = \
+	(cd $(LIB_LINK_INSTALL_DIR); \
+	chown $(CHOWN_TO) $(LIB_LINK_SONAME_FILE); \
+	chown $(CHOWN_TO) $(LIB_LINK_FILE))
 OBJ_MERGE_CMD		= \
 	$(LD) -nostdlib $(OBJ_MERGE_CMD_FLAG) $(CORE_LDFLAGS) -o $(GNUSTEP_OBJ_DIR)/$(SUBPROJECT_PRODUCT) $^ ;
 
@@ -678,9 +694,7 @@ SHARED_LIBEXT	= .so
 HAVE_BUNDLES	= yes
 BUNDLE_LD	= $(LD)
 BUNDLE_LDFLAGS	+= -shared
-ADDITIONAL_LDFLAGS += -Wl,-R/usr/pkg/lib -L/usr/pkg/lib -Wl,-R/usr/X11R6/lib -L/usr/X11R6/lib
 FINAL_LDFLAGS   = -rdynamic
-ADDITIONAL_INCLUDE_DIRS += -I/usr/pkg/include
 STATIC_LDFLAGS += -static
 endif
 #


[FILE:15:files/special.mk]
CPP=	clang-cpp

