# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		zip-ada
VERSION=		60
KEYWORDS=		archivers ada
VARIANTS=		std
SDESC[std]=		Zip compression library written in Ada
HOMEPAGE=		http://unzip-ada.sourceforge.net/
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		SF/unzip-ada/
DISTFILE[1]=		zipada60.zip:main
DF_INDEX=		1
SPKGS[std]=		set
			primary
			tools
			tests
			dev
			examples

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			ada:primary dos2unix gprbuild perl:build

DISTNAME=		zip-ada

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKDIR}}/LICENSE
LICENSE_AWK=		MIT:"^with Zip_Streams"
LICENSE_SOURCE=		MIT:{{WRKSRC}}/zip_lib/zip.ads
LICENSE_SCHEME=		solo

MAKE_ENV=		Build_Mode=Fast

INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		60.0.0

do-build:
.for project in zipada_lib zipada zipada_test
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} gprbuild -p -P ${project}.gpr)
.endfor

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libzipada.so

pre-configure:
	${REINPLACE_CMD} -e "s/@SOVERSION@/60.0.0/" ${WRKSRC}/zipada_lib.gpr

do-install:
.for project in zipada_lib zipada zipada_test
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} gprinstall \
		--prefix=${STAGEDIR}${PREFIX} \
		--no-manifests \
		-p -P ${project}.gpr)
.endfor

[FILE:142:descriptions/desc.primary]
The Zip-Ada library is written entirely in Ada, allowing compression
operations without any OS-dependent external calls on streams and files.


[FILE:673:descriptions/desc.tools]
This package contains the following tools based on libzipada:
This package contains the following tools based on libzipada:
 * zipada   - create compressed Zip archive
 * unzipada - utility to extract from compressed zip archives
 * comp_zip - utility to compare contents of two Zip archives
 * find_zip - utility to search for text stream of Zip archive
 * rezip    - tool for recompressing Zip files towards optimal compression
 * lzma_enc - standalone compressor for LZMA files (.lzma)
 * lzma_dec - standalone decompressor for LZMA files (.lzma)
 * touch2   - utility to update the file modification time
 * zip_dir_list - utility to transverse zip archive directories


[FILE:58:descriptions/desc.tests]
This package contains test tools based on zipada library.


[FILE:91:distinfo]
c429df63d4bb1e4213e1fadf247ea6d298198a42883186f6ab7f7c3dc95a72f9      4502739 zipada60.zip


[FILE:73:manifests/plist.primary]
lib/libzipada.so.%%SOVERSION%%
lib/zipada_lib/libzipada.so.%%SOVERSION%%


[FILE:132:manifests/plist.tools]
bin/
 bwt_dec
 bwt_enc
 bzip2_dec
 bzip2_enc
 comp_zip
 find_zip
 lzma_dec
 lzma_enc
 rezip
 touch2
 unzipada
 zip_dir_list
 zipada


[FILE:331:manifests/plist.tests]
bin/
 fuzzip
 lz77_stats
 lzhuf
 random_data
 several_sizes
 test_chunk
 test_extract
 test_llhc
 test_lz77
 test_lz_scramble
 test_non_zip
 test_stream_performance
 test_unz_streams
 test_zip_create_info_timing
 test_zip_entry_stream
 test_zip_info_timing
 test_zip_info_traverse
 zip_with_big_files
 zip_with_many_files
 ziptest


[FILE:4189:manifests/plist.dev]
include/zipada/
 bwt.adb
 bwt.ads
 bwt_dec.adb
 bwt_demo.adb
 bwt_enc.adb
 bzip2-decoding.adb
 bzip2-decoding.ads
 bzip2-encoding.adb
 bzip2-encoding.ads
 bzip2.adb
 bzip2.ads
 bzip2_dec.adb
 bzip2_enc.adb
 comp_zip.adb
 comp_zip_prc.adb
 demo_csv_into_zip.adb
 demo_unzip.adb
 demo_zip.adb
 dual_io.adb
 dual_io.ads
 find_zip.adb
 flexible_temp_files.adb
 flexible_temp_files.ads
 huffman-encoding-length_limited_coding.adb
 huffman-encoding-length_limited_coding.ads
 huffman-encoding.adb
 huffman-encoding.ads
 huffman.ads
 lz77.adb
 lz77.ads
 lz_scramble.adb
 lz_scramble.ads
 lzh.adb
 lzh.ads
 lzhuf.adb
 lzma-decoding.adb
 lzma-decoding.ads
 lzma-encoding.adb
 lzma-encoding.ads
 lzma.ads
 lzma_dec.adb
 lzma_enc.adb
 random_data.adb
 rezip.adb
 rezip_lib.adb
 rezip_lib.ads
 set_modification_time_gnat.adb
 show_license.adb
 touch2.adb
 unzip-decompress-huffman.adb
 unzip-decompress-huffman.ads
 unzip-decompress.adb
 unzip-decompress.ads
 unzip-streams.adb
 unzip-streams.ads
 unzip.adb
 unzip.ads
 unzipada.adb
 zip-compress-bzip2_e.adb
 zip-compress-bzip2_e.ads
 zip-compress-deflate.adb
 zip-compress-deflate.ads
 zip-compress-lzma_e.adb
 zip-compress-lzma_e.ads
 zip-compress-reduce.adb
 zip-compress-reduce.ads
 zip-compress-shrink.adb
 zip-compress-shrink.ads
 zip-compress.adb
 zip-compress.ads
 zip-crc_crypto.adb
 zip-crc_crypto.ads
 zip-create.adb
 zip-create.ads
 zip-headers.adb
 zip-headers.ads
 zip.adb
 zip.ads
 zip_console_io.adb
 zip_console_io.ads
 zip_dir_list.adb
 zip_streams.adb
 zip_streams.ads
 zipada.adb
include/zipada_lib/
 lz77.adb
 lz77.ads
 lzma-decoding.adb
 lzma-decoding.ads
 lzma-encoding.adb
 lzma-encoding.ads
 lzma.ads
 unzip-streams.adb
 unzip-streams.ads
 unzip.adb
 unzip.ads
 zip-compress.adb
 zip-compress.ads
 zip-crc_crypto.adb
 zip-crc_crypto.ads
 zip-create.adb
 zip-create.ads
 zip-headers.adb
 zip-headers.ads
 zip.adb
 zip.ads
 zip_streams.adb
 zip_streams.ads
include/zipada_test/
 bwt.adb
 bwt.ads
 bwt_dec.adb
 bwt_demo.adb
 bwt_enc.adb
 bzip2-decoding.adb
 bzip2-decoding.ads
 bzip2-encoding.adb
 bzip2-encoding.ads
 bzip2.adb
 bzip2.ads
 bzip2_dec.adb
 bzip2_enc.adb
 comp_zip.adb
 comp_zip_prc.adb
 demo_csv_into_zip.adb
 demo_unzip.adb
 demo_zip.adb
 dual_io.adb
 dual_io.ads
 find_zip.adb
 flexible_temp_files.adb
 flexible_temp_files.ads
 fuzzip.adb
 huffman-encoding-length_limited_coding.adb
 huffman-encoding-length_limited_coding.ads
 huffman-encoding.adb
 huffman-encoding.ads
 huffman.ads
 lz77.adb
 lz77.ads
 lz77_stats.adb
 lz_scramble.adb
 lz_scramble.ads
 lzh.adb
 lzh.ads
 lzhuf.adb
 lzma-decoding.adb
 lzma-decoding.ads
 lzma-encoding.adb
 lzma-encoding.ads
 lzma.ads
 lzma_dec.adb
 lzma_enc.adb
 random_data.adb
 rezip.adb
 rezip_lib.adb
 rezip_lib.ads
 rw_file.adb
 rw_file.ads
 set_modification_time_gnat.adb
 several_sizes.adb
 show_license.adb
 test_chunk.adb
 test_common.adb
 test_common.ads
 test_extract.adb
 test_llhc.adb
 test_lz77.adb
 test_lz_scramble.adb
 test_non_zip.adb
 test_stream_performance.adb
 test_unz_streams.adb
 test_zip_create_info_timing.adb
 test_zip_entry_stream.adb
 test_zip_info_timing.adb
 test_zip_info_traverse.adb
 touch2.adb
 unzip-decompress-huffman.adb
 unzip-decompress-huffman.ads
 unzip-decompress.adb
 unzip-decompress.ads
 unzip-streams.adb
 unzip-streams.ads
 unzip.adb
 unzip.ads
 unzipada.adb
 zip-compress-bzip2_e.adb
 zip-compress-bzip2_e.ads
 zip-compress-deflate.adb
 zip-compress-deflate.ads
 zip-compress-lzma_e.adb
 zip-compress-lzma_e.ads
 zip-compress-reduce.adb
 zip-compress-reduce.ads
 zip-compress-shrink.adb
 zip-compress-shrink.ads
 zip-compress.adb
 zip-compress.ads
 zip-crc_crypto.adb
 zip-crc_crypto.ads
 zip-create.adb
 zip-create.ads
 zip-headers.adb
 zip-headers.ads
 zip.adb
 zip.ads
 zip_console_io.adb
 zip_console_io.ads
 zip_dir_list.adb
 zip_streams.adb
 zip_streams.ads
 zip_with_big_files.adb
 zip_with_many_files.adb
 zipada.adb
 ziptest.adb
lib/libzipada.so
lib/zipada_lib/
 libzipada.so
 lz77.ali
 lzma-decoding.ali
 lzma-encoding.ali
 lzma.ali
 unzip-streams.ali
 unzip.ali
 zip-compress.ali
 zip-crc_crypto.ali
 zip-create.ali
 zip-headers.ali
 zip.ali
 zip_streams.ali
share/gpr/
 zipada.gpr
 zipada_lib.gpr
 zipada_test.gpr


[FILE:56:manifests/plist.examples]
bin/
 bwt_demo
 demo_csv_into_zip
 demo_unzip
 demo_zip


[FILE:287:patches/patch-zipada__lib.gpr]
--- zipada_lib.gpr.orig	2024-05-25 15:31:56 UTC
+++ zipada_lib.gpr
@@ -22,6 +22,7 @@ library project ZipAda_Lib is
 
    for Library_Dir use "lib";
    for Library_Name use "zipada";
+   for Library_Version use "libzipada.so.@SOVERSION@";
 
    for Library_Interface use
       ("lz77",


[FILE:228:files/zip-ada.gpr]
project ZipAda is

   for Languages use ("ada");
   for Source_Dirs use ("../../include/zip-ada");
   for Library_Name use "zip-ada";
   for Library_Dir use  "../../lib/zip-ada";
   for Externally_Built use "true";

end ZipAda;

