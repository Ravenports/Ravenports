# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-backports_abc
VERSION=		0.5
KEYWORDS=		python
VARIANTS=		py310 py311
SDESC[py310]=		Containers Base Classes backported fixes (3.10)
SDESC[py311]=		Containers Base Classes backported fixes (3.11)
HOMEPAGE=		https://github.com/cython/backports_abc
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/7d/56/6f3ac1b816d0cd8994e83d0c4e55bc64567532f7dc543378bd87f81cebc7
DISTFILE[1]=		backports_abc-0.5-py2.py3-none-any.whl:main
DF_INDEX=		1
SPKGS[py310]=		single
SPKGS[py311]=		single

OPTIONS_AVAILABLE=	PY310 PY311
OPTIONS_STANDARD=	none
VOPTS[py310]=		PY310=ON PY311=OFF
VOPTS[py311]=		PY310=OFF PY311=ON

DISTNAME=		backports_abc-0.5.dist-info

GENERATED=		yes

[PY310].USES_ON=			python:py310,wheel

[PY311].USES_ON=			python:py311,wheel

[FILE:2131:descriptions/desc.single]
=============
ABC-Backports
=============

Usage:

.. code-block:: python

    try:
        # ABCs live in "collections.abc" in Python >= 3.3
        from collections.abc import Coroutine, Generator
    except ImportError:
        # fall back to import from "backports_abc"
        from backports_abc import Coroutine, Generator

You can also install the ABCs into the stdlib by calling the ``patch()``
function:

.. code-block:: python

    import backports_abc
    backports_abc.patch()

    try:
        # ABCs live in "collections.abc" in Python >= 3.3
        from collections.abc import Coroutine, Generator
    except ImportError:
        # fall back to import from "collections" in Python <= 3.2
        from backports_abc import Coroutine, Generator

Currently, ``patch()`` provides the following names if missing:

* ``collections.abc.Generator``
* ``collections.abc.Awaitable``
* ``collections.abc.Coroutine``
* ``inspect.isawaitable(obj)

All of them are also available directly from the backports_abc``
module namespace.

In Python 2.x and Python 3.2, it patches the collections module
instead of the ``collections.abc`` module.  Any names that are already
available when importing this module will not be overwritten.

The names that were previously patched by ``patch() can be queried
through the mapping in backports_abc.PATCHED``.

Changelog
=========

0.5 (2016-11-12)
----------------

* support old-style (mro-missing) classes

0.4 (2015-09-14)
----------------

* direct wheel building support

* make all names available at the module level instead of requiring
patching

0.3 (2015-07-03)
----------------

* removed patching of ``inspect.iscoroutine()`` as it is not ABC based

0.2 (2015-07-03)
----------------

* require explicit ``backports_abc.patch()`` call to do the patching
  (avoids side-effects on import and allows future configuration)

* provide access to patched names through global PATCHED dict

* add ABC based implementations of inspect.iscoroutine() and
  inspect.isawaitable()

0.1 (2015-06-24)
----------------

* initial public release

* provided ABCs: Generator, Coroutine, Awaitable


[FILE:117:distinfo]
52089f97fe7a9aa0d3277b220c1d730a85aefd64e1b2664696fe35317c5470a7         5232 backports_abc-0.5-py2.py3-none-any.whl

