# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		python-celery
VERSION=		4.1.0
KEYWORDS=		python devel
VARIANTS=		py27 py35 py36
SDESC[py35]=		Distributed Task Queue (PY 35)
SDESC[py36]=		Distributed Task Queue (PY 36)
SDESC[py27]=		Distributed Task Queue (PY 27)
HOMEPAGE=		http://celeryproject.org
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPI/c/celery
DISTFILE[1]=		celery-4.1.0.tar.gz:main
DF_INDEX=		1
SPKGS[py35]=		single
SPKGS[py36]=		single
SPKGS[py27]=		single

OPTIONS_AVAILABLE=	PY27 PY35 PY36
OPTIONS_STANDARD=	none
VOPTS[py35]=		PY27=OFF PY35=ON PY36=OFF
VOPTS[py36]=		PY27=OFF PY35=OFF PY36=ON
VOPTS[py27]=		PY27=ON PY35=OFF PY36=OFF

DISTNAME=		celery-4.1.0

LICENSE=		BSDGROUP:single
LICENSE_FILE=		BSDGROUP:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

GENERATED=		yes

[PY35].BUILDRUN_DEPENDS_ON=		python-pytz:single:py35
					python-billiard:single:py35
					python-kombu:single:py35
[PY35].USES_ON=				python:py35

[PY36].BUILDRUN_DEPENDS_ON=		python-pytz:single:py36
					python-billiard:single:py36
					python-kombu:single:py36
[PY36].USES_ON=				python:py36

[PY27].BUILDRUN_DEPENDS_ON=		python-pytz:single:py27
					python-billiard:single:py27
					python-kombu:single:py27
[PY27].USES_ON=				python:py27

[FILE:3155:descriptions/desc.single]
.. image::
http://docs.celeryproject.org/en/latest/_images/celery-banner-small.png

|build-status| |license| |wheel| |pyversion| |pyimp|

:Version: 4.1.0 (latentcall)
:Web: http://celeryproject.org/
:Download: https://pypi.python.org/pypi/celery/
:Source: https://github.com/celery/celery/
:Keywords: task, queue, job, async, rabbitmq, amqp, redis,
  python, distributed, actors

--

What's a Task Queue?
====================

Task queues are used as a mechanism to distribute work across threads or
machines.

A task queue's input is a unit of work, called a task, dedicated worker
processes then constantly monitor the queue for new work to perform.

Celery communicates via messages, usually using a broker
to mediate between clients and workers. To initiate a task a client puts a
message on the queue, the broker then delivers the message to a worker.

A Celery system can consist of multiple workers and brokers, giving way
to high availability and horizontal scaling.

Celery is written in Python, but the protocol can be implemented in any
language. In addition to Python there's node-celery_ for Node.js,
and a `PHP client`_.

Language interoperability can also be achieved by using webhooks
in such a way that the client enqueues an URL to be requested by a worker.

.. _node-celery: https://github.com/mher/node-celery
.. _`PHP client`: https://github.com/gjedeer/celery-php

What do I need?
===============

Celery version 4.0 runs on,

- Python (2.7, 3.4, 3.5)
- PyPy (5.4, 5.5)


This is the last version to support Python 2.7,
and from the next version (Celery 5.x) Python 3.5 or newer is required.

If you're running an older version of Python, you need to be running
an older version of Celery:

- Python 2.6: Celery series 3.1 or earlier.
- Python 2.5: Celery series 3.0 or earlier.
- Python 2.4 was Celery series 2.2 or earlier.

Celery is a project with minimal funding,
so we don't support Microsoft Windows.
Please don't open any issues related to that platform.

*Celery* is usually used with a message broker to send and receive
messages.
The RabbitMQ, Redis transports are feature complete,
but there's also experimental support for a myriad of other solutions,
including
using SQLite for local development.

*Celery* can run on a single machine, on multiple machines, or even
across datacenters.

Get Started
===========

If this is the first time you're trying to use Celery, or you're
new to Celery 4.0 coming from previous versions then you should read our
getting started tutorials:

- `First steps with Celery`_

    Tutorial teaching you the bare minimum needed to get started with
Celery.

- `Next steps`_

    A more complete overview, showing more features.

.. _`First steps with Celery`:

http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-ce
lery.html

.. _`Next steps`:
    http://docs.celeryproject.org/en/latest/getting-started/next-steps.html

Celery is...
=============

- **Simple**

    Celery is easy to use and maintain, and does *not need configuration
files*.

    It has an active, friendly community you can talk to for support,
    like at our `mailing-list`_, or the IRC channel.


[FILE:98:distinfo]
77ff3730198d6a17b3c1f05579ebe570b579efb35f6d7e13dba3b1368d068b35      1331689 celery-4.1.0.tar.gz

