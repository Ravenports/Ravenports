# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		tinyxml2
VERSION=		8.1.0
KEYWORDS=		textproc
VARIANTS=		standard
SDESC[standard]=	Simple, small and efficient C++ XML parser
HOMEPAGE=		http://www.grinninglizard.com/tinyxml2/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/leethomason:tinyxml2:8.1.0
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			cmake:insource dos2unix c++:single

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"zlib License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE.txt
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		textproc/tinyxml2

SOVERSION=		8.1.0

CMAKE_ARGS=		-DBUILD_SHARED_LIBS:BOOL=ON
			-DBUILD_TESTS:BOOL=OFF

post-patch:
	${REINPLACE_CMD} -e '/CMAKE_DEBUG_POSTFIX/d' ${WRKSRC}/CMakeLists.txt

post-install:
	${AR} cq ${STAGEDIR}${PREFIX}/lib/libtinyxml2.a \
		${WRKSRC}/CMakeFiles/tinyxml2.dir/tinyxml2.cpp.o
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libtinyxml2.so

[FILE:356:descriptions/desc.single]
TinyXML-2 is a simple, small, efficient, C++ XML parser that can be easily
integrated into other programs. It attempts to be flexible, but correct.
It does not rely on exceptions or RTTI. It has UTF-8 support, but does not
parse or use DTDs or XSL. It doesn't have the STL support of TinyXML-1, but
uses less memory, has a proper namespace, and is faster.


[FILE:112:distinfo]
23c95af3b981cf9a56c7f669505832c93427cb684811bcb6c9311bd18fa9bc30       619733 leethomason-tinyxml2-8.1.0.tar.gz


[FILE:296:manifests/plist.single]
include/tinyxml2.h
lib/
 libtinyxml2.a
 libtinyxml2.so
 libtinyxml2.so.%%SOMAJOR%%
 libtinyxml2.so.%%SOVERSION%%
lib/cmake/tinyxml2/
 tinyxml2-config-version.cmake
 tinyxml2-config.cmake
 tinyxml2-shared-targets-%%CMAKE_BUILD_TYPE%%.cmake
 tinyxml2-shared-targets.cmake
lib/pkgconfig/tinyxml2.pc


[FILE:414:patches/patch-tinyxml2.cpp]
--- tinyxml2.cpp.orig	2021-05-28 20:31:43 UTC
+++ tinyxml2.cpp
@@ -103,7 +103,7 @@ distribution.
 #if defined(_WIN64)
 	#define TIXML_FSEEK _fseeki64
 	#define TIXML_FTELL _ftelli64
-#elif defined(__APPLE__) || defined(__FreeBSD__)
+#elif defined(__APPLE__) || defined(__FreeBSD__) || defined(__DragonFly__)
 	#define TIXML_FSEEK fseeko
 	#define TIXML_FTELL ftello
 #elif defined(__unix__) && defined(__x86_64__)

