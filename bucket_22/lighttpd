# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		lighttpd
VERSION=		1.4.58
KEYWORDS=		www
VARIANTS=		standard
SDESC[standard]=	Lightweight high-performance web server
HOMEPAGE=		https://www.lighttpd.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://download.lighttpd.net/lighttpd/releases-1.4.x/
DISTFILE[1]=		lighttpd-1.4.58.tar.xz:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	LDAP MYSQL GEOIP
OPTIONS_STANDARD=	LDAP MYSQL GEOIP

BUILDRUN_DEPENDS=	libev:single:standard

USERS=			wwwraven
GROUPS=			wwwraven
USERGROUP_SPKG=		single

USES=			autoreconf cpe gmake libtool pkgconfig ssl lua zlib
			bz2 pcre

LICENSE=		BSD3CLAUSE:single
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		www/lighttpd

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--libdir={{PREFIX}}/lib/lighttpd
			--with-libev={{LOCALBASE}}
			--with-openssl
			--with-openssl-includes={{OPENSSLINC}}
			--with-openssl-libs={{OPENSSLLIB}}
			--with-lua
			--with-bzip2
			--without-gdbm
			--without-krb5
			--without-memcached
			--without-valgrind
			--without-webdav-props
			--without-webdav-locks
CONFIGURE_ENV=		LUA_CFLAGS="-I{{LUA_INCDIR}}"
			LUA_LIBS="-L{{LUA_LIBDIR}} -llua-{{LUA_VER}}"

PLIST_SUB=		WWWOWN="wwwraven"
			WWWGRP="wwwraven"
			WWWDIR="{{WWWDIR_LIGHTTPD}}"
			CACHEDIR="/var/cache/lighttpd"
			HOMEDIR="/var/run/lighttpd"
			LOGDIR="/var/log/lighttpd"
RC_SUBR=		lighttpd:single
SUB_LIST=		REQUIRE="DAEMON {{REQUIRES}}"

CFLAGS=			-std=gnu99
VAR_OPSYS[freebsd]=	CONFIGURE_ARGS=--with-attr
VAR_OPSYS[linux]=	CONFIGURE_ARGS=--with-attr
VAR_OPSYS[dragonfly]=	CONFIGURE_ARGS=--with-attr

[MYSQL].DESCRIPTION=			MySQL support (mod_authn_mysql, mod_mysql_vhost)
[MYSQL].CONFIGURE_WITH_BOTH=		mysql
[MYSQL].MAKEFILE_ON=			REQUIRES+=mysql
[MYSQL].USES_ON=			mysql

[GEOIP].DESCRIPTION=			GeoIP location support
[GEOIP].BUILDRUN_DEPENDS_ON=		GeoIP:single:standard
[GEOIP].CONFIGURE_WITH_BOTH=		geoip

[LDAP].DESCRIPTION=			LDAP authentication (mod_authn_ldap)
[LDAP].BUILDRUN_DEPENDS_ON=		openldap:client:standard
[LDAP].CONFIGURE_WITH_BOTH=		ldap
[LDAP].MAKEFILE_ON=			REQUIRES+=slapd

post-patch:
	${REINPLACE_CMD} -e 's|-std=gnu99||' \
		${WRKSRC}/configure ${WRKSRC}/configure.ac
	${REINPLACE_CMD} -E \
		-e 's|^(server.document-root.*=).*|\1 "${PREFIX}/www" + "/data"|' \
		-e "s|/etc/lighttpd|${PREFIX}/etc/lighttpd|g" \
		-e 's|^(server.event-handler.*=).*|\1 "libev"|' \
		-e 's|^(server.network-backend.*=).*|\1 "writev"|' \
		-e "s|^(server.username.*=).*|\1 \"wwwraven\"|" \
		-e "s|^(server.groupname.*=).*|\1 \"wwwraven\"|" \
		-e "s|^(var.log_root.*=).*|\1 \"/var/log/lighttpd\"|" \
		-e "s|^(var.server_root.*=).*|\1 \"${WWWDIR_LIGHTTPD}\"|" \
		-e "s|^(var.home_dir.*=).*|\1 \"/var/run/lighttpd\"|" \
		-e "s|^(var.cache_dir.*=).*|\1 \"/var/cache/lighttpd\"|" \
		${WRKSRC}/doc/config/lighttpd.conf
	${REINPLACE_CMD} -e "s|/etc/lighttpd|${PREFIX}/etc/lighttpd|g" \
		${WRKSRC}/doc/config/conf.d/auth.conf
	${REINPLACE_CMD} -e "s|/usr/bin/python|${LOCALBASE}/bin/python2.7|" \
		${WRKSRC}/doc/config/conf.d/cgi.conf \
		${WRKSRC}/tests/*.conf
	${ECHO} >> ${WRKSRC}/doc/config/lighttpd.conf
	${ECHO} "# IPv4 listening socket" >> \
		${WRKSRC}/doc/config/lighttpd.conf
	${ECHO} "\$$SERVER[\"socket\"] == \"0.0.0.0:80\" { }" >> \
		${WRKSRC}/doc/config/lighttpd.conf

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/etc/lighttpd/conf.d
	${MKDIR} ${STAGEDIR}${PREFIX}/etc/lighttpd/vhosts.d
	${MKDIR} ${STAGEDIR}${WWWDIR_LIGHTTPD}
	${MKDIR} -m 0700 ${STAGEDIR}/var/cache/lighttpd
	${MKDIR} -m 0700 ${STAGEDIR}/var/run/lighttpd/sockets
	${MKDIR} -m 0700 ${STAGEDIR}/var/log/lighttpd
.for FILE in lighttpd.conf modules.conf
	${INSTALL_DATA} ${WRKSRC}/doc/config/${FILE} \
		${STAGEDIR}${PREFIX}/etc/lighttpd/${FILE}.sample
.endfor
.for FILE in access_log.conf auth.conf cgi.conf cml.conf \
	debug.conf dirlisting.conf evhost.conf expire.conf fastcgi.conf \
	magnet.conf mime.conf mysql_vhost.conf proxy.conf rrdtool.conf \
	scgi.conf secdownload.conf simple_vhost.conf ssi.conf status.conf \
	trigger_b4_dl.conf userdir.conf webdav.conf
	${INSTALL_DATA} ${WRKSRC}/doc/config/conf.d/${FILE} \
		${STAGEDIR}${PREFIX}/etc/lighttpd/conf.d/${FILE}.sample
.endfor
	${INSTALL_DATA} ${WRKSRC}/doc/config/vhosts.d/vhosts.template \
		${STAGEDIR}${PREFIX}/etc/lighttpd/vhosts.d/vhosts.template
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/lighttpd/*.so

[FILE:406:descriptions/desc.single]
lighttpd a secure, fast, compliant and very flexible web-server which
has been optimized for high-performance environments. It has a very
low memory footprint compared to other webservers and takes care of
cpu-load. Its advanced feature-set (FastCGI, CGI, Auth, Output-Compression,
URL-Rewriting and many more) make lighttpd the perfect webserver-software
for every server that is suffering load problems.


[FILE:101:distinfo]
267feffda13a190ebdce7b15172d8be16da98008457f30fddecd72832d126d0e       956828 lighttpd-1.4.58.tar.xz


[FILE:2208:manifests/plist.single]
@sample etc/lighttpd/conf.d/access_log.conf.sample
@sample etc/lighttpd/conf.d/auth.conf.sample
@sample etc/lighttpd/conf.d/cgi.conf.sample
@sample etc/lighttpd/conf.d/cml.conf.sample
@sample etc/lighttpd/conf.d/debug.conf.sample
@sample etc/lighttpd/conf.d/dirlisting.conf.sample
@sample etc/lighttpd/conf.d/evhost.conf.sample
@sample etc/lighttpd/conf.d/expire.conf.sample
@sample etc/lighttpd/conf.d/fastcgi.conf.sample
@sample etc/lighttpd/conf.d/magnet.conf.sample
@sample etc/lighttpd/conf.d/mime.conf.sample
@sample etc/lighttpd/conf.d/mysql_vhost.conf.sample
@sample etc/lighttpd/conf.d/proxy.conf.sample
@sample etc/lighttpd/conf.d/rrdtool.conf.sample
@sample etc/lighttpd/conf.d/scgi.conf.sample
@sample etc/lighttpd/conf.d/secdownload.conf.sample
@sample etc/lighttpd/conf.d/simple_vhost.conf.sample
@sample etc/lighttpd/conf.d/ssi.conf.sample
@sample etc/lighttpd/conf.d/status.conf.sample
@sample etc/lighttpd/conf.d/trigger_b4_dl.conf.sample
@sample etc/lighttpd/conf.d/userdir.conf.sample
@sample etc/lighttpd/conf.d/webdav.conf.sample
@sample etc/lighttpd/lighttpd.conf.sample
@sample etc/lighttpd/modules.conf.sample
%%GEOIP-ON%%lib/lighttpd/mod_geoip.so
%%LDAP-ON%%lib/lighttpd/
 mod_authn_ldap.so
 mod_vhostdb_ldap.so
%%MYSQL-ON%%lib/lighttpd/
 mod_authn_mysql.so
 mod_mysql_vhost.so
 mod_vhostdb_mysql.so
etc/lighttpd/vhosts.d/vhosts.template
lib/lighttpd/
 mod_access.so
 mod_accesslog.so
 mod_alias.so
 mod_auth.so
 mod_authn_file.so
 mod_cgi.so
 mod_cml.so
 mod_deflate.so
 mod_dirlisting.so
 mod_evasive.so
 mod_evhost.so
 mod_expire.so
 mod_extforward.so
 mod_fastcgi.so
 mod_flv_streaming.so
 mod_indexfile.so
 mod_magnet.so
 mod_openssl.so
 mod_proxy.so
 mod_redirect.so
 mod_rewrite.so
 mod_rrdtool.so
 mod_scgi.so
 mod_secdownload.so
 mod_setenv.so
 mod_simple_vhost.so
 mod_sockproxy.so
 mod_ssi.so
 mod_staticfile.so
 mod_status.so
 mod_uploadprogress.so
 mod_userdir.so
 mod_usertrack.so
 mod_vhostdb.so
 mod_webdav.so
 mod_wstunnel.so
sbin/
 lighttpd
 lighttpd-angel
share/man/man8/
 lighttpd-angel.8.gz
 lighttpd.8.gz
@dir %%WWWDIR%%
@dir(%%WWWOWN%%,%%WWWGRP%%,700) %%CACHEDIR%%
@dir(%%WWWOWN%%,%%WWWGRP%%,700) %%HOMEDIR%%/sockets
@dir(%%WWWOWN%%,%%WWWGRP%%,700) %%LOGDIR%%


[FILE:3257:files/lighttpd.in]
#!/bin/sh
#
# PROVIDE: lighttpd
# REQUIRE: %%REQUIRE%%
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf to enable lighttpd:
#
# lighttpd_enable (bool):	Set it to "YES" to enable lighttpd
#				Default is "NO".
# lighttpd_conf (path):		Set full path to configuration file.
#				Default is "%%ETCDIR%%/lighttpd.conf".
# lighttpd_pidfile (path):	Set full path to pid file.
#				Default is "/var/run/lighttpd.pid".
#
# Add the following lines to /etc/rc.conf for multiple instances:
# (overrides lighttpd_conf and lighttpd_pidfile from above)
#
# lighttpd_instances (string):	Instances of lighttpd
#				Default is "" (no instances).
# lighttpd_${i}_conf (path):	Set full path to instance configuration file.
#				Default is "%%ETCDIR%%/${i}.conf".
# lighttpd_${i}_pidfile (path):	Set full path to instance pid file
#				Default is "/var/run/lighttpd_${i}.pid".
#

. /etc/rc.subr

name="lighttpd"
rcvar=lighttpd_enable

load_rc_config $name

: ${lighttpd_enable="NO"}
: ${lighttpd_pidfile="/var/run/${name}.pid"}

# Compatibility for old configuration file location
deprecated_conf=
if [ -z "${lighttpd_conf}" ]; then
	if [ -f "%%PREFIX%%/etc/lighttpd.conf" ]; then
		deprecated_conf=1
		lighttpd_conf="%%PREFIX%%/etc/lighttpd.conf"
	else
		lighttpd_conf="%%ETCDIR%%/lighttpd.conf"
	fi
fi

command=%%PREFIX%%/sbin/lighttpd
stop_postcmd=stop_postcmd
restart_precmd="lighttpd_checkconfig"
graceful_precmd="lighttpd_checkconfig"
graceful_cmd="lighttpd_graceful"
gracefulstop_cmd="lighttpd_gracefulstop"
configtest_cmd="lighttpd_checkconfig"
extra_commands="reload graceful gracefulstop configtest"
command_args="-f ${lighttpd_conf}"
pidfile=${lighttpd_pidfile}
required_files=${lighttpd_conf}

lighttpd_check_deprecated()
{
	if [ -n "${deprecated_conf}" ]; then
		echo ""
		echo "*** NOTICE: ***"
		echo "The default location of %%PREFIX%%/etc/lighttpd.conf is deprecated"
		echo "Please consider moving to %%ETCDIR%%/lighttpd.conf"
		echo ""
	fi
}

lighttpd_checkconfig()
{
	echo "Performing sanity check on ${name} configuration:"
	eval "${command} ${command_args} -tt"
}

lighttpd_gracefulstop()
{
	echo "Stopping ${name} gracefully."
	sig_reload="INT"
	run_rc_command reload
}

lighttpd_graceful()
{
	lighttpd_gracefulstop
	rm -f ${pidfile}
	run_rc_command start
}

lighttpd_run_instance()
{
	_i="$1"
	_rcmd="$2"
	name=${_orig_name}_${_i}
	eval ${name}_enable=${lighttpd_enable}
	eval lighttpd_conf=\"\${lighttpd_${_i}_conf:-"%%ETCDIR%%/${_i}.conf"}\"
	eval lighttpd_pidfile=\"\${lighttpd_${_i}_pidfile:-"/var/run/lighttpd_${_i}.pid"}\"
	command_args="-f ${lighttpd_conf}"
	pidfile=${lighttpd_pidfile}
	required_files=${lighttpd_conf}
	run_rc_command ${_rcmd}
}

stop_postcmd()
{
	rm -f ${pidfile}
}

if [ -n "${lighttpd_instances}" ]; then
	_orig_name="${name}"
	_run_cmd="$1"
	if [ $# -gt 0 ]; then
		shift
	fi
	if [ -n "$*" ]; then
		_run_instances="$*"
	fi
	if [ -n "${_run_instances}" ]; then
		for _a in $_run_instances; do
			for _in in ${lighttpd_instances}; do
				if [ "$_a" = "$_in" ]; then
					_runlist="${_runlist} ${_a}"
				fi
			done
		done
	else
		_runlist="${lighttpd_instances}"
	fi
	for _in in ${_runlist}; do
		lighttpd_run_instance $_in $_run_cmd
	done
else
	start_precmd="lighttpd_check_deprecated"
	run_rc_command "$1"
fi


[FILE:41:files/special.mk]
WWWDIR_LIGHTTPD?=	${PREFIX}/www/lighttpd

