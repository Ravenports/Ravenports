# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		ilmbase
VERSION=		2.4.1
KEYWORDS=		graphics devel
VARIANTS=		standard
SDESC[standard]=	Base libraries from ILM for OpenEXR
HOMEPAGE=		https://www.openexr.com/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/AcademySoftwareFoundation:openexr:v2.4.1
DISTFILE[1]=		generated:main
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

BUILD_DEPENDS=		bash:primary:standard

USES=			cmake pkgconfig c++:single

DISTNAME=		openexr-2.4.1/IlmBase

LICENSE=		BSD3CLAUSE:single
LICENSE_FILE=		BSD3CLAUSE:{{WRKDIR}}/LICENSE
LICENSE_AWK=		BSD3CLAUSE:"^$$"
LICENSE_SOURCE=		BSD3CLAUSE:{{WRKSRC}}/Half/half.h
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		graphics/ilmbase

SOVERSION=		24.0.0
PLIST_SUB=		MAJOR=2_4

CMAKE_ARGS=		-DCMAKE_INSTALL_PREFIX={{PREFIX}}
			--target
			install

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*-2_4.so
	${INSTALL_PROGRAM} ${BUILD_WRKSRC}/Half/eLut ${STAGEDIR}${PREFIX}/bin
	${INSTALL_PROGRAM} ${BUILD_WRKSRC}/Half/toFloat ${STAGEDIR}${PREFIX}/bin

[FILE:424:descriptions/desc.single]
ABOUT THE ILMBASE LIBRARIES
----------------------------
Half is a class that encapsulates our 16-bit floating-point format.

IlmThread is a thread abstraction library for use with OpenEXR
and other software packages.  It currently supports pthreads and
Windows threads.

Imath implements 2D and 3D vectors, 3x3 and 4x4 matrices, quaternions
and other useful 2D and 3D math functions.

Iex is an exception-handling library.


[FILE:125:distinfo]
3ebbe9a8e67edb4a25890b98c598e9fe23b10f96d1416d6a3ff0732e99d001c1     26809861 AcademySoftwareFoundation-openexr-2.4.1.tar.gz


[FILE:1598:manifests/plist.single]
bin/
 eLut
 toFloat
include/OpenEXR/
 Iex.h
 IexBaseExc.h
 IexErrnoExc.h
 IexExport.h
 IexForward.h
 IexMacros.h
 IexMathExc.h
 IexMathFloatExc.h
 IexMathFpu.h
 IexMathIeeeExc.h
 IexNamespace.h
 IexThrowErrnoExc.h
 IlmBaseConfig.h
 IlmThread.h
 IlmThreadExport.h
 IlmThreadForward.h
 IlmThreadMutex.h
 IlmThreadNamespace.h
 IlmThreadPool.h
 IlmThreadSemaphore.h
 ImathBox.h
 ImathBoxAlgo.h
 ImathColor.h
 ImathColorAlgo.h
 ImathEuler.h
 ImathExc.h
 ImathExport.h
 ImathForward.h
 ImathFrame.h
 ImathFrustum.h
 ImathFrustumTest.h
 ImathFun.h
 ImathGL.h
 ImathGLU.h
 ImathHalfLimits.h
 ImathInt64.h
 ImathInterval.h
 ImathLimits.h
 ImathLine.h
 ImathLineAlgo.h
 ImathMath.h
 ImathMatrix.h
 ImathMatrixAlgo.h
 ImathNamespace.h
 ImathPlane.h
 ImathPlatform.h
 ImathQuat.h
 ImathRandom.h
 ImathRoots.h
 ImathShear.h
 ImathSphere.h
 ImathVec.h
 ImathVecAlgo.h
 half.h
 halfExport.h
 halfFunction.h
 halfLimits.h
lib/
 libHalf-%%MAJOR%%.so
 libHalf-%%MAJOR%%.so.%%SOMAJOR%%
 libHalf-%%MAJOR%%.so.%%SOVERSION%%
 libHalf.so
 libIex-%%MAJOR%%.so
 libIex-%%MAJOR%%.so.%%SOMAJOR%%
 libIex-%%MAJOR%%.so.%%SOVERSION%%
 libIex.so
 libIexMath-%%MAJOR%%.so
 libIexMath-%%MAJOR%%.so.%%SOMAJOR%%
 libIexMath-%%MAJOR%%.so.%%SOVERSION%%
 libIexMath.so
 libIlmThread-%%MAJOR%%.so
 libIlmThread-%%MAJOR%%.so.%%SOMAJOR%%
 libIlmThread-%%MAJOR%%.so.%%SOVERSION%%
 libIlmThread.so
 libImath-%%MAJOR%%.so
 libImath-%%MAJOR%%.so.%%SOMAJOR%%
 libImath-%%MAJOR%%.so.%%SOVERSION%%
 libImath.so
lib/cmake/IlmBase/
 IlmBaseConfig-%%CMAKE_BUILD_TYPE%%.cmake
 IlmBaseConfig.cmake
 IlmBaseConfigVersion.cmake
lib/pkgconfig/IlmBase.pc


[FILE:1122:patches/patch-config_CMakeLists.txt]
From fe2fccde18bc35db11895718d0b77d3f23d427b5 Mon Sep 17 00:00:00 2001
From: Kimball Thurston <kdt3rd@gmail.com>
Date: Tue, 5 Nov 2019 21:42:45 +1300
Subject: [PATCH] Fix #595 and others, issue with pkgconfig generation under
 cmake

autoconf seems to automatically insert the ${prefix} variable reference
when emitting the pkg-config file. Make cmake rules conform to that
pattern.
--- config/CMakeLists.txt.orig	2020-02-10 23:01:19 UTC
+++ config/CMakeLists.txt
@@ -71,9 +71,9 @@ if(ILMBASE_INSTALL_PKG_CONFIG)
   # use a helper function to avoid variable pollution, but pretty simple
   function(ilmbase_pkg_config_help pcinfile)
     set(prefix ${CMAKE_INSTALL_PREFIX})
-    set(exec_prefix ${CMAKE_INSTALL_BINDIR})
-    set(libdir ${CMAKE_INSTALL_LIBDIR})
-    set(includedir ${CMAKE_INSTALL_INCLUDEDIR})
+    set(exec_prefix "\${prefix}")
+    set(libdir "\${exec_prefix}/${CMAKE_INSTALL_LIBDIR}")
+    set(includedir "\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}")
     set(LIB_SUFFIX_DASH ${ILMBASE_LIB_SUFFIX})
     if(TARGET Threads::Threads)
       # hrm, can't use properties as they end up as generator expressions


[FILE:557:patches/patch-config_IlmBaseSetup.cmake]
--- config/IlmBaseSetup.cmake.orig	2020-02-10 23:01:19 UTC
+++ config/IlmBaseSetup.cmake
@@ -48,10 +48,6 @@ set(ILMBASE_OUTPUT_SUBDIR OpenEXR CACHE
 # but is pretty harmless to set globally
 set(CMAKE_INCLUDE_CURRENT_DIR ON)
 
-# Suffix for debug configuration libraries
-# (if you should choose to install those)
-set(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "Suffix for debug builds")
-
 # Usual cmake option to build shared libraries or not
 option(BUILD_SHARED_LIBS "Build shared library" ON)
 # This allows a "double library" setup, where we compile both

