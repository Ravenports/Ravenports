# Buildsheet autogenerated by ravenadm tool -- Do not edit.

NAMEBASE=		xorg-xshmfence
VERSION=		1.2
KEYWORDS=		x11
VARIANTS=		standard
SDESC[standard]=	Shared memory SyncFence synchronization primitive
HOMEPAGE=		https://www.x.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		XORG/individual/lib
DISTFILE[1]=		libxshmfence-1.2.tar.bz2:main
DIST_SUBDIR=		xorg
DF_INDEX=		1
SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

USES=			libtool
XORG_COMPONENTS=	xproto

DISTNAME=		libxshmfence-1.2

FPC_EQUIVALENT=		x11/libxshmfence

MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-shared-memory-dir=/tmp

INSTALL_TARGET=		install-strip

TEST_TARGET=		check

[FILE:166:descriptions/desc.single]
This library offers a CPU-based synchronization primitive compatible
with the X SyncFence objects that can be shared between processes
using file descriptor passing.


[FILE:108:distinfo]
d21b2d1fd78c1efbe1f2c16dae1cb23f8fd231dcf891465b8debe636a9054b0c       267170 xorg/libxshmfence-1.2.tar.bz2


[FILE:131:manifests/plist.single]
include/X11/xshmfence.h
lib/
 libxshmfence.a
 libxshmfence.so
 libxshmfence.so.1
 libxshmfence.so.1.0.0
lib/pkgconfig/xshmfence.pc


[FILE:262:patches/patch-config.h.in]
--- config.h.in.orig	2015-03-04 15:18:49 UTC
+++ config.h.in
@@ -22,6 +22,9 @@
 /* Define to 1 if you have the <memory.h> header file. */
 #undef HAVE_MEMORY_H
 
+/* Use mkostemp(3) */
+#undef HAVE_MKOSTEMP
+
 /* Use pthread primitives */
 #undef HAVE_PTHREAD
 


[FILE:351:patches/patch-configure]
--- configure.orig	2015-03-04 15:22:23 UTC
+++ configure
@@ -18104,6 +18104,14 @@ else
 fi
 
 
+ac_fn_c_check_func "$LINENO" "mkostemp" "ac_cv_func_mkostemp"
+if test "x$ac_cv_func_mkostemp" = xyes; then :
+
+$as_echo "#define HAVE_MKOSTEMP 1" >>confdefs.h
+
+fi
+
+
 
 pkg_failed=no
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for XPROTO" >&5


[FILE:554:patches/patch-src__xshmfence_alloc.c]
--- src/xshmfence_alloc.c.orig	2015-03-04 15:28:23 UTC
+++ src/xshmfence_alloc.c
@@ -67,15 +67,19 @@ int
 xshmfence_alloc_shm(void)
 {
 	char	template[] = SHMDIR "/shmfd-XXXXXX";
-	int	fd;
+	int	fd = -1;
 
 #if HAVE_MEMFD_CREATE
 	fd = memfd_create("xshmfence", MFD_CLOEXEC|MFD_ALLOW_SEALING);
 	if (fd < 0)
 #endif
 	{
-#ifdef O_TMPFILE
+#if defined(O_CLOEXEC)
+#if defined(HAVE_MKOSTEMP)
+		fd = mkostemp(template, O_CLOEXEC);
+#elif defined(O_TMPFILE)
 		fd = open(SHMDIR, O_TMPFILE|O_RDWR|O_CLOEXEC|O_EXCL, 0666);
+#endif
 		if (fd < 0)
 #endif
 		{


[FILE:243:patches/patch-src__xshmfence_futex.h]
--- src/xshmfence_futex.h.orig	2014-06-17 16:46:42.000000000 -0400
+++ src/xshmfence_futex.h	2015-04-18 12:16:21.953572000 -0400
@@ -28,6 +28,7 @@
 
 #ifdef HAVE_UMTX
 
+#include <sys/limits.h>
 #include <sys/types.h>
 #include <sys/umtx.h>
 


[FILE:232:patches/patch-src__xshmfenceint.h]
--- src/xshmfenceint.h.orig	2015-03-04 15:38:56 UTC
+++ src/xshmfenceint.h
@@ -23,6 +23,7 @@
 #ifndef _XSHMFENCEINT_H_
 #define _XSHMFENCEINT_H_
 
+#include <fcntl.h>
 #include <stdlib.h>
 #include <unistd.h>
 #include <sys/mman.h>

